{"id":"c850383c7813ff182853ea8f2f251636","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/GreenDAO.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"./precompiles/stateful/Staking.sol\";\r\nimport \"./precompiles/stateful/Distribution.sol\";\r\ncontract GreenDAO  {\r\n    struct dao_uri_struct {\r\n        string dao_wallet;\r\n        string dao_uri;\r\n        string finished;\r\n    }\r\n    struct goal_uri_struct {\r\n        uint256 dao_id;\r\n        string goal_uri;\r\n    }\r\n\r\n    struct ideas_uri_struct {\r\n        uint256 goal_id;\r\n        string ideas_uri;\r\n        uint256 donation;\r\n    }\r\n    struct smart_contract_uri_struct {\r\n        uint256 smart_contract_id;\r\n        uint256 ideas_id;\r\n        string smart_contract_uri;\r\n    }\r\n    struct goal_ideas_votes_struct {\r\n        uint256 goal_id;\r\n        uint256 ideas_id;\r\n        string wallet;\r\n    }\r\n    struct message_struct {\r\n        uint256 message_id;\r\n        uint256 ideas_id;\r\n        string message;\r\n    }\r\n    struct reply_struct {\r\n        uint256 reply_id;\r\n        uint256 message_id;\r\n        string message;\r\n    }\r\n\r\n    struct UnbondingRequest {\r\n        int64 completionTime;\r\n        uint256 amount;\r\n    }\r\n    /// @dev the required authorizations for Staking and Distribution\r\n    string[] private stakingMethods = [MSG_DELEGATE, MSG_UNDELEGATE, MSG_REDELEGATE];\r\n    string[] private distributionMethods = [MSG_WITHDRAW_DELEGATOR_REWARD];\r\n    /// @dev map to keep track of user deposits to the contract.\r\n    mapping(uint256 => uint256) public donated;                                // _ideas_ids       => (Ideas) donated amount\r\n    uint256 private _total_delegations;\r\n    string private _validatorAddr  = \"evmosvaloper158wwas4v6fgcu2x3plg70s6u0fm0lle237kltr\";\r\n    /// @dev map that keeps track of all currently unbonding delegations\r\n    mapping(uint256 => UnbondingRequest) public unbondingDelegations;           // _ideas_ids       => (Ideas) UnbondingRequest\r\n  \r\n\r\n    uint256 public _dao_ids;\r\n    uint256 public _goal_ids;\r\n    uint256 public _ideas_ids;\r\n    uint256 public _smart_contract_ids;\r\n    uint256 public _ideas_vote_ids;\r\n    uint256 public _message_ids;\r\n    uint256 public _reply_ids;\r\n    mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\r\n    mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\r\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\r\n    mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\r\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + Wallet\r\n\r\n    mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\r\n\r\n    mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\r\n\r\n    //Daos\r\n    function create_dao(\r\n        string memory _dao_wallet,\r\n        string memory _dao_uri\r\n    ) public returns (uint256) {\r\n        //Create Dao into _dao_uris\r\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, \"False\");\r\n        _dao_ids++;\r\n\r\n        return _dao_ids;\r\n    }\r\n\r\n    function set_dao(\r\n        uint256 _dao_id,\r\n        string memory _dao_wallet,\r\n        string memory _dao_uri\r\n    ) public {\r\n        //Set Dao of wallet and uri\r\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\r\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\r\n    }\r\n\r\n    function get_all_daos() public view returns (string[] memory) {\r\n        //Getting all doas\r\n        string[] memory _StoreInfo = new string[](_dao_ids);\r\n        for (uint256 i = 0; i < _dao_ids; i++) {\r\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\r\n        //Getting one dao URI\r\n        return _dao_uris[_dao_id].dao_uri;\r\n    }\r\n\r\n    //Goals\r\n    function create_goal(\r\n        string memory _goal_uri,\r\n        uint256 _dao_id\r\n    ) public returns (uint256) {\r\n        //Create goal into _goal_uris\r\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\r\n        _goal_ids++;\r\n\r\n        return _goal_ids;\r\n    }\r\n\r\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\r\n        //Set goal uri\r\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\r\n    }\r\n\r\n    function get_all_goals() public view returns (string[] memory) {\r\n        //Getting all goals\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_goals_by_dao_id(\r\n        uint256 _dao_id\r\n    ) public view returns (string[] memory) {\r\n        //Getting all goals by dao id\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            if (_goal_uris[i].dao_id == _dao_id) {\r\n                _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\r\n                _store_id++;\r\n            }\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_goal_id_by_goal_uri(\r\n        string memory _goal_uri\r\n    ) public view returns (uint256) {\r\n        //Getting goal id by uri\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            if (\r\n                keccak256(bytes(_goal_uris[i].goal_uri)) ==\r\n                keccak256(bytes(_goal_uri))\r\n            ) return i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\r\n        //Getting one goal URI\r\n        return _goal_uris[_goal_id].goal_uri;\r\n    }\r\n\r\n    //Ideas\r\n    function create_ideas(\r\n        string memory _ideas_uri,\r\n        uint256 _goal_id,\r\n        string[] memory _smart_contracts\r\n    ) public returns (uint256) {\r\n        //Create ideas into _ideas_uris\r\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\r\n        _ideas_ids++;\r\n\r\n        for (uint256 i = 0; i < _smart_contracts.length; i++) {\r\n            create_ideas_smart_contract(\r\n                _ideas_ids,\r\n                _smart_contract_ids,\r\n                _smart_contracts[i]\r\n            );\r\n            _smart_contract_ids++;\r\n        }\r\n\r\n        return _ideas_ids;\r\n    }\r\n\r\n    function create_ideas_smart_contract(\r\n        uint256 _ideas_id,\r\n        uint256 _smart_contract_id,\r\n        string memory _smart_contract\r\n    ) private {\r\n        _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(\r\n            _ideas_id,\r\n            _smart_contract_id,\r\n            _smart_contract\r\n        );\r\n        \r\n    }\r\n\r\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\r\n        //Set ideas uri\r\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\r\n    }\r\n\r\n    function add_donation(uint256 _ideas_id, uint256 _doantion) public {\r\n        //Set ideas uri\r\n        _ideas_uris[_ideas_id].donation += _doantion;\r\n    }\r\n\r\n    function get_all_ideas() public view returns (string[] memory) {\r\n        //Getting all ideas\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_ideas_by_goal_id(\r\n        uint256 _goal_id\r\n    ) public view returns (string[] memory) {\r\n        //Getting all ideas by goal id\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (_ideas_uris[i].goal_id == _goal_id)\r\n                _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\r\n            _store_id++;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_ideas_id_by_ideas_uri(\r\n        string memory _ideas_uri\r\n    ) public view returns (uint256) {\r\n        //Getting ideas id by uri\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (\r\n                keccak256(bytes(_ideas_uris[i].ideas_uri)) ==\r\n                keccak256(bytes(_ideas_uri))\r\n            ) return i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function get_goal_id_from_ideas_uri(\r\n        string memory _ideas_uri\r\n    ) public view returns (uint256) {\r\n        //Getting ideas id by uri\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (\r\n                keccak256(bytes(_ideas_uris[i].ideas_uri)) ==\r\n                keccak256(bytes(_ideas_uri))\r\n            ) return _ideas_uris[i].goal_id;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\r\n        //Getting one ideas URI\r\n        return _ideas_uris[_ideas_id].ideas_uri;\r\n    }\r\n\r\n    //Votes\r\n    function create_goal_ideas_vote(\r\n        uint256 _goal_id,\r\n        uint256 _ideas_id,\r\n        string memory _wallet\r\n    ) public returns (uint256) {\r\n        //Create votes into all_goal_ideas_votes\r\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(\r\n            _goal_id,\r\n            _ideas_id,\r\n            _wallet\r\n        );\r\n        _ideas_vote_ids++;\r\n\r\n        return _ideas_vote_ids;\r\n    }\r\n\r\n    function get_ideas_votes_from_goal(\r\n        uint256 _goal_id,\r\n        uint256 _ideas_id\r\n    ) public view returns (string[] memory) {\r\n        //gets all ideas votes from goal\r\n        string[] memory _StoreInfo = new string[](_ideas_vote_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\r\n            if (\r\n                all_goal_ideas_votes[i].goal_id == _goal_id &&\r\n                all_goal_ideas_votes[i].ideas_id == _ideas_id\r\n            ) _StoreInfo[_store_id] = all_goal_ideas_votes[i].wallet;\r\n            _store_id++;\r\n        }\r\n        return _StoreInfo;\r\n    }\r\n    \r\n    //Messages\r\n     function sendMsg(\r\n        uint256 _ideas_id,\r\n        string memory _message\r\n    ) public returns (uint256) {\r\n        //Create messsage into all_messages\r\n        all_messages[_message_ids] = message_struct(\r\n            _message_ids,\r\n            _ideas_id,\r\n            _message\r\n        );\r\n        _message_ids++;\r\n\r\n        return _message_ids;\r\n    }\r\n   \r\n\r\n    function getMsgIDs(\r\n        uint256 ideas_id\r\n    ) public view returns (uint256[] memory ) {\r\n        //Getting all messages ids by idea id\r\n        uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\r\n        uint256 _msg_id;\r\n        for (uint256 i = 0; i < _message_ids; i++) {\r\n            if (all_messages[i].ideas_id == ideas_id) {\r\n                _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\r\n                _msg_id++;\r\n            }\r\n        }\r\n\r\n        return _All_Ideas_Messages;\r\n    }\r\n    function sendReply(\r\n        uint256 _message_id,\r\n        string memory _reply\r\n    ) public returns (uint256) {\r\n        //Create reply into all_replies\r\n        all_replies[_reply_ids] = reply_struct(\r\n            _reply_ids,\r\n            _message_id,\r\n            _reply\r\n        );\r\n        _reply_ids++;\r\n\r\n        return _reply_ids;\r\n    }\r\n\r\n    function getReplyIDs(\r\n        uint256 message_id\r\n    ) public view returns (uint256[] memory ) {\r\n        //Getting all messages ids by idea id\r\n        uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\r\n        uint256 _reply_id;\r\n        for (uint256 i = 0; i < _reply_ids; i++) {\r\n            if (all_replies[i].message_id == message_id) {\r\n                _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\r\n                _reply_id++;\r\n            }\r\n        }\r\n\r\n        return _All_Messages_Replys;\r\n    }\r\n\r\n\r\n    // Doante with a validator Address\r\n    function donate(uint256 _idea_id,uint256 _amount) public payable  {\r\n        _approveRequiredMsgs();\r\n        donated[_idea_id] += _amount;\r\n    }\r\n\r\n    function stake(uint256 _amount) public {\r\n        STAKING_CONTRACT.delegate(address(this), _validatorAddr, _amount);\r\n\r\n    }\r\n\r\n    function withdrawDonatedMoney(uint256 _idea_id) public returns (int64) {      \r\n        _approveRequiredMsgs();\r\n        //Sotring Rewards to smart contract\r\n        Coin[] memory newRewards = DISTRIBUTION_CONTRACT.withdrawDelegatorRewards(address(this), _validatorAddr);\r\n     \r\n        //Withdrawing just unbounding\r\n        uint256 _amount = donated[_idea_id];\r\n        int64 completionTime = STAKING_CONTRACT.undelegate(address(this), _validatorAddr, _amount);\r\n        //Saving undelegated amount into struct by idea_id\r\n        unbondingDelegations[_idea_id] = UnbondingRequest(completionTime, unbondingDelegations[_idea_id].amount + _amount);\r\n\r\n        //Just withdrawing rewards now\r\n        uint256 _rewards_amount = newRewards[0].amount;\r\n        (bool sent,) = payable(msg.sender).call{value: _rewards_amount}(\"\");     \r\n        donated[_idea_id] = 0;\r\n        return  completionTime;\r\n    }\r\n\r\n\r\n    function RedeemDelegetdMoney(uint256 _idea_id) public returns (string memory) {      \r\n        _approveRequiredMsgs();\r\n\r\n         uint256 ts = uint256(int256(unbondingDelegations[_idea_id].completionTime));\r\n        require(block.timestamp >= ts, \"The time has not passed yet\");\r\n\r\n        uint256 _amount = unbondingDelegations[_idea_id].amount;\r\n        (bool sent,) = payable(msg.sender).call{value: _amount}(\"\");\r\n\r\n        return  \"Money has been sent to Idea Owner\";\r\n    }\r\n\r\n    function withdrawAllMoney() public  {\r\n        uint256 _amount = address(this).balance;\r\n        (bool sent,) = payable(msg.sender).call{value: _amount}(\"\");     \r\n    }\r\n    function getContractBalance() public view returns (uint) {\r\n     return address(this).balance;\r\n    }\r\n    \r\n    function getContractRewards() public view returns (DecCoin[] memory) {\r\n        return DISTRIBUTION_CONTRACT.delegationRewards(address(this), _validatorAddr);\r\n    }\r\n\r\n    function getDelegation() public view returns (uint256) {\r\n        (uint256 denom , Coin memory coin ) =  STAKING_CONTRACT.delegation(address(this), _validatorAddr);\r\n        return coin.amount;\r\n    }\r\n\r\n    function getUnbondingDelegation() public view returns (UnbondingDelegationEntry[] memory) {\r\n        return STAKING_CONTRACT.unbondingDelegation(address(this), _validatorAddr);\r\n    }\r\n\r\n\r\n    function reset_all() public {\r\n        for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\r\n        for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\r\n        for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\r\n        for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\r\n        for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\r\n        for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\r\n        for (uint256 i = 0; i < _ideas_vote_ids; i++)delete all_goal_ideas_votes[i];\r\n        _dao_ids = 0;\r\n        _goal_ids = 0;\r\n        _ideas_ids = 0;\r\n        _message_ids = 0;\r\n        _reply_ids = 0;        \r\n        _ideas_vote_ids = 0;\r\n    }\r\n    /// @dev approves the staking and distribution contracts for donating\r\n    function _approveRequiredMsgs() public {\r\n        bool successStk = STAKING_CONTRACT.approve(tx.origin,   type(uint256).max, stakingMethods);\r\n        require(successStk, \"Staking Approve failed\");\r\n        bool successDist = DISTRIBUTION_CONTRACT.approve(tx.origin, distributionMethods);\r\n        require(successDist, \"Distribution Approve failed\");\r\n    }\r\n}\r\n"},"contracts/precompiles/common/Authorization.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\n/// @author Evmos Team\n/// @title Authorization Interface\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\ninterface AuthorizationI {\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function approve(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC\n    /// transfer methods or staking.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function increaseAllowance(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\n    /// transfer methods or staking.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function decreaseAllowance(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend\n    /// on behalf of the owner through IBC transfer methods or staking. This is zero by default.\n    /// @param owner The address of the account owning tokens.\n    /// @param spender The address of the account able to transfer the tokens.\n    /// @param method The message type URL of the methods for which the approval should be queried.\n    /// @return remaining The remaining number of tokens available to be spent.\n    function allowance(\n        address owner,\n        address spender,\n        string calldata method\n    ) external view returns (uint256 remaining);\n\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\n    /// the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    /// @param value The amount of tokens approved to be spent.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        string[] methods,\n        uint256 value\n    );\n\n    /// @dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\n    /// allowance method. The values field specifies the new allowances and the methods field holds the\n    /// information for which methods the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    /// @param values The amounts of tokens approved to be spent.\n    event AllowanceChange(\n        address indexed owner,\n        address indexed spender,\n        string[] methods,\n        uint256[] values\n    );\n}\n"},"contracts/precompiles/common/GenericAuthorization.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\n/// @author Evmos Team\n/// @title Authorization Interface\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\ninterface GenericAuthorizationI {\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function approve(\n        address spender,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev Revokes a list of Cosmos transactions.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods to revoke.\n    /// @return revoked Boolean value to indicate if the revocation was successful.\n    function revoke(\n        address spender,\n        string[] calldata methods\n    ) external returns (bool revoked);\n\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\n    /// the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        string[] methods\n    );\n\n    /// @dev This event is emitted when an owner revokes a spender's allowance.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    event Revocation(\n        address indexed owner,\n        address indexed spender,\n        string[] methods\n    );\n}\n"},"contracts/precompiles/common/Types.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\nstruct Dec {\n    uint256 value;\n    uint8 precision;\n}\n\n/// @dev Coin is a struct that represents a token with a denomination and an amount.\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n\n/// @dev DecCoin is a struct that represents a token with a denomination, an amount and a precision.\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n\n/// @dev PageResponse is a struct that represents a page response.\nstruct PageResponse {\n    bytes nextKey;\n    uint64 total;\n}\n"},"contracts/precompiles/stateful/Distribution.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\nimport \"../common/GenericAuthorization.sol\" as genericAuth;\nimport \"../common/Types.sol\";\n\n/// @dev The DistributionI contract's address.\naddress constant DISTRIBUTION_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000801;\n\n/// @dev Define all the available distribution methods.\nstring constant MSG_SET_WITHDRAWER_ADDRESS = \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\";\nstring constant MSG_WITHDRAW_DELEGATOR_REWARD = \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\";\nstring constant MSG_WITHDRAW_VALIDATOR_COMMISSION = \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\";\n\n/// @dev The DistributionI contract's instance.\nDistributionI constant DISTRIBUTION_CONTRACT = DistributionI(DISTRIBUTION_PRECOMPILE_ADDRESS);\n\nstruct ValidatorSlashEvent {\n    uint64 validatorPeriod;\n    Dec fraction;\n}\n\nstruct ValidatorDistributionInfo {\n    string operatorAddress;\n    DecCoin[] selfBondRewards;\n    DecCoin[] commission;\n}\n\nstruct DelegationDelegatorReward {\n    string validatorAddress;\n    DecCoin[] reward;\n}\n\n/// @author Evmos Team\n/// @title Distribution Precompile Contract\n/// @dev The interface through which solidity contracts will interact with Distribution\n/// @custom:address 0x0000000000000000000000000000000000000801\ninterface DistributionI is genericAuth.GenericAuthorizationI {\n    /// TRANSACTIONS\n    /// @dev Change the address, that can withdraw the rewards of a delegator.\n    /// Note that this address cannot be a module account.\n    /// @param delegatorAddress The address of the delegator\n    /// @param withdrawerAddress The address that will be capable of withdrawing rewards for\n    /// the given delegator address\n    function setWithdrawAddress(\n        address delegatorAddress,\n        string memory withdrawerAddress\n    ) external returns (bool success);\n\n    /// @dev Withdraw the rewards of a delegator from a validator\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @return amount The amount of Coin withdrawn\n    function withdrawDelegatorRewards(\n        address delegatorAddress,\n        string memory validatorAddress\n    )\n    external\n    returns (\n        Coin[] calldata amount\n    );\n\n    /// @dev Withdraws the rewards commission of a validator.\n    /// @param validatorAddress The address of the validator\n    /// @return amount The amount of Coin withdrawn\n    function withdrawValidatorCommission(\n        string memory validatorAddress\n    )\n    external\n    returns (\n        Coin[] calldata amount\n    );\n\n    /// QUERIES\n    /// @dev Queries validator commission and self-delegation rewards for validator.\n    /// @param validatorAddress The address of the validator\n    /// @return distributionInfo The validator's distribution info\n    function validatorDistributionInfo(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        ValidatorDistributionInfo[] calldata distributionInfo // FIXME: remove unnecessary slice\n    );\n\n    /// @dev Queries the outstanding rewards of a validator address.\n    /// @param validatorAddress The address of the validator\n    /// @return rewards The validator's outstanding rewards\n    function validatorOutstandingRewards(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata rewards\n    );\n\n    /// @dev Queries the accumulated commission for a validator.\n    /// @param validatorAddress The address of the validator\n    /// @return commission The validator's commission\n    function validatorCommission(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata commission\n    );\n\n    /// @dev Queries the slashing events for a validator in a given height interval\n    /// defined by the starting and ending height.\n    /// @param validatorAddress The address of the validator\n    /// @param startingHeight The starting height\n    /// @param endingHeight The ending height\n    /// @return slashes The validator's slash events\n    /// @return pageResponse The pagination response for the query\n    function validatorSlashes(\n        string memory validatorAddress,\n        uint64 startingHeight,\n        uint64 endingHeight\n    )\n    external\n    view\n    returns (\n        ValidatorSlashEvent[] calldata slashes,\n        PageResponse calldata pageResponse\n    );\n\n    /// @dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @return rewards The total rewards accrued by a delegation.\n    function delegationRewards(\n        address delegatorAddress,\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata rewards\n    );\n\n    /// @dev Queries the total rewards accrued by each validator, that a given\n    /// address has delegated to.\n    /// @param delegatorAddress The address of the delegator\n    /// @return rewards The total rewards accrued by each validator for a delegator.\n    /// @return total The total rewards accrued by a delegator.\n    function delegationTotalRewards(\n        address delegatorAddress\n    )\n    external\n    view\n    returns (\n        DelegationDelegatorReward[] calldata rewards,\n        DecCoin[] calldata total\n    );\n\n    /// @dev Queries all validators, that a given address has delegated to.\n    /// @param delegatorAddress The address of the delegator\n    /// @return validators The addresses of all validators, that were delegated to by the given address.\n    function delegatorValidators(\n        address delegatorAddress\n    ) external view returns (string[] calldata validators);\n\n    /// @dev Queries the address capable of withdrawing rewards for a given delegator.\n    /// @param delegatorAddress The address of the delegator\n    /// @return withdrawAddress The address capable of withdrawing rewards for the delegator.\n    function delegatorWithdrawAddress(\n        address delegatorAddress\n    ) external view returns (string memory withdrawAddress);\n\n    /// @dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\n    /// @param caller the caller of the transaction\n    /// @param withdrawerAddress the newly set withdrawer address\n    event SetWithdrawerAddress(\n        address indexed caller,\n        string withdrawerAddress\n    );\n\n    /// @dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\n    /// @param delegatorAddress the address of the delegator\n    /// @param validatorAddress the address of the validator\n    /// @param amount the amount being withdrawn from the delegation\n    event WithdrawDelegatorRewards(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount\n    );\n\n    /// @dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\n    /// @param validatorAddress is the address of the validator\n    /// @param commission is the total commission earned by the validator\n    event WithdrawValidatorCommission(\n        string indexed validatorAddress,\n        uint256 commission\n    );\n}\n"},"contracts/precompiles/stateful/Staking.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\nimport \"../common/Authorization.sol\" as authorization;\nimport \"../common/Types.sol\";\n\n/// @dev The StakingI contract's address.\naddress constant STAKING_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000800;\n\n/// @dev The StakingI contract's instance.\nStakingI constant STAKING_CONTRACT = StakingI(STAKING_PRECOMPILE_ADDRESS);\n\n/// @dev Define all the available staking methods.\nstring constant MSG_DELEGATE = \"/cosmos.staking.v1beta1.MsgDelegate\";\nstring constant MSG_UNDELEGATE = \"/cosmos.staking.v1beta1.MsgUndelegate\";\nstring constant MSG_REDELEGATE = \"/cosmos.staking.v1beta1.MsgBeginRedelegate\";\nstring constant MSG_CANCEL_UNDELEGATION = \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\";\n\n/// @dev Defines the initial commission rates to be used for creating\n/// a validator.\nstruct CommissionRates {\n    uint256 rate;\n    uint256 maxRate;\n    uint256 maxChangeRate;\n}\n\n/// @dev Defines commission parameters for a given validator.\nstruct Commission {\n    CommissionRates commissionRates;\n    uint256 updateTime;\n}\n\n\n/// @dev Represents a validator in the staking module.\nstruct Validator {\n    string operatorAddress;\n    string consensusPubkey;\n    bool jailed;\n    BondStatus status;\n    uint256 tokens;\n    uint256 delegatorShares;\n    string description;\n    int64 unbondingHeight;\n    int64 unbondingTime;\n    uint256 commission;\n    uint256 minSelfDelegation;\n}\n\nstruct RedelegationResponse {\n    Redelegation redelegation;\n    RedelegationEntryResponse[] entries;\n}\n\nstruct Redelegation {\n    RedelegationEntry[] entries;\n}\n\nstruct RedelegationEntryResponse {\n    RedelegationEntry redelegationEntry;\n    uint256 balance;\n}\n\nstruct RedelegationEntry {\n    int64 creationHeight;\n    int64 completionTime;\n    uint256 initialBalance;\n    uint256 sharesDst;\n}\n\nstruct UnbondingDelegationEntry {\n    int64 creationHeight;\n    int64 completionTime;\n    uint256 initialBalance;\n    uint256 balance;\n}\n\nstruct PageRequest {\n    bytes key;\n    uint64 offset;\n    uint64 limit;\n    bool countTotal;\n    bool reverse;\n}\n\n/// @dev The status of the validator.\nenum BondStatus {\n    Unspecified,\n    Unbonded,\n    Unbonding,\n    Bonded\n}\n\n/// @author Evmos Team\n/// @title Staking Precompiled Contract\n/// @dev The interface through which solidity contracts will interact with staking.\n/// We follow this same interface including four-byte function selectors, in the precompile that\n/// wraps the pallet.\n/// @custom:address 0x0000000000000000000000000000000000000800\ninterface StakingI is authorization.AuthorizationI {\n    /// @dev Defines a method for performing a delegation of coins from a delegator to a validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of the Coin to be delegated to the validator\n    function delegate(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Defines a method for performing an undelegation from a delegate and a validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount to be undelegated from the validator\n    /// @return completionTime The time when the undelegation is completed\n    function undelegate(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Defines a method for performing a redelegation\n    /// of coins from a delegator and source validator to a destination validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorSrcAddress The validator from which the redelegation is initiated\n    /// @param validatorDstAddress The validator to which the redelegation is destined\n    /// @param amount The amount to be redelegated to the validator\n    /// @return completionTime The time when the redelegation is completed\n    function redelegate(\n        address delegatorAddress,\n        string memory validatorSrcAddress,\n        string memory validatorDstAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Allows delegators to cancel the unbondingDelegation entry\n    /// and to delegate back to a previous validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of the Coin\n    /// @param creationHeight The height at which the unbonding took place\n    /// @return completionTime The time when the cancellation of the unbonding delegation is completed\n    function cancelUnbondingDelegation(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount,\n        uint256 creationHeight\n    ) external returns (int64 completionTime);\n\n    /// @dev Queries the given amount of the bond denomination to a validator.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param validatorAddress The address of the validator.\n    /// @return shares The amount of shares, that the delegator has received.\n    /// @return balance The amount in Coin, that the delegator has delegated to the given validator.\n    function delegation(\n        address delegatorAddress,\n        string memory validatorAddress\n    ) external view returns (uint256 shares, Coin calldata balance);\n\n    /// @dev Returns the delegation shares and coins, that are currently\n    /// unbonding for a given delegator and validator pair.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param validatorAddress The address of the validator.\n    /// @return entries The delegations that are currently unbonding.\n    function unbondingDelegation(\n        address delegatorAddress,\n        string memory validatorAddress\n    ) external view returns (UnbondingDelegationEntry[] calldata entries);\n\n    /// @dev Queries validator info for a given validator address.\n    /// @param validatorAddress The address of the validator.\n    /// @return validators The validator info for the given validator address.\n    function validator(\n        string memory validatorAddress\n    )\n    external view returns (\n        Validator[] calldata validators\n    );\n\n    /// @dev Queries all validators that match the given status.\n    /// @param status Enables to query for validators matching a given status.\n    /// @param pageRequest Defines an optional pagination for the request.\n    function validators(\n        string memory status,\n        PageRequest calldata pageRequest\n    ) external view returns (\n        Validator[] calldata validators,\n        PageResponse calldata pageResponse\n    );\n\n    /// @dev Queries all redelegations from a source to a destination validator for a given delegator.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\n    /// @return entries The active redelegations for the given delegator, source and destination validator combination.\n    function redelegation(\n        address delegatorAddress,\n        string memory srcValidatorAddress,\n        string memory dstValidatorAddress\n    ) external view returns (RedelegationEntry[] calldata entries);\n\n    /// @dev Queries all redelegations from a source to to a destination validator\n    /// for a given delegator in a specified pagination manner.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\n    /// @param pageRequest Defines an optional pagination for the request.\n    /// @return response Holds the redelegations for the given delegator, source and destination validator combination.\n    function redelegations(\n        address delegatorAddress,\n        string memory srcValidatorAddress,\n        string memory dstValidatorAddress,\n        PageRequest calldata pageRequest\n    ) external view returns (RedelegationResponse calldata response);\n\n    /// @dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\n    /// delegator address to the validator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin being delegated\n    /// @param newShares The new delegation shares being held\n    event Delegate(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 newShares\n    );\n\n    /// @dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\n    /// validator address to the delegator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin being unbonded\n    /// @param completionTime The time at which the unbonding is completed\n    event Unbond(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 completionTime\n    );\n\n    /// @dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\n    /// the source validator address to the destination validator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorSrcAddress The address of the validator from which the delegation is retracted\n    /// @param validatorDstAddress The address of the validator to which the delegation is directed\n    /// @param amount The amount of Coin being redelegated\n    /// @param completionTime The time at which the redelegation is completed\n    event Redelegate(\n        address indexed delegatorAddress,\n        string indexed validatorSrcAddress,\n        string indexed validatorDstAddress,\n        uint256 amount,\n        uint256 completionTime\n    );\n\n    /// @dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\n    /// that are in the process of unbonding from the validator address are bonded again.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin that was in the unbonding process which is to be cancelled\n    /// @param creationHeight The block height at which the unbonding of a delegation was initiated\n    event CancelUnbondingDelegation(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 creationHeight\n    );\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/GreenDAO.sol:399:10:\n    |\n399 |         (bool sent,) = payable(msg.sender).call{value: _rewards_amount}(\"\");     \n    |          ^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":13141,"file":"contracts/GreenDAO.sol","start":13132},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/GreenDAO.sol:412:10:\n    |\n412 |         (bool sent,) = payable(msg.sender).call{value: _amount}(\"\");\n    |          ^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":13653,"file":"contracts/GreenDAO.sol","start":13644},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/GreenDAO.sol:419:10:\n    |\n419 |         (bool sent,) = payable(msg.sender).call{value: _amount}(\"\");     \n    |          ^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":13881,"file":"contracts/GreenDAO.sol","start":13872},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/GreenDAO.sol:430:10:\n    |\n430 |         (uint256 denom , Coin memory coin ) =  STAKING_CONTRACT.delegation(address(this), _validatorAddr);\n    |          ^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":14315,"file":"contracts/GreenDAO.sol","start":14302},"type":"Warning"}],"sources":{"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1094],"SignedMath":[1199],"Strings":[228]},"id":229,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":229,"sourceUnit":1095,"src":"126:25:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":229,"sourceUnit":1200,"src":"152:31:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"185:34:0","text":" @dev String operations."},"fullyImplemented":true,"id":228,"linearizedBaseContracts":[228],"name":"Strings","nameLocation":"228:7:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":7,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:0","nodeType":"VariableDeclaration","scope":228,"src":"242:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":5,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":6,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":10,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:0","nodeType":"VariableDeclaration","scope":228,"src":"302:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":9,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":57,"nodeType":"Block","src":"518:625:0","statements":[{"id":56,"nodeType":"UncheckedBlock","src":"528:609:0","statements":[{"assignments":[19],"declarations":[{"constant":false,"id":19,"mutability":"mutable","name":"length","nameLocation":"560:6:0","nodeType":"VariableDeclaration","scope":56,"src":"552:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":26,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":25,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":22,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"580:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":20,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"569:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1094_$","typeString":"type(library Math)"}},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:0","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":931,"src":"569:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":24,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:0"},{"assignments":[28],"declarations":[{"constant":false,"id":28,"mutability":"mutable","name":"buffer","nameLocation":"618:6:0","nodeType":"VariableDeclaration","scope":56,"src":"604:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":27,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":33,"initialValue":{"arguments":[{"id":31,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"638:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":30,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:0"},{"assignments":[35],"declarations":[{"constant":false,"id":35,"mutability":"mutable","name":"ptr","nameLocation":"667:3:0","nodeType":"VariableDeclaration","scope":56,"src":"659:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":36,"nodeType":"VariableDeclarationStatement","src":"659:11:0"},{"AST":{"nodeType":"YulBlock","src":"740:67:0","statements":[{"nodeType":"YulAssignment","src":"758:35:0","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:0","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:0"},"nodeType":"YulFunctionCall","src":"777:15:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:0"},"nodeType":"YulFunctionCall","src":"765:28:0"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":28,"isOffset":false,"isSlot":false,"src":"769:6:0","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":false,"src":"785:6:0","valueSize":1},{"declaration":35,"isOffset":false,"isSlot":false,"src":"758:3:0","valueSize":1}],"id":37,"nodeType":"InlineAssembly","src":"731:76:0"},{"body":{"id":52,"nodeType":"Block","src":"833:267:0","statements":[{"expression":{"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:0","subExpression":{"id":39,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"851:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41,"nodeType":"ExpressionStatement","src":"851:5:0"},{"AST":{"nodeType":"YulBlock","src":"934:84:0","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:0"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:0"},"nodeType":"YulFunctionCall","src":"974:14:0"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:0"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:0"},"nodeType":"YulFunctionCall","src":"969:30:0"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:0"},"nodeType":"YulFunctionCall","src":"956:44:0"},"nodeType":"YulExpressionStatement","src":"956:44:0"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":7,"isOffset":false,"isSlot":false,"src":"990:8:0","valueSize":1},{"declaration":35,"isOffset":false,"isSlot":false,"src":"964:3:0","valueSize":1},{"declaration":13,"isOffset":false,"isSlot":false,"src":"978:5:0","valueSize":1}],"id":42,"nodeType":"InlineAssembly","src":"925:93:0"},{"expression":{"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1035:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":44,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":46,"nodeType":"ExpressionStatement","src":"1035:11:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1068:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":51,"nodeType":"IfStatement","src":"1064:21:0","trueBody":{"id":50,"nodeType":"Break","src":"1080:5:0"}}]},"condition":{"hexValue":"74727565","id":38,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":53,"nodeType":"WhileStatement","src":"820:280:0"},{"expression":{"id":54,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1120:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":17,"id":55,"nodeType":"Return","src":"1113:13:0"}]}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"352:90:0","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":58,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:0","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"value","nameLocation":"473:5:0","nodeType":"VariableDeclaration","scope":58,"src":"465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:0"},"returnParameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"503:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:0"},"scope":228,"src":"447:696:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":85,"nodeType":"Block","src":"1313:103:0","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":70,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1354:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":74,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:0","trueExpression":{"hexValue":"2d","id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":79,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1400:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":77,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1385:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1199_$","typeString":"type(library SignedMath)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:0","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1198,"src":"1385:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":76,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[58,86],"referencedDeclaration":58,"src":"1376:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":68,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":67,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":66,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:0","typeDescriptions":{}}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":65,"id":84,"nodeType":"Return","src":"1323:86:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1149:89:0","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":86,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:0","nodeType":"FunctionDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"value","nameLocation":"1268:5:0","nodeType":"VariableDeclaration","scope":86,"src":"1261:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":60,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:0"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":86,"src":"1298:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":63,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:0"},"scope":228,"src":"1243:173:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":105,"nodeType":"Block","src":"1595:100:0","statements":[{"id":104,"nodeType":"UncheckedBlock","src":"1605:84:0","statements":[{"expression":{"arguments":[{"id":95,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"1648:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":98,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"1667:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":96,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"1655:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1094_$","typeString":"type(library Math)"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:0","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1054,"src":"1655:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":94,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[106,182,202],"referencedDeclaration":182,"src":"1636:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":93,"id":103,"nodeType":"Return","src":"1629:49:0"}]}]},"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"1422:94:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":106,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:0","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"value","nameLocation":"1550:5:0","nodeType":"VariableDeclaration","scope":106,"src":"1542:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:0"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":106,"src":"1580:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":91,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:0"},"scope":228,"src":"1521:174:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"1908:347:0","statements":[{"assignments":[117],"declarations":[{"constant":false,"id":117,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:0","nodeType":"VariableDeclaration","scope":181,"src":"1918:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":116,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":126,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":121,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1954:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":118,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:0"},{"expression":{"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":127,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1975:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":129,"indexExpression":{"hexValue":"30","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":132,"nodeType":"ExpressionStatement","src":"1975:15:0"},{"expression":{"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":133,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2000:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":135,"indexExpression":{"hexValue":"31","id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":138,"nodeType":"ExpressionStatement","src":"2000:15:0"},{"body":{"id":167,"nodeType":"Block","src":"2070:83:0","statements":[{"expression":{"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":153,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2084:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":155,"indexExpression":{"id":154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2091:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":156,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2096:8:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":160,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2105:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:0","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":162,"nodeType":"ExpressionStatement","src":"2084:33:0"},{"expression":{"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2131:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":166,"nodeType":"ExpressionStatement","src":"2131:11:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2058:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":168,"initializationExpression":{"assignments":[140],"declarations":[{"constant":false,"id":140,"mutability":"mutable","name":"i","nameLocation":"2038:1:0","nodeType":"VariableDeclaration","scope":168,"src":"2030:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":146,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":142,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2046:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:0"},"loopExpression":{"expression":{"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:0","subExpression":{"id":150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2067:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":152,"nodeType":"ExpressionStatement","src":"2065:3:0"},"nodeType":"ForStatement","src":"2025:128:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2170:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":175,"nodeType":"ExpressionStatement","src":"2162:55:0"},{"expression":{"arguments":[{"id":178,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2241:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":176,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:0","typeDescriptions":{}}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":115,"id":180,"nodeType":"Return","src":"2227:21:0"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"1701:112:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:0","nodeType":"FunctionDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"value","nameLocation":"1847:5:0","nodeType":"VariableDeclaration","scope":182,"src":"1839:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"length","nameLocation":"1862:6:0","nodeType":"VariableDeclaration","scope":182,"src":"1854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:0"},"returnParameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"1893:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":113,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:0"},"scope":228,"src":"1818:437:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":201,"nodeType":"Block","src":"2480:76:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":195,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2525:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":193,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:0","typeDescriptions":{}}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:0","typeDescriptions":{}}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":198,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2533:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":190,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[106,182,202],"referencedDeclaration":182,"src":"2497:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":189,"id":200,"nodeType":"Return","src":"2490:59:0"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"2261:141:0","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":202,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:0","nodeType":"FunctionDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"addr","nameLocation":"2436:4:0","nodeType":"VariableDeclaration","scope":202,"src":"2428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:0"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"2465:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":187,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:0"},"scope":228,"src":"2407:149:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":226,"nodeType":"Block","src":"2711:66:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2744:1:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":213,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:0","typeDescriptions":{}}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":212,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":221,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"2767:1:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":219,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:0","typeDescriptions":{}}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":218,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":211,"id":225,"nodeType":"Return","src":"2721:49:0"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"2562:66:0","text":" @dev Returns true if the two strings are equal."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:0","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"a","nameLocation":"2662:1:0","nodeType":"VariableDeclaration","scope":227,"src":"2648:15:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":204,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"b","nameLocation":"2679:1:0","nodeType":"VariableDeclaration","scope":227,"src":"2665:15:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":206,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:0"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"2705:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":209,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:0"},"scope":228,"src":"2633:144:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":229,"src":"220:2559:0","usedErrors":[]}],"src":"101:2679:0"},"id":0},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1094]},"id":1095,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":230,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"128:73:1","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1094,"linearizedBaseContracts":[1094],"name":"Math","nameLocation":"210:4:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":235,"members":[{"id":232,"name":"Down","nameLocation":"245:4:1","nodeType":"EnumValue","src":"245:4:1"},{"id":233,"name":"Up","nameLocation":"287:2:1","nodeType":"EnumValue","src":"287:2:1"},{"id":234,"name":"Zero","nameLocation":"318:4:1","nodeType":"EnumValue","src":"318:4:1"}],"name":"Rounding","nameLocation":"226:8:1","nodeType":"EnumDefinition","src":"221:122:1"},{"body":{"id":252,"nodeType":"Block","src":"480:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"497:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"501:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":249,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"509:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:1","trueExpression":{"id":248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"505:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":244,"id":251,"nodeType":"Return","src":"490:20:1"}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"349:59:1","text":" @dev Returns the largest of two numbers."},"id":253,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:1","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"a","nameLocation":"434:1:1","nodeType":"VariableDeclaration","scope":253,"src":"426:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"b","nameLocation":"445:1:1","nodeType":"VariableDeclaration","scope":253,"src":"437:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:1"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":253,"src":"471:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:1"},"scope":1094,"src":"413:104:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":270,"nodeType":"Block","src":"655:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"672:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"676:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":267,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"684:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:1","trueExpression":{"id":266,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"680:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":262,"id":269,"nodeType":"Return","src":"665:20:1"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"523:60:1","text":" @dev Returns the smallest of two numbers."},"id":271,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:1","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"a","nameLocation":"609:1:1","nodeType":"VariableDeclaration","scope":271,"src":"601:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"b","nameLocation":"620:1:1","nodeType":"VariableDeclaration","scope":271,"src":"612:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:1"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":271,"src":"646:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:1"},"scope":1094,"src":"588:104:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"876:82:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"931:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"935:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"941:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"945:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":280,"id":292,"nodeType":"Return","src":"923:28:1"}]},"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"698:102:1","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:1","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"a","nameLocation":"830:1:1","nodeType":"VariableDeclaration","scope":294,"src":"822:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"b","nameLocation":"841:1:1","nodeType":"VariableDeclaration","scope":294,"src":"833:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:1"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"867:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:1"},"scope":1094,"src":"805:153:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":318,"nodeType":"Block","src":"1228:123:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1316:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1330:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":312,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"1339:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:1","trueExpression":{"hexValue":"30","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":303,"id":317,"nodeType":"Return","src":"1309:35:1"}]},"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"964:188:1","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":319,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:1","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"a","nameLocation":"1182:1:1","nodeType":"VariableDeclaration","scope":319,"src":"1174:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"b","nameLocation":"1193:1:1","nodeType":"VariableDeclaration","scope":319,"src":"1185:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:1"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"1219:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:1"},"scope":1094,"src":"1157:194:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"1765:4115:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"1775:4099:1","statements":[{"assignments":[332],"declarations":[{"constant":false,"id":332,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:1","nodeType":"VariableDeclaration","scope":440,"src":"2096:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":333,"nodeType":"VariableDeclarationStatement","src":"2096:13:1"},{"assignments":[335],"declarations":[{"constant":false,"id":335,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:1","nodeType":"VariableDeclaration","scope":440,"src":"2168:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":336,"nodeType":"VariableDeclarationStatement","src":"2168:13:1"},{"AST":{"nodeType":"YulBlock","src":"2248:157:1","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:1","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:1"},"nodeType":"YulFunctionCall","src":"2289:6:1"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:1"},"nodeType":"YulFunctionCall","src":"2276:20:1"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:1","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:1"},"nodeType":"YulFunctionCall","src":"2322:9:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:1"}]},{"nodeType":"YulAssignment","src":"2348:43:1","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:1"},"nodeType":"YulFunctionCall","src":"2361:14:1"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:1"},"nodeType":"YulFunctionCall","src":"2377:13:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:1"},"nodeType":"YulFunctionCall","src":"2357:34:1"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":332,"isOffset":false,"isSlot":false,"src":"2313:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"2369:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"2384:5:1","valueSize":1},{"declaration":335,"isOffset":false,"isSlot":false,"src":"2348:5:1","valueSize":1},{"declaration":322,"isOffset":false,"isSlot":false,"src":"2283:1:1","valueSize":1},{"declaration":322,"isOffset":false,"isSlot":false,"src":"2326:1:1","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"2286:1:1","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"2329:1:1","valueSize":1}],"id":337,"nodeType":"InlineAssembly","src":"2239:166:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":338,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2486:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":346,"nodeType":"IfStatement","src":"2482:368:1","trueBody":{"id":345,"nodeType":"Block","src":"2498:352:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":341,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"2816:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":342,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2824:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":330,"id":344,"nodeType":"Return","src":"2809:26:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2960:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":349,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2974:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"ExpressionStatement","src":"2952:53:1"},{"assignments":[355],"declarations":[{"constant":false,"id":355,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:1","nodeType":"VariableDeclaration","scope":440,"src":"3261:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":356,"nodeType":"VariableDeclarationStatement","src":"3261:17:1"},{"AST":{"nodeType":"YulBlock","src":"3301:291:1","statements":[{"nodeType":"YulAssignment","src":"3370:38:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:1"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:1"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:1"},"nodeType":"YulFunctionCall","src":"3383:25:1"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:1"}]},{"nodeType":"YulAssignment","src":"3490:41:1","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:1"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:1"},"nodeType":"YulFunctionCall","src":"3510:20:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:1"},"nodeType":"YulFunctionCall","src":"3499:32:1"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:1"}]},{"nodeType":"YulAssignment","src":"3548:30:1","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:1"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:1"},"nodeType":"YulFunctionCall","src":"3557:21:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":326,"isOffset":false,"isSlot":false,"src":"3396:11:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"3524:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"3548:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"3561:5:1","valueSize":1},{"declaration":335,"isOffset":false,"isSlot":false,"src":"3490:5:1","valueSize":1},{"declaration":335,"isOffset":false,"isSlot":false,"src":"3503:5:1","valueSize":1},{"declaration":355,"isOffset":false,"isSlot":false,"src":"3370:9:1","valueSize":1},{"declaration":355,"isOffset":false,"isSlot":false,"src":"3513:9:1","valueSize":1},{"declaration":355,"isOffset":false,"isSlot":false,"src":"3568:9:1","valueSize":1},{"declaration":322,"isOffset":false,"isSlot":false,"src":"3390:1:1","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"3393:1:1","valueSize":1}],"id":357,"nodeType":"InlineAssembly","src":"3292:300:1"},{"assignments":[359],"declarations":[{"constant":false,"id":359,"mutability":"mutable","name":"twos","nameLocation":"3907:4:1","nodeType":"VariableDeclaration","scope":440,"src":"3899:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":367,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":360,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"3914:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:1","subExpression":{"id":361,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"3930:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:1"},{"AST":{"nodeType":"YulBlock","src":"3969:362:1","statements":[{"nodeType":"YulAssignment","src":"4034:37:1","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:1"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:1"},"nodeType":"YulFunctionCall","src":"4049:22:1"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:1"}]},{"nodeType":"YulAssignment","src":"4138:25:1","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:1"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:1"},"nodeType":"YulFunctionCall","src":"4147:16:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:1"}]},{"nodeType":"YulAssignment","src":"4278:39:1","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:1","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:1"},"nodeType":"YulFunctionCall","src":"4294:12:1"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:1"},"nodeType":"YulFunctionCall","src":"4290:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:1"},"nodeType":"YulFunctionCall","src":"4286:31:1"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":326,"isOffset":false,"isSlot":false,"src":"4034:11:1","valueSize":1},{"declaration":326,"isOffset":false,"isSlot":false,"src":"4053:11:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"4138:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"4151:5:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4066:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4158:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4278:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4301:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4308:4:1","valueSize":1}],"id":368,"nodeType":"InlineAssembly","src":"3960:371:1"},{"expression":{"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":369,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"4397:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":370,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":371,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"4414:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":374,"nodeType":"ExpressionStatement","src":"4397:21:1"},{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:1","nodeType":"VariableDeclaration","scope":440,"src":"4736:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":383,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":378,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4759:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:1"},{"expression":{"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":384,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4992:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":386,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5007:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":387,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5021:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":391,"nodeType":"ExpressionStatement","src":"4992:36:1"},{"expression":{"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":392,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5061:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":394,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5076:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":395,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5090:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":399,"nodeType":"ExpressionStatement","src":"5061:36:1"},{"expression":{"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":400,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5131:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":402,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5146:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":403,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5160:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":407,"nodeType":"ExpressionStatement","src":"5131:36:1"},{"expression":{"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":408,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5201:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5216:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":411,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5230:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":415,"nodeType":"ExpressionStatement","src":"5201:36:1"},{"expression":{"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":416,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5271:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":418,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5286:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":419,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5300:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":423,"nodeType":"ExpressionStatement","src":"5271:36:1"},{"expression":{"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":424,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5342:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":426,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5357:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":427,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5371:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":431,"nodeType":"ExpressionStatement","src":"5342:36:1"},{"expression":{"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5812:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"5821:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":434,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5829:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ExpressionStatement","src":"5812:24:1"},{"expression":{"id":438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5857:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":330,"id":439,"nodeType":"Return","src":"5850:13:1"}]}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1357:305:1","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:1","nodeType":"FunctionDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"x","nameLocation":"1691:1:1","nodeType":"VariableDeclaration","scope":442,"src":"1683:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"y","nameLocation":"1702:1:1","nodeType":"VariableDeclaration","scope":442,"src":"1694:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:1","nodeType":"VariableDeclaration","scope":442,"src":"1705:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:1"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"result","nameLocation":"1757:6:1","nodeType":"VariableDeclaration","scope":442,"src":"1749:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:1"},"scope":1094,"src":"1667:4213:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":485,"nodeType":"Block","src":"6122:189:1","statements":[{"assignments":[458],"declarations":[{"constant":false,"id":458,"mutability":"mutable","name":"result","nameLocation":"6140:6:1","nodeType":"VariableDeclaration","scope":485,"src":"6132:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":464,"initialValue":{"arguments":[{"id":460,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6156:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":461,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6159:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":462,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6162:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":459,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[442,486],"referencedDeclaration":442,"src":"6149:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":465,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6188:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":466,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6200:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"6200:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"6188:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":470,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6222:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":471,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6225:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":472,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6228:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":469,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:1","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":482,"nodeType":"IfStatement","src":"6184:98:1","trueBody":{"id":481,"nodeType":"Block","src":"6246:36:1","statements":[{"expression":{"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"6260:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":480,"nodeType":"ExpressionStatement","src":"6260:11:1"}]}},{"expression":{"id":483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"6298:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":456,"id":484,"nodeType":"Return","src":"6291:13:1"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"5886:121:1","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":486,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:1","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"x","nameLocation":"6036:1:1","nodeType":"VariableDeclaration","scope":486,"src":"6028:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"y","nameLocation":"6047:1:1","nodeType":"VariableDeclaration","scope":486,"src":"6039:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:1","nodeType":"VariableDeclaration","scope":486,"src":"6050:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:1","nodeType":"VariableDeclaration","scope":486,"src":"6071:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"Rounding","nameLocations":["6071:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"6071:8:1"},"referencedDeclaration":235,"src":"6071:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:1"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":486,"src":"6113:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:1"},"scope":1094,"src":"6012:299:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":597,"nodeType":"Block","src":"6587:1585:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":494,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"6601:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":500,"nodeType":"IfStatement","src":"6597:45:1","trueBody":{"id":499,"nodeType":"Block","src":"6609:33:1","statements":[{"expression":{"hexValue":"30","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":493,"id":498,"nodeType":"Return","src":"6623:8:1"}]}},{"assignments":[502],"declarations":[{"constant":false,"id":502,"mutability":"mutable","name":"result","nameLocation":"7329:6:1","nodeType":"VariableDeclaration","scope":597,"src":"7321:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":511,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7349:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":504,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[766,802],"referencedDeclaration":766,"src":"7344:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:1"},{"id":596,"nodeType":"UncheckedBlock","src":"7758:408:1","statements":[{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7782:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7792:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7801:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7805:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ExpressionStatement","src":"7782:35:1"},{"expression":{"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7831:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7841:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7850:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7854:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":533,"nodeType":"ExpressionStatement","src":"7831:35:1"},{"expression":{"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7880:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7890:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7899:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7903:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":544,"nodeType":"ExpressionStatement","src":"7880:35:1"},{"expression":{"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7929:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7939:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7948:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7952:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":555,"nodeType":"ExpressionStatement","src":"7929:35:1"},{"expression":{"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7978:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7988:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7997:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8001:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":566,"nodeType":"ExpressionStatement","src":"7978:35:1"},{"expression":{"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8027:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8037:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8046:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8050:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":577,"nodeType":"ExpressionStatement","src":"8027:35:1"},{"expression":{"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8076:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8086:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8095:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8099:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":588,"nodeType":"ExpressionStatement","src":"8076:35:1"},{"expression":{"arguments":[{"id":590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8136:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8144:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8148:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":589,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8132:3:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":493,"id":595,"nodeType":"Return","src":"8125:30:1"}]}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"6317:208:1","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":598,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:1","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"a","nameLocation":"6552:1:1","nodeType":"VariableDeclaration","scope":598,"src":"6544:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:1"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":598,"src":"6578:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":491,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:1"},"scope":1094,"src":"6530:1642:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":633,"nodeType":"Block","src":"8348:161:1","statements":[{"id":632,"nodeType":"UncheckedBlock","src":"8358:145:1","statements":[{"assignments":[610],"declarations":[{"constant":false,"id":610,"mutability":"mutable","name":"result","nameLocation":"8390:6:1","nodeType":"VariableDeclaration","scope":632,"src":"8382:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":614,"initialValue":{"arguments":[{"id":612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"8404:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":611,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[598,634],"referencedDeclaration":598,"src":"8399:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8427:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"8437:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":617,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"8449:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"8449:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"8437:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8464:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8473:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"8482:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:1","trueExpression":{"hexValue":"31","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":608,"id":631,"nodeType":"Return","src":"8420:72:1"}]}]},"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"8178:89:1","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:1","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"a","nameLocation":"8294:1:1","nodeType":"VariableDeclaration","scope":634,"src":"8286:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:1","nodeType":"VariableDeclaration","scope":634,"src":"8297:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":603,"nodeType":"UserDefinedTypeName","pathNode":{"id":602,"name":"Rounding","nameLocations":["8297:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"8297:8:1"},"referencedDeclaration":235,"src":"8297:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:1"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":634,"src":"8339:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:1"},"scope":1094,"src":"8272:237:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":765,"nodeType":"Block","src":"8694:922:1","statements":[{"assignments":[643],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"result","nameLocation":"8712:6:1","nodeType":"VariableDeclaration","scope":765,"src":"8704:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":645,"initialValue":{"hexValue":"30","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:1"},{"id":762,"nodeType":"UncheckedBlock","src":"8732:855:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8760:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":660,"nodeType":"IfStatement","src":"8756:99:1","trueBody":{"id":659,"nodeType":"Block","src":"8778:77:1","statements":[{"expression":{"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8796:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":654,"nodeType":"ExpressionStatement","src":"8796:13:1"},{"expression":{"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"8827:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":658,"nodeType":"ExpressionStatement","src":"8827:13:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8872:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":675,"nodeType":"IfStatement","src":"8868:96:1","trueBody":{"id":674,"nodeType":"Block","src":"8889:75:1","statements":[{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8907:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":669,"nodeType":"ExpressionStatement","src":"8907:12:1"},{"expression":{"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"8937:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":673,"nodeType":"ExpressionStatement","src":"8937:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8981:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":690,"nodeType":"IfStatement","src":"8977:96:1","trueBody":{"id":689,"nodeType":"Block","src":"8998:75:1","statements":[{"expression":{"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9016:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":684,"nodeType":"ExpressionStatement","src":"9016:12:1"},{"expression":{"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9046:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":688,"nodeType":"ExpressionStatement","src":"9046:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9090:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":705,"nodeType":"IfStatement","src":"9086:96:1","trueBody":{"id":704,"nodeType":"Block","src":"9107:75:1","statements":[{"expression":{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9125:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":699,"nodeType":"ExpressionStatement","src":"9125:12:1"},{"expression":{"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9155:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":703,"nodeType":"ExpressionStatement","src":"9155:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9199:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":720,"nodeType":"IfStatement","src":"9195:93:1","trueBody":{"id":719,"nodeType":"Block","src":"9215:73:1","statements":[{"expression":{"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9233:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":714,"nodeType":"ExpressionStatement","src":"9233:11:1"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9262:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":718,"nodeType":"ExpressionStatement","src":"9262:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9305:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"IfStatement","src":"9301:93:1","trueBody":{"id":734,"nodeType":"Block","src":"9321:73:1","statements":[{"expression":{"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9339:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":729,"nodeType":"ExpressionStatement","src":"9339:11:1"},{"expression":{"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9368:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":733,"nodeType":"ExpressionStatement","src":"9368:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9411:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":750,"nodeType":"IfStatement","src":"9407:93:1","trueBody":{"id":749,"nodeType":"Block","src":"9427:73:1","statements":[{"expression":{"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9445:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":744,"nodeType":"ExpressionStatement","src":"9445:11:1"},{"expression":{"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9474:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":748,"nodeType":"ExpressionStatement","src":"9474:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9517:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":761,"nodeType":"IfStatement","src":"9513:64:1","trueBody":{"id":760,"nodeType":"Block","src":"9533:44:1","statements":[{"expression":{"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9551:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":759,"nodeType":"ExpressionStatement","src":"9551:11:1"}]}}]},{"expression":{"id":763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9603:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":641,"id":764,"nodeType":"Return","src":"9596:13:1"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"8515:113:1","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:1","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"value","nameLocation":"8655:5:1","nodeType":"VariableDeclaration","scope":766,"src":"8647:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:1"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"8685:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:1"},"scope":1094,"src":"8633:983:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":801,"nodeType":"Block","src":"9849:165:1","statements":[{"id":800,"nodeType":"UncheckedBlock","src":"9859:149:1","statements":[{"assignments":[778],"declarations":[{"constant":false,"id":778,"mutability":"mutable","name":"result","nameLocation":"9891:6:1","nodeType":"VariableDeclaration","scope":800,"src":"9883:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":782,"initialValue":{"arguments":[{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9905:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":779,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[766,802],"referencedDeclaration":766,"src":"9900:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"9932:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9942:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":785,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"9954:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"9954:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"9942:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"9974:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9983:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:1","trueExpression":{"hexValue":"31","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":776,"id":799,"nodeType":"Return","src":"9925:72:1"}]}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"9622:142:1","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":802,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:1","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"value","nameLocation":"9791:5:1","nodeType":"VariableDeclaration","scope":802,"src":"9783:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:1","nodeType":"VariableDeclaration","scope":802,"src":"9798:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":771,"nodeType":"UserDefinedTypeName","pathNode":{"id":770,"name":"Rounding","nameLocations":["9798:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"9798:8:1"},"referencedDeclaration":235,"src":"9798:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:1"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":802,"src":"9840:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:1"},"scope":1094,"src":"9769:245:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":930,"nodeType":"Block","src":"10201:854:1","statements":[{"assignments":[811],"declarations":[{"constant":false,"id":811,"mutability":"mutable","name":"result","nameLocation":"10219:6:1","nodeType":"VariableDeclaration","scope":930,"src":"10211:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":813,"initialValue":{"hexValue":"30","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:1"},{"id":927,"nodeType":"UncheckedBlock","src":"10239:787:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10267:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":830,"nodeType":"IfStatement","src":"10263:103:1","trueBody":{"id":829,"nodeType":"Block","src":"10286:80:1","statements":[{"expression":{"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10304:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":824,"nodeType":"ExpressionStatement","src":"10304:17:1"},{"expression":{"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10339:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":828,"nodeType":"ExpressionStatement","src":"10339:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10383:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":847,"nodeType":"IfStatement","src":"10379:103:1","trueBody":{"id":846,"nodeType":"Block","src":"10402:80:1","statements":[{"expression":{"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10420:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ExpressionStatement","src":"10420:17:1"},{"expression":{"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":842,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10455:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":845,"nodeType":"ExpressionStatement","src":"10455:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10499:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":864,"nodeType":"IfStatement","src":"10495:103:1","trueBody":{"id":863,"nodeType":"Block","src":"10518:80:1","statements":[{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10536:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"10536:17:1"},{"expression":{"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":859,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10571:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":862,"nodeType":"ExpressionStatement","src":"10571:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10615:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":881,"nodeType":"IfStatement","src":"10611:100:1","trueBody":{"id":880,"nodeType":"Block","src":"10633:78:1","statements":[{"expression":{"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10651:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":875,"nodeType":"ExpressionStatement","src":"10651:16:1"},{"expression":{"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10685:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":879,"nodeType":"ExpressionStatement","src":"10685:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10728:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":898,"nodeType":"IfStatement","src":"10724:100:1","trueBody":{"id":897,"nodeType":"Block","src":"10746:78:1","statements":[{"expression":{"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10764:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":892,"nodeType":"ExpressionStatement","src":"10764:16:1"},{"expression":{"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10798:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":896,"nodeType":"ExpressionStatement","src":"10798:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10841:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":915,"nodeType":"IfStatement","src":"10837:100:1","trueBody":{"id":914,"nodeType":"Block","src":"10859:78:1","statements":[{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10877:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":909,"nodeType":"ExpressionStatement","src":"10877:16:1"},{"expression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10911:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":913,"nodeType":"ExpressionStatement","src":"10911:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10954:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"10950:66:1","trueBody":{"id":925,"nodeType":"Block","src":"10972:44:1","statements":[{"expression":{"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":921,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10990:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":924,"nodeType":"ExpressionStatement","src":"10990:11:1"}]}}]},{"expression":{"id":928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"11042:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":809,"id":929,"nodeType":"Return","src":"11035:13:1"}]},"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"10020:114:1","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":931,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:1","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"value","nameLocation":"10162:5:1","nodeType":"VariableDeclaration","scope":931,"src":"10154:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:1"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":931,"src":"10192:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:1"},"scope":1094,"src":"10139:916:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"11290:167:1","statements":[{"id":965,"nodeType":"UncheckedBlock","src":"11300:151:1","statements":[{"assignments":[943],"declarations":[{"constant":false,"id":943,"mutability":"mutable","name":"result","nameLocation":"11332:6:1","nodeType":"VariableDeclaration","scope":965,"src":"11324:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":947,"initialValue":{"arguments":[{"id":945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"11347:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":944,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[931,967],"referencedDeclaration":931,"src":"11341:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"11374:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":949,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"11384:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":950,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"11396:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"11396:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"11384:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"11417:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"11426:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:1","trueExpression":{"hexValue":"31","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":941,"id":964,"nodeType":"Return","src":"11367:73:1"}]}]},"documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"11061:143:1","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:1","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"value","nameLocation":"11232:5:1","nodeType":"VariableDeclaration","scope":967,"src":"11224:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:1","nodeType":"VariableDeclaration","scope":967,"src":"11239:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":936,"nodeType":"UserDefinedTypeName","pathNode":{"id":935,"name":"Rounding","nameLocations":["11239:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"11239:8:1"},"referencedDeclaration":235,"src":"11239:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:1"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"11281:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:1"},"scope":1094,"src":"11209:248:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"11771:600:1","statements":[{"assignments":[976],"declarations":[{"constant":false,"id":976,"mutability":"mutable","name":"result","nameLocation":"11789:6:1","nodeType":"VariableDeclaration","scope":1053,"src":"11781:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":978,"initialValue":{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:1"},{"id":1050,"nodeType":"UncheckedBlock","src":"11809:533:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11837:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":993,"nodeType":"IfStatement","src":"11833:98:1","trueBody":{"id":992,"nodeType":"Block","src":"11855:76:1","statements":[{"expression":{"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11873:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":987,"nodeType":"ExpressionStatement","src":"11873:13:1"},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"11904:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ExpressionStatement","src":"11904:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11948:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1008,"nodeType":"IfStatement","src":"11944:95:1","trueBody":{"id":1007,"nodeType":"Block","src":"11965:74:1","statements":[{"expression":{"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11983:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1002,"nodeType":"ExpressionStatement","src":"11983:12:1"},{"expression":{"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12013:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1006,"nodeType":"ExpressionStatement","src":"12013:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12056:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1023,"nodeType":"IfStatement","src":"12052:95:1","trueBody":{"id":1022,"nodeType":"Block","src":"12073:74:1","statements":[{"expression":{"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12091:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"nodeType":"ExpressionStatement","src":"12091:12:1"},{"expression":{"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12121:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1021,"nodeType":"ExpressionStatement","src":"12121:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12164:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1038,"nodeType":"IfStatement","src":"12160:95:1","trueBody":{"id":1037,"nodeType":"Block","src":"12181:74:1","statements":[{"expression":{"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12199:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1032,"nodeType":"ExpressionStatement","src":"12199:12:1"},{"expression":{"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12229:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"nodeType":"ExpressionStatement","src":"12229:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12272:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1049,"nodeType":"IfStatement","src":"12268:64:1","trueBody":{"id":1048,"nodeType":"Block","src":"12288:44:1","statements":[{"expression":{"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12306:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1047,"nodeType":"ExpressionStatement","src":"12306:11:1"}]}}]},{"expression":{"id":1051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12358:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":974,"id":1052,"nodeType":"Return","src":"12351:13:1"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"11463:240:1","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:1","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"value","nameLocation":"11732:5:1","nodeType":"VariableDeclaration","scope":1054,"src":"11724:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:1"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"11762:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:1"},"scope":1094,"src":"11708:663:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1092,"nodeType":"Block","src":"12608:174:1","statements":[{"id":1091,"nodeType":"UncheckedBlock","src":"12618:158:1","statements":[{"assignments":[1066],"declarations":[{"constant":false,"id":1066,"mutability":"mutable","name":"result","nameLocation":"12650:6:1","nodeType":"VariableDeclaration","scope":1091,"src":"12642:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1070,"initialValue":{"arguments":[{"id":1068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12666:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1067,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1054,1093],"referencedDeclaration":1054,"src":"12659:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12693:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1072,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12703:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1073,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"12715:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"12715:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"12703:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12736:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12751:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:1","trueExpression":{"hexValue":"31","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1064,"id":1090,"nodeType":"Return","src":"12686:79:1"}]}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"12377:144:1","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1093,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:1","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"value","nameLocation":"12550:5:1","nodeType":"VariableDeclaration","scope":1093,"src":"12542:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:1","nodeType":"VariableDeclaration","scope":1093,"src":"12557:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":1059,"nodeType":"UserDefinedTypeName","pathNode":{"id":1058,"name":"Rounding","nameLocations":["12557:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"12557:8:1"},"referencedDeclaration":235,"src":"12557:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:1"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1093,"src":"12599:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:1"},"scope":1094,"src":"12526:256:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1095,"src":"202:12582:1","usedErrors":[]}],"src":"103:12682:1"},"id":1},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1199]},"id":1200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1096,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"134:80:2","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1199,"linearizedBaseContracts":[1199],"name":"SignedMath","nameLocation":"223:10:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":1114,"nodeType":"Block","src":"375:37:2","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"392:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1108,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"396:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"404:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:2","trueExpression":{"id":1110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"400:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1106,"id":1113,"nodeType":"Return","src":"385:20:2"}]},"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"240:66:2","text":" @dev Returns the largest of two signed numbers."},"id":1115,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:2","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"a","nameLocation":"331:1:2","nodeType":"VariableDeclaration","scope":1115,"src":"324:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1099,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"b","nameLocation":"341:1:2","nodeType":"VariableDeclaration","scope":1115,"src":"334:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1101,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:2"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"367:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1104,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:2"},"scope":1199,"src":"311:101:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1132,"nodeType":"Block","src":"554:37:2","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"571:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"575:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1129,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"583:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:2","trueExpression":{"id":1128,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"579:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1124,"id":1131,"nodeType":"Return","src":"564:20:2"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"418:67:2","text":" @dev Returns the smallest of two signed numbers."},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:2","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"a","nameLocation":"510:1:2","nodeType":"VariableDeclaration","scope":1133,"src":"503:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1117,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"b","nameLocation":"520:1:2","nodeType":"VariableDeclaration","scope":1133,"src":"513:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1119,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:2"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"546:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1122,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:2"},"scope":1199,"src":"490:101:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1176,"nodeType":"Block","src":"796:162:2","statements":[{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"x","nameLocation":"865:1:2","nodeType":"VariableDeclaration","scope":1176,"src":"858:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1143,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1157,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"870:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"874:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"881:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1150,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"885:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:2"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1158,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"910:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1163,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"930:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:2","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:2","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1159,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:2","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"944:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"948:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1142,"id":1175,"nodeType":"Return","src":"903:48:2"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"597:126:2","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1177,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:2","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"a","nameLocation":"752:1:2","nodeType":"VariableDeclaration","scope":1177,"src":"745:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1135,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"b","nameLocation":"762:1:2","nodeType":"VariableDeclaration","scope":1177,"src":"755:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1137,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:2"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"788:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1140,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:2"},"scope":1199,"src":"728:230:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"1102:158:2","statements":[{"id":1196,"nodeType":"UncheckedBlock","src":"1112:142:2","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1227:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:2","subExpression":{"id":1191,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1241:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:2","trueExpression":{"id":1190,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1236:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:2","typeDescriptions":{}}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1184,"id":1195,"nodeType":"Return","src":"1212:31:2"}]}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"964:78:2","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:2","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"n","nameLocation":"1067:1:2","nodeType":"VariableDeclaration","scope":1198,"src":"1060:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1179,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:2"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1198,"src":"1093:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:2"},"scope":1199,"src":"1047:213:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1200,"src":"215:1047:2","usedErrors":[]}],"src":"109:1154:2"},"id":2},"contracts/GreenDAO.sol":{"ast":{"absolutePath":"contracts/GreenDAO.sol","exportedSymbols":{"BondStatus":[3093],"Coin":[2765],"Commission":[3016],"CommissionRates":[3010],"DISTRIBUTION_CONTRACT":[2802],"DISTRIBUTION_PRECOMPILE_ADDRESS":[2785],"Dec":[2760],"DecCoin":[2772],"DelegationDelegatorReward":[2826],"DistributionI":[2975],"GreenDAO":[2627],"MSG_CANCEL_UNDELEGATION":[3003],"MSG_DELEGATE":[2994],"MSG_REDELEGATE":[3000],"MSG_SET_WITHDRAWER_ADDRESS":[2789],"MSG_UNDELEGATE":[2997],"MSG_WITHDRAW_DELEGATOR_REWARD":[2792],"MSG_WITHDRAW_VALIDATOR_COMMISSION":[2795],"Math":[1094],"PageRequest":[3088],"PageResponse":[2777],"Redelegation":[3053],"RedelegationEntry":[3068],"RedelegationEntryResponse":[3059],"RedelegationResponse":[3048],"STAKING_CONTRACT":[2990],"STAKING_PRECOMPILE_ADDRESS":[2983],"SignedMath":[1199],"StakingI":[3276],"Strings":[228],"UnbondingDelegationEntry":[3077],"Validator":[3040],"ValidatorDistributionInfo":[2819],"ValidatorSlashEvent":[2808],"authorization":[2978],"genericAuth":[2780]},"id":2628,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1201,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2628,"sourceUnit":229,"src":"58:51:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/precompiles/stateful/Staking.sol","file":"./precompiles/stateful/Staking.sol","id":1203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2628,"sourceUnit":3277,"src":"111:44:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/precompiles/stateful/Distribution.sol","file":"./precompiles/stateful/Distribution.sol","id":1204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2628,"sourceUnit":2976,"src":"157:49:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"GreenDAO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2627,"linearizedBaseContracts":[2627],"name":"GreenDAO","nameLocation":"217:8:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GreenDAO.dao_uri_struct","id":1211,"members":[{"constant":false,"id":1206,"mutability":"mutable","name":"dao_wallet","nameLocation":"274:10:3","nodeType":"VariableDeclaration","scope":1211,"src":"267:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1205,"name":"string","nodeType":"ElementaryTypeName","src":"267:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"dao_uri","nameLocation":"302:7:3","nodeType":"VariableDeclaration","scope":1211,"src":"295:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1207,"name":"string","nodeType":"ElementaryTypeName","src":"295:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"finished","nameLocation":"327:8:3","nodeType":"VariableDeclaration","scope":1211,"src":"320:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1209,"name":"string","nodeType":"ElementaryTypeName","src":"320:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"dao_uri_struct","nameLocation":"241:14:3","nodeType":"StructDefinition","scope":2627,"src":"234:109:3","visibility":"public"},{"canonicalName":"GreenDAO.goal_uri_struct","id":1216,"members":[{"constant":false,"id":1213,"mutability":"mutable","name":"dao_id","nameLocation":"391:6:3","nodeType":"VariableDeclaration","scope":1216,"src":"383:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"383:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"goal_uri","nameLocation":"415:8:3","nodeType":"VariableDeclaration","scope":1216,"src":"408:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1214,"name":"string","nodeType":"ElementaryTypeName","src":"408:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_uri_struct","nameLocation":"356:15:3","nodeType":"StructDefinition","scope":2627,"src":"349:82:3","visibility":"public"},{"canonicalName":"GreenDAO.ideas_uri_struct","id":1223,"members":[{"constant":false,"id":1218,"mutability":"mutable","name":"goal_id","nameLocation":"482:7:3","nodeType":"VariableDeclaration","scope":1223,"src":"474:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"ideas_uri","nameLocation":"507:9:3","nodeType":"VariableDeclaration","scope":1223,"src":"500:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1219,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"donation","nameLocation":"535:8:3","nodeType":"VariableDeclaration","scope":1223,"src":"527:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ideas_uri_struct","nameLocation":"446:16:3","nodeType":"StructDefinition","scope":2627,"src":"439:112:3","visibility":"public"},{"canonicalName":"GreenDAO.smart_contract_uri_struct","id":1230,"members":[{"constant":false,"id":1225,"mutability":"mutable","name":"smart_contract_id","nameLocation":"609:17:3","nodeType":"VariableDeclaration","scope":1230,"src":"601:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"ideas_id","nameLocation":"645:8:3","nodeType":"VariableDeclaration","scope":1230,"src":"637:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"637:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"smart_contract_uri","nameLocation":"671:18:3","nodeType":"VariableDeclaration","scope":1230,"src":"664:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1228,"name":"string","nodeType":"ElementaryTypeName","src":"664:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"smart_contract_uri_struct","nameLocation":"564:25:3","nodeType":"StructDefinition","scope":2627,"src":"557:140:3","visibility":"public"},{"canonicalName":"GreenDAO.goal_ideas_votes_struct","id":1237,"members":[{"constant":false,"id":1232,"mutability":"mutable","name":"goal_id","nameLocation":"753:7:3","nodeType":"VariableDeclaration","scope":1237,"src":"745:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"ideas_id","nameLocation":"779:8:3","nodeType":"VariableDeclaration","scope":1237,"src":"771:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"771:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"wallet","nameLocation":"805:6:3","nodeType":"VariableDeclaration","scope":1237,"src":"798:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1235,"name":"string","nodeType":"ElementaryTypeName","src":"798:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_ideas_votes_struct","nameLocation":"710:23:3","nodeType":"StructDefinition","scope":2627,"src":"703:116:3","visibility":"public"},{"canonicalName":"GreenDAO.message_struct","id":1244,"members":[{"constant":false,"id":1239,"mutability":"mutable","name":"message_id","nameLocation":"866:10:3","nodeType":"VariableDeclaration","scope":1244,"src":"858:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"ideas_id","nameLocation":"895:8:3","nodeType":"VariableDeclaration","scope":1244,"src":"887:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"message","nameLocation":"921:7:3","nodeType":"VariableDeclaration","scope":1244,"src":"914:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1242,"name":"string","nodeType":"ElementaryTypeName","src":"914:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_struct","nameLocation":"832:14:3","nodeType":"StructDefinition","scope":2627,"src":"825:111:3","visibility":"public"},{"canonicalName":"GreenDAO.reply_struct","id":1251,"members":[{"constant":false,"id":1246,"mutability":"mutable","name":"reply_id","nameLocation":"981:8:3","nodeType":"VariableDeclaration","scope":1251,"src":"973:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"973:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"message_id","nameLocation":"1008:10:3","nodeType":"VariableDeclaration","scope":1251,"src":"1000:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"message","nameLocation":"1036:7:3","nodeType":"VariableDeclaration","scope":1251,"src":"1029:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1249,"name":"string","nodeType":"ElementaryTypeName","src":"1029:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"reply_struct","nameLocation":"949:12:3","nodeType":"StructDefinition","scope":2627,"src":"942:109:3","visibility":"public"},{"canonicalName":"GreenDAO.UnbondingRequest","id":1256,"members":[{"constant":false,"id":1253,"mutability":"mutable","name":"completionTime","nameLocation":"1100:14:3","nodeType":"VariableDeclaration","scope":1256,"src":"1094:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1252,"name":"int64","nodeType":"ElementaryTypeName","src":"1094:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"amount","nameLocation":"1133:6:3","nodeType":"VariableDeclaration","scope":1256,"src":"1125:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UnbondingRequest","nameLocation":"1066:16:3","nodeType":"StructDefinition","scope":2627,"src":"1059:88:3","visibility":"public"},{"constant":false,"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"1153:65:3","text":"@dev the required authorizations for Staking and Distribution"},"id":1264,"mutability":"mutable","name":"stakingMethods","nameLocation":"1241:14:3","nodeType":"VariableDeclaration","scope":2627,"src":"1224:80:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":1258,"name":"string","nodeType":"ElementaryTypeName","src":"1224:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1259,"nodeType":"ArrayTypeName","src":"1224:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":{"components":[{"id":1260,"name":"MSG_DELEGATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"1259:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1261,"name":"MSG_UNDELEGATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"1273:14:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1262,"name":"MSG_REDELEGATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"1289:14:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1263,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1258:46:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string memory[3] memory"}},"visibility":"private"},{"constant":false,"id":1269,"mutability":"mutable","name":"distributionMethods","nameLocation":"1328:19:3","nodeType":"VariableDeclaration","scope":2627,"src":"1311:70:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":1265,"name":"string","nodeType":"ElementaryTypeName","src":"1311:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1266,"nodeType":"ArrayTypeName","src":"1311:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":{"components":[{"id":1267,"name":"MSG_WITHDRAW_DELEGATOR_REWARD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"1351:29:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1268,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1350:31:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$1_memory_ptr","typeString":"string memory[1] memory"}},"visibility":"private"},{"constant":false,"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"1388:60:3","text":"@dev map to keep track of user deposits to the contract."},"functionSelector":"414d9a2b","id":1274,"mutability":"mutable","name":"donated","nameLocation":"1489:7:3","nodeType":"VariableDeclaration","scope":2627,"src":"1454:42:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1273,"keyType":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1454:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1473:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":1276,"mutability":"mutable","name":"_total_delegations","nameLocation":"1596:18:3","nodeType":"VariableDeclaration","scope":2627,"src":"1580:34:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1279,"mutability":"mutable","name":"_validatorAddr","nameLocation":"1636:14:3","nodeType":"VariableDeclaration","scope":2627,"src":"1621:86:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1277,"name":"string","nodeType":"ElementaryTypeName","src":"1621:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"65766d6f7376616c6f7065723135387777617334763666676375327833706c67373073367530666d306c6c653233376b6c7472","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1654:53:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_54e976b69801170b6287142772613669e64b6e19b5654f391949127efe396998","typeString":"literal_string \"evmosvaloper158wwas4v6fgcu2x3plg70s6u0fm0lle237kltr\""},"value":"evmosvaloper158wwas4v6fgcu2x3plg70s6u0fm0lle237kltr"},"visibility":"private"},{"constant":false,"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"1714:68:3","text":"@dev map that keeps track of all currently unbonding delegations"},"functionSelector":"7495f854","id":1285,"mutability":"mutable","name":"unbondingDelegations","nameLocation":"1832:20:3","nodeType":"VariableDeclaration","scope":2627,"src":"1788:64:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UnbondingRequest_$1256_storage_$","typeString":"mapping(uint256 => struct GreenDAO.UnbondingRequest)"},"typeName":{"id":1284,"keyType":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1796:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1788:36:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UnbondingRequest_$1256_storage_$","typeString":"mapping(uint256 => struct GreenDAO.UnbondingRequest)"},"valueType":{"id":1283,"nodeType":"UserDefinedTypeName","pathNode":{"id":1282,"name":"UnbondingRequest","nameLocations":["1807:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":1256,"src":"1807:16:3"},"referencedDeclaration":1256,"src":"1807:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_UnbondingRequest_$1256_storage_ptr","typeString":"struct GreenDAO.UnbondingRequest"}}},"visibility":"public"},{"constant":false,"functionSelector":"7bbd582d","id":1287,"mutability":"mutable","name":"_dao_ids","nameLocation":"1938:8:3","nodeType":"VariableDeclaration","scope":2627,"src":"1923:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"13bf4cea","id":1289,"mutability":"mutable","name":"_goal_ids","nameLocation":"1968:9:3","nodeType":"VariableDeclaration","scope":2627,"src":"1953:24:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d3791b20","id":1291,"mutability":"mutable","name":"_ideas_ids","nameLocation":"1999:10:3","nodeType":"VariableDeclaration","scope":2627,"src":"1984:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1984:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1b592aeb","id":1293,"mutability":"mutable","name":"_smart_contract_ids","nameLocation":"2031:19:3","nodeType":"VariableDeclaration","scope":2627,"src":"2016:34:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4a797bd7","id":1295,"mutability":"mutable","name":"_ideas_vote_ids","nameLocation":"2072:15:3","nodeType":"VariableDeclaration","scope":2627,"src":"2057:30:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2057:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9077007d","id":1297,"mutability":"mutable","name":"_message_ids","nameLocation":"2109:12:3","nodeType":"VariableDeclaration","scope":2627,"src":"2094:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"aa2bf5d3","id":1299,"mutability":"mutable","name":"_reply_ids","nameLocation":"2143:10:3","nodeType":"VariableDeclaration","scope":2627,"src":"2128:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"2128:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"27a568b9","id":1304,"mutability":"mutable","name":"_dao_uris","nameLocation":"2202:9:3","nodeType":"VariableDeclaration","scope":2627,"src":"2160:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct)"},"typeName":{"id":1303,"keyType":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2160:34:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct)"},"valueType":{"id":1302,"nodeType":"UserDefinedTypeName","pathNode":{"id":1301,"name":"dao_uri_struct","nameLocations":["2179:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1211,"src":"2179:14:3"},"referencedDeclaration":1211,"src":"2179:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage_ptr","typeString":"struct GreenDAO.dao_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7f2035d4","id":1309,"mutability":"mutable","name":"_goal_uris","nameLocation":"2347:10:3","nodeType":"VariableDeclaration","scope":2627,"src":"2304:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct)"},"typeName":{"id":1308,"keyType":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"2312:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2304:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct)"},"valueType":{"id":1307,"nodeType":"UserDefinedTypeName","pathNode":{"id":1306,"name":"goal_uri_struct","nameLocations":["2323:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"2323:15:3"},"referencedDeclaration":1216,"src":"2323:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage_ptr","typeString":"struct GreenDAO.goal_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"468d0c80","id":1314,"mutability":"mutable","name":"_ideas_uris","nameLocation":"2478:11:3","nodeType":"VariableDeclaration","scope":2627,"src":"2434:55:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct)"},"typeName":{"id":1313,"keyType":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"2442:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2434:36:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct)"},"valueType":{"id":1312,"nodeType":"UserDefinedTypeName","pathNode":{"id":1311,"name":"ideas_uri_struct","nameLocations":["2453:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"2453:16:3"},"referencedDeclaration":1223,"src":"2453:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage_ptr","typeString":"struct GreenDAO.ideas_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"ff4a37ef","id":1319,"mutability":"mutable","name":"_smart_contracts_uris","nameLocation":"2621:21:3","nodeType":"VariableDeclaration","scope":2627,"src":"2568:74:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1230_storage_$","typeString":"mapping(uint256 => struct GreenDAO.smart_contract_uri_struct)"},"typeName":{"id":1318,"keyType":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2568:45:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1230_storage_$","typeString":"mapping(uint256 => struct GreenDAO.smart_contract_uri_struct)"},"valueType":{"id":1317,"nodeType":"UserDefinedTypeName","pathNode":{"id":1316,"name":"smart_contract_uri_struct","nameLocations":["2587:25:3"],"nodeType":"IdentifierPath","referencedDeclaration":1230,"src":"2587:25:3"},"referencedDeclaration":1230,"src":"2587:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1230_storage_ptr","typeString":"struct GreenDAO.smart_contract_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"1ba44c4c","id":1324,"mutability":"mutable","name":"all_goal_ideas_votes","nameLocation":"2772:20:3","nodeType":"VariableDeclaration","scope":2627,"src":"2721:71:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct)"},"typeName":{"id":1323,"keyType":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2729:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2721:43:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct)"},"valueType":{"id":1322,"nodeType":"UserDefinedTypeName","pathNode":{"id":1321,"name":"goal_ideas_votes_struct","nameLocations":["2740:23:3"],"nodeType":"IdentifierPath","referencedDeclaration":1237,"src":"2740:23:3"},"referencedDeclaration":1237,"src":"2740:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage_ptr","typeString":"struct GreenDAO.goal_ideas_votes_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"b527d45e","id":1329,"mutability":"mutable","name":"all_messages","nameLocation":"2923:12:3","nodeType":"VariableDeclaration","scope":2627,"src":"2881:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct)"},"typeName":{"id":1328,"keyType":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"2889:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2881:34:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct)"},"valueType":{"id":1327,"nodeType":"UserDefinedTypeName","pathNode":{"id":1326,"name":"message_struct","nameLocations":["2900:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1244,"src":"2900:14:3"},"referencedDeclaration":1244,"src":"2900:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage_ptr","typeString":"struct GreenDAO.message_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"3f87a2f4","id":1334,"mutability":"mutable","name":"all_replies","nameLocation":"3040:11:3","nodeType":"VariableDeclaration","scope":2627,"src":"3000:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct)"},"typeName":{"id":1333,"keyType":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3008:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3000:32:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct)"},"valueType":{"id":1332,"nodeType":"UserDefinedTypeName","pathNode":{"id":1331,"name":"reply_struct","nameLocations":["3019:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1251,"src":"3019:12:3"},"referencedDeclaration":1251,"src":"3019:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage_ptr","typeString":"struct GreenDAO.reply_struct"}}},"visibility":"public"},{"body":{"id":1358,"nodeType":"Block","src":"3245:173:3","statements":[{"expression":{"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1343,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"3293:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1345,"indexExpression":{"id":1344,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3303:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3293:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1347,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"3330:11:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1348,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3343:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"46616c7365","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3353:7:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""},"value":"False"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""}],"id":1346,"name":"dao_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3315:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_dao_uri_struct_$1211_storage_ptr_$","typeString":"type(struct GreenDAO.dao_uri_struct storage pointer)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3315:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_memory_ptr","typeString":"struct GreenDAO.dao_uri_struct memory"}},"src":"3293:68:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1352,"nodeType":"ExpressionStatement","src":"3293:68:3"},{"expression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3372:10:3","subExpression":{"id":1353,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3372:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1355,"nodeType":"ExpressionStatement","src":"3372:10:3"},{"expression":{"id":1356,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3402:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1342,"id":1357,"nodeType":"Return","src":"3395:15:3"}]},"functionSelector":"c4c2e364","id":1359,"implemented":true,"kind":"function","modifiers":[],"name":"create_dao","nameLocation":"3133:10:3","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"_dao_wallet","nameLocation":"3168:11:3","nodeType":"VariableDeclaration","scope":1359,"src":"3154:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1335,"name":"string","nodeType":"ElementaryTypeName","src":"3154:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"_dao_uri","nameLocation":"3204:8:3","nodeType":"VariableDeclaration","scope":1359,"src":"3190:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1337,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3143:76:3"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1359,"src":"3236:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"3236:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3235:9:3"},"scope":2627,"src":"3124:294:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1382,"nodeType":"Block","src":"3552:147:3","statements":[{"expression":{"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1368,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"3600:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1370,"indexExpression":{"id":1369,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"3610:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3600:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3619:10:3","memberName":"dao_wallet","nodeType":"MemberAccess","referencedDeclaration":1206,"src":"3600:29:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1372,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"3632:11:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3600:43:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1374,"nodeType":"ExpressionStatement","src":"3600:43:3"},{"expression":{"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1375,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"3654:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1377,"indexExpression":{"id":1376,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"3664:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3654:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3673:7:3","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"3654:26:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1379,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"3683:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3654:37:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1381,"nodeType":"ExpressionStatement","src":"3654:37:3"}]},"functionSelector":"881de858","id":1383,"implemented":true,"kind":"function","modifiers":[],"name":"set_dao","nameLocation":"3435:7:3","nodeType":"FunctionDefinition","parameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"_dao_id","nameLocation":"3461:7:3","nodeType":"VariableDeclaration","scope":1383,"src":"3453:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"3453:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"_dao_wallet","nameLocation":"3493:11:3","nodeType":"VariableDeclaration","scope":1383,"src":"3479:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1362,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"_dao_uri","nameLocation":"3529:8:3","nodeType":"VariableDeclaration","scope":1383,"src":"3515:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1364,"name":"string","nodeType":"ElementaryTypeName","src":"3515:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3442:102:3"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[],"src":"3552:0:3"},"scope":2627,"src":"3426:273:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1423,"nodeType":"Block","src":"3769:240:3","statements":[{"assignments":[1393],"declarations":[{"constant":false,"id":1393,"mutability":"mutable","name":"_StoreInfo","nameLocation":"3824:10:3","nodeType":"VariableDeclaration","scope":1423,"src":"3808:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1391,"name":"string","nodeType":"ElementaryTypeName","src":"3808:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1392,"nodeType":"ArrayTypeName","src":"3808:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1399,"initialValue":{"arguments":[{"id":1397,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3850:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3837:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1394,"name":"string","nodeType":"ElementaryTypeName","src":"3841:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1395,"nodeType":"ArrayTypeName","src":"3841:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3808:51:3"},{"body":{"id":1419,"nodeType":"Block","src":"3909:63:3","statements":[{"expression":{"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1410,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"3924:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1412,"indexExpression":{"id":1411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"3935:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3924:13:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1413,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"3940:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1415,"indexExpression":{"id":1414,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"3950:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3940:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3953:7:3","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"3940:20:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"3924:36:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1418,"nodeType":"ExpressionStatement","src":"3924:36:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"3890:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1405,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3894:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3890:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"initializationExpression":{"assignments":[1401],"declarations":[{"constant":false,"id":1401,"mutability":"mutable","name":"i","nameLocation":"3883:1:3","nodeType":"VariableDeclaration","scope":1420,"src":"3875:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3875:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1403,"initialValue":{"hexValue":"30","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3887:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3875:13:3"},"loopExpression":{"expression":{"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3904:3:3","subExpression":{"id":1407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"3904:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1409,"nodeType":"ExpressionStatement","src":"3904:3:3"},"nodeType":"ForStatement","src":"3870:102:3"},{"expression":{"id":1421,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"3991:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1388,"id":1422,"nodeType":"Return","src":"3984:17:3"}]},"functionSelector":"c04fe978","id":1424,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_daos","nameLocation":"3716:12:3","nodeType":"FunctionDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[],"src":"3728:2:3"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1424,"src":"3752:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1385,"name":"string","nodeType":"ElementaryTypeName","src":"3752:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1386,"nodeType":"ArrayTypeName","src":"3752:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3751:17:3"},"scope":2627,"src":"3707:302:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1436,"nodeType":"Block","src":"4087:83:3","statements":[{"expression":{"expression":{"baseExpression":{"id":1431,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4136:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1433,"indexExpression":{"id":1432,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"4146:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4136:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4155:7:3","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"4136:26:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1430,"id":1435,"nodeType":"Return","src":"4129:33:3"}]},"functionSelector":"5d907da1","id":1437,"implemented":true,"kind":"function","modifiers":[],"name":"dao_uri","nameLocation":"4026:7:3","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"_dao_id","nameLocation":"4042:7:3","nodeType":"VariableDeclaration","scope":1437,"src":"4034:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"4034:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4033:17:3"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1437,"src":"4072:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1428,"name":"string","nodeType":"ElementaryTypeName","src":"4072:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4071:15:3"},"scope":2627,"src":"4017:153:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1460,"nodeType":"Block","src":"4304:168:3","statements":[{"expression":{"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1446,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"4354:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1448,"indexExpression":{"id":1447,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4365:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4354:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1450,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4394:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1451,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"4403:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1449,"name":"goal_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"4378:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_uri_struct_$1216_storage_ptr_$","typeString":"type(struct GreenDAO.goal_uri_struct storage pointer)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4378:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_memory_ptr","typeString":"struct GreenDAO.goal_uri_struct memory"}},"src":"4354:59:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1454,"nodeType":"ExpressionStatement","src":"4354:59:3"},{"expression":{"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4424:11:3","subExpression":{"id":1455,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4424:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1457,"nodeType":"ExpressionStatement","src":"4424:11:3"},{"expression":{"id":1458,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4455:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1445,"id":1459,"nodeType":"Return","src":"4448:16:3"}]},"functionSelector":"71085cab","id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal","nameLocation":"4200:11:3","nodeType":"FunctionDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"_goal_uri","nameLocation":"4236:9:3","nodeType":"VariableDeclaration","scope":1461,"src":"4222:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1438,"name":"string","nodeType":"ElementaryTypeName","src":"4222:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"_dao_id","nameLocation":"4264:7:3","nodeType":"VariableDeclaration","scope":1461,"src":"4256:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"4256:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4211:67:3"},"returnParameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1461,"src":"4295:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"4295:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4294:9:3"},"scope":2627,"src":"4191:281:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1475,"nodeType":"Block","src":"4548:84:3","statements":[{"expression":{"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1468,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"4583:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1470,"indexExpression":{"id":1469,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"4594:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4583:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4604:8:3","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"4583:29:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1472,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"4615:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4583:41:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1474,"nodeType":"ExpressionStatement","src":"4583:41:3"}]},"functionSelector":"c29595c5","id":1476,"implemented":true,"kind":"function","modifiers":[],"name":"set_goal","nameLocation":"4489:8:3","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"_goal_id","nameLocation":"4506:8:3","nodeType":"VariableDeclaration","scope":1476,"src":"4498:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"4498:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"_goal_uri","nameLocation":"4530:9:3","nodeType":"VariableDeclaration","scope":1476,"src":"4516:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1464,"name":"string","nodeType":"ElementaryTypeName","src":"4516:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4497:43:3"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"4548:0:3"},"scope":2627,"src":"4480:152:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1516,"nodeType":"Block","src":"4703:245:3","statements":[{"assignments":[1486],"declarations":[{"constant":false,"id":1486,"mutability":"mutable","name":"_StoreInfo","nameLocation":"4759:10:3","nodeType":"VariableDeclaration","scope":1516,"src":"4743:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1484,"name":"string","nodeType":"ElementaryTypeName","src":"4743:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1485,"nodeType":"ArrayTypeName","src":"4743:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1492,"initialValue":{"arguments":[{"id":1490,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4785:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4772:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1487,"name":"string","nodeType":"ElementaryTypeName","src":"4776:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1488,"nodeType":"ArrayTypeName","src":"4776:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4772:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4743:52:3"},{"body":{"id":1512,"nodeType":"Block","src":"4846:65:3","statements":[{"expression":{"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1503,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"4861:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1505,"indexExpression":{"id":1504,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4872:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4861:13:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1506,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"4877:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1508,"indexExpression":{"id":1507,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4888:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4877:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4891:8:3","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"4877:22:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"4861:38:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1511,"nodeType":"ExpressionStatement","src":"4861:38:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4826:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1498,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4830:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4826:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"initializationExpression":{"assignments":[1494],"declarations":[{"constant":false,"id":1494,"mutability":"mutable","name":"i","nameLocation":"4819:1:3","nodeType":"VariableDeclaration","scope":1513,"src":"4811:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4811:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1496,"initialValue":{"hexValue":"30","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4823:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4811:13:3"},"loopExpression":{"expression":{"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4841:3:3","subExpression":{"id":1500,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4841:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1502,"nodeType":"ExpressionStatement","src":"4841:3:3"},"nodeType":"ForStatement","src":"4806:105:3"},{"expression":{"id":1514,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"4930:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1481,"id":1515,"nodeType":"Return","src":"4923:17:3"}]},"functionSelector":"29b56f60","id":1517,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals","nameLocation":"4649:13:3","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[],"src":"4662:2:3"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1517,"src":"4686:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1478,"name":"string","nodeType":"ElementaryTypeName","src":"4686:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1479,"nodeType":"ArrayTypeName","src":"4686:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4685:17:3"},"scope":2627,"src":"4640:308:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1573,"nodeType":"Block","src":"5060:392:3","statements":[{"assignments":[1529],"declarations":[{"constant":false,"id":1529,"mutability":"mutable","name":"_StoreInfo","nameLocation":"5126:10:3","nodeType":"VariableDeclaration","scope":1573,"src":"5110:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1527,"name":"string","nodeType":"ElementaryTypeName","src":"5110:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1528,"nodeType":"ArrayTypeName","src":"5110:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1535,"initialValue":{"arguments":[{"id":1533,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"5152:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5139:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1530,"name":"string","nodeType":"ElementaryTypeName","src":"5143:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1531,"nodeType":"ArrayTypeName","src":"5143:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5139:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5110:52:3"},{"assignments":[1537],"declarations":[{"constant":false,"id":1537,"mutability":"mutable","name":"_store_id","nameLocation":"5181:9:3","nodeType":"VariableDeclaration","scope":1573,"src":"5173:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"5173:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1538,"nodeType":"VariableDeclarationStatement","src":"5173:17:3"},{"body":{"id":1569,"nodeType":"Block","src":"5241:174:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1549,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5260:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1551,"indexExpression":{"id":1550,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5271:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5260:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5274:6:3","memberName":"dao_id","nodeType":"MemberAccess","referencedDeclaration":1213,"src":"5260:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1553,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"5284:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5260:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"5256:148:3","trueBody":{"id":1567,"nodeType":"Block","src":"5293:111:3","statements":[{"expression":{"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1555,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"5312:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1557,"indexExpression":{"id":1556,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"5323:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5312:21:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1558,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5336:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1560,"indexExpression":{"id":1559,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5347:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5336:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5350:8:3","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"5336:22:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"5312:46:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1563,"nodeType":"ExpressionStatement","src":"5312:46:3"},{"expression":{"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5377:11:3","subExpression":{"id":1564,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"5377:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1566,"nodeType":"ExpressionStatement","src":"5377:11:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1543,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5221:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1544,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"5225:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5221:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1570,"initializationExpression":{"assignments":[1540],"declarations":[{"constant":false,"id":1540,"mutability":"mutable","name":"i","nameLocation":"5214:1:3","nodeType":"VariableDeclaration","scope":1570,"src":"5206:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1542,"initialValue":{"hexValue":"30","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5218:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5206:13:3"},"loopExpression":{"expression":{"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5236:3:3","subExpression":{"id":1546,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5236:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1548,"nodeType":"ExpressionStatement","src":"5236:3:3"},"nodeType":"ForStatement","src":"5201:214:3"},{"expression":{"id":1571,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"5434:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1524,"id":1572,"nodeType":"Return","src":"5427:17:3"}]},"functionSelector":"109ac970","id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals_by_dao_id","nameLocation":"4965:23:3","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"_dao_id","nameLocation":"5007:7:3","nodeType":"VariableDeclaration","scope":1574,"src":"4999:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4999:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4988:33:3"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"5043:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1521,"name":"string","nodeType":"ElementaryTypeName","src":"5043:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1522,"nodeType":"ArrayTypeName","src":"5043:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5042:17:3"},"scope":2627,"src":"4956:496:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1614,"nodeType":"Block","src":"5564:274:3","statements":[{"body":{"id":1610,"nodeType":"Block","src":"5649:161:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1594,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5702:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1596,"indexExpression":{"id":1595,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5713:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5702:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5716:8:3","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"5702:22:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5696:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1592,"name":"bytes","nodeType":"ElementaryTypeName","src":"5696:5:3","typeDescriptions":{}}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5696:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1591,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5686:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5686:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1603,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"5763:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5757:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1601,"name":"bytes","nodeType":"ElementaryTypeName","src":"5757:5:3","typeDescriptions":{}}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5757:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1600,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5747:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5686:88:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1609,"nodeType":"IfStatement","src":"5664:134:3","trueBody":{"expression":{"id":1607,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5797:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1580,"id":1608,"nodeType":"Return","src":"5790:8:3"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5629:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1586,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"5633:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5629:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1611,"initializationExpression":{"assignments":[1582],"declarations":[{"constant":false,"id":1582,"mutability":"mutable","name":"i","nameLocation":"5622:1:3","nodeType":"VariableDeclaration","scope":1611,"src":"5614:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"5614:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1584,"initialValue":{"hexValue":"30","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5626:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5614:13:3"},"loopExpression":{"expression":{"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5644:3:3","subExpression":{"id":1588,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5644:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1590,"nodeType":"ExpressionStatement","src":"5644:3:3"},"nodeType":"ForStatement","src":"5609:201:3"},{"expression":{"hexValue":"30","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5829:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1580,"id":1613,"nodeType":"Return","src":"5822:8:3"}]},"functionSelector":"1e9ac9f5","id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_by_goal_uri","nameLocation":"5469:23:3","nodeType":"FunctionDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"_goal_uri","nameLocation":"5517:9:3","nodeType":"VariableDeclaration","scope":1615,"src":"5503:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1575,"name":"string","nodeType":"ElementaryTypeName","src":"5503:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5492:41:3"},"returnParameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"5555:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5555:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5554:9:3"},"scope":2627,"src":"5460:378:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1627,"nodeType":"Block","src":"5918:87:3","statements":[{"expression":{"expression":{"baseExpression":{"id":1622,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5968:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1624,"indexExpression":{"id":1623,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"5979:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5968:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5989:8:3","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"5968:29:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1621,"id":1626,"nodeType":"Return","src":"5961:36:3"}]},"functionSelector":"e32acc1a","id":1628,"implemented":true,"kind":"function","modifiers":[],"name":"goal_uri","nameLocation":"5855:8:3","nodeType":"FunctionDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"_goal_id","nameLocation":"5872:8:3","nodeType":"VariableDeclaration","scope":1628,"src":"5864:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"5864:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5863:18:3"},"returnParameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1628,"src":"5903:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1619,"name":"string","nodeType":"ElementaryTypeName","src":"5903:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5902:15:3"},"scope":2627,"src":"5846:159:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1679,"nodeType":"Block","src":"6185:456:3","statements":[{"expression":{"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1640,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"6237:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1642,"indexExpression":{"id":1641,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6249:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6237:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1644,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"6280:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1645,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"6290:10:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6302:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1643,"name":"ideas_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"6263:16:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ideas_uri_struct_$1223_storage_ptr_$","typeString":"type(struct GreenDAO.ideas_uri_struct storage pointer)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6263:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_memory_ptr","typeString":"struct GreenDAO.ideas_uri_struct memory"}},"src":"6237:67:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1649,"nodeType":"ExpressionStatement","src":"6237:67:3"},{"expression":{"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6315:12:3","subExpression":{"id":1650,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6315:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1652,"nodeType":"ExpressionStatement","src":"6315:12:3"},{"body":{"id":1675,"nodeType":"Block","src":"6394:210:3","statements":[{"expression":{"arguments":[{"id":1665,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6455:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1666,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"6484:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1667,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"6522:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1669,"indexExpression":{"id":1668,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"6539:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6522:19:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1664,"name":"create_ideas_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"6409:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6409:147:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1671,"nodeType":"ExpressionStatement","src":"6409:147:3"},{"expression":{"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6571:21:3","subExpression":{"id":1672,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"6571:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1674,"nodeType":"ExpressionStatement","src":"6571:21:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1657,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"6360:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1658,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"6364:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6381:6:3","memberName":"length","nodeType":"MemberAccess","src":"6364:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6360:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1676,"initializationExpression":{"assignments":[1654],"declarations":[{"constant":false,"id":1654,"mutability":"mutable","name":"i","nameLocation":"6353:1:3","nodeType":"VariableDeclaration","scope":1676,"src":"6345:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"6345:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1656,"initialValue":{"hexValue":"30","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6357:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6345:13:3"},"loopExpression":{"expression":{"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6389:3:3","subExpression":{"id":1661,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"6389:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1663,"nodeType":"ExpressionStatement","src":"6389:3:3"},"nodeType":"ForStatement","src":"6340:264:3"},{"expression":{"id":1677,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6623:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1639,"id":1678,"nodeType":"Return","src":"6616:17:3"}]},"functionSelector":"e3280c96","id":1680,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas","nameLocation":"6035:12:3","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"_ideas_uri","nameLocation":"6072:10:3","nodeType":"VariableDeclaration","scope":1680,"src":"6058:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1629,"name":"string","nodeType":"ElementaryTypeName","src":"6058:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"_goal_id","nameLocation":"6101:8:3","nodeType":"VariableDeclaration","scope":1680,"src":"6093:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"6093:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"_smart_contracts","nameLocation":"6136:16:3","nodeType":"VariableDeclaration","scope":1680,"src":"6120:32:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1633,"name":"string","nodeType":"ElementaryTypeName","src":"6120:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1634,"nodeType":"ArrayTypeName","src":"6120:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"6047:112:3"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1680,"src":"6176:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"6176:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6175:9:3"},"scope":2627,"src":"6026:615:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1699,"nodeType":"Block","src":"6806:196:3","statements":[{"expression":{"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1689,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"6817:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1230_storage_$","typeString":"mapping(uint256 => struct GreenDAO.smart_contract_uri_struct storage ref)"}},"id":1691,"indexExpression":{"id":1690,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"6839:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6817:41:3","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1230_storage","typeString":"struct GreenDAO.smart_contract_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1693,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"6901:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1694,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"6925:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1695,"name":"_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"6958:15:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1692,"name":"smart_contract_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"6861:25:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_smart_contract_uri_struct_$1230_storage_ptr_$","typeString":"type(struct GreenDAO.smart_contract_uri_struct storage pointer)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6861:123:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1230_memory_ptr","typeString":"struct GreenDAO.smart_contract_uri_struct memory"}},"src":"6817:167:3","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1230_storage","typeString":"struct GreenDAO.smart_contract_uri_struct storage ref"}},"id":1698,"nodeType":"ExpressionStatement","src":"6817:167:3"}]},"id":1700,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas_smart_contract","nameLocation":"6658:27:3","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"_ideas_id","nameLocation":"6704:9:3","nodeType":"VariableDeclaration","scope":1700,"src":"6696:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6696:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"_smart_contract_id","nameLocation":"6732:18:3","nodeType":"VariableDeclaration","scope":1700,"src":"6724:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"6724:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"_smart_contract","nameLocation":"6775:15:3","nodeType":"VariableDeclaration","scope":1700,"src":"6761:29:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1685,"name":"string","nodeType":"ElementaryTypeName","src":"6761:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6685:112:3"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[],"src":"6806:0:3"},"scope":2627,"src":"6649:353:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1714,"nodeType":"Block","src":"7081:89:3","statements":[{"expression":{"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1707,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"7117:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1709,"indexExpression":{"id":1708,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"7129:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7117:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7140:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"7117:32:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1711,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"7152:10:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7117:45:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1713,"nodeType":"ExpressionStatement","src":"7117:45:3"}]},"functionSelector":"c04e7430","id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"set_ideas","nameLocation":"7019:9:3","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"_ideas_id","nameLocation":"7037:9:3","nodeType":"VariableDeclaration","scope":1715,"src":"7029:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"7029:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"_ideas_uri","nameLocation":"7062:10:3","nodeType":"VariableDeclaration","scope":1715,"src":"7048:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1703,"name":"string","nodeType":"ElementaryTypeName","src":"7048:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7028:45:3"},"returnParameters":{"id":1706,"nodeType":"ParameterList","parameters":[],"src":"7081:0:3"},"scope":2627,"src":"7010:160:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1729,"nodeType":"Block","src":"7245:88:3","statements":[{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1722,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"7281:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1724,"indexExpression":{"id":1723,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"7293:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7281:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7304:8:3","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":1222,"src":"7281:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1726,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"7316:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7281:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1728,"nodeType":"ExpressionStatement","src":"7281:44:3"}]},"functionSelector":"a2cdb3a9","id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"add_donation","nameLocation":"7187:12:3","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"_ideas_id","nameLocation":"7208:9:3","nodeType":"VariableDeclaration","scope":1730,"src":"7200:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"7200:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"_doantion","nameLocation":"7227:9:3","nodeType":"VariableDeclaration","scope":1730,"src":"7219:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"7219:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7199:38:3"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[],"src":"7245:0:3"},"scope":2627,"src":"7178:155:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1770,"nodeType":"Block","src":"7404:249:3","statements":[{"assignments":[1740],"declarations":[{"constant":false,"id":1740,"mutability":"mutable","name":"_StoreInfo","nameLocation":"7460:10:3","nodeType":"VariableDeclaration","scope":1770,"src":"7444:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1738,"name":"string","nodeType":"ElementaryTypeName","src":"7444:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1739,"nodeType":"ArrayTypeName","src":"7444:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1746,"initialValue":{"arguments":[{"id":1744,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7486:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7473:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1741,"name":"string","nodeType":"ElementaryTypeName","src":"7477:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1742,"nodeType":"ArrayTypeName","src":"7477:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7473:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7444:53:3"},{"body":{"id":1766,"nodeType":"Block","src":"7549:67:3","statements":[{"expression":{"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1757,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"7564:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1759,"indexExpression":{"id":1758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"7575:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7564:13:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1760,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"7580:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1762,"indexExpression":{"id":1761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"7592:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7580:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7595:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"7580:24:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"7564:40:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1765,"nodeType":"ExpressionStatement","src":"7564:40:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1751,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"7528:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1752,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7532:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7528:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1767,"initializationExpression":{"assignments":[1748],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"i","nameLocation":"7521:1:3","nodeType":"VariableDeclaration","scope":1767,"src":"7513:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"7513:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1750,"initialValue":{"hexValue":"30","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7525:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7513:13:3"},"loopExpression":{"expression":{"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7544:3:3","subExpression":{"id":1754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"7544:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1756,"nodeType":"ExpressionStatement","src":"7544:3:3"},"nodeType":"ForStatement","src":"7508:108:3"},{"expression":{"id":1768,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"7635:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1735,"id":1769,"nodeType":"Return","src":"7628:17:3"}]},"functionSelector":"97ee7606","id":1771,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas","nameLocation":"7350:13:3","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[],"src":"7363:2:3"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1771,"src":"7387:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1732,"name":"string","nodeType":"ElementaryTypeName","src":"7387:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1733,"nodeType":"ArrayTypeName","src":"7387:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"7386:17:3"},"scope":2627,"src":"7341:312:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1826,"nodeType":"Block","src":"7767:379:3","statements":[{"assignments":[1783],"declarations":[{"constant":false,"id":1783,"mutability":"mutable","name":"_StoreInfo","nameLocation":"7834:10:3","nodeType":"VariableDeclaration","scope":1826,"src":"7818:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1781,"name":"string","nodeType":"ElementaryTypeName","src":"7818:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1782,"nodeType":"ArrayTypeName","src":"7818:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1789,"initialValue":{"arguments":[{"id":1787,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7860:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7847:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1784,"name":"string","nodeType":"ElementaryTypeName","src":"7851:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1785,"nodeType":"ArrayTypeName","src":"7851:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7847:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7818:53:3"},{"assignments":[1791],"declarations":[{"constant":false,"id":1791,"mutability":"mutable","name":"_store_id","nameLocation":"7890:9:3","nodeType":"VariableDeclaration","scope":1826,"src":"7882:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"7882:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1792,"nodeType":"VariableDeclarationStatement","src":"7882:17:3"},{"body":{"id":1822,"nodeType":"Block","src":"7951:158:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1803,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"7970:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1805,"indexExpression":{"id":1804,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"7982:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7970:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:7:3","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"7970:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1807,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"7996:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7970:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1818,"nodeType":"IfStatement","src":"7966:105:3","trueBody":{"expression":{"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1809,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"8023:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1811,"indexExpression":{"id":1810,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"8034:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8023:21:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1812,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"8047:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1814,"indexExpression":{"id":1813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"8059:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8047:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8062:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"8047:24:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"8023:48:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1817,"nodeType":"ExpressionStatement","src":"8023:48:3"}},{"expression":{"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8086:11:3","subExpression":{"id":1819,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"8086:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1821,"nodeType":"ExpressionStatement","src":"8086:11:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"7930:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1798,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7934:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7930:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1823,"initializationExpression":{"assignments":[1794],"declarations":[{"constant":false,"id":1794,"mutability":"mutable","name":"i","nameLocation":"7923:1:3","nodeType":"VariableDeclaration","scope":1823,"src":"7915:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"7915:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1796,"initialValue":{"hexValue":"30","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7915:13:3"},"loopExpression":{"expression":{"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7946:3:3","subExpression":{"id":1800,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"7946:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1802,"nodeType":"ExpressionStatement","src":"7946:3:3"},"nodeType":"ForStatement","src":"7910:199:3"},{"expression":{"id":1824,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"8128:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1778,"id":1825,"nodeType":"Return","src":"8121:17:3"}]},"functionSelector":"131d44f2","id":1827,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas_by_goal_id","nameLocation":"7670:24:3","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"_goal_id","nameLocation":"7713:8:3","nodeType":"VariableDeclaration","scope":1827,"src":"7705:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"7705:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7694:34:3"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1827,"src":"7750:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1775,"name":"string","nodeType":"ElementaryTypeName","src":"7750:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1776,"nodeType":"ArrayTypeName","src":"7750:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"7749:17:3"},"scope":2627,"src":"7661:485:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1867,"nodeType":"Block","src":"8261:279:3","statements":[{"body":{"id":1863,"nodeType":"Block","src":"8348:164:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1847,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"8401:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1849,"indexExpression":{"id":1848,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"8413:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8401:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8416:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"8401:24:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8395:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1845,"name":"bytes","nodeType":"ElementaryTypeName","src":"8395:5:3","typeDescriptions":{}}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8395:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1844,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8385:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8385:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1856,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"8464:10:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8458:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1854,"name":"bytes","nodeType":"ElementaryTypeName","src":"8458:5:3","typeDescriptions":{}}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8458:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1853,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8448:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8448:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8385:91:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1862,"nodeType":"IfStatement","src":"8363:137:3","trueBody":{"expression":{"id":1860,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"8499:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1833,"id":1861,"nodeType":"Return","src":"8492:8:3"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"8327:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1839,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8331:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1864,"initializationExpression":{"assignments":[1835],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"i","nameLocation":"8320:1:3","nodeType":"VariableDeclaration","scope":1864,"src":"8312:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"8312:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1837,"initialValue":{"hexValue":"30","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8312:13:3"},"loopExpression":{"expression":{"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8343:3:3","subExpression":{"id":1841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"8343:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1843,"nodeType":"ExpressionStatement","src":"8343:3:3"},"nodeType":"ForStatement","src":"8307:205:3"},{"expression":{"hexValue":"30","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8531:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1833,"id":1866,"nodeType":"Return","src":"8524:8:3"}]},"functionSelector":"a1ca9178","id":1868,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_id_by_ideas_uri","nameLocation":"8163:25:3","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"_ideas_uri","nameLocation":"8213:10:3","nodeType":"VariableDeclaration","scope":1868,"src":"8199:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1828,"name":"string","nodeType":"ElementaryTypeName","src":"8199:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8188:42:3"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1868,"src":"8252:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"8252:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8251:9:3"},"scope":2627,"src":"8154:386:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1911,"nodeType":"Block","src":"8656:300:3","statements":[{"body":{"id":1907,"nodeType":"Block","src":"8743:185:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1888,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"8796:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1890,"indexExpression":{"id":1889,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"8808:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8796:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8811:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"8796:24:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8790:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1886,"name":"bytes","nodeType":"ElementaryTypeName","src":"8790:5:3","typeDescriptions":{}}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8790:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1885,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8780:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8780:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1897,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"8859:10:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8853:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1895,"name":"bytes","nodeType":"ElementaryTypeName","src":"8853:5:3","typeDescriptions":{}}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8853:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1894,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8843:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8780:91:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"IfStatement","src":"8758:158:3","trueBody":{"expression":{"expression":{"baseExpression":{"id":1901,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"8894:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1903,"indexExpression":{"id":1902,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"8906:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8894:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8909:7:3","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"8894:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1874,"id":1905,"nodeType":"Return","src":"8887:29:3"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1879,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"8722:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1880,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8726:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8722:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1908,"initializationExpression":{"assignments":[1876],"declarations":[{"constant":false,"id":1876,"mutability":"mutable","name":"i","nameLocation":"8715:1:3","nodeType":"VariableDeclaration","scope":1908,"src":"8707:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"8707:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1878,"initialValue":{"hexValue":"30","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8719:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8707:13:3"},"loopExpression":{"expression":{"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8738:3:3","subExpression":{"id":1882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"8738:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1884,"nodeType":"ExpressionStatement","src":"8738:3:3"},"nodeType":"ForStatement","src":"8702:226:3"},{"expression":{"hexValue":"30","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1874,"id":1910,"nodeType":"Return","src":"8940:8:3"}]},"functionSelector":"aa4cdf2a","id":1912,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_from_ideas_uri","nameLocation":"8557:26:3","nodeType":"FunctionDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"_ideas_uri","nameLocation":"8608:10:3","nodeType":"VariableDeclaration","scope":1912,"src":"8594:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1869,"name":"string","nodeType":"ElementaryTypeName","src":"8594:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8583:42:3"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"8647:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:9:3"},"scope":2627,"src":"8548:408:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1924,"nodeType":"Block","src":"9038:91:3","statements":[{"expression":{"expression":{"baseExpression":{"id":1919,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"9089:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1921,"indexExpression":{"id":1920,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"9101:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9089:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9112:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"9089:32:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1918,"id":1923,"nodeType":"Return","src":"9082:39:3"}]},"functionSelector":"8d3d2595","id":1925,"implemented":true,"kind":"function","modifiers":[],"name":"ideas_uri","nameLocation":"8973:9:3","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"_ideas_id","nameLocation":"8991:9:3","nodeType":"VariableDeclaration","scope":1925,"src":"8983:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"8983:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8982:19:3"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1925,"src":"9023:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1916,"name":"string","nodeType":"ElementaryTypeName","src":"9023:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9022:15:3"},"scope":2627,"src":"8964:165:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1951,"nodeType":"Block","src":"9301:275:3","statements":[{"expression":{"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1936,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9362:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1938,"indexExpression":{"id":1937,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"9383:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9362:37:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1940,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"9440:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1941,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"9463:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1942,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"9487:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1939,"name":"goal_ideas_votes_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"9402:23:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_ideas_votes_struct_$1237_storage_ptr_$","typeString":"type(struct GreenDAO.goal_ideas_votes_struct storage pointer)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9402:103:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_memory_ptr","typeString":"struct GreenDAO.goal_ideas_votes_struct memory"}},"src":"9362:143:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":1945,"nodeType":"ExpressionStatement","src":"9362:143:3"},{"expression":{"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9516:17:3","subExpression":{"id":1946,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"9516:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1948,"nodeType":"ExpressionStatement","src":"9516:17:3"},{"expression":{"id":1949,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"9553:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1935,"id":1950,"nodeType":"Return","src":"9546:22:3"}]},"functionSelector":"82fcc732","id":1952,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal_ideas_vote","nameLocation":"9159:22:3","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"_goal_id","nameLocation":"9200:8:3","nodeType":"VariableDeclaration","scope":1952,"src":"9192:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1926,"name":"uint256","nodeType":"ElementaryTypeName","src":"9192:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"_ideas_id","nameLocation":"9227:9:3","nodeType":"VariableDeclaration","scope":1952,"src":"9219:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"9219:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"_wallet","nameLocation":"9261:7:3","nodeType":"VariableDeclaration","scope":1952,"src":"9247:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1930,"name":"string","nodeType":"ElementaryTypeName","src":"9247:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9181:94:3"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"9292:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"9292:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9291:9:3"},"scope":2627,"src":"9150:426:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2016,"nodeType":"Block","src":"9719:485:3","statements":[{"assignments":[1966],"declarations":[{"constant":false,"id":1966,"mutability":"mutable","name":"_StoreInfo","nameLocation":"9788:10:3","nodeType":"VariableDeclaration","scope":2016,"src":"9772:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1964,"name":"string","nodeType":"ElementaryTypeName","src":"9772:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1965,"nodeType":"ArrayTypeName","src":"9772:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1972,"initialValue":{"arguments":[{"id":1970,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"9814:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9801:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1967,"name":"string","nodeType":"ElementaryTypeName","src":"9805:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1968,"nodeType":"ArrayTypeName","src":"9805:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9801:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9772:58:3"},{"assignments":[1974],"declarations":[{"constant":false,"id":1974,"mutability":"mutable","name":"_store_id","nameLocation":"9849:9:3","nodeType":"VariableDeclaration","scope":2016,"src":"9841:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"9841:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1975,"nodeType":"VariableDeclarationStatement","src":"9841:17:3"},{"body":{"id":2012,"nodeType":"Block","src":"9915:254:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1986,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9952:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1988,"indexExpression":{"id":1987,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"9973:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9952:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":1989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9976:7:3","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1232,"src":"9952:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1990,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"9987:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9952:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1992,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"10016:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1994,"indexExpression":{"id":1993,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"10037:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10016:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":1995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10040:8:3","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1234,"src":"10016:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1996,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"10052:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10016:45:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9952:109:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2008,"nodeType":"IfStatement","src":"9930:201:3","trueBody":{"expression":{"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1999,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"10077:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2001,"indexExpression":{"id":2000,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"10088:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10077:21:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2002,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"10101:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":2004,"indexExpression":{"id":2003,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"10122:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10101:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":2005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10125:6:3","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":1236,"src":"10101:30:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"10077:54:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2007,"nodeType":"ExpressionStatement","src":"10077:54:3"}},{"expression":{"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10146:11:3","subExpression":{"id":2009,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"10146:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2011,"nodeType":"ExpressionStatement","src":"10146:11:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"9889:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1981,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"9893:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9889:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2013,"initializationExpression":{"assignments":[1977],"declarations":[{"constant":false,"id":1977,"mutability":"mutable","name":"i","nameLocation":"9882:1:3","nodeType":"VariableDeclaration","scope":2013,"src":"9874:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"9874:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1979,"initialValue":{"hexValue":"30","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9886:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9874:13:3"},"loopExpression":{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9910:3:3","subExpression":{"id":1983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"9910:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1985,"nodeType":"ExpressionStatement","src":"9910:3:3"},"nodeType":"ForStatement","src":"9869:300:3"},{"expression":{"id":2014,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"10186:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1961,"id":2015,"nodeType":"Return","src":"10179:17:3"}]},"functionSelector":"4be7adb5","id":2017,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_votes_from_goal","nameLocation":"9593:25:3","nodeType":"FunctionDefinition","parameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"_goal_id","nameLocation":"9637:8:3","nodeType":"VariableDeclaration","scope":2017,"src":"9629:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1953,"name":"uint256","nodeType":"ElementaryTypeName","src":"9629:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1956,"mutability":"mutable","name":"_ideas_id","nameLocation":"9664:9:3","nodeType":"VariableDeclaration","scope":2017,"src":"9656:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"9656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9618:62:3"},"returnParameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2017,"src":"9702:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1958,"name":"string","nodeType":"ElementaryTypeName","src":"9702:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1959,"nodeType":"ArrayTypeName","src":"9702:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"9701:17:3"},"scope":2627,"src":"9584:620:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2041,"nodeType":"Block","src":"10343:249:3","statements":[{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2026,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"10399:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct storage ref)"}},"id":2028,"indexExpression":{"id":2027,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"10412:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10399:26:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage","typeString":"struct GreenDAO.message_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2030,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"10457:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2031,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"10484:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2032,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"10508:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2029,"name":"message_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"10428:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_struct_$1244_storage_ptr_$","typeString":"type(struct GreenDAO.message_struct storage pointer)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10428:99:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_memory_ptr","typeString":"struct GreenDAO.message_struct memory"}},"src":"10399:128:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage","typeString":"struct GreenDAO.message_struct storage ref"}},"id":2035,"nodeType":"ExpressionStatement","src":"10399:128:3"},{"expression":{"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10538:14:3","subExpression":{"id":2036,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"10538:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2038,"nodeType":"ExpressionStatement","src":"10538:14:3"},{"expression":{"id":2039,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"10572:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2025,"id":2040,"nodeType":"Return","src":"10565:19:3"}]},"functionSelector":"2d5bf5b0","id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"sendMsg","nameLocation":"10242:7:3","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"_ideas_id","nameLocation":"10268:9:3","nodeType":"VariableDeclaration","scope":2042,"src":"10260:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"10260:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"_message","nameLocation":"10302:8:3","nodeType":"VariableDeclaration","scope":2042,"src":"10288:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2020,"name":"string","nodeType":"ElementaryTypeName","src":"10288:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10249:68:3"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2042,"src":"10334:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"10334:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10333:9:3"},"scope":2627,"src":"10233:359:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2098,"nodeType":"Block","src":"10698:438:3","statements":[{"assignments":[2054],"declarations":[{"constant":false,"id":2054,"mutability":"mutable","name":"_All_Ideas_Messages","nameLocation":"10773:19:3","nodeType":"VariableDeclaration","scope":2098,"src":"10756:36:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"10756:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2053,"nodeType":"ArrayTypeName","src":"10756:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2060,"initialValue":{"arguments":[{"id":2058,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"10809:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10795:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"10799:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2056,"nodeType":"ArrayTypeName","src":"10799:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10795:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10756:66:3"},{"assignments":[2062],"declarations":[{"constant":false,"id":2062,"mutability":"mutable","name":"_msg_id","nameLocation":"10841:7:3","nodeType":"VariableDeclaration","scope":2098,"src":"10833:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"10833:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2063,"nodeType":"VariableDeclarationStatement","src":"10833:15:3"},{"body":{"id":2094,"nodeType":"Block","src":"10902:188:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2074,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"10921:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct storage ref)"}},"id":2076,"indexExpression":{"id":2075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10934:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10921:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage","typeString":"struct GreenDAO.message_struct storage ref"}},"id":2077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10937:8:3","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1241,"src":"10921:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2078,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"10949:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10921:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2093,"nodeType":"IfStatement","src":"10917:162:3","trueBody":{"id":2092,"nodeType":"Block","src":"10959:120:3","statements":[{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2080,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"10978:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2082,"indexExpression":{"id":2081,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"10998:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10978:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2083,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"11009:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct storage ref)"}},"id":2085,"indexExpression":{"id":2084,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"11022:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11009:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage","typeString":"struct GreenDAO.message_struct storage ref"}},"id":2086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11025:10:3","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1239,"src":"11009:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10978:57:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2088,"nodeType":"ExpressionStatement","src":"10978:57:3"},{"expression":{"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11054:9:3","subExpression":{"id":2089,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"11054:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2091,"nodeType":"ExpressionStatement","src":"11054:9:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2068,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10879:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2069,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"10883:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10879:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2095,"initializationExpression":{"assignments":[2065],"declarations":[{"constant":false,"id":2065,"mutability":"mutable","name":"i","nameLocation":"10872:1:3","nodeType":"VariableDeclaration","scope":2095,"src":"10864:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"10864:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2067,"initialValue":{"hexValue":"30","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10876:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10864:13:3"},"loopExpression":{"expression":{"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10897:3:3","subExpression":{"id":2071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10897:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2073,"nodeType":"ExpressionStatement","src":"10897:3:3"},"nodeType":"ForStatement","src":"10859:231:3"},{"expression":{"id":2096,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"11109:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2049,"id":2097,"nodeType":"Return","src":"11102:26:3"}]},"functionSelector":"803f5b9f","id":2099,"implemented":true,"kind":"function","modifiers":[],"name":"getMsgIDs","nameLocation":"10614:9:3","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"ideas_id","nameLocation":"10642:8:3","nodeType":"VariableDeclaration","scope":2099,"src":"10634:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"10634:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10623:34:3"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2099,"src":"10679:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"10679:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2047,"nodeType":"ArrayTypeName","src":"10679:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10678:19:3"},"scope":2627,"src":"10605:531:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2123,"nodeType":"Block","src":"11254:234:3","statements":[{"expression":{"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2108,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"11306:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct storage ref)"}},"id":2110,"indexExpression":{"id":2109,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"11318:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11306:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage","typeString":"struct GreenDAO.reply_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2112,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"11359:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2113,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"11384:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2114,"name":"_reply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"11410:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2111,"name":"reply_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"11332:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_reply_struct_$1251_storage_ptr_$","typeString":"type(struct GreenDAO.reply_struct storage pointer)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11332:95:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_memory_ptr","typeString":"struct GreenDAO.reply_struct memory"}},"src":"11306:121:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage","typeString":"struct GreenDAO.reply_struct storage ref"}},"id":2117,"nodeType":"ExpressionStatement","src":"11306:121:3"},{"expression":{"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11438:12:3","subExpression":{"id":2118,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"11438:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2120,"nodeType":"ExpressionStatement","src":"11438:12:3"},{"expression":{"id":2121,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"11470:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2107,"id":2122,"nodeType":"Return","src":"11463:17:3"}]},"functionSelector":"6af3304e","id":2124,"implemented":true,"kind":"function","modifiers":[],"name":"sendReply","nameLocation":"11151:9:3","nodeType":"FunctionDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"_message_id","nameLocation":"11179:11:3","nodeType":"VariableDeclaration","scope":2124,"src":"11171:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2103,"mutability":"mutable","name":"_reply","nameLocation":"11215:6:3","nodeType":"VariableDeclaration","scope":2124,"src":"11201:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2102,"name":"string","nodeType":"ElementaryTypeName","src":"11201:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11160:68:3"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2124,"src":"11245:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"11245:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11244:9:3"},"scope":2627,"src":"11142:346:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2180,"nodeType":"Block","src":"11593:443:3","statements":[{"assignments":[2136],"declarations":[{"constant":false,"id":2136,"mutability":"mutable","name":"_All_Messages_Replys","nameLocation":"11668:20:3","nodeType":"VariableDeclaration","scope":2180,"src":"11651:37:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"11651:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2135,"nodeType":"ArrayTypeName","src":"11651:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2142,"initialValue":{"arguments":[{"id":2140,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"11705:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11691:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"11695:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2138,"nodeType":"ArrayTypeName","src":"11695:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11651:65:3"},{"assignments":[2144],"declarations":[{"constant":false,"id":2144,"mutability":"mutable","name":"_reply_id","nameLocation":"11735:9:3","nodeType":"VariableDeclaration","scope":2180,"src":"11727:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"11727:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2145,"nodeType":"VariableDeclarationStatement","src":"11727:17:3"},{"body":{"id":2176,"nodeType":"Block","src":"11796:193:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2156,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"11815:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct storage ref)"}},"id":2158,"indexExpression":{"id":2157,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"11827:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11815:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage","typeString":"struct GreenDAO.reply_struct storage ref"}},"id":2159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11830:10:3","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1248,"src":"11815:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2160,"name":"message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"11844:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11815:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2175,"nodeType":"IfStatement","src":"11811:167:3","trueBody":{"id":2174,"nodeType":"Block","src":"11856:122:3","statements":[{"expression":{"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2162,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"11875:20:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2164,"indexExpression":{"id":2163,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"11896:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11875:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2165,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"11909:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct storage ref)"}},"id":2167,"indexExpression":{"id":2166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"11921:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11909:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage","typeString":"struct GreenDAO.reply_struct storage ref"}},"id":2168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11924:8:3","memberName":"reply_id","nodeType":"MemberAccess","referencedDeclaration":1246,"src":"11909:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11875:57:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2170,"nodeType":"ExpressionStatement","src":"11875:57:3"},{"expression":{"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11951:11:3","subExpression":{"id":2171,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"11951:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2173,"nodeType":"ExpressionStatement","src":"11951:11:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"11775:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2151,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"11779:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11775:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2177,"initializationExpression":{"assignments":[2147],"declarations":[{"constant":false,"id":2147,"mutability":"mutable","name":"i","nameLocation":"11768:1:3","nodeType":"VariableDeclaration","scope":2177,"src":"11760:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"11760:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2149,"initialValue":{"hexValue":"30","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11772:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11760:13:3"},"loopExpression":{"expression":{"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11791:3:3","subExpression":{"id":2153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"11791:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2155,"nodeType":"ExpressionStatement","src":"11791:3:3"},"nodeType":"ForStatement","src":"11755:234:3"},{"expression":{"id":2178,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"12008:20:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2131,"id":2179,"nodeType":"Return","src":"12001:27:3"}]},"functionSelector":"812fae1f","id":2181,"implemented":true,"kind":"function","modifiers":[],"name":"getReplyIDs","nameLocation":"11505:11:3","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"message_id","nameLocation":"11535:10:3","nodeType":"VariableDeclaration","scope":2181,"src":"11527:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"11527:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11516:36:3"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2181,"src":"11574:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"11574:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2129,"nodeType":"ArrayTypeName","src":"11574:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11573:19:3"},"scope":2627,"src":"11496:540:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2197,"nodeType":"Block","src":"12152:80:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2188,"name":"_approveRequiredMsgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"12163:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12163:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2190,"nodeType":"ExpressionStatement","src":"12163:22:3"},{"expression":{"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2191,"name":"donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"12196:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2193,"indexExpression":{"id":2192,"name":"_idea_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"12204:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12196:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2194,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"12217:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12196:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2196,"nodeType":"ExpressionStatement","src":"12196:28:3"}]},"functionSelector":"0cdd53f6","id":2198,"implemented":true,"kind":"function","modifiers":[],"name":"donate","nameLocation":"12095:6:3","nodeType":"FunctionDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"_idea_id","nameLocation":"12110:8:3","nodeType":"VariableDeclaration","scope":2198,"src":"12102:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"12102:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"_amount","nameLocation":"12127:7:3","nodeType":"VariableDeclaration","scope":2198,"src":"12119:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"12119:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12101:34:3"},"returnParameters":{"id":2187,"nodeType":"ParameterList","parameters":[],"src":"12152:0:3"},"scope":2627,"src":"12086:146:3","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2214,"nodeType":"Block","src":"12279:86:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":2208,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12324:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}],"id":2207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12316:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2206,"name":"address","nodeType":"ElementaryTypeName","src":"12316:7:3","typeDescriptions":{}}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12316:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2210,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"12331:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":2211,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"12347:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2203,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"12290:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3276","typeString":"contract StakingI"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12307:8:3","memberName":"delegate","nodeType":"MemberAccess","referencedDeclaration":3108,"src":"12290:25:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$_t_int64_$","typeString":"function (address,string memory,uint256) external returns (int64)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12290:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":2213,"nodeType":"ExpressionStatement","src":"12290:65:3"}]},"functionSelector":"a694fc3a","id":2215,"implemented":true,"kind":"function","modifiers":[],"name":"stake","nameLocation":"12249:5:3","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"_amount","nameLocation":"12263:7:3","nodeType":"VariableDeclaration","scope":2215,"src":"12255:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"12255:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12254:17:3"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[],"src":"12279:0:3"},"scope":2627,"src":"12240:125:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2299,"nodeType":"Block","src":"12444:832:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2222,"name":"_approveRequiredMsgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"12461:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12461:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2224,"nodeType":"ExpressionStatement","src":"12461:22:3"},{"assignments":[2229],"declarations":[{"constant":false,"id":2229,"mutability":"mutable","name":"newRewards","nameLocation":"12553:10:3","nodeType":"VariableDeclaration","scope":2299,"src":"12539:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr","typeString":"struct Coin[]"},"typeName":{"baseType":{"id":2227,"nodeType":"UserDefinedTypeName","pathNode":{"id":2226,"name":"Coin","nameLocations":["12539:4:3"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"12539:4:3"},"referencedDeclaration":2765,"src":"12539:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2765_storage_ptr","typeString":"struct Coin"}},"id":2228,"nodeType":"ArrayTypeName","src":"12539:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2765_storage_$dyn_storage_ptr","typeString":"struct Coin[]"}},"visibility":"internal"}],"id":2238,"initialValue":{"arguments":[{"arguments":[{"id":2234,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12621:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}],"id":2233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12613:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"12613:7:3","typeDescriptions":{}}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12613:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2236,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"12628:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2230,"name":"DISTRIBUTION_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"12566:21:3","typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2975","typeString":"contract DistributionI"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12588:24:3","memberName":"withdrawDelegatorRewards","nodeType":"MemberAccess","referencedDeclaration":2851,"src":"12566:46:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address,string memory) external returns (struct Coin memory[] memory)"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12566:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr","typeString":"struct Coin memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12539:104:3"},{"assignments":[2240],"declarations":[{"constant":false,"id":2240,"mutability":"mutable","name":"_amount","nameLocation":"12708:7:3","nodeType":"VariableDeclaration","scope":2299,"src":"12700:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"12700:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2244,"initialValue":{"baseExpression":{"id":2241,"name":"donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"12718:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2243,"indexExpression":{"id":2242,"name":"_idea_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"12726:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12718:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12700:35:3"},{"assignments":[2246],"declarations":[{"constant":false,"id":2246,"mutability":"mutable","name":"completionTime","nameLocation":"12752:14:3","nodeType":"VariableDeclaration","scope":2299,"src":"12746:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2245,"name":"int64","nodeType":"ElementaryTypeName","src":"12746:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"id":2256,"initialValue":{"arguments":[{"arguments":[{"id":2251,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12805:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}],"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12797:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"12797:7:3","typeDescriptions":{}}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12797:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2253,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"12812:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":2254,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"12828:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2247,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"12769:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3276","typeString":"contract StakingI"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12786:10:3","memberName":"undelegate","nodeType":"MemberAccess","referencedDeclaration":3120,"src":"12769:27:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$_t_int64_$","typeString":"function (address,string memory,uint256) external returns (int64)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12769:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"VariableDeclarationStatement","src":"12746:90:3"},{"expression":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2257,"name":"unbondingDelegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"12907:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UnbondingRequest_$1256_storage_$","typeString":"mapping(uint256 => struct GreenDAO.UnbondingRequest storage ref)"}},"id":2259,"indexExpression":{"id":2258,"name":"_idea_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"12928:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12907:30:3","typeDescriptions":{"typeIdentifier":"t_struct$_UnbondingRequest_$1256_storage","typeString":"struct GreenDAO.UnbondingRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2261,"name":"completionTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"12957:14:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2262,"name":"unbondingDelegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"12973:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UnbondingRequest_$1256_storage_$","typeString":"mapping(uint256 => struct GreenDAO.UnbondingRequest storage ref)"}},"id":2264,"indexExpression":{"id":2263,"name":"_idea_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"12994:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12973:30:3","typeDescriptions":{"typeIdentifier":"t_struct$_UnbondingRequest_$1256_storage","typeString":"struct GreenDAO.UnbondingRequest storage ref"}},"id":2265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13004:6:3","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"12973:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2266,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"13013:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12973:47:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2260,"name":"UnbondingRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"12940:16:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UnbondingRequest_$1256_storage_ptr_$","typeString":"type(struct GreenDAO.UnbondingRequest storage pointer)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12940:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UnbondingRequest_$1256_memory_ptr","typeString":"struct GreenDAO.UnbondingRequest memory"}},"src":"12907:114:3","typeDescriptions":{"typeIdentifier":"t_struct$_UnbondingRequest_$1256_storage","typeString":"struct GreenDAO.UnbondingRequest storage ref"}},"id":2270,"nodeType":"ExpressionStatement","src":"12907:114:3"},{"assignments":[2272],"declarations":[{"constant":false,"id":2272,"mutability":"mutable","name":"_rewards_amount","nameLocation":"13082:15:3","nodeType":"VariableDeclaration","scope":2299,"src":"13074:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"13074:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2277,"initialValue":{"expression":{"baseExpression":{"id":2273,"name":"newRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"13100:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr","typeString":"struct Coin memory[] memory"}},"id":2275,"indexExpression":{"hexValue":"30","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13111:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13100:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2765_memory_ptr","typeString":"struct Coin memory"}},"id":2276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13114:6:3","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"13100:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13074:46:3"},{"assignments":[2279,null],"declarations":[{"constant":false,"id":2279,"mutability":"mutable","name":"sent","nameLocation":"13137:4:3","nodeType":"VariableDeclaration","scope":2299,"src":"13132:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2278,"name":"bool","nodeType":"ElementaryTypeName","src":"13132:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2290,"initialValue":{"arguments":[{"hexValue":"","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13195:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":2282,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13154:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13158:6:3","memberName":"sender","nodeType":"MemberAccess","src":"13154:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13146:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2280,"name":"address","nodeType":"ElementaryTypeName","src":"13146:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13146:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13166:4:3","memberName":"call","nodeType":"MemberAccess","src":"13146:24:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2286,"name":"_rewards_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"13178:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13146:48:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13146:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13131:67:3"},{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2291,"name":"donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"13214:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2293,"indexExpression":{"id":2292,"name":"_idea_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"13222:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13214:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13234:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13214:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ExpressionStatement","src":"13214:21:3"},{"expression":{"id":2297,"name":"completionTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"13254:14:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"functionReturnParameters":2221,"id":2298,"nodeType":"Return","src":"13246:22:3"}]},"functionSelector":"9c6353e8","id":2300,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawDonatedMoney","nameLocation":"12382:20:3","nodeType":"FunctionDefinition","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"_idea_id","nameLocation":"12411:8:3","nodeType":"VariableDeclaration","scope":2300,"src":"12403:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"12403:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12402:18:3"},"returnParameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2300,"src":"12437:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2219,"name":"int64","nodeType":"ElementaryTypeName","src":"12437:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"12436:7:3"},"scope":2627,"src":"12373:903:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2353,"nodeType":"Block","src":"13364:402:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2307,"name":"_approveRequiredMsgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"13381:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13381:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2309,"nodeType":"ExpressionStatement","src":"13381:22:3"},{"assignments":[2311],"declarations":[{"constant":false,"id":2311,"mutability":"mutable","name":"ts","nameLocation":"13425:2:3","nodeType":"VariableDeclaration","scope":2353,"src":"13417:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"13417:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2322,"initialValue":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2316,"name":"unbondingDelegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"13445:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UnbondingRequest_$1256_storage_$","typeString":"mapping(uint256 => struct GreenDAO.UnbondingRequest storage ref)"}},"id":2318,"indexExpression":{"id":2317,"name":"_idea_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"13466:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13445:30:3","typeDescriptions":{"typeIdentifier":"t_struct$_UnbondingRequest_$1256_storage","typeString":"struct GreenDAO.UnbondingRequest storage ref"}},"id":2319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13476:14:3","memberName":"completionTime","nodeType":"MemberAccess","referencedDeclaration":1253,"src":"13445:45:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13438:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2314,"name":"int256","nodeType":"ElementaryTypeName","src":"13438:6:3","typeDescriptions":{}}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13438:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13430:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"13430:7:3","typeDescriptions":{}}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13430:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13417:75:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2324,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13511:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13517:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"13511:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2326,"name":"ts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"13530:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13511:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652074696d6520686173206e6f742070617373656420796574","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13534:29:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa","typeString":"literal_string \"The time has not passed yet\""},"value":"The time has not passed yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa","typeString":"literal_string \"The time has not passed yet\""}],"id":2323,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13503:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13503:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2330,"nodeType":"ExpressionStatement","src":"13503:61:3"},{"assignments":[2332],"declarations":[{"constant":false,"id":2332,"mutability":"mutable","name":"_amount","nameLocation":"13585:7:3","nodeType":"VariableDeclaration","scope":2353,"src":"13577:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"13577:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2337,"initialValue":{"expression":{"baseExpression":{"id":2333,"name":"unbondingDelegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"13595:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UnbondingRequest_$1256_storage_$","typeString":"mapping(uint256 => struct GreenDAO.UnbondingRequest storage ref)"}},"id":2335,"indexExpression":{"id":2334,"name":"_idea_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"13616:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13595:30:3","typeDescriptions":{"typeIdentifier":"t_struct$_UnbondingRequest_$1256_storage","typeString":"struct GreenDAO.UnbondingRequest storage ref"}},"id":2336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13626:6:3","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"13595:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13577:55:3"},{"assignments":[2339,null],"declarations":[{"constant":false,"id":2339,"mutability":"mutable","name":"sent","nameLocation":"13649:4:3","nodeType":"VariableDeclaration","scope":2353,"src":"13644:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2338,"name":"bool","nodeType":"ElementaryTypeName","src":"13644:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2350,"initialValue":{"arguments":[{"hexValue":"","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13699:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":2342,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13666:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13670:6:3","memberName":"sender","nodeType":"MemberAccess","src":"13666:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13658:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2340,"name":"address","nodeType":"ElementaryTypeName","src":"13658:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13658:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:4:3","memberName":"call","nodeType":"MemberAccess","src":"13658:24:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2346,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"13690:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13658:40:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13658:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13643:59:3"},{"expression":{"hexValue":"4d6f6e657920686173206265656e2073656e7420746f2049646561204f776e6572","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13723:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e99616bf4f5df12767c0dbd1b6458162b411679918503181d364675cce9fd97","typeString":"literal_string \"Money has been sent to Idea Owner\""},"value":"Money has been sent to Idea Owner"},"functionReturnParameters":2306,"id":2352,"nodeType":"Return","src":"13715:43:3"}]},"functionSelector":"90d756a7","id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"RedeemDelegetdMoney","nameLocation":"13295:19:3","nodeType":"FunctionDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"_idea_id","nameLocation":"13323:8:3","nodeType":"VariableDeclaration","scope":2354,"src":"13315:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"13315:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13314:18:3"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2354,"src":"13349:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2304,"name":"string","nodeType":"ElementaryTypeName","src":"13349:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13348:15:3"},"scope":2627,"src":"13286:480:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2378,"nodeType":"Block","src":"13810:133:3","statements":[{"assignments":[2358],"declarations":[{"constant":false,"id":2358,"mutability":"mutable","name":"_amount","nameLocation":"13829:7:3","nodeType":"VariableDeclaration","scope":2378,"src":"13821:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"13821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2364,"initialValue":{"expression":{"arguments":[{"id":2361,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13847:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}],"id":2360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13839:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2359,"name":"address","nodeType":"ElementaryTypeName","src":"13839:7:3","typeDescriptions":{}}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13839:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13853:7:3","memberName":"balance","nodeType":"MemberAccess","src":"13839:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13821:39:3"},{"assignments":[2366,null],"declarations":[{"constant":false,"id":2366,"mutability":"mutable","name":"sent","nameLocation":"13877:4:3","nodeType":"VariableDeclaration","scope":2378,"src":"13872:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2365,"name":"bool","nodeType":"ElementaryTypeName","src":"13872:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2377,"initialValue":{"arguments":[{"hexValue":"","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13927:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":2369,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13894:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13898:6:3","memberName":"sender","nodeType":"MemberAccess","src":"13894:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13886:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2367,"name":"address","nodeType":"ElementaryTypeName","src":"13886:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13886:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13906:4:3","memberName":"call","nodeType":"MemberAccess","src":"13886:24:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2373,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"13918:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13886:40:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13886:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13871:59:3"}]},"functionSelector":"1b52b9de","id":2379,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawAllMoney","nameLocation":"13783:16:3","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[],"src":"13799:2:3"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[],"src":"13810:0:3"},"scope":2627,"src":"13774:169:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2390,"nodeType":"Block","src":"14006:44:3","statements":[{"expression":{"expression":{"arguments":[{"id":2386,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14029:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}],"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14021:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2384,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:3","typeDescriptions":{}}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14021:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14035:7:3","memberName":"balance","nodeType":"MemberAccess","src":"14021:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2383,"id":2389,"nodeType":"Return","src":"14014:28:3"}]},"functionSelector":"6f9fb98a","id":2391,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"13958:18:3","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[],"src":"13976:2:3"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2391,"src":"14000:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint","nodeType":"ElementaryTypeName","src":"14000:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13999:6:3"},"scope":2627,"src":"13949:101:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2407,"nodeType":"Block","src":"14131:96:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":2402,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14197:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}],"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14189:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"14189:7:3","typeDescriptions":{}}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14189:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2404,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"14204:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2398,"name":"DISTRIBUTION_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"14149:21:3","typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2975","typeString":"contract DistributionI"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14171:17:3","memberName":"delegationRewards","nodeType":"MemberAccess","referencedDeclaration":2920,"src":"14149:39:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_string_memory_ptr_$returns$_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address,string memory) view external returns (struct DecCoin memory[] memory)"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14149:70:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr","typeString":"struct DecCoin memory[] memory"}},"functionReturnParameters":2397,"id":2406,"nodeType":"Return","src":"14142:77:3"}]},"functionSelector":"ae429e47","id":2408,"implemented":true,"kind":"function","modifiers":[],"name":"getContractRewards","nameLocation":"14071:18:3","nodeType":"FunctionDefinition","parameters":{"id":2392,"nodeType":"ParameterList","parameters":[],"src":"14089:2:3"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2408,"src":"14113:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2394,"nodeType":"UserDefinedTypeName","pathNode":{"id":2393,"name":"DecCoin","nameLocations":["14113:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"14113:7:3"},"referencedDeclaration":2772,"src":"14113:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2772_storage_ptr","typeString":"struct DecCoin"}},"id":2395,"nodeType":"ArrayTypeName","src":"14113:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"src":"14112:18:3"},"scope":2627,"src":"14062:165:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2430,"nodeType":"Block","src":"14290:145:3","statements":[{"assignments":[2414,2417],"declarations":[{"constant":false,"id":2414,"mutability":"mutable","name":"denom","nameLocation":"14310:5:3","nodeType":"VariableDeclaration","scope":2430,"src":"14302:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"14302:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"coin","nameLocation":"14330:4:3","nodeType":"VariableDeclaration","scope":2430,"src":"14318:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2765_memory_ptr","typeString":"struct Coin"},"typeName":{"id":2416,"nodeType":"UserDefinedTypeName","pathNode":{"id":2415,"name":"Coin","nameLocations":["14318:4:3"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"14318:4:3"},"referencedDeclaration":2765,"src":"14318:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2765_storage_ptr","typeString":"struct Coin"}},"visibility":"internal"}],"id":2426,"initialValue":{"arguments":[{"arguments":[{"id":2422,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14376:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}],"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14368:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"14368:7:3","typeDescriptions":{}}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14368:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2424,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"14383:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2418,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"14340:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3276","typeString":"contract StakingI"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14357:10:3","memberName":"delegation","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"14340:27:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$_t_struct$_Coin_$2765_memory_ptr_$","typeString":"function (address,string memory) view external returns (uint256,struct Coin memory)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14340:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_struct$_Coin_$2765_memory_ptr_$","typeString":"tuple(uint256,struct Coin memory)"}},"nodeType":"VariableDeclarationStatement","src":"14301:97:3"},{"expression":{"expression":{"id":2427,"name":"coin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"14416:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2765_memory_ptr","typeString":"struct Coin memory"}},"id":2428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14421:6:3","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"14416:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2412,"id":2429,"nodeType":"Return","src":"14409:18:3"}]},"functionSelector":"53f68802","id":2431,"implemented":true,"kind":"function","modifiers":[],"name":"getDelegation","nameLocation":"14244:13:3","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[],"src":"14257:2:3"},"returnParameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2431,"src":"14281:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"14281:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14280:9:3"},"scope":2627,"src":"14235:200:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2447,"nodeType":"Block","src":"14533:93:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":2442,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14596:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2627","typeString":"contract GreenDAO"}],"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14588:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"14588:7:3","typeDescriptions":{}}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14588:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2444,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"14603:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2438,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"14551:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3276","typeString":"contract StakingI"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14568:19:3","memberName":"unbondingDelegation","nodeType":"MemberAccess","referencedDeclaration":3173,"src":"14551:36:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_string_memory_ptr_$returns$_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address,string memory) view external returns (struct UnbondingDelegationEntry memory[] memory)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14551:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr","typeString":"struct UnbondingDelegationEntry memory[] memory"}},"functionReturnParameters":2437,"id":2446,"nodeType":"Return","src":"14544:74:3"}]},"functionSelector":"42c7652a","id":2448,"implemented":true,"kind":"function","modifiers":[],"name":"getUnbondingDelegation","nameLocation":"14452:22:3","nodeType":"FunctionDefinition","parameters":{"id":2432,"nodeType":"ParameterList","parameters":[],"src":"14474:2:3"},"returnParameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2448,"src":"14498:33:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr","typeString":"struct UnbondingDelegationEntry[]"},"typeName":{"baseType":{"id":2434,"nodeType":"UserDefinedTypeName","pathNode":{"id":2433,"name":"UnbondingDelegationEntry","nameLocations":["14498:24:3"],"nodeType":"IdentifierPath","referencedDeclaration":3077,"src":"14498:24:3"},"referencedDeclaration":3077,"src":"14498:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_UnbondingDelegationEntry_$3077_storage_ptr","typeString":"struct UnbondingDelegationEntry"}},"id":2435,"nodeType":"ArrayTypeName","src":"14498:26:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnbondingDelegationEntry_$3077_storage_$dyn_storage_ptr","typeString":"struct UnbondingDelegationEntry[]"}},"visibility":"internal"}],"src":"14497:35:3"},"scope":2627,"src":"14443:183:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2587,"nodeType":"Block","src":"14664:700:3","statements":[{"body":{"expression":{"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14714:19:3","subExpression":{"baseExpression":{"id":2461,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"14721:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":2463,"indexExpression":{"id":2462,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"14731:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14721:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2465,"nodeType":"ExpressionStatement","src":"14714:19:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"14695:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2456,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"14699:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14695:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2466,"initializationExpression":{"assignments":[2452],"declarations":[{"constant":false,"id":2452,"mutability":"mutable","name":"i","nameLocation":"14688:1:3","nodeType":"VariableDeclaration","scope":2466,"src":"14680:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"14680:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2454,"initialValue":{"hexValue":"30","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14692:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14680:13:3"},"loopExpression":{"expression":{"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14709:3:3","subExpression":{"id":2458,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"14709:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2460,"nodeType":"ExpressionStatement","src":"14709:3:3"},"nodeType":"ForStatement","src":"14675:58:3"},{"body":{"expression":{"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14784:20:3","subExpression":{"baseExpression":{"id":2477,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"14791:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":2479,"indexExpression":{"id":2478,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"14802:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14791:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2481,"nodeType":"ExpressionStatement","src":"14784:20:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"14764:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2472,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"14768:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14764:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2482,"initializationExpression":{"assignments":[2468],"declarations":[{"constant":false,"id":2468,"mutability":"mutable","name":"i","nameLocation":"14757:1:3","nodeType":"VariableDeclaration","scope":2482,"src":"14749:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"14749:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2470,"initialValue":{"hexValue":"30","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14761:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14749:13:3"},"loopExpression":{"expression":{"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14779:3:3","subExpression":{"id":2474,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"14779:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2476,"nodeType":"ExpressionStatement","src":"14779:3:3"},"nodeType":"ForStatement","src":"14744:60:3"},{"body":{"expression":{"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14856:21:3","subExpression":{"baseExpression":{"id":2493,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"14863:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":2495,"indexExpression":{"id":2494,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"14875:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14863:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2497,"nodeType":"ExpressionStatement","src":"14856:21:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"14835:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2488,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"14839:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14835:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2498,"initializationExpression":{"assignments":[2484],"declarations":[{"constant":false,"id":2484,"mutability":"mutable","name":"i","nameLocation":"14828:1:3","nodeType":"VariableDeclaration","scope":2498,"src":"14820:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"14820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2486,"initialValue":{"hexValue":"30","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14832:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14820:13:3"},"loopExpression":{"expression":{"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14851:3:3","subExpression":{"id":2490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"14851:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2492,"nodeType":"ExpressionStatement","src":"14851:3:3"},"nodeType":"ForStatement","src":"14815:62:3"},{"body":{"expression":{"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14928:31:3","subExpression":{"baseExpression":{"id":2509,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"14935:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1230_storage_$","typeString":"mapping(uint256 => struct GreenDAO.smart_contract_uri_struct storage ref)"}},"id":2511,"indexExpression":{"id":2510,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"14957:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14935:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1230_storage","typeString":"struct GreenDAO.smart_contract_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2513,"nodeType":"ExpressionStatement","src":"14928:31:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"14908:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2504,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"14912:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14908:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2514,"initializationExpression":{"assignments":[2500],"declarations":[{"constant":false,"id":2500,"mutability":"mutable","name":"i","nameLocation":"14901:1:3","nodeType":"VariableDeclaration","scope":2514,"src":"14893:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2502,"initialValue":{"hexValue":"30","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14905:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14893:13:3"},"loopExpression":{"expression":{"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14923:3:3","subExpression":{"id":2506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"14923:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2508,"nodeType":"ExpressionStatement","src":"14923:3:3"},"nodeType":"ForStatement","src":"14888:71:3"},{"body":{"expression":{"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15013:22:3","subExpression":{"baseExpression":{"id":2525,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"15020:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct storage ref)"}},"id":2527,"indexExpression":{"id":2526,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"15033:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15020:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage","typeString":"struct GreenDAO.message_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2529,"nodeType":"ExpressionStatement","src":"15013:22:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"14990:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2520,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"14994:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14990:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2530,"initializationExpression":{"assignments":[2516],"declarations":[{"constant":false,"id":2516,"mutability":"mutable","name":"i","nameLocation":"14983:1:3","nodeType":"VariableDeclaration","scope":2530,"src":"14975:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"14975:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2518,"initialValue":{"hexValue":"30","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14987:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14975:13:3"},"loopExpression":{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15008:3:3","subExpression":{"id":2522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"15008:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2524,"nodeType":"ExpressionStatement","src":"15008:3:3"},"nodeType":"ForStatement","src":"14970:65:3"},{"body":{"expression":{"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15087:21:3","subExpression":{"baseExpression":{"id":2541,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"15094:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct storage ref)"}},"id":2543,"indexExpression":{"id":2542,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"15106:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15094:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage","typeString":"struct GreenDAO.reply_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2545,"nodeType":"ExpressionStatement","src":"15087:21:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"15066:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2536,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"15070:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15066:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2546,"initializationExpression":{"assignments":[2532],"declarations":[{"constant":false,"id":2532,"mutability":"mutable","name":"i","nameLocation":"15059:1:3","nodeType":"VariableDeclaration","scope":2546,"src":"15051:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"15051:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2534,"initialValue":{"hexValue":"30","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15063:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15051:13:3"},"loopExpression":{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15082:3:3","subExpression":{"id":2538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"15082:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"nodeType":"ExpressionStatement","src":"15082:3:3"},"nodeType":"ForStatement","src":"15046:62:3"},{"body":{"expression":{"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15164:30:3","subExpression":{"baseExpression":{"id":2557,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"15171:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":2559,"indexExpression":{"id":2558,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"15192:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15171:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2561,"nodeType":"ExpressionStatement","src":"15164:30:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"15139:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2552,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"15143:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15139:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2562,"initializationExpression":{"assignments":[2548],"declarations":[{"constant":false,"id":2548,"mutability":"mutable","name":"i","nameLocation":"15132:1:3","nodeType":"VariableDeclaration","scope":2562,"src":"15124:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"15124:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2550,"initialValue":{"hexValue":"30","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15136:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15124:13:3"},"loopExpression":{"expression":{"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15160:3:3","subExpression":{"id":2554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"15160:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2556,"nodeType":"ExpressionStatement","src":"15160:3:3"},"nodeType":"ForStatement","src":"15119:75:3"},{"expression":{"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2563,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"15205:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15216:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15205:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2566,"nodeType":"ExpressionStatement","src":"15205:12:3"},{"expression":{"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2567,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"15228:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15240:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15228:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2570,"nodeType":"ExpressionStatement","src":"15228:13:3"},{"expression":{"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2571,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"15252:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15265:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15252:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2574,"nodeType":"ExpressionStatement","src":"15252:14:3"},{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2575,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"15277:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15292:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15277:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2578,"nodeType":"ExpressionStatement","src":"15277:16:3"},{"expression":{"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2579,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"15304:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15317:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15304:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2582,"nodeType":"ExpressionStatement","src":"15304:14:3"},{"expression":{"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2583,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"15337:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15355:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15337:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2586,"nodeType":"ExpressionStatement","src":"15337:19:3"}]},"functionSelector":"b16060a6","id":2588,"implemented":true,"kind":"function","modifiers":[],"name":"reset_all","nameLocation":"14645:9:3","nodeType":"FunctionDefinition","parameters":{"id":2449,"nodeType":"ParameterList","parameters":[],"src":"14654:2:3"},"returnParameters":{"id":2450,"nodeType":"ParameterList","parameters":[],"src":"14664:0:3"},"scope":2627,"src":"14636:728:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2625,"nodeType":"Block","src":"15484:318:3","statements":[{"assignments":[2593],"declarations":[{"constant":false,"id":2593,"mutability":"mutable","name":"successStk","nameLocation":"15500:10:3","nodeType":"VariableDeclaration","scope":2625,"src":"15495:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2592,"name":"bool","nodeType":"ElementaryTypeName","src":"15495:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2605,"initialValue":{"arguments":[{"expression":{"id":2596,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"15538:2:3","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15541:6:3","memberName":"origin","nodeType":"MemberAccess","src":"15538:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":2600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15556:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"15556:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2598,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15551:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15551:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15565:3:3","memberName":"max","nodeType":"MemberAccess","src":"15551:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2603,"name":"stakingMethods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"15570:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}],"expression":{"id":2594,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"15513:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3276","typeString":"contract StakingI"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15530:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2643,"src":"15513:24:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,string memory[] memory) external returns (bool)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15513:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15495:90:3"},{"expression":{"arguments":[{"id":2607,"name":"successStk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"15604:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e6720417070726f7665206661696c6564","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15616:24:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3","typeString":"literal_string \"Staking Approve failed\""},"value":"Staking Approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3","typeString":"literal_string \"Staking Approve failed\""}],"id":2606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15596:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15596:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2610,"nodeType":"ExpressionStatement","src":"15596:45:3"},{"assignments":[2612],"declarations":[{"constant":false,"id":2612,"mutability":"mutable","name":"successDist","nameLocation":"15657:11:3","nodeType":"VariableDeclaration","scope":2625,"src":"15652:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2611,"name":"bool","nodeType":"ElementaryTypeName","src":"15652:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2619,"initialValue":{"arguments":[{"expression":{"id":2615,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"15701:2:3","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15704:6:3","memberName":"origin","nodeType":"MemberAccess","src":"15701:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2617,"name":"distributionMethods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"15712:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}],"expression":{"id":2613,"name":"DISTRIBUTION_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"15671:21:3","typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2975","typeString":"contract DistributionI"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15693:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2721,"src":"15671:29:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (address,string memory[] memory) external returns (bool)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15671:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15652:80:3"},{"expression":{"arguments":[{"id":2621,"name":"successDist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"15751:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446973747269627574696f6e20417070726f7665206661696c6564","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15764:29:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974","typeString":"literal_string \"Distribution Approve failed\""},"value":"Distribution Approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974","typeString":"literal_string \"Distribution Approve failed\""}],"id":2620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15743:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15743:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2624,"nodeType":"ExpressionStatement","src":"15743:51:3"}]},"documentation":{"id":2589,"nodeType":"StructuredDocumentation","src":"15370:69:3","text":"@dev approves the staking and distribution contracts for donating"},"functionSelector":"b2947c71","id":2626,"implemented":true,"kind":"function","modifiers":[],"name":"_approveRequiredMsgs","nameLocation":"15454:20:3","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[],"src":"15474:2:3"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[],"src":"15484:0:3"},"scope":2627,"src":"15445:357:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2628,"src":"208:15597:3","usedErrors":[]}],"src":"33:15774:3"},"id":3},"contracts/precompiles/common/Authorization.sol":{"ast":{"absolutePath":"contracts/precompiles/common/Authorization.sol","exportedSymbols":{"AuthorizationI":[2707]},"id":2708,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":2629,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:4"},{"abstract":false,"baseContracts":[],"canonicalName":"AuthorizationI","contractDependencies":[],"contractKind":"interface","documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"63:159:4","text":"@author Evmos Team\n @title Authorization Interface\n @dev The interface through which solidity contracts will interact with smart contract approvals."},"fullyImplemented":false,"id":2707,"linearizedBaseContracts":[2707],"name":"AuthorizationI","nameLocation":"232:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2631,"nodeType":"StructuredDocumentation","src":"253:362:4","text":"@dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."},"functionSelector":"b6039895","id":2643,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"629:7:4","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"spender","nameLocation":"654:7:4","nodeType":"VariableDeclaration","scope":2643,"src":"646:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"646:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2635,"mutability":"mutable","name":"amount","nameLocation":"679:6:4","nodeType":"VariableDeclaration","scope":2643,"src":"671:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"671:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2638,"mutability":"mutable","name":"methods","nameLocation":"713:7:4","nodeType":"VariableDeclaration","scope":2643,"src":"695:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2636,"name":"string","nodeType":"ElementaryTypeName","src":"695:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2637,"nodeType":"ArrayTypeName","src":"695:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"636:90:4"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"approved","nameLocation":"750:8:4","nodeType":"VariableDeclaration","scope":2643,"src":"745:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2640,"name":"bool","nodeType":"ElementaryTypeName","src":"745:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"744:15:4"},"scope":2707,"src":"620:140:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2644,"nodeType":"StructuredDocumentation","src":"766:400:4","text":"@dev Increase the allowance of a given spender by a specific amount of tokens for IBC\n transfer methods or staking.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."},"functionSelector":"a386a63c","id":2656,"implemented":false,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"1180:17:4","nodeType":"FunctionDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"spender","nameLocation":"1215:7:4","nodeType":"VariableDeclaration","scope":2656,"src":"1207:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2645,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"amount","nameLocation":"1240:6:4","nodeType":"VariableDeclaration","scope":2656,"src":"1232:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"methods","nameLocation":"1274:7:4","nodeType":"VariableDeclaration","scope":2656,"src":"1256:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2649,"name":"string","nodeType":"ElementaryTypeName","src":"1256:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2650,"nodeType":"ArrayTypeName","src":"1256:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"1197:90:4"},"returnParameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"approved","nameLocation":"1311:8:4","nodeType":"VariableDeclaration","scope":2656,"src":"1306:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2653,"name":"bool","nodeType":"ElementaryTypeName","src":"1306:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1305:15:4"},"scope":2707,"src":"1171:150:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"1327:401:4","text":"@dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\n transfer methods or staking.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."},"functionSelector":"f007d286","id":2669,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"1742:17:4","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"spender","nameLocation":"1777:7:4","nodeType":"VariableDeclaration","scope":2669,"src":"1769:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"amount","nameLocation":"1802:6:4","nodeType":"VariableDeclaration","scope":2669,"src":"1794:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"methods","nameLocation":"1836:7:4","nodeType":"VariableDeclaration","scope":2669,"src":"1818:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2662,"name":"string","nodeType":"ElementaryTypeName","src":"1818:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2663,"nodeType":"ArrayTypeName","src":"1818:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"1759:90:4"},"returnParameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"approved","nameLocation":"1873:8:4","nodeType":"VariableDeclaration","scope":2669,"src":"1868:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2666,"name":"bool","nodeType":"ElementaryTypeName","src":"1868:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1867:15:4"},"scope":2707,"src":"1733:150:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"1890:504:4","text":"@dev Returns the remaining number of tokens that spender will be allowed to spend\n on behalf of the owner through IBC transfer methods or staking. This is zero by default.\n @param owner The address of the account owning tokens.\n @param spender The address of the account able to transfer the tokens.\n @param method The message type URL of the methods for which the approval should be queried.\n @return remaining The remaining number of tokens available to be spent."},"functionSelector":"fc08930c","id":2681,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"2408:9:4","nodeType":"FunctionDefinition","parameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"owner","nameLocation":"2435:5:4","nodeType":"VariableDeclaration","scope":2681,"src":"2427:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2671,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2674,"mutability":"mutable","name":"spender","nameLocation":"2458:7:4","nodeType":"VariableDeclaration","scope":2681,"src":"2450:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2673,"name":"address","nodeType":"ElementaryTypeName","src":"2450:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"method","nameLocation":"2491:6:4","nodeType":"VariableDeclaration","scope":2681,"src":"2475:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2675,"name":"string","nodeType":"ElementaryTypeName","src":"2475:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2417:86:4"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"remaining","nameLocation":"2535:9:4","nodeType":"VariableDeclaration","scope":2681,"src":"2527:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"2527:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2526:19:4"},"scope":2707,"src":"2399:147:4","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"2552:510:4","text":"@dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n The value field specifies the new allowance and the methods field holds the information for which methods\n the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set.\n @param value The amount of tokens approved to be spent."},"eventSelector":"f2638649a77447a76543b3e27c31ee0febe7de7fb20e2b6a781d08207bc7cb8d","id":2693,"name":"Approval","nameLocation":"3073:8:4","nodeType":"EventDefinition","parameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3107:5:4","nodeType":"VariableDeclaration","scope":2693,"src":"3091:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2683,"name":"address","nodeType":"ElementaryTypeName","src":"3091:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2686,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"3138:7:4","nodeType":"VariableDeclaration","scope":2693,"src":"3122:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2685,"name":"address","nodeType":"ElementaryTypeName","src":"3122:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2689,"indexed":false,"mutability":"mutable","name":"methods","nameLocation":"3164:7:4","nodeType":"VariableDeclaration","scope":2693,"src":"3155:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2687,"name":"string","nodeType":"ElementaryTypeName","src":"3155:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2688,"nodeType":"ArrayTypeName","src":"3155:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2691,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3189:5:4","nodeType":"VariableDeclaration","scope":2693,"src":"3181:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3081:119:4"},"src":"3067:134:4"},{"anonymous":false,"documentation":{"id":2694,"nodeType":"StructuredDocumentation","src":"3207:541:4","text":"@dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\n allowance method. The values field specifies the new allowances and the methods field holds the\n information for which methods the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set.\n @param values The amounts of tokens approved to be spent."},"eventSelector":"5a22c7e8af595d94a6d652de8e346a8ecdfe49fc2e0e976f33c9fc9358390ea4","id":2706,"name":"AllowanceChange","nameLocation":"3759:15:4","nodeType":"EventDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3800:5:4","nodeType":"VariableDeclaration","scope":2706,"src":"3784:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"3784:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2698,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"3831:7:4","nodeType":"VariableDeclaration","scope":2706,"src":"3815:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2697,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2701,"indexed":false,"mutability":"mutable","name":"methods","nameLocation":"3857:7:4","nodeType":"VariableDeclaration","scope":2706,"src":"3848:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"3848:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2700,"nodeType":"ArrayTypeName","src":"3848:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2704,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"3884:6:4","nodeType":"VariableDeclaration","scope":2706,"src":"3874:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2703,"nodeType":"ArrayTypeName","src":"3874:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3774:122:4"},"src":"3753:144:4"}],"scope":2708,"src":"222:3677:4","usedErrors":[]}],"src":"36:3864:4"},"id":4},"contracts/precompiles/common/GenericAuthorization.sol":{"ast":{"absolutePath":"contracts/precompiles/common/GenericAuthorization.sol","exportedSymbols":{"GenericAuthorizationI":[2753]},"id":2754,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":2709,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:5"},{"abstract":false,"baseContracts":[],"canonicalName":"GenericAuthorizationI","contractDependencies":[],"contractKind":"interface","documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"63:159:5","text":"@author Evmos Team\n @title Authorization Interface\n @dev The interface through which solidity contracts will interact with smart contract approvals."},"fullyImplemented":false,"id":2753,"linearizedBaseContracts":[2753],"name":"GenericAuthorizationI","nameLocation":"232:21:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2711,"nodeType":"StructuredDocumentation","src":"260:306:5","text":"@dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."},"functionSelector":"7a9841ed","id":2721,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"580:7:5","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"spender","nameLocation":"605:7:5","nodeType":"VariableDeclaration","scope":2721,"src":"597:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2712,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"methods","nameLocation":"640:7:5","nodeType":"VariableDeclaration","scope":2721,"src":"622:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2714,"name":"string","nodeType":"ElementaryTypeName","src":"622:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2715,"nodeType":"ArrayTypeName","src":"622:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"587:66:5"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"approved","nameLocation":"677:8:5","nodeType":"VariableDeclaration","scope":2721,"src":"672:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2718,"name":"bool","nodeType":"ElementaryTypeName","src":"672:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"671:15:5"},"scope":2753,"src":"571:116:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2722,"nodeType":"StructuredDocumentation","src":"693:265:5","text":"@dev Revokes a list of Cosmos transactions.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods to revoke.\n @return revoked Boolean value to indicate if the revocation was successful."},"functionSelector":"61dc5c3b","id":2732,"implemented":false,"kind":"function","modifiers":[],"name":"revoke","nameLocation":"972:6:5","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"spender","nameLocation":"996:7:5","nodeType":"VariableDeclaration","scope":2732,"src":"988:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"methods","nameLocation":"1031:7:5","nodeType":"VariableDeclaration","scope":2732,"src":"1013:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2725,"name":"string","nodeType":"ElementaryTypeName","src":"1013:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2726,"nodeType":"ArrayTypeName","src":"1013:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"978:66:5"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"revoked","nameLocation":"1068:7:5","nodeType":"VariableDeclaration","scope":2732,"src":"1063:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2729,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1062:14:5"},"scope":2753,"src":"963:114:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"1083:446:5","text":"@dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n The value field specifies the new allowance and the methods field holds the information for which methods\n the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set."},"eventSelector":"e2d9366a7f75ef8fcafbe7902248eb78d4b2dae87d48522003814979d166ae86","id":2742,"name":"Approval","nameLocation":"1540:8:5","nodeType":"EventDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1574:5:5","nodeType":"VariableDeclaration","scope":2742,"src":"1558:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"1558:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2737,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"1605:7:5","nodeType":"VariableDeclaration","scope":2742,"src":"1589:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2736,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2740,"indexed":false,"mutability":"mutable","name":"methods","nameLocation":"1631:7:5","nodeType":"VariableDeclaration","scope":2742,"src":"1622:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2738,"name":"string","nodeType":"ElementaryTypeName","src":"1622:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2739,"nodeType":"ArrayTypeName","src":"1622:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"1548:96:5"},"src":"1534:111:5"},{"anonymous":false,"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"1651:275:5","text":"@dev This event is emitted when an owner revokes a spender's allowance.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set."},"eventSelector":"b0901d422521d0496e60bfbd8023b219d603a6cb950b43b2fe95043676cb353e","id":2752,"name":"Revocation","nameLocation":"1937:10:5","nodeType":"EventDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1973:5:5","nodeType":"VariableDeclaration","scope":2752,"src":"1957:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"1957:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2747,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2004:7:5","nodeType":"VariableDeclaration","scope":2752,"src":"1988:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2746,"name":"address","nodeType":"ElementaryTypeName","src":"1988:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2750,"indexed":false,"mutability":"mutable","name":"methods","nameLocation":"2030:7:5","nodeType":"VariableDeclaration","scope":2752,"src":"2021:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2748,"name":"string","nodeType":"ElementaryTypeName","src":"2021:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2749,"nodeType":"ArrayTypeName","src":"2021:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"1947:96:5"},"src":"1931:113:5"}],"scope":2754,"src":"222:1824:5","usedErrors":[]}],"src":"36:2011:5"},"id":5},"contracts/precompiles/common/Types.sol":{"ast":{"absolutePath":"contracts/precompiles/common/Types.sol","exportedSymbols":{"Coin":[2765],"Dec":[2760],"DecCoin":[2772],"PageResponse":[2777]},"id":2778,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":2755,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:6"},{"canonicalName":"Dec","id":2760,"members":[{"constant":false,"id":2757,"mutability":"mutable","name":"value","nameLocation":"88:5:6","nodeType":"VariableDeclaration","scope":2760,"src":"80:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"80:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"precision","nameLocation":"105:9:6","nodeType":"VariableDeclaration","scope":2760,"src":"99:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2758,"name":"uint8","nodeType":"ElementaryTypeName","src":"99:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"Dec","nameLocation":"70:3:6","nodeType":"StructDefinition","scope":2778,"src":"63:54:6","visibility":"public"},{"canonicalName":"Coin","id":2765,"members":[{"constant":false,"id":2762,"mutability":"mutable","name":"denom","nameLocation":"229:5:6","nodeType":"VariableDeclaration","scope":2765,"src":"222:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2761,"name":"string","nodeType":"ElementaryTypeName","src":"222:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"amount","nameLocation":"248:6:6","nodeType":"VariableDeclaration","scope":2765,"src":"240:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"240:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Coin","nameLocation":"211:4:6","nodeType":"StructDefinition","scope":2778,"src":"204:53:6","visibility":"public"},{"canonicalName":"DecCoin","id":2772,"members":[{"constant":false,"id":2767,"mutability":"mutable","name":"denom","nameLocation":"388:5:6","nodeType":"VariableDeclaration","scope":2772,"src":"381:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2766,"name":"string","nodeType":"ElementaryTypeName","src":"381:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"amount","nameLocation":"407:6:6","nodeType":"VariableDeclaration","scope":2772,"src":"399:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"399:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"precision","nameLocation":"425:9:6","nodeType":"VariableDeclaration","scope":2772,"src":"419:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2770,"name":"uint8","nodeType":"ElementaryTypeName","src":"419:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"DecCoin","nameLocation":"367:7:6","nodeType":"StructDefinition","scope":2778,"src":"360:77:6","visibility":"public"},{"canonicalName":"PageResponse","id":2777,"members":[{"constant":false,"id":2774,"mutability":"mutable","name":"nextKey","nameLocation":"538:7:6","nodeType":"VariableDeclaration","scope":2777,"src":"532:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2773,"name":"bytes","nodeType":"ElementaryTypeName","src":"532:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"total","nameLocation":"558:5:6","nodeType":"VariableDeclaration","scope":2777,"src":"551:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2775,"name":"uint64","nodeType":"ElementaryTypeName","src":"551:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"PageResponse","nameLocation":"513:12:6","nodeType":"StructDefinition","scope":2778,"src":"506:60:6","visibility":"public"}],"src":"36:531:6"},"id":6},"contracts/precompiles/stateful/Distribution.sol":{"ast":{"absolutePath":"contracts/precompiles/stateful/Distribution.sol","exportedSymbols":{"Coin":[2765],"DISTRIBUTION_CONTRACT":[2802],"DISTRIBUTION_PRECOMPILE_ADDRESS":[2785],"Dec":[2760],"DecCoin":[2772],"DelegationDelegatorReward":[2826],"DistributionI":[2975],"MSG_SET_WITHDRAWER_ADDRESS":[2789],"MSG_WITHDRAW_DELEGATOR_REWARD":[2792],"MSG_WITHDRAW_VALIDATOR_COMMISSION":[2795],"PageResponse":[2777],"ValidatorDistributionInfo":[2819],"ValidatorSlashEvent":[2808],"genericAuth":[2780]},"id":2976,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":2779,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:7"},{"absolutePath":"contracts/precompiles/common/GenericAuthorization.sol","file":"../common/GenericAuthorization.sol","id":2780,"nameLocation":"110:11:7","nodeType":"ImportDirective","scope":2976,"sourceUnit":2754,"src":"63:59:7","symbolAliases":[],"unitAlias":"genericAuth"},{"absolutePath":"contracts/precompiles/common/Types.sol","file":"../common/Types.sol","id":2781,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2976,"sourceUnit":2778,"src":"123:29:7","symbolAliases":[],"unitAlias":""},{"constant":true,"id":2785,"mutability":"constant","name":"DISTRIBUTION_PRECOMPILE_ADDRESS","nameLocation":"218:31:7","nodeType":"VariableDeclaration","scope":2976,"src":"201:93:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"201:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030383031","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"252:42:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000801"},"visibility":"internal"},{"constant":true,"id":2789,"mutability":"constant","name":"MSG_SET_WITHDRAWER_ADDRESS","nameLocation":"369:26:7","nodeType":"VariableDeclaration","scope":2976,"src":"353:97:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2787,"name":"string","nodeType":"ElementaryTypeName","src":"353:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367536574576974686472617741646472657373","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"398:52:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_676444a09bae852212733c06aa01b4fb509c69e94cfae86e091c82c9b8092262","typeString":"literal_string \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\""},"value":"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress"},"visibility":"internal"},{"constant":true,"id":2792,"mutability":"constant","name":"MSG_WITHDRAW_DELEGATOR_REWARD","nameLocation":"468:29:7","nodeType":"VariableDeclaration","scope":2976,"src":"452:105:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2790,"name":"string","nodeType":"ElementaryTypeName","src":"452:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367576974686472617744656c656761746f72526577617264","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"500:57:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a80ac1de3135a636726973fe89306b48710e1e16488d89fb49580776524185b3","typeString":"literal_string \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\""},"value":"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"},"visibility":"internal"},{"constant":true,"id":2795,"mutability":"constant","name":"MSG_WITHDRAW_VALIDATOR_COMMISSION","nameLocation":"575:33:7","nodeType":"VariableDeclaration","scope":2976,"src":"559:113:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2793,"name":"string","nodeType":"ElementaryTypeName","src":"559:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367576974686472617756616c696461746f72436f6d6d697373696f6e","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"611:61:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffe1bf93f0fe502fb0f961db98fe854ee1fd6d2519e43ee67a536717ae34be1b","typeString":"literal_string \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\""},"value":"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"},"visibility":"internal"},{"constant":true,"id":2802,"mutability":"constant","name":"DISTRIBUTION_CONTRACT","nameLocation":"746:21:7","nodeType":"VariableDeclaration","scope":2976,"src":"723:93:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2975","typeString":"contract DistributionI"},"typeName":{"id":2798,"nodeType":"UserDefinedTypeName","pathNode":{"id":2797,"name":"DistributionI","nameLocations":["723:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":2975,"src":"723:13:7"},"referencedDeclaration":2975,"src":"723:13:7","typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2975","typeString":"contract DistributionI"}},"value":{"arguments":[{"id":2800,"name":"DISTRIBUTION_PRECOMPILE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"784:31:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2799,"name":"DistributionI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"770:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DistributionI_$2975_$","typeString":"type(contract DistributionI)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"770:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2975","typeString":"contract DistributionI"}},"visibility":"internal"},{"canonicalName":"ValidatorSlashEvent","id":2808,"members":[{"constant":false,"id":2804,"mutability":"mutable","name":"validatorPeriod","nameLocation":"859:15:7","nodeType":"VariableDeclaration","scope":2808,"src":"852:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2803,"name":"uint64","nodeType":"ElementaryTypeName","src":"852:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"fraction","nameLocation":"884:8:7","nodeType":"VariableDeclaration","scope":2808,"src":"880:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Dec_$2760_storage_ptr","typeString":"struct Dec"},"typeName":{"id":2806,"nodeType":"UserDefinedTypeName","pathNode":{"id":2805,"name":"Dec","nameLocations":["880:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":2760,"src":"880:3:7"},"referencedDeclaration":2760,"src":"880:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Dec_$2760_storage_ptr","typeString":"struct Dec"}},"visibility":"internal"}],"name":"ValidatorSlashEvent","nameLocation":"826:19:7","nodeType":"StructDefinition","scope":2976,"src":"819:76:7","visibility":"public"},{"canonicalName":"ValidatorDistributionInfo","id":2819,"members":[{"constant":false,"id":2810,"mutability":"mutable","name":"operatorAddress","nameLocation":"943:15:7","nodeType":"VariableDeclaration","scope":2819,"src":"936:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2809,"name":"string","nodeType":"ElementaryTypeName","src":"936:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2814,"mutability":"mutable","name":"selfBondRewards","nameLocation":"974:15:7","nodeType":"VariableDeclaration","scope":2819,"src":"964:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2812,"nodeType":"UserDefinedTypeName","pathNode":{"id":2811,"name":"DecCoin","nameLocations":["964:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"964:7:7"},"referencedDeclaration":2772,"src":"964:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2772_storage_ptr","typeString":"struct DecCoin"}},"id":2813,"nodeType":"ArrayTypeName","src":"964:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"},{"constant":false,"id":2818,"mutability":"mutable","name":"commission","nameLocation":"1005:10:7","nodeType":"VariableDeclaration","scope":2819,"src":"995:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2816,"nodeType":"UserDefinedTypeName","pathNode":{"id":2815,"name":"DecCoin","nameLocations":["995:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"995:7:7"},"referencedDeclaration":2772,"src":"995:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2772_storage_ptr","typeString":"struct DecCoin"}},"id":2817,"nodeType":"ArrayTypeName","src":"995:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"name":"ValidatorDistributionInfo","nameLocation":"904:25:7","nodeType":"StructDefinition","scope":2976,"src":"897:121:7","visibility":"public"},{"canonicalName":"DelegationDelegatorReward","id":2826,"members":[{"constant":false,"id":2821,"mutability":"mutable","name":"validatorAddress","nameLocation":"1066:16:7","nodeType":"VariableDeclaration","scope":2826,"src":"1059:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2820,"name":"string","nodeType":"ElementaryTypeName","src":"1059:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"reward","nameLocation":"1098:6:7","nodeType":"VariableDeclaration","scope":2826,"src":"1088:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2823,"nodeType":"UserDefinedTypeName","pathNode":{"id":2822,"name":"DecCoin","nameLocations":["1088:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"1088:7:7"},"referencedDeclaration":2772,"src":"1088:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2772_storage_ptr","typeString":"struct DecCoin"}},"id":2824,"nodeType":"ArrayTypeName","src":"1088:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"name":"DelegationDelegatorReward","nameLocation":"1027:25:7","nodeType":"StructDefinition","scope":2976,"src":"1020:87:7","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":2828,"name":"genericAuth.GenericAuthorizationI","nameLocations":["1354:11:7","1366:21:7"],"nodeType":"IdentifierPath","referencedDeclaration":2753,"src":"1354:33:7"},"id":2829,"nodeType":"InheritanceSpecifier","src":"1354:33:7"}],"canonicalName":"DistributionI","contractDependencies":[],"contractKind":"interface","documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"1109:218:7","text":"@author Evmos Team\n @title Distribution Precompile Contract\n @dev The interface through which solidity contracts will interact with Distribution\n @custom:address 0x0000000000000000000000000000000000000801"},"fullyImplemented":false,"id":2975,"linearizedBaseContracts":[2975,2753],"name":"DistributionI","nameLocation":"1337:13:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2830,"nodeType":"StructuredDocumentation","src":"1394:344:7","text":"TRANSACTIONS\n @dev Change the address, that can withdraw the rewards of a delegator.\n Note that this address cannot be a module account.\n @param delegatorAddress The address of the delegator\n @param withdrawerAddress The address that will be capable of withdrawing rewards for\n the given delegator address"},"functionSelector":"5a9d9a96","id":2839,"implemented":false,"kind":"function","modifiers":[],"name":"setWithdrawAddress","nameLocation":"1752:18:7","nodeType":"FunctionDefinition","parameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"delegatorAddress","nameLocation":"1788:16:7","nodeType":"VariableDeclaration","scope":2839,"src":"1780:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2831,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"withdrawerAddress","nameLocation":"1828:17:7","nodeType":"VariableDeclaration","scope":2839,"src":"1814:31:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2833,"name":"string","nodeType":"ElementaryTypeName","src":"1814:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1770:81:7"},"returnParameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"success","nameLocation":"1875:7:7","nodeType":"VariableDeclaration","scope":2839,"src":"1870:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2836,"name":"bool","nodeType":"ElementaryTypeName","src":"1870:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1869:14:7"},"scope":2975,"src":"1743:141:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"1890:235:7","text":"@dev Withdraw the rewards of a delegator from a validator\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @return amount The amount of Coin withdrawn"},"functionSelector":"b46a8d61","id":2851,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawDelegatorRewards","nameLocation":"2139:24:7","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"delegatorAddress","nameLocation":"2181:16:7","nodeType":"VariableDeclaration","scope":2851,"src":"2173:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2841,"name":"address","nodeType":"ElementaryTypeName","src":"2173:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"validatorAddress","nameLocation":"2221:16:7","nodeType":"VariableDeclaration","scope":2851,"src":"2207:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2843,"name":"string","nodeType":"ElementaryTypeName","src":"2207:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2163:80:7"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"amount","nameLocation":"2295:6:7","nodeType":"VariableDeclaration","scope":2851,"src":"2279:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2765_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Coin[]"},"typeName":{"baseType":{"id":2847,"nodeType":"UserDefinedTypeName","pathNode":{"id":2846,"name":"Coin","nameLocations":["2279:4:7"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"2279:4:7"},"referencedDeclaration":2765,"src":"2279:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2765_storage_ptr","typeString":"struct Coin"}},"id":2848,"nodeType":"ArrayTypeName","src":"2279:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2765_storage_$dyn_storage_ptr","typeString":"struct Coin[]"}},"visibility":"internal"}],"src":"2269:38:7"},"scope":2975,"src":"2130:178:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2852,"nodeType":"StructuredDocumentation","src":"2314:170:7","text":"@dev Withdraws the rewards commission of a validator.\n @param validatorAddress The address of the validator\n @return amount The amount of Coin withdrawn"},"functionSelector":"3ce4e3be","id":2861,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawValidatorCommission","nameLocation":"2498:27:7","nodeType":"FunctionDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"validatorAddress","nameLocation":"2549:16:7","nodeType":"VariableDeclaration","scope":2861,"src":"2535:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2853,"name":"string","nodeType":"ElementaryTypeName","src":"2535:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2525:46:7"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"amount","nameLocation":"2623:6:7","nodeType":"VariableDeclaration","scope":2861,"src":"2607:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2765_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Coin[]"},"typeName":{"baseType":{"id":2857,"nodeType":"UserDefinedTypeName","pathNode":{"id":2856,"name":"Coin","nameLocations":["2607:4:7"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"2607:4:7"},"referencedDeclaration":2765,"src":"2607:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2765_storage_ptr","typeString":"struct Coin"}},"id":2858,"nodeType":"ArrayTypeName","src":"2607:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2765_storage_$dyn_storage_ptr","typeString":"struct Coin[]"}},"visibility":"internal"}],"src":"2597:38:7"},"scope":2975,"src":"2489:147:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"2642:224:7","text":"QUERIES\n @dev Queries validator commission and self-delegation rewards for validator.\n @param validatorAddress The address of the validator\n @return distributionInfo The validator's distribution info"},"functionSelector":"54212a89","id":2871,"implemented":false,"kind":"function","modifiers":[],"name":"validatorDistributionInfo","nameLocation":"2880:25:7","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"validatorAddress","nameLocation":"2929:16:7","nodeType":"VariableDeclaration","scope":2871,"src":"2915:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2863,"name":"string","nodeType":"ElementaryTypeName","src":"2915:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2905:46:7"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"distributionInfo","nameLocation":"3033:16:7","nodeType":"VariableDeclaration","scope":2871,"src":"2996:53:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ValidatorDistributionInfo_$2819_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ValidatorDistributionInfo[]"},"typeName":{"baseType":{"id":2867,"nodeType":"UserDefinedTypeName","pathNode":{"id":2866,"name":"ValidatorDistributionInfo","nameLocations":["2996:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":2819,"src":"2996:25:7"},"referencedDeclaration":2819,"src":"2996:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorDistributionInfo_$2819_storage_ptr","typeString":"struct ValidatorDistributionInfo"}},"id":2868,"nodeType":"ArrayTypeName","src":"2996:27:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ValidatorDistributionInfo_$2819_storage_$dyn_storage_ptr","typeString":"struct ValidatorDistributionInfo[]"}},"visibility":"internal"}],"src":"2986:104:7"},"scope":2975,"src":"2871:220:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"3097:185:7","text":"@dev Queries the outstanding rewards of a validator address.\n @param validatorAddress The address of the validator\n @return rewards The validator's outstanding rewards"},"functionSelector":"85b2d2da","id":2881,"implemented":false,"kind":"function","modifiers":[],"name":"validatorOutstandingRewards","nameLocation":"3296:27:7","nodeType":"FunctionDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"validatorAddress","nameLocation":"3347:16:7","nodeType":"VariableDeclaration","scope":2881,"src":"3333:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2873,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3323:46:7"},"returnParameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"rewards","nameLocation":"3433:7:7","nodeType":"VariableDeclaration","scope":2881,"src":"3414:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2877,"nodeType":"UserDefinedTypeName","pathNode":{"id":2876,"name":"DecCoin","nameLocations":["3414:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"3414:7:7"},"referencedDeclaration":2772,"src":"3414:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2772_storage_ptr","typeString":"struct DecCoin"}},"id":2878,"nodeType":"ArrayTypeName","src":"3414:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"src":"3404:42:7"},"scope":2975,"src":"3287:160:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2882,"nodeType":"StructuredDocumentation","src":"3453:175:7","text":"@dev Queries the accumulated commission for a validator.\n @param validatorAddress The address of the validator\n @return commission The validator's commission"},"functionSelector":"3dd40f78","id":2891,"implemented":false,"kind":"function","modifiers":[],"name":"validatorCommission","nameLocation":"3642:19:7","nodeType":"FunctionDefinition","parameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"validatorAddress","nameLocation":"3685:16:7","nodeType":"VariableDeclaration","scope":2891,"src":"3671:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2883,"name":"string","nodeType":"ElementaryTypeName","src":"3671:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3661:46:7"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"commission","nameLocation":"3771:10:7","nodeType":"VariableDeclaration","scope":2891,"src":"3752:29:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2887,"nodeType":"UserDefinedTypeName","pathNode":{"id":2886,"name":"DecCoin","nameLocations":["3752:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"3752:7:7"},"referencedDeclaration":2772,"src":"3752:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2772_storage_ptr","typeString":"struct DecCoin"}},"id":2888,"nodeType":"ArrayTypeName","src":"3752:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"src":"3742:45:7"},"scope":2975,"src":"3633:155:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2892,"nodeType":"StructuredDocumentation","src":"3794:407:7","text":"@dev Queries the slashing events for a validator in a given height interval\n defined by the starting and ending height.\n @param validatorAddress The address of the validator\n @param startingHeight The starting height\n @param endingHeight The ending height\n @return slashes The validator's slash events\n @return pageResponse The pagination response for the query"},"functionSelector":"a75395a5","id":2908,"implemented":false,"kind":"function","modifiers":[],"name":"validatorSlashes","nameLocation":"4215:16:7","nodeType":"FunctionDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"validatorAddress","nameLocation":"4255:16:7","nodeType":"VariableDeclaration","scope":2908,"src":"4241:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2893,"name":"string","nodeType":"ElementaryTypeName","src":"4241:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2896,"mutability":"mutable","name":"startingHeight","nameLocation":"4288:14:7","nodeType":"VariableDeclaration","scope":2908,"src":"4281:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2895,"name":"uint64","nodeType":"ElementaryTypeName","src":"4281:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2898,"mutability":"mutable","name":"endingHeight","nameLocation":"4319:12:7","nodeType":"VariableDeclaration","scope":2908,"src":"4312:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2897,"name":"uint64","nodeType":"ElementaryTypeName","src":"4312:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4231:106:7"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"slashes","nameLocation":"4413:7:7","nodeType":"VariableDeclaration","scope":2908,"src":"4382:38:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ValidatorSlashEvent_$2808_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ValidatorSlashEvent[]"},"typeName":{"baseType":{"id":2901,"nodeType":"UserDefinedTypeName","pathNode":{"id":2900,"name":"ValidatorSlashEvent","nameLocations":["4382:19:7"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"4382:19:7"},"referencedDeclaration":2808,"src":"4382:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorSlashEvent_$2808_storage_ptr","typeString":"struct ValidatorSlashEvent"}},"id":2902,"nodeType":"ArrayTypeName","src":"4382:21:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ValidatorSlashEvent_$2808_storage_$dyn_storage_ptr","typeString":"struct ValidatorSlashEvent[]"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"pageResponse","nameLocation":"4452:12:7","nodeType":"VariableDeclaration","scope":2908,"src":"4430:34:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PageResponse_$2777_calldata_ptr","typeString":"struct PageResponse"},"typeName":{"id":2905,"nodeType":"UserDefinedTypeName","pathNode":{"id":2904,"name":"PageResponse","nameLocations":["4430:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"4430:12:7"},"referencedDeclaration":2777,"src":"4430:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_PageResponse_$2777_storage_ptr","typeString":"struct PageResponse"}},"visibility":"internal"}],"src":"4372:98:7"},"scope":2975,"src":"4206:265:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2909,"nodeType":"StructuredDocumentation","src":"4477:293:7","text":"@dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @return rewards The total rewards accrued by a delegation."},"functionSelector":"9ad563b4","id":2920,"implemented":false,"kind":"function","modifiers":[],"name":"delegationRewards","nameLocation":"4784:17:7","nodeType":"FunctionDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"delegatorAddress","nameLocation":"4819:16:7","nodeType":"VariableDeclaration","scope":2920,"src":"4811:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2910,"name":"address","nodeType":"ElementaryTypeName","src":"4811:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"validatorAddress","nameLocation":"4859:16:7","nodeType":"VariableDeclaration","scope":2920,"src":"4845:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2912,"name":"string","nodeType":"ElementaryTypeName","src":"4845:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4801:80:7"},"returnParameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"rewards","nameLocation":"4945:7:7","nodeType":"VariableDeclaration","scope":2920,"src":"4926:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2916,"nodeType":"UserDefinedTypeName","pathNode":{"id":2915,"name":"DecCoin","nameLocations":["4926:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"4926:7:7"},"referencedDeclaration":2772,"src":"4926:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2772_storage_ptr","typeString":"struct DecCoin"}},"id":2917,"nodeType":"ArrayTypeName","src":"4926:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"src":"4916:42:7"},"scope":2975,"src":"4775:184:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"4965:318:7","text":"@dev Queries the total rewards accrued by each validator, that a given\n address has delegated to.\n @param delegatorAddress The address of the delegator\n @return rewards The total rewards accrued by each validator for a delegator.\n @return total The total rewards accrued by a delegator."},"functionSelector":"54be1a28","id":2934,"implemented":false,"kind":"function","modifiers":[],"name":"delegationTotalRewards","nameLocation":"5297:22:7","nodeType":"FunctionDefinition","parameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"delegatorAddress","nameLocation":"5337:16:7","nodeType":"VariableDeclaration","scope":2934,"src":"5329:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2922,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5319:40:7"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2928,"mutability":"mutable","name":"rewards","nameLocation":"5441:7:7","nodeType":"VariableDeclaration","scope":2934,"src":"5404:44:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DelegationDelegatorReward_$2826_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DelegationDelegatorReward[]"},"typeName":{"baseType":{"id":2926,"nodeType":"UserDefinedTypeName","pathNode":{"id":2925,"name":"DelegationDelegatorReward","nameLocations":["5404:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":2826,"src":"5404:25:7"},"referencedDeclaration":2826,"src":"5404:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_DelegationDelegatorReward_$2826_storage_ptr","typeString":"struct DelegationDelegatorReward"}},"id":2927,"nodeType":"ArrayTypeName","src":"5404:27:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DelegationDelegatorReward_$2826_storage_$dyn_storage_ptr","typeString":"struct DelegationDelegatorReward[]"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"total","nameLocation":"5477:5:7","nodeType":"VariableDeclaration","scope":2934,"src":"5458:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2930,"nodeType":"UserDefinedTypeName","pathNode":{"id":2929,"name":"DecCoin","nameLocations":["5458:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"5458:7:7"},"referencedDeclaration":2772,"src":"5458:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2772_storage_ptr","typeString":"struct DecCoin"}},"id":2931,"nodeType":"ArrayTypeName","src":"5458:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2772_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"src":"5394:94:7"},"scope":2975,"src":"5288:201:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2935,"nodeType":"StructuredDocumentation","src":"5495:237:7","text":"@dev Queries all validators, that a given address has delegated to.\n @param delegatorAddress The address of the delegator\n @return validators The addresses of all validators, that were delegated to by the given address."},"functionSelector":"a66cb605","id":2943,"implemented":false,"kind":"function","modifiers":[],"name":"delegatorValidators","nameLocation":"5746:19:7","nodeType":"FunctionDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"delegatorAddress","nameLocation":"5783:16:7","nodeType":"VariableDeclaration","scope":2943,"src":"5775:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2936,"name":"address","nodeType":"ElementaryTypeName","src":"5775:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5765:40:7"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2941,"mutability":"mutable","name":"validators","nameLocation":"5847:10:7","nodeType":"VariableDeclaration","scope":2943,"src":"5829:28:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2939,"name":"string","nodeType":"ElementaryTypeName","src":"5829:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2940,"nodeType":"ArrayTypeName","src":"5829:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5828:30:7"},"scope":2975,"src":"5737:122:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2944,"nodeType":"StructuredDocumentation","src":"5865:237:7","text":"@dev Queries the address capable of withdrawing rewards for a given delegator.\n @param delegatorAddress The address of the delegator\n @return withdrawAddress The address capable of withdrawing rewards for the delegator."},"functionSelector":"5431f450","id":2951,"implemented":false,"kind":"function","modifiers":[],"name":"delegatorWithdrawAddress","nameLocation":"6116:24:7","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"delegatorAddress","nameLocation":"6158:16:7","nodeType":"VariableDeclaration","scope":2951,"src":"6150:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2945,"name":"address","nodeType":"ElementaryTypeName","src":"6150:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6140:40:7"},"returnParameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"withdrawAddress","nameLocation":"6218:15:7","nodeType":"VariableDeclaration","scope":2951,"src":"6204:29:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2948,"name":"string","nodeType":"ElementaryTypeName","src":"6204:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6203:31:7"},"scope":2975,"src":"6107:128:7","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":2952,"nodeType":"StructuredDocumentation","src":"6241:215:7","text":"@dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\n @param caller the caller of the transaction\n @param withdrawerAddress the newly set withdrawer address"},"eventSelector":"b55d29542a844fa64e70cbc06556201957fa0253fe7b54677830b586e2288e1e","id":2958,"name":"SetWithdrawerAddress","nameLocation":"6467:20:7","nodeType":"EventDefinition","parameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"6513:6:7","nodeType":"VariableDeclaration","scope":2958,"src":"6497:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"6497:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2956,"indexed":false,"mutability":"mutable","name":"withdrawerAddress","nameLocation":"6536:17:7","nodeType":"VariableDeclaration","scope":2958,"src":"6529:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2955,"name":"string","nodeType":"ElementaryTypeName","src":"6529:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6487:72:7"},"src":"6461:99:7"},{"anonymous":false,"documentation":{"id":2959,"nodeType":"StructuredDocumentation","src":"6566:294:7","text":"@dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\n @param delegatorAddress the address of the delegator\n @param validatorAddress the address of the validator\n @param amount the amount being withdrawn from the delegation"},"eventSelector":"8d0912e7f8b09f64d001b73731ae9eecce7fe900e91a92ee9499659777450112","id":2967,"name":"WithdrawDelegatorRewards","nameLocation":"6871:24:7","nodeType":"EventDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"indexed":true,"mutability":"mutable","name":"delegatorAddress","nameLocation":"6921:16:7","nodeType":"VariableDeclaration","scope":2967,"src":"6905:32:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2960,"name":"address","nodeType":"ElementaryTypeName","src":"6905:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2963,"indexed":true,"mutability":"mutable","name":"validatorAddress","nameLocation":"6962:16:7","nodeType":"VariableDeclaration","scope":2967,"src":"6947:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2962,"name":"string","nodeType":"ElementaryTypeName","src":"6947:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2965,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6996:6:7","nodeType":"VariableDeclaration","scope":2967,"src":"6988:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"6988:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6895:113:7"},"src":"6865:144:7"},{"anonymous":false,"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"7015:246:7","text":"@dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\n @param validatorAddress is the address of the validator\n @param commission is the total commission earned by the validator"},"eventSelector":"27596802346c7411d593e471243e3f9570666fade155d35f26150d851fdaf587","id":2974,"name":"WithdrawValidatorCommission","nameLocation":"7272:27:7","nodeType":"EventDefinition","parameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"indexed":true,"mutability":"mutable","name":"validatorAddress","nameLocation":"7324:16:7","nodeType":"VariableDeclaration","scope":2974,"src":"7309:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2969,"name":"string","nodeType":"ElementaryTypeName","src":"7309:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2972,"indexed":false,"mutability":"mutable","name":"commission","nameLocation":"7358:10:7","nodeType":"VariableDeclaration","scope":2974,"src":"7350:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"7350:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7299:75:7"},"src":"7266:109:7"}],"scope":2976,"src":"1327:6050:7","usedErrors":[]}],"src":"36:7342:7"},"id":7},"contracts/precompiles/stateful/Staking.sol":{"ast":{"absolutePath":"contracts/precompiles/stateful/Staking.sol","exportedSymbols":{"BondStatus":[3093],"Coin":[2765],"Commission":[3016],"CommissionRates":[3010],"Dec":[2760],"DecCoin":[2772],"MSG_CANCEL_UNDELEGATION":[3003],"MSG_DELEGATE":[2994],"MSG_REDELEGATE":[3000],"MSG_UNDELEGATE":[2997],"PageRequest":[3088],"PageResponse":[2777],"Redelegation":[3053],"RedelegationEntry":[3068],"RedelegationEntryResponse":[3059],"RedelegationResponse":[3048],"STAKING_CONTRACT":[2990],"STAKING_PRECOMPILE_ADDRESS":[2983],"StakingI":[3276],"UnbondingDelegationEntry":[3077],"Validator":[3040],"authorization":[2978]},"id":3277,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":2977,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:8"},{"absolutePath":"contracts/precompiles/common/Authorization.sol","file":"../common/Authorization.sol","id":2978,"nameLocation":"103:13:8","nodeType":"ImportDirective","scope":3277,"sourceUnit":2708,"src":"63:54:8","symbolAliases":[],"unitAlias":"authorization"},{"absolutePath":"contracts/precompiles/common/Types.sol","file":"../common/Types.sol","id":2979,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3277,"sourceUnit":2778,"src":"118:29:8","symbolAliases":[],"unitAlias":""},{"constant":true,"id":2983,"mutability":"constant","name":"STAKING_PRECOMPILE_ADDRESS","nameLocation":"208:26:8","nodeType":"VariableDeclaration","scope":3277,"src":"191:88:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"191:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030383030","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"237:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000800"},"visibility":"internal"},{"constant":true,"id":2990,"mutability":"constant","name":"STAKING_CONTRACT","nameLocation":"343:16:8","nodeType":"VariableDeclaration","scope":3277,"src":"325:73:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3276","typeString":"contract StakingI"},"typeName":{"id":2986,"nodeType":"UserDefinedTypeName","pathNode":{"id":2985,"name":"StakingI","nameLocations":["325:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3276,"src":"325:8:8"},"referencedDeclaration":3276,"src":"325:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3276","typeString":"contract StakingI"}},"value":{"arguments":[{"id":2988,"name":"STAKING_PRECOMPILE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"371:26:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2987,"name":"StakingI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"362:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StakingI_$3276_$","typeString":"type(contract StakingI)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"362:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3276","typeString":"contract StakingI"}},"visibility":"internal"},{"constant":true,"id":2994,"mutability":"constant","name":"MSG_DELEGATE","nameLocation":"468:12:8","nodeType":"VariableDeclaration","scope":3277,"src":"452:68:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2992,"name":"string","nodeType":"ElementaryTypeName","src":"452:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e7374616b696e672e763162657461312e4d736744656c6567617465","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"483:37:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf6973116593306cc0951019eb89d8793e3ad1184c238374870ee84cdf3b48f2","typeString":"literal_string \"/cosmos.staking.v1beta1.MsgDelegate\""},"value":"/cosmos.staking.v1beta1.MsgDelegate"},"visibility":"internal"},{"constant":true,"id":2997,"mutability":"constant","name":"MSG_UNDELEGATE","nameLocation":"538:14:8","nodeType":"VariableDeclaration","scope":3277,"src":"522:72:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2995,"name":"string","nodeType":"ElementaryTypeName","src":"522:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e7374616b696e672e763162657461312e4d7367556e64656c6567617465","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"555:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7bec820b0e77f69a2a4cef6889125fb33e19db973c1ca85e0dd86c66e2473513","typeString":"literal_string \"/cosmos.staking.v1beta1.MsgUndelegate\""},"value":"/cosmos.staking.v1beta1.MsgUndelegate"},"visibility":"internal"},{"constant":true,"id":3000,"mutability":"constant","name":"MSG_REDELEGATE","nameLocation":"612:14:8","nodeType":"VariableDeclaration","scope":3277,"src":"596:77:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2998,"name":"string","nodeType":"ElementaryTypeName","src":"596:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c6567617465","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"629:44:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_017e571b15ba8f3567be32b8c9b4c10b5aee7936471accdc36d1737426796a31","typeString":"literal_string \"/cosmos.staking.v1beta1.MsgBeginRedelegate\""},"value":"/cosmos.staking.v1beta1.MsgBeginRedelegate"},"visibility":"internal"},{"constant":true,"id":3003,"mutability":"constant","name":"MSG_CANCEL_UNDELEGATION","nameLocation":"691:23:8","nodeType":"VariableDeclaration","scope":3277,"src":"675:96:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3001,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e7374616b696e672e763162657461312e4d736743616e63656c556e626f6e64696e6744656c65676174696f6e","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"717:54:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1cece22c3c2e8266c4849b858697c9d8fe37da1e4be1a557d17c5ce6597822d","typeString":"literal_string \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\""},"value":"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation"},"visibility":"internal"},{"canonicalName":"CommissionRates","id":3010,"members":[{"constant":false,"id":3005,"mutability":"mutable","name":"rate","nameLocation":"898:4:8","nodeType":"VariableDeclaration","scope":3010,"src":"890:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3004,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"maxRate","nameLocation":"916:7:8","nodeType":"VariableDeclaration","scope":3010,"src":"908:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"908:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3009,"mutability":"mutable","name":"maxChangeRate","nameLocation":"937:13:8","nodeType":"VariableDeclaration","scope":3010,"src":"929:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CommissionRates","nameLocation":"868:15:8","nodeType":"StructDefinition","scope":3277,"src":"861:92:8","visibility":"public"},{"canonicalName":"Commission","id":3016,"members":[{"constant":false,"id":3013,"mutability":"mutable","name":"commissionRates","nameLocation":"1057:15:8","nodeType":"VariableDeclaration","scope":3016,"src":"1041:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_CommissionRates_$3010_storage_ptr","typeString":"struct CommissionRates"},"typeName":{"id":3012,"nodeType":"UserDefinedTypeName","pathNode":{"id":3011,"name":"CommissionRates","nameLocations":["1041:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":3010,"src":"1041:15:8"},"referencedDeclaration":3010,"src":"1041:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_CommissionRates_$3010_storage_ptr","typeString":"struct CommissionRates"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"updateTime","nameLocation":"1086:10:8","nodeType":"VariableDeclaration","scope":3016,"src":"1078:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1078:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Commission","nameLocation":"1024:10:8","nodeType":"StructDefinition","scope":3277,"src":"1017:82:8","visibility":"public"},{"canonicalName":"Validator","id":3040,"members":[{"constant":false,"id":3018,"mutability":"mutable","name":"operatorAddress","nameLocation":"1187:15:8","nodeType":"VariableDeclaration","scope":3040,"src":"1180:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3017,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"consensusPubkey","nameLocation":"1215:15:8","nodeType":"VariableDeclaration","scope":3040,"src":"1208:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3019,"name":"string","nodeType":"ElementaryTypeName","src":"1208:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"jailed","nameLocation":"1241:6:8","nodeType":"VariableDeclaration","scope":3040,"src":"1236:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3021,"name":"bool","nodeType":"ElementaryTypeName","src":"1236:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"status","nameLocation":"1264:6:8","nodeType":"VariableDeclaration","scope":3040,"src":"1253:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BondStatus_$3093","typeString":"enum BondStatus"},"typeName":{"id":3024,"nodeType":"UserDefinedTypeName","pathNode":{"id":3023,"name":"BondStatus","nameLocations":["1253:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"1253:10:8"},"referencedDeclaration":3093,"src":"1253:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_BondStatus_$3093","typeString":"enum BondStatus"}},"visibility":"internal"},{"constant":false,"id":3027,"mutability":"mutable","name":"tokens","nameLocation":"1284:6:8","nodeType":"VariableDeclaration","scope":3040,"src":"1276:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1276:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3029,"mutability":"mutable","name":"delegatorShares","nameLocation":"1304:15:8","nodeType":"VariableDeclaration","scope":3040,"src":"1296:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1296:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3031,"mutability":"mutable","name":"description","nameLocation":"1332:11:8","nodeType":"VariableDeclaration","scope":3040,"src":"1325:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3030,"name":"string","nodeType":"ElementaryTypeName","src":"1325:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3033,"mutability":"mutable","name":"unbondingHeight","nameLocation":"1355:15:8","nodeType":"VariableDeclaration","scope":3040,"src":"1349:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3032,"name":"int64","nodeType":"ElementaryTypeName","src":"1349:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3035,"mutability":"mutable","name":"unbondingTime","nameLocation":"1382:13:8","nodeType":"VariableDeclaration","scope":3040,"src":"1376:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3034,"name":"int64","nodeType":"ElementaryTypeName","src":"1376:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3037,"mutability":"mutable","name":"commission","nameLocation":"1409:10:8","nodeType":"VariableDeclaration","scope":3040,"src":"1401:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1401:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"minSelfDelegation","nameLocation":"1433:17:8","nodeType":"VariableDeclaration","scope":3040,"src":"1425:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1425:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Validator","nameLocation":"1164:9:8","nodeType":"StructDefinition","scope":3277,"src":"1157:296:8","visibility":"public"},{"canonicalName":"RedelegationResponse","id":3048,"members":[{"constant":false,"id":3043,"mutability":"mutable","name":"redelegation","nameLocation":"1502:12:8","nodeType":"VariableDeclaration","scope":3048,"src":"1489:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Redelegation_$3053_storage_ptr","typeString":"struct Redelegation"},"typeName":{"id":3042,"nodeType":"UserDefinedTypeName","pathNode":{"id":3041,"name":"Redelegation","nameLocations":["1489:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":3053,"src":"1489:12:8"},"referencedDeclaration":3053,"src":"1489:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Redelegation_$3053_storage_ptr","typeString":"struct Redelegation"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"entries","nameLocation":"1548:7:8","nodeType":"VariableDeclaration","scope":3048,"src":"1520:35:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntryResponse_$3059_storage_$dyn_storage_ptr","typeString":"struct RedelegationEntryResponse[]"},"typeName":{"baseType":{"id":3045,"nodeType":"UserDefinedTypeName","pathNode":{"id":3044,"name":"RedelegationEntryResponse","nameLocations":["1520:25:8"],"nodeType":"IdentifierPath","referencedDeclaration":3059,"src":"1520:25:8"},"referencedDeclaration":3059,"src":"1520:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationEntryResponse_$3059_storage_ptr","typeString":"struct RedelegationEntryResponse"}},"id":3046,"nodeType":"ArrayTypeName","src":"1520:27:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntryResponse_$3059_storage_$dyn_storage_ptr","typeString":"struct RedelegationEntryResponse[]"}},"visibility":"internal"}],"name":"RedelegationResponse","nameLocation":"1462:20:8","nodeType":"StructDefinition","scope":3277,"src":"1455:103:8","visibility":"public"},{"canonicalName":"Redelegation","id":3053,"members":[{"constant":false,"id":3052,"mutability":"mutable","name":"entries","nameLocation":"1606:7:8","nodeType":"VariableDeclaration","scope":3053,"src":"1586:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntry_$3068_storage_$dyn_storage_ptr","typeString":"struct RedelegationEntry[]"},"typeName":{"baseType":{"id":3050,"nodeType":"UserDefinedTypeName","pathNode":{"id":3049,"name":"RedelegationEntry","nameLocations":["1586:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":3068,"src":"1586:17:8"},"referencedDeclaration":3068,"src":"1586:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationEntry_$3068_storage_ptr","typeString":"struct RedelegationEntry"}},"id":3051,"nodeType":"ArrayTypeName","src":"1586:19:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntry_$3068_storage_$dyn_storage_ptr","typeString":"struct RedelegationEntry[]"}},"visibility":"internal"}],"name":"Redelegation","nameLocation":"1567:12:8","nodeType":"StructDefinition","scope":3277,"src":"1560:56:8","visibility":"public"},{"canonicalName":"RedelegationEntryResponse","id":3059,"members":[{"constant":false,"id":3056,"mutability":"mutable","name":"redelegationEntry","nameLocation":"1675:17:8","nodeType":"VariableDeclaration","scope":3059,"src":"1657:35:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationEntry_$3068_storage_ptr","typeString":"struct RedelegationEntry"},"typeName":{"id":3055,"nodeType":"UserDefinedTypeName","pathNode":{"id":3054,"name":"RedelegationEntry","nameLocations":["1657:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":3068,"src":"1657:17:8"},"referencedDeclaration":3068,"src":"1657:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationEntry_$3068_storage_ptr","typeString":"struct RedelegationEntry"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"balance","nameLocation":"1706:7:8","nodeType":"VariableDeclaration","scope":3059,"src":"1698:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RedelegationEntryResponse","nameLocation":"1625:25:8","nodeType":"StructDefinition","scope":3277,"src":"1618:98:8","visibility":"public"},{"canonicalName":"RedelegationEntry","id":3068,"members":[{"constant":false,"id":3061,"mutability":"mutable","name":"creationHeight","nameLocation":"1755:14:8","nodeType":"VariableDeclaration","scope":3068,"src":"1749:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3060,"name":"int64","nodeType":"ElementaryTypeName","src":"1749:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"completionTime","nameLocation":"1781:14:8","nodeType":"VariableDeclaration","scope":3068,"src":"1775:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3062,"name":"int64","nodeType":"ElementaryTypeName","src":"1775:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"initialBalance","nameLocation":"1809:14:8","nodeType":"VariableDeclaration","scope":3068,"src":"1801:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1801:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3067,"mutability":"mutable","name":"sharesDst","nameLocation":"1837:9:8","nodeType":"VariableDeclaration","scope":3068,"src":"1829:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RedelegationEntry","nameLocation":"1725:17:8","nodeType":"StructDefinition","scope":3277,"src":"1718:131:8","visibility":"public"},{"canonicalName":"UnbondingDelegationEntry","id":3077,"members":[{"constant":false,"id":3070,"mutability":"mutable","name":"creationHeight","nameLocation":"1895:14:8","nodeType":"VariableDeclaration","scope":3077,"src":"1889:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3069,"name":"int64","nodeType":"ElementaryTypeName","src":"1889:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3072,"mutability":"mutable","name":"completionTime","nameLocation":"1921:14:8","nodeType":"VariableDeclaration","scope":3077,"src":"1915:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3071,"name":"int64","nodeType":"ElementaryTypeName","src":"1915:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"initialBalance","nameLocation":"1949:14:8","nodeType":"VariableDeclaration","scope":3077,"src":"1941:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1941:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"balance","nameLocation":"1977:7:8","nodeType":"VariableDeclaration","scope":3077,"src":"1969:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1969:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UnbondingDelegationEntry","nameLocation":"1858:24:8","nodeType":"StructDefinition","scope":3277,"src":"1851:136:8","visibility":"public"},{"canonicalName":"PageRequest","id":3088,"members":[{"constant":false,"id":3079,"mutability":"mutable","name":"key","nameLocation":"2020:3:8","nodeType":"VariableDeclaration","scope":3088,"src":"2014:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3078,"name":"bytes","nodeType":"ElementaryTypeName","src":"2014:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"offset","nameLocation":"2036:6:8","nodeType":"VariableDeclaration","scope":3088,"src":"2029:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3080,"name":"uint64","nodeType":"ElementaryTypeName","src":"2029:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"limit","nameLocation":"2055:5:8","nodeType":"VariableDeclaration","scope":3088,"src":"2048:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3082,"name":"uint64","nodeType":"ElementaryTypeName","src":"2048:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3085,"mutability":"mutable","name":"countTotal","nameLocation":"2071:10:8","nodeType":"VariableDeclaration","scope":3088,"src":"2066:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3084,"name":"bool","nodeType":"ElementaryTypeName","src":"2066:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3087,"mutability":"mutable","name":"reverse","nameLocation":"2092:7:8","nodeType":"VariableDeclaration","scope":3088,"src":"2087:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3086,"name":"bool","nodeType":"ElementaryTypeName","src":"2087:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PageRequest","nameLocation":"1996:11:8","nodeType":"StructDefinition","scope":3277,"src":"1989:113:8","visibility":"public"},{"canonicalName":"BondStatus","id":3093,"members":[{"id":3089,"name":"Unspecified","nameLocation":"2164:11:8","nodeType":"EnumValue","src":"2164:11:8"},{"id":3090,"name":"Unbonded","nameLocation":"2181:8:8","nodeType":"EnumValue","src":"2181:8:8"},{"id":3091,"name":"Unbonding","nameLocation":"2195:9:8","nodeType":"EnumValue","src":"2195:9:8"},{"id":3092,"name":"Bonded","nameLocation":"2210:6:8","nodeType":"EnumValue","src":"2210:6:8"}],"name":"BondStatus","nameLocation":"2147:10:8","nodeType":"EnumDefinition","src":"2142:76:8"},{"abstract":false,"baseContracts":[{"baseName":{"id":3095,"name":"authorization.AuthorizationI","nameLocations":["2571:13:8","2585:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":2707,"src":"2571:28:8"},"id":3096,"nodeType":"InheritanceSpecifier","src":"2571:28:8"}],"canonicalName":"StakingI","contractDependencies":[],"contractKind":"interface","documentation":{"id":3094,"nodeType":"StructuredDocumentation","src":"2220:329:8","text":"@author Evmos Team\n @title Staking Precompiled Contract\n @dev The interface through which solidity contracts will interact with staking.\n We follow this same interface including four-byte function selectors, in the precompile that\n wraps the pallet.\n @custom:address 0x0000000000000000000000000000000000000800"},"fullyImplemented":false,"id":3276,"linearizedBaseContracts":[3276,2707],"name":"StakingI","nameLocation":"2559:8:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"2606:295:8","text":"@dev Defines a method for performing a delegation of coins from a delegator to a validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of the Coin to be delegated to the validator"},"functionSelector":"53266bbb","id":3108,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2915:8:8","nodeType":"FunctionDefinition","parameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"delegatorAddress","nameLocation":"2941:16:8","nodeType":"VariableDeclaration","scope":3108,"src":"2933:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3098,"name":"address","nodeType":"ElementaryTypeName","src":"2933:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"validatorAddress","nameLocation":"2981:16:8","nodeType":"VariableDeclaration","scope":3108,"src":"2967:30:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3100,"name":"string","nodeType":"ElementaryTypeName","src":"2967:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3103,"mutability":"mutable","name":"amount","nameLocation":"3015:6:8","nodeType":"VariableDeclaration","scope":3108,"src":"3007:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3007:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2923:104:8"},"returnParameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"completionTime","nameLocation":"3052:14:8","nodeType":"VariableDeclaration","scope":3108,"src":"3046:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3105,"name":"int64","nodeType":"ElementaryTypeName","src":"3046:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"3045:22:8"},"scope":3276,"src":"2906:162:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3109,"nodeType":"StructuredDocumentation","src":"3074:356:8","text":"@dev Defines a method for performing an undelegation from a delegate and a validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount to be undelegated from the validator\n @return completionTime The time when the undelegation is completed"},"functionSelector":"3edab33c","id":3120,"implemented":false,"kind":"function","modifiers":[],"name":"undelegate","nameLocation":"3444:10:8","nodeType":"FunctionDefinition","parameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"delegatorAddress","nameLocation":"3472:16:8","nodeType":"VariableDeclaration","scope":3120,"src":"3464:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3110,"name":"address","nodeType":"ElementaryTypeName","src":"3464:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3113,"mutability":"mutable","name":"validatorAddress","nameLocation":"3512:16:8","nodeType":"VariableDeclaration","scope":3120,"src":"3498:30:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3112,"name":"string","nodeType":"ElementaryTypeName","src":"3498:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3115,"mutability":"mutable","name":"amount","nameLocation":"3546:6:8","nodeType":"VariableDeclaration","scope":3120,"src":"3538:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3454:104:8"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"completionTime","nameLocation":"3583:14:8","nodeType":"VariableDeclaration","scope":3120,"src":"3577:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3117,"name":"int64","nodeType":"ElementaryTypeName","src":"3577:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"3576:22:8"},"scope":3276,"src":"3435:164:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3121,"nodeType":"StructuredDocumentation","src":"3605:519:8","text":"@dev Defines a method for performing a redelegation\n of coins from a delegator and source validator to a destination validator.\n @param delegatorAddress The address of the delegator\n @param validatorSrcAddress The validator from which the redelegation is initiated\n @param validatorDstAddress The validator to which the redelegation is destined\n @param amount The amount to be redelegated to the validator\n @return completionTime The time when the redelegation is completed"},"functionSelector":"54b826f5","id":3134,"implemented":false,"kind":"function","modifiers":[],"name":"redelegate","nameLocation":"4138:10:8","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"delegatorAddress","nameLocation":"4166:16:8","nodeType":"VariableDeclaration","scope":3134,"src":"4158:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3122,"name":"address","nodeType":"ElementaryTypeName","src":"4158:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3125,"mutability":"mutable","name":"validatorSrcAddress","nameLocation":"4206:19:8","nodeType":"VariableDeclaration","scope":3134,"src":"4192:33:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3124,"name":"string","nodeType":"ElementaryTypeName","src":"4192:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"validatorDstAddress","nameLocation":"4249:19:8","nodeType":"VariableDeclaration","scope":3134,"src":"4235:33:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3126,"name":"string","nodeType":"ElementaryTypeName","src":"4235:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"amount","nameLocation":"4286:6:8","nodeType":"VariableDeclaration","scope":3134,"src":"4278:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"4278:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4148:150:8"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"completionTime","nameLocation":"4323:14:8","nodeType":"VariableDeclaration","scope":3134,"src":"4317:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3131,"name":"int64","nodeType":"ElementaryTypeName","src":"4317:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"4316:22:8"},"scope":3276,"src":"4129:210:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3135,"nodeType":"StructuredDocumentation","src":"4345:465:8","text":"@dev Allows delegators to cancel the unbondingDelegation entry\n and to delegate back to a previous validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of the Coin\n @param creationHeight The height at which the unbonding took place\n @return completionTime The time when the cancellation of the unbonding delegation is completed"},"functionSelector":"12d58dfe","id":3148,"implemented":false,"kind":"function","modifiers":[],"name":"cancelUnbondingDelegation","nameLocation":"4824:25:8","nodeType":"FunctionDefinition","parameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"delegatorAddress","nameLocation":"4867:16:8","nodeType":"VariableDeclaration","scope":3148,"src":"4859:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"4859:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"validatorAddress","nameLocation":"4907:16:8","nodeType":"VariableDeclaration","scope":3148,"src":"4893:30:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3138,"name":"string","nodeType":"ElementaryTypeName","src":"4893:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3141,"mutability":"mutable","name":"amount","nameLocation":"4941:6:8","nodeType":"VariableDeclaration","scope":3148,"src":"4933:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"4933:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"creationHeight","nameLocation":"4965:14:8","nodeType":"VariableDeclaration","scope":3148,"src":"4957:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"4957:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4849:136:8"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"completionTime","nameLocation":"5010:14:8","nodeType":"VariableDeclaration","scope":3148,"src":"5004:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3145,"name":"int64","nodeType":"ElementaryTypeName","src":"5004:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"5003:22:8"},"scope":3276,"src":"4815:211:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3149,"nodeType":"StructuredDocumentation","src":"5032:377:8","text":"@dev Queries the given amount of the bond denomination to a validator.\n @param delegatorAddress The address of the delegator.\n @param validatorAddress The address of the validator.\n @return shares The amount of shares, that the delegator has received.\n @return balance The amount in Coin, that the delegator has delegated to the given validator."},"functionSelector":"241774e6","id":3161,"implemented":false,"kind":"function","modifiers":[],"name":"delegation","nameLocation":"5423:10:8","nodeType":"FunctionDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"delegatorAddress","nameLocation":"5451:16:8","nodeType":"VariableDeclaration","scope":3161,"src":"5443:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3150,"name":"address","nodeType":"ElementaryTypeName","src":"5443:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"validatorAddress","nameLocation":"5491:16:8","nodeType":"VariableDeclaration","scope":3161,"src":"5477:30:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3152,"name":"string","nodeType":"ElementaryTypeName","src":"5477:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5433:80:8"},"returnParameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"shares","nameLocation":"5545:6:8","nodeType":"VariableDeclaration","scope":3161,"src":"5537:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"5537:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"balance","nameLocation":"5567:7:8","nodeType":"VariableDeclaration","scope":3161,"src":"5553:21:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2765_calldata_ptr","typeString":"struct Coin"},"typeName":{"id":3158,"nodeType":"UserDefinedTypeName","pathNode":{"id":3157,"name":"Coin","nameLocations":["5553:4:8"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"5553:4:8"},"referencedDeclaration":2765,"src":"5553:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2765_storage_ptr","typeString":"struct Coin"}},"visibility":"internal"}],"src":"5536:39:8"},"scope":3276,"src":"5414:162:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"5582:322:8","text":"@dev Returns the delegation shares and coins, that are currently\n unbonding for a given delegator and validator pair.\n @param delegatorAddress The address of the delegator.\n @param validatorAddress The address of the validator.\n @return entries The delegations that are currently unbonding."},"functionSelector":"a03ffee1","id":3173,"implemented":false,"kind":"function","modifiers":[],"name":"unbondingDelegation","nameLocation":"5918:19:8","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"delegatorAddress","nameLocation":"5955:16:8","nodeType":"VariableDeclaration","scope":3173,"src":"5947:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3163,"name":"address","nodeType":"ElementaryTypeName","src":"5947:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"validatorAddress","nameLocation":"5995:16:8","nodeType":"VariableDeclaration","scope":3173,"src":"5981:30:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3165,"name":"string","nodeType":"ElementaryTypeName","src":"5981:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5937:80:8"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"entries","nameLocation":"6077:7:8","nodeType":"VariableDeclaration","scope":3173,"src":"6041:43:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnbondingDelegationEntry_$3077_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UnbondingDelegationEntry[]"},"typeName":{"baseType":{"id":3169,"nodeType":"UserDefinedTypeName","pathNode":{"id":3168,"name":"UnbondingDelegationEntry","nameLocations":["6041:24:8"],"nodeType":"IdentifierPath","referencedDeclaration":3077,"src":"6041:24:8"},"referencedDeclaration":3077,"src":"6041:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_UnbondingDelegationEntry_$3077_storage_ptr","typeString":"struct UnbondingDelegationEntry"}},"id":3170,"nodeType":"ArrayTypeName","src":"6041:26:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnbondingDelegationEntry_$3077_storage_$dyn_storage_ptr","typeString":"struct UnbondingDelegationEntry[]"}},"visibility":"internal"}],"src":"6040:45:8"},"scope":3276,"src":"5909:177:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"6092:203:8","text":"@dev Queries validator info for a given validator address.\n @param validatorAddress The address of the validator.\n @return validators The validator info for the given validator address."},"functionSelector":"0bc82a17","id":3183,"implemented":false,"kind":"function","modifiers":[],"name":"validator","nameLocation":"6309:9:8","nodeType":"FunctionDefinition","parameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"validatorAddress","nameLocation":"6342:16:8","nodeType":"VariableDeclaration","scope":3183,"src":"6328:30:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3175,"name":"string","nodeType":"ElementaryTypeName","src":"6328:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6318:46:8"},"returnParameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"validators","nameLocation":"6422:10:8","nodeType":"VariableDeclaration","scope":3183,"src":"6401:31:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Validator_$3040_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Validator[]"},"typeName":{"baseType":{"id":3179,"nodeType":"UserDefinedTypeName","pathNode":{"id":3178,"name":"Validator","nameLocations":["6401:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"6401:9:8"},"referencedDeclaration":3040,"src":"6401:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_Validator_$3040_storage_ptr","typeString":"struct Validator"}},"id":3180,"nodeType":"ArrayTypeName","src":"6401:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Validator_$3040_storage_$dyn_storage_ptr","typeString":"struct Validator[]"}},"visibility":"internal"}],"src":"6391:47:8"},"scope":3276,"src":"6300:139:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3184,"nodeType":"StructuredDocumentation","src":"6445:214:8","text":"@dev Queries all validators that match the given status.\n @param status Enables to query for validators matching a given status.\n @param pageRequest Defines an optional pagination for the request."},"functionSelector":"186b2167","id":3199,"implemented":false,"kind":"function","modifiers":[],"name":"validators","nameLocation":"6673:10:8","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"status","nameLocation":"6707:6:8","nodeType":"VariableDeclaration","scope":3199,"src":"6693:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3185,"name":"string","nodeType":"ElementaryTypeName","src":"6693:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"pageRequest","nameLocation":"6744:11:8","nodeType":"VariableDeclaration","scope":3199,"src":"6723:32:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PageRequest_$3088_calldata_ptr","typeString":"struct PageRequest"},"typeName":{"id":3188,"nodeType":"UserDefinedTypeName","pathNode":{"id":3187,"name":"PageRequest","nameLocations":["6723:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":3088,"src":"6723:11:8"},"referencedDeclaration":3088,"src":"6723:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_PageRequest_$3088_storage_ptr","typeString":"struct PageRequest"}},"visibility":"internal"}],"src":"6683:78:8"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"validators","nameLocation":"6815:10:8","nodeType":"VariableDeclaration","scope":3199,"src":"6794:31:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Validator_$3040_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Validator[]"},"typeName":{"baseType":{"id":3192,"nodeType":"UserDefinedTypeName","pathNode":{"id":3191,"name":"Validator","nameLocations":["6794:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"6794:9:8"},"referencedDeclaration":3040,"src":"6794:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_Validator_$3040_storage_ptr","typeString":"struct Validator"}},"id":3193,"nodeType":"ArrayTypeName","src":"6794:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Validator_$3040_storage_$dyn_storage_ptr","typeString":"struct Validator[]"}},"visibility":"internal"},{"constant":false,"id":3197,"mutability":"mutable","name":"pageResponse","nameLocation":"6857:12:8","nodeType":"VariableDeclaration","scope":3199,"src":"6835:34:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PageResponse_$2777_calldata_ptr","typeString":"struct PageResponse"},"typeName":{"id":3196,"nodeType":"UserDefinedTypeName","pathNode":{"id":3195,"name":"PageResponse","nameLocations":["6835:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"6835:12:8"},"referencedDeclaration":2777,"src":"6835:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_PageResponse_$2777_storage_ptr","typeString":"struct PageResponse"}},"visibility":"internal"}],"src":"6784:91:8"},"scope":3276,"src":"6664:212:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"6882:448:8","text":"@dev Queries all redelegations from a source to a destination validator for a given delegator.\n @param delegatorAddress The address of the delegator.\n @param srcValidatorAddress Defines the validator address to redelegate from.\n @param dstValidatorAddress Defines the validator address to redelegate to.\n @return entries The active redelegations for the given delegator, source and destination validator combination."},"functionSelector":"7d9f939c","id":3213,"implemented":false,"kind":"function","modifiers":[],"name":"redelegation","nameLocation":"7344:12:8","nodeType":"FunctionDefinition","parameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"delegatorAddress","nameLocation":"7374:16:8","nodeType":"VariableDeclaration","scope":3213,"src":"7366:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"7366:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3204,"mutability":"mutable","name":"srcValidatorAddress","nameLocation":"7414:19:8","nodeType":"VariableDeclaration","scope":3213,"src":"7400:33:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3203,"name":"string","nodeType":"ElementaryTypeName","src":"7400:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"dstValidatorAddress","nameLocation":"7457:19:8","nodeType":"VariableDeclaration","scope":3213,"src":"7443:33:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3205,"name":"string","nodeType":"ElementaryTypeName","src":"7443:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7356:126:8"},"returnParameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"entries","nameLocation":"7535:7:8","nodeType":"VariableDeclaration","scope":3213,"src":"7506:36:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntry_$3068_calldata_ptr_$dyn_calldata_ptr","typeString":"struct RedelegationEntry[]"},"typeName":{"baseType":{"id":3209,"nodeType":"UserDefinedTypeName","pathNode":{"id":3208,"name":"RedelegationEntry","nameLocations":["7506:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":3068,"src":"7506:17:8"},"referencedDeclaration":3068,"src":"7506:17:8","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationEntry_$3068_storage_ptr","typeString":"struct RedelegationEntry"}},"id":3210,"nodeType":"ArrayTypeName","src":"7506:19:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntry_$3068_storage_$dyn_storage_ptr","typeString":"struct RedelegationEntry[]"}},"visibility":"internal"}],"src":"7505:38:8"},"scope":3276,"src":"7335:209:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3214,"nodeType":"StructuredDocumentation","src":"7550:567:8","text":"@dev Queries all redelegations from a source to to a destination validator\n for a given delegator in a specified pagination manner.\n @param delegatorAddress The address of the delegator.\n @param srcValidatorAddress Defines the validator address to redelegate from.\n @param dstValidatorAddress Defines the validator address to redelegate to.\n @param pageRequest Defines an optional pagination for the request.\n @return response Holds the redelegations for the given delegator, source and destination validator combination."},"functionSelector":"10a2851c","id":3229,"implemented":false,"kind":"function","modifiers":[],"name":"redelegations","nameLocation":"8131:13:8","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"delegatorAddress","nameLocation":"8162:16:8","nodeType":"VariableDeclaration","scope":3229,"src":"8154:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3215,"name":"address","nodeType":"ElementaryTypeName","src":"8154:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"srcValidatorAddress","nameLocation":"8202:19:8","nodeType":"VariableDeclaration","scope":3229,"src":"8188:33:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3217,"name":"string","nodeType":"ElementaryTypeName","src":"8188:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"dstValidatorAddress","nameLocation":"8245:19:8","nodeType":"VariableDeclaration","scope":3229,"src":"8231:33:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3219,"name":"string","nodeType":"ElementaryTypeName","src":"8231:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"pageRequest","nameLocation":"8295:11:8","nodeType":"VariableDeclaration","scope":3229,"src":"8274:32:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PageRequest_$3088_calldata_ptr","typeString":"struct PageRequest"},"typeName":{"id":3222,"nodeType":"UserDefinedTypeName","pathNode":{"id":3221,"name":"PageRequest","nameLocations":["8274:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":3088,"src":"8274:11:8"},"referencedDeclaration":3088,"src":"8274:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_PageRequest_$3088_storage_ptr","typeString":"struct PageRequest"}},"visibility":"internal"}],"src":"8144:168:8"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"response","nameLocation":"8366:8:8","nodeType":"VariableDeclaration","scope":3229,"src":"8336:38:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationResponse_$3048_calldata_ptr","typeString":"struct RedelegationResponse"},"typeName":{"id":3226,"nodeType":"UserDefinedTypeName","pathNode":{"id":3225,"name":"RedelegationResponse","nameLocations":["8336:20:8"],"nodeType":"IdentifierPath","referencedDeclaration":3048,"src":"8336:20:8"},"referencedDeclaration":3048,"src":"8336:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationResponse_$3048_storage_ptr","typeString":"struct RedelegationResponse"}},"visibility":"internal"}],"src":"8335:40:8"},"scope":3276,"src":"8122:254:8","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":3230,"nodeType":"StructuredDocumentation","src":"8382:388:8","text":"@dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\n delegator address to the validator address.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin being delegated\n @param newShares The new delegation shares being held"},"eventSelector":"5a5adf903ba232ef17ed8be4ef872e1f60d17c5ba26a1ecbf44e388a672b118a","id":3240,"name":"Delegate","nameLocation":"8781:8:8","nodeType":"EventDefinition","parameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3232,"indexed":true,"mutability":"mutable","name":"delegatorAddress","nameLocation":"8815:16:8","nodeType":"VariableDeclaration","scope":3240,"src":"8799:32:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3231,"name":"address","nodeType":"ElementaryTypeName","src":"8799:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3234,"indexed":true,"mutability":"mutable","name":"validatorAddress","nameLocation":"8856:16:8","nodeType":"VariableDeclaration","scope":3240,"src":"8841:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3233,"name":"string","nodeType":"ElementaryTypeName","src":"8841:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3236,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"8890:6:8","nodeType":"VariableDeclaration","scope":3240,"src":"8882:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"8882:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3238,"indexed":false,"mutability":"mutable","name":"newShares","nameLocation":"8914:9:8","nodeType":"VariableDeclaration","scope":3240,"src":"8906:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"8906:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8789:140:8"},"src":"8775:155:8"},{"anonymous":false,"documentation":{"id":3241,"nodeType":"StructuredDocumentation","src":"8936:397:8","text":"@dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\n validator address to the delegator address.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin being unbonded\n @param completionTime The time at which the unbonding is completed"},"eventSelector":"1f6938077d62f3610504390aa8486c8172406456826a39907ca0cd40c8fe700a","id":3251,"name":"Unbond","nameLocation":"9344:6:8","nodeType":"EventDefinition","parameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"indexed":true,"mutability":"mutable","name":"delegatorAddress","nameLocation":"9376:16:8","nodeType":"VariableDeclaration","scope":3251,"src":"9360:32:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3242,"name":"address","nodeType":"ElementaryTypeName","src":"9360:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3245,"indexed":true,"mutability":"mutable","name":"validatorAddress","nameLocation":"9417:16:8","nodeType":"VariableDeclaration","scope":3251,"src":"9402:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3244,"name":"string","nodeType":"ElementaryTypeName","src":"9402:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3247,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"9451:6:8","nodeType":"VariableDeclaration","scope":3251,"src":"9443:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"9443:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3249,"indexed":false,"mutability":"mutable","name":"completionTime","nameLocation":"9475:14:8","nodeType":"VariableDeclaration","scope":3251,"src":"9467:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"9467:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9350:145:8"},"src":"9338:158:8"},{"anonymous":false,"documentation":{"id":3252,"nodeType":"StructuredDocumentation","src":"9502:571:8","text":"@dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\n the source validator address to the destination validator address.\n @param delegatorAddress The address of the delegator\n @param validatorSrcAddress The address of the validator from which the delegation is retracted\n @param validatorDstAddress The address of the validator to which the delegation is directed\n @param amount The amount of Coin being redelegated\n @param completionTime The time at which the redelegation is completed"},"eventSelector":"43c8e32499593a7da63d4aec64367350a850199e23d2ce6a6e067365938d1bb6","id":3264,"name":"Redelegate","nameLocation":"10084:10:8","nodeType":"EventDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"indexed":true,"mutability":"mutable","name":"delegatorAddress","nameLocation":"10120:16:8","nodeType":"VariableDeclaration","scope":3264,"src":"10104:32:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3253,"name":"address","nodeType":"ElementaryTypeName","src":"10104:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3256,"indexed":true,"mutability":"mutable","name":"validatorSrcAddress","nameLocation":"10161:19:8","nodeType":"VariableDeclaration","scope":3264,"src":"10146:34:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3255,"name":"string","nodeType":"ElementaryTypeName","src":"10146:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3258,"indexed":true,"mutability":"mutable","name":"validatorDstAddress","nameLocation":"10205:19:8","nodeType":"VariableDeclaration","scope":3264,"src":"10190:34:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3257,"name":"string","nodeType":"ElementaryTypeName","src":"10190:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3260,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"10242:6:8","nodeType":"VariableDeclaration","scope":3264,"src":"10234:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"10234:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3262,"indexed":false,"mutability":"mutable","name":"completionTime","nameLocation":"10266:14:8","nodeType":"VariableDeclaration","scope":3264,"src":"10258:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"10258:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10094:192:8"},"src":"10078:209:8"},{"anonymous":false,"documentation":{"id":3265,"nodeType":"StructuredDocumentation","src":"10293:501:8","text":"@dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\n that are in the process of unbonding from the validator address are bonded again.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin that was in the unbonding process which is to be cancelled\n @param creationHeight The block height at which the unbonding of a delegation was initiated"},"eventSelector":"4df30dbaa29da95e67f93ec6d865329c7e7e870b3939583df3c8889319c89126","id":3275,"name":"CancelUnbondingDelegation","nameLocation":"10805:25:8","nodeType":"EventDefinition","parameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"indexed":true,"mutability":"mutable","name":"delegatorAddress","nameLocation":"10856:16:8","nodeType":"VariableDeclaration","scope":3275,"src":"10840:32:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3266,"name":"address","nodeType":"ElementaryTypeName","src":"10840:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3269,"indexed":true,"mutability":"mutable","name":"validatorAddress","nameLocation":"10897:16:8","nodeType":"VariableDeclaration","scope":3275,"src":"10882:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3268,"name":"string","nodeType":"ElementaryTypeName","src":"10882:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3271,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"10931:6:8","nodeType":"VariableDeclaration","scope":3275,"src":"10923:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"10923:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3273,"indexed":false,"mutability":"mutable","name":"creationHeight","nameLocation":"10955:14:8","nodeType":"VariableDeclaration","scope":3275,"src":"10947:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"10947:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10830:145:8"},"src":"10799:177:8"}],"scope":3277,"src":"2549:8429:8","usedErrors":[]}],"src":"36:10943:8"},"id":8}},"contracts":{"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/GreenDAO.sol":{"GreenDAO":{"abi":[{"inputs":[{"internalType":"uint256","name":"_idea_id","type":"uint256"}],"name":"RedeemDelegetdMoney","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"_approveRequiredMsgs","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"_dao_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_dao_uris","outputs":[{"internalType":"string","name":"dao_wallet","type":"string"},{"internalType":"string","name":"dao_uri","type":"string"},{"internalType":"string","name":"finished","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_goal_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_goal_uris","outputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"string","name":"goal_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_ideas_uris","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"string","name":"ideas_uri","type":"string"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_vote_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_reply_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_smart_contract_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_smart_contracts_uris","outputs":[{"internalType":"uint256","name":"smart_contract_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"smart_contract_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_doantion","type":"uint256"}],"name":"add_donation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_goal_ideas_votes","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"wallet","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_replies","outputs":[{"internalType":"uint256","name":"reply_id","type":"uint256"},{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"create_dao","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"},{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"create_goal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_wallet","type":"string"}],"name":"create_goal_ideas_vote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"},{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string[]","name":"_smart_contracts","type":"string[]"}],"name":"create_ideas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"dao_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_idea_id","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"donate","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"donated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractRewards","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDelegation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"}],"name":"getMsgIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"message_id","type":"uint256"}],"name":"getReplyIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUnbondingDelegation","outputs":[{"components":[{"internalType":"int64","name":"creationHeight","type":"int64"},{"internalType":"int64","name":"completionTime","type":"int64"},{"internalType":"uint256","name":"initialBalance","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct UnbondingDelegationEntry[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_daos","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_goals","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"get_all_goals_by_dao_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_ideas","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"get_all_ideas_by_goal_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"get_goal_id_by_goal_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_goal_id_from_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_ideas_id_by_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"get_ideas_votes_from_goal","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"goal_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"ideas_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reset_all","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_message","type":"string"}],"name":"sendMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"_reply","type":"string"}],"name":"sendReply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"set_dao","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"set_goal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"set_ideas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"unbondingDelegations","outputs":[{"internalType":"int64","name":"completionTime","type":"int64"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawAllMoney","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_idea_id","type":"uint256"}],"name":"withdrawDonatedMoney","outputs":[{"internalType":"int64","name":"","type":"int64"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"_approveRequiredMsgs()":{"details":"approves the staking and distribution contracts for donating"}},"stateVariables":{"donated":{"details":"map to keep track of user deposits to the contract."},"stakingMethods":{"details":"the required authorizations for Staking and Distribution"},"unbondingDelegations":{"details":"map that keeps track of all currently unbonding delegations"}},"version":1},"evm":{"bytecode":{"functionDebugData":{"array_dataslot_t_string_storage":{"entryPoint":738,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":580,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1059,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":874,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1020,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":894,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1214,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":759,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":685,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1184,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":884,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1152,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":638,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":591,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":934,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":775,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1139,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":992,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":788,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":944,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":987,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5231:9","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:9","statements":[{"nodeType":"YulAssignment","src":"77:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:9"},"nodeType":"YulFunctionCall","src":"87:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:9","type":""}],"src":"7:99:9"},{"body":{"nodeType":"YulBlock","src":"140:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:9"},"nodeType":"YulFunctionCall","src":"150:88:9"},"nodeType":"YulExpressionStatement","src":"150:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:9"},"nodeType":"YulFunctionCall","src":"247:15:9"},"nodeType":"YulExpressionStatement","src":"247:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:9"},"nodeType":"YulFunctionCall","src":"271:15:9"},"nodeType":"YulExpressionStatement","src":"271:15:9"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:9"},{"body":{"nodeType":"YulBlock","src":"326:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:9"},"nodeType":"YulFunctionCall","src":"336:88:9"},"nodeType":"YulExpressionStatement","src":"336:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:9"},"nodeType":"YulFunctionCall","src":"433:15:9"},"nodeType":"YulExpressionStatement","src":"433:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:9"},"nodeType":"YulFunctionCall","src":"457:15:9"},"nodeType":"YulExpressionStatement","src":"457:15:9"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:9"},{"body":{"nodeType":"YulBlock","src":"535:269:9","statements":[{"nodeType":"YulAssignment","src":"545:22:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:9","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:9"},"nodeType":"YulFunctionCall","src":"555:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:9"},"nodeType":"YulFunctionCall","src":"602:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:9","statements":[{"nodeType":"YulAssignment","src":"667:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:9"},"nodeType":"YulFunctionCall","src":"677:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:9"},"nodeType":"YulFunctionCall","src":"626:26:9"},"nodeType":"YulIf","src":"623:81:9"},{"body":{"nodeType":"YulBlock","src":"756:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:9"},"nodeType":"YulFunctionCall","src":"770:18:9"},"nodeType":"YulExpressionStatement","src":"770:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:9"},"nodeType":"YulFunctionCall","src":"740:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:9"},"nodeType":"YulFunctionCall","src":"717:38:9"},"nodeType":"YulIf","src":"714:84:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:9","type":""}],"src":"484:320:9"},{"body":{"nodeType":"YulBlock","src":"864:87:9","statements":[{"nodeType":"YulAssignment","src":"874:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:9"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:9","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:9"},"nodeType":"YulFunctionCall","src":"895:14:9"},"nodeType":"YulExpressionStatement","src":"895:14:9"},{"nodeType":"YulAssignment","src":"918:26:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:9"},"nodeType":"YulFunctionCall","src":"926:18:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:9"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:9","type":""}],"src":"810:141:9"},{"body":{"nodeType":"YulBlock","src":"1001:49:9","statements":[{"nodeType":"YulAssignment","src":"1011:33:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:9"},"nodeType":"YulFunctionCall","src":"1025:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:9","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:9"},"nodeType":"YulFunctionCall","src":"1021:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:9"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:9","type":""}],"src":"957:93:9"},{"body":{"nodeType":"YulBlock","src":"1109:54:9","statements":[{"nodeType":"YulAssignment","src":"1119:37:9","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:9"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:9"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:9"},"nodeType":"YulFunctionCall","src":"1140:16:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:9"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:9","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:9","type":""}],"src":"1056:107:9"},{"body":{"nodeType":"YulBlock","src":"1245:317:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:9","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:9","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:9"},"nodeType":"YulFunctionCall","src":"1272:18:9"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:9","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:9"},"nodeType":"YulFunctionCall","src":"1311:97:9"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:9","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:9","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:9"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:9"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:9"},"nodeType":"YulFunctionCall","src":"1429:39:9"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:9"}]},{"nodeType":"YulAssignment","src":"1477:30:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:9"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:9"},"nodeType":"YulFunctionCall","src":"1497:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:9"},"nodeType":"YulFunctionCall","src":"1486:21:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:9"}]},{"nodeType":"YulAssignment","src":"1516:40:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:9"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:9"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:9"},"nodeType":"YulFunctionCall","src":"1536:19:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:9"},"nodeType":"YulFunctionCall","src":"1526:30:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:9"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:9","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:9","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:9","type":""}],"src":"1169:393:9"},{"body":{"nodeType":"YulBlock","src":"1613:32:9","statements":[{"nodeType":"YulAssignment","src":"1623:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:9","type":""}],"src":"1568:77:9"},{"body":{"nodeType":"YulBlock","src":"1683:28:9","statements":[{"nodeType":"YulAssignment","src":"1693:12:9","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:9"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:9","type":""}],"src":"1651:60:9"},{"body":{"nodeType":"YulBlock","src":"1777:82:9","statements":[{"nodeType":"YulAssignment","src":"1787:66:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:9"},"nodeType":"YulFunctionCall","src":"1827:24:9"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:9"},"nodeType":"YulFunctionCall","src":"1818:34:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:9"},"nodeType":"YulFunctionCall","src":"1800:53:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:9"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:9","type":""}],"src":"1717:142:9"},{"body":{"nodeType":"YulBlock","src":"1912:28:9","statements":[{"nodeType":"YulAssignment","src":"1922:12:9","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:9"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:9","type":""}],"src":"1865:75:9"},{"body":{"nodeType":"YulBlock","src":"2022:193:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:9","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:9"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:9"},"nodeType":"YulFunctionCall","src":"2056:39:9"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:9"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:9"},"nodeType":"YulFunctionCall","src":"2145:11:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:9"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:9"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:9"},"nodeType":"YulFunctionCall","src":"2166:41:9"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:9"},"nodeType":"YulFunctionCall","src":"2117:91:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:9"},"nodeType":"YulFunctionCall","src":"2104:105:9"},"nodeType":"YulExpressionStatement","src":"2104:105:9"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:9","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:9","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:9","type":""}],"src":"1946:269:9"},{"body":{"nodeType":"YulBlock","src":"2270:24:9","statements":[{"nodeType":"YulAssignment","src":"2280:8:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:9","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:9"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:9","type":""}],"src":"2221:73:9"},{"body":{"nodeType":"YulBlock","src":"2353:136:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:9","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:9"},"nodeType":"YulFunctionCall","src":"2377:32:9"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:9"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:9"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:9"},"nodeType":"YulFunctionCall","src":"2418:65:9"},"nodeType":"YulExpressionStatement","src":"2418:65:9"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:9","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:9","type":""}],"src":"2300:189:9"},{"body":{"nodeType":"YulBlock","src":"2545:136:9","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:9","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:9","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:9"},"nodeType":"YulFunctionCall","src":"2626:39:9"},"nodeType":"YulExpressionStatement","src":"2626:39:9"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:9"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:9"},"nodeType":"YulFunctionCall","src":"2562:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:9","statements":[{"nodeType":"YulAssignment","src":"2579:22:9","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:9"},"nodeType":"YulFunctionCall","src":"2588:13:9"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:9"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:9","statements":[]},"src":"2555:120:9"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:9","type":""}],"src":"2495:186:9"},{"body":{"nodeType":"YulBlock","src":"2766:464:9","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:9"},"nodeType":"YulFunctionCall","src":"2822:38:9"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:9","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:9"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:9"},"nodeType":"YulFunctionCall","src":"2906:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:9"},"nodeType":"YulFunctionCall","src":"2892:44:9"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:9","statements":[{"nodeType":"YulAssignment","src":"3095:23:9","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:9"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:9"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:9"},"nodeType":"YulFunctionCall","src":"3074:18:9"},"nodeType":"YulIf","src":"3071:49:9"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:9"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:9"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:9"},"nodeType":"YulFunctionCall","src":"3189:22:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:9"},"nodeType":"YulFunctionCall","src":"3175:37:9"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:9"},"nodeType":"YulFunctionCall","src":"3133:80:9"},"nodeType":"YulExpressionStatement","src":"3133:80:9"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:9"},"nodeType":"YulFunctionCall","src":"2780:11:9"},"nodeType":"YulIf","src":"2777:446:9"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:9","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:9","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:9","type":""}],"src":"2687:543:9"},{"body":{"nodeType":"YulBlock","src":"3299:54:9","statements":[{"nodeType":"YulAssignment","src":"3309:37:9","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:9"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:9"},"nodeType":"YulFunctionCall","src":"3330:16:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:9"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:9","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:9","type":""}],"src":"3236:117:9"},{"body":{"nodeType":"YulBlock","src":"3410:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:9","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:9"},"nodeType":"YulFunctionCall","src":"3465:13:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:9"},"nodeType":"YulFunctionCall","src":"3480:6:9"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:9"},"nodeType":"YulFunctionCall","src":"3436:51:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:9"},"nodeType":"YulFunctionCall","src":"3432:56:9"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:9","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:9"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:9"},"nodeType":"YulFunctionCall","src":"3507:15:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:9"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:9","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:9","type":""}],"src":"3359:169:9"},{"body":{"nodeType":"YulBlock","src":"3614:214:9","statements":[{"nodeType":"YulAssignment","src":"3747:37:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:9"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:9"},"nodeType":"YulFunctionCall","src":"3755:29:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:9"}]},{"nodeType":"YulAssignment","src":"3793:29:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:9","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:9"},"nodeType":"YulFunctionCall","src":"3810:11:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:9"},"nodeType":"YulFunctionCall","src":"3801:21:9"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:9"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:9","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:9","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:9","type":""}],"src":"3533:295:9"},{"body":{"nodeType":"YulBlock","src":"3925:1303:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:9"},"nodeType":"YulFunctionCall","src":"3950:37:9"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:9"},"nodeType":"YulFunctionCall","src":"4074:18:9"},"nodeType":"YulExpressionStatement","src":"4074:18:9"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:9"},"nodeType":"YulFunctionCall","src":"4041:30:9"},"nodeType":"YulIf","src":"4038:56:9"},{"nodeType":"YulVariableDeclaration","src":"4104:52:9","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:9"},"nodeType":"YulFunctionCall","src":"4144:11:9"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:9"},"nodeType":"YulFunctionCall","src":"4118:38:9"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:9"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:9"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:9"},"nodeType":"YulFunctionCall","src":"4203:67:9"},"nodeType":"YulExpressionStatement","src":"4203:67:9"},{"nodeType":"YulVariableDeclaration","src":"4280:18:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:9","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:9","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:9","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:9"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:9","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:9","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:9"},"nodeType":"YulFunctionCall","src":"4413:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:9"},"nodeType":"YulFunctionCall","src":"4401:22:9"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:9","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:9"},"nodeType":"YulFunctionCall","src":"4451:37:9"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:9","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:9"},"nodeType":"YulFunctionCall","src":"4608:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:9"},"nodeType":"YulFunctionCall","src":"4602:26:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:9"},"nodeType":"YulFunctionCall","src":"4587:42:9"},"nodeType":"YulExpressionStatement","src":"4587:42:9"},{"nodeType":"YulAssignment","src":"4646:24:9","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:9"},"nodeType":"YulFunctionCall","src":"4656:14:9"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:9"}]},{"nodeType":"YulAssignment","src":"4687:31:9","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:9"},"nodeType":"YulFunctionCall","src":"4700:18:9"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:9"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:9"},"nodeType":"YulFunctionCall","src":"4532:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:9","statements":[{"nodeType":"YulAssignment","src":"4549:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:9"},"nodeType":"YulFunctionCall","src":"4554:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:9","statements":[]},"src":"4524:208:9"},{"body":{"nodeType":"YulBlock","src":"4768:156:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:9"},"nodeType":"YulFunctionCall","src":"4809:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:9"},"nodeType":"YulFunctionCall","src":"4803:26:9"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:9","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:9"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:9"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:9","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:9"},"nodeType":"YulFunctionCall","src":"4891:17:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:9"},"nodeType":"YulFunctionCall","src":"4861:48:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:9"},"nodeType":"YulFunctionCall","src":"4846:64:9"},"nodeType":"YulExpressionStatement","src":"4846:64:9"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:9"},"nodeType":"YulFunctionCall","src":"4748:19:9"},"nodeType":"YulIf","src":"4745:179:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:9"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:9"},"nodeType":"YulFunctionCall","src":"4954:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:9"},"nodeType":"YulFunctionCall","src":"4950:22:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:9"},"nodeType":"YulFunctionCall","src":"4937:36:9"},"nodeType":"YulExpressionStatement","src":"4937:36:9"}]},"nodeType":"YulCase","src":"4365:618:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:9","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:9","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:9","statements":[{"nodeType":"YulAssignment","src":"5069:35:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:9"},"nodeType":"YulFunctionCall","src":"5084:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:9"},"nodeType":"YulFunctionCall","src":"5078:26:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:9"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:9"},"nodeType":"YulIf","src":"5041:77:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:9"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:9"},"nodeType":"YulFunctionCall","src":"5144:67:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:9"},"nodeType":"YulFunctionCall","src":"5131:81:9"},"nodeType":"YulExpressionStatement","src":"5131:81:9"}]},"nodeType":"YulCase","src":"4992:230:9","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:9"},"nodeType":"YulFunctionCall","src":"4342:14:9"},"nodeType":"YulSwitch","src":"4335:887:9"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:9","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:9","type":""}],"src":"3833:1395:9"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052604051806060016040528060405180606001604052806023815260200162005394602391398152602001604051806060016040528060258152602001620053386025913981526020016040518060600160405280602a8152602001620052db602a913981525060009060036200007c929190620000f7565b5060405180602001604052806040518060600160405280603781526020016200535d603791398152506001906001620000b792919062000157565b50604051806060016040528060338152602001620053056033913960049081620000e29190620004be565b50348015620000f057600080fd5b50620005a5565b82805482825590600052602060002090810192821562000144579160200282015b8281111562000143578251829081620001329190620004be565b509160200191906001019062000118565b5b509050620001539190620001b7565b5090565b828054828255906000526020600020908101928215620001a4579160200282015b82811115620001a3578251829081620001929190620004be565b509160200191906001019062000178565b5b509050620001b39190620001b7565b5090565b5b80821115620001db5760008181620001d19190620001df565b50600101620001b8565b5090565b508054620001ed90620002ad565b6000825580601f1062000201575062000222565b601f01602090049060005260206000209081019062000221919062000225565b5b50565b5b808211156200024057600081600090555060010162000226565b5090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002c657607f821691505b602082108103620002dc57620002db6200027e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003467fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000307565b62000352868362000307565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200039f6200039962000393846200036a565b62000374565b6200036a565b9050919050565b6000819050919050565b620003bb836200037e565b620003d3620003ca82620003a6565b84845462000314565b825550505050565b600090565b620003ea620003db565b620003f7818484620003b0565b505050565b5b818110156200041f5762000413600082620003e0565b600181019050620003fd565b5050565b601f8211156200046e576200043881620002e2565b6200044384620002f7565b8101602085101562000453578190505b6200046b6200046285620002f7565b830182620003fc565b50505b505050565b600082821c905092915050565b6000620004936000198460080262000473565b1980831691505092915050565b6000620004ae838362000480565b9150826002028217905092915050565b620004c98262000244565b67ffffffffffffffff811115620004e557620004e46200024f565b5b620004f18254620002ad565b620004fe82828562000423565b600060209050601f83116001811462000536576000841562000521578287015190505b6200052d8582620004a0565b8655506200059d565b601f1984166200054686620002e2565b60005b82811015620005705784890151825560018201915060208501945060208101905062000549565b868310156200059057848901516200058c601f89168262000480565b8355505b6001600288020188555050505b505050505050565b614d2680620005b56000396000f3fe6080604052600436106102e45760003560e01c8063803f5b9f11610190578063aa4cdf2a116100dc578063c04fe97811610095578063d3791b201161006f578063d3791b2014610c47578063e3280c9614610c72578063e32acc1a14610caf578063ff4a37ef14610cec576102e4565b8063c04fe97814610bb6578063c29595c514610be1578063c4c2e36414610c0a576102e4565b8063aa4cdf2a14610ab8578063ae429e4714610af5578063b16060a614610b20578063b2947c7114610b37578063b527d45e14610b4e578063c04e743014610b8d576102e4565b806390d756a711610149578063a1ca917811610123578063a1ca9178146109fe578063a2cdb3a914610a3b578063a694fc3a14610a64578063aa2bf5d314610a8d576102e4565b806390d756a71461095957806397ee7606146109965780639c6353e8146109c1576102e4565b8063803f5b9f14610811578063812fae1f1461084e57806382fcc7321461088b578063881de858146108c85780638d3d2595146108f15780639077007d1461092e576102e4565b8063414d9a2b1161024f5780635d907da11161020857806371085cab116101e257806371085cab1461072d5780637495f8541461076a5780637bbd582d146107a85780637f2035d4146107d3576102e4565b80635d907da1146106885780636af3304e146106c55780636f9fb98a14610702576102e4565b8063414d9a2b1461054e57806342c7652a1461058b578063468d0c80146105b65780634a797bd7146105f55780634be7adb51461062057806353f688021461065d576102e4565b80631ba44c4c116102a15780631ba44c4c146103ec5780631e9ac9f51461042b57806327a568b91461046857806329b56f60146104a75780632d5bf5b0146104d25780633f87a2f41461050f576102e4565b80630cdd53f6146102e9578063109ac97014610305578063131d44f21461034257806313bf4cea1461037f5780631b52b9de146103aa5780631b592aeb146103c1575b600080fd5b61030360048036038101906102fe919061311e565b610d2b565b005b34801561031157600080fd5b5061032c6004803603810190610327919061315e565b610d61565b60405161033991906132dd565b60405180910390f35b34801561034e57600080fd5b506103696004803603810190610364919061315e565b610ed0565b60405161037691906132dd565b60405180910390f35b34801561038b57600080fd5b5061039461103f565b6040516103a1919061330e565b60405180910390f35b3480156103b657600080fd5b506103bf611045565b005b3480156103cd57600080fd5b506103d66110ba565b6040516103e3919061330e565b60405180910390f35b3480156103f857600080fd5b50610413600480360381019061040e919061315e565b6110c0565b60405161042293929190613373565b60405180910390f35b34801561043757600080fd5b50610452600480360381019061044d91906134e6565b611172565b60405161045f919061330e565b60405180910390f35b34801561047457600080fd5b5061048f600480360381019061048a919061315e565b6111e3565b60405161049e9392919061352f565b60405180910390f35b3480156104b357600080fd5b506104bc6113a5565b6040516104c991906132dd565b60405180910390f35b3480156104de57600080fd5b506104f960048036038101906104f4919061357b565b6114e0565b604051610506919061330e565b60405180910390f35b34801561051b57600080fd5b506105366004803603810190610531919061315e565b611564565b60405161054593929190613373565b60405180910390f35b34801561055a57600080fd5b506105756004803603810190610570919061315e565b611616565b604051610582919061330e565b60405180910390f35b34801561059757600080fd5b506105a061162e565b6040516105ad9190613706565b60405180910390f35b3480156105c257600080fd5b506105dd60048036038101906105d8919061315e565b6116b9565b6040516105ec93929190613728565b60405180910390f35b34801561060157600080fd5b5061060a61176b565b604051610617919061330e565b60405180910390f35b34801561062c57600080fd5b506106476004803603810190610642919061311e565b611771565b60405161065491906132dd565b60405180910390f35b34801561066957600080fd5b50610672611903565b60405161067f919061330e565b60405180910390f35b34801561069457600080fd5b506106af60048036038101906106aa919061315e565b61199c565b6040516106bc9190613766565b60405180910390f35b3480156106d157600080fd5b506106ec60048036038101906106e7919061357b565b611a44565b6040516106f9919061330e565b60405180910390f35b34801561070e57600080fd5b50610717611ac8565b604051610724919061330e565b60405180910390f35b34801561073957600080fd5b50610754600480360381019061074f9190613788565b611ad0565b604051610761919061330e565b60405180910390f35b34801561077657600080fd5b50610791600480360381019061078c919061315e565b611b42565b60405161079f9291906137f3565b60405180910390f35b3480156107b457600080fd5b506107bd611b73565b6040516107ca919061330e565b60405180910390f35b3480156107df57600080fd5b506107fa60048036038101906107f5919061315e565b611b79565b60405161080892919061381c565b60405180910390f35b34801561081d57600080fd5b506108386004803603810190610833919061315e565b611c25565b60405161084591906138fb565b60405180910390f35b34801561085a57600080fd5b506108756004803603810190610870919061315e565b611d08565b60405161088291906138fb565b60405180910390f35b34801561089757600080fd5b506108b260048036038101906108ad919061391d565b611deb565b6040516108bf919061330e565b60405180910390f35b3480156108d457600080fd5b506108ef60048036038101906108ea919061398c565b611e6e565b005b3480156108fd57600080fd5b506109186004803603810190610913919061315e565b611ebb565b6040516109259190613766565b60405180910390f35b34801561093a57600080fd5b50610943611f63565b604051610950919061330e565b60405180910390f35b34801561096557600080fd5b50610980600480360381019061097b919061315e565b611f69565b60405161098d9190613766565b60405180910390f35b3480156109a257600080fd5b506109ab61208b565b6040516109b891906132dd565b60405180910390f35b3480156109cd57600080fd5b506109e860048036038101906109e3919061315e565b6121c6565b6040516109f59190613a17565b60405180910390f35b348015610a0a57600080fd5b50610a256004803603810190610a2091906134e6565b61243a565b604051610a32919061330e565b60405180910390f35b348015610a4757600080fd5b50610a626004803603810190610a5d919061311e565b6124ab565b005b348015610a7057600080fd5b50610a8b6004803603810190610a86919061315e565b6124dc565b005b348015610a9957600080fd5b50610aa2612563565b604051610aaf919061330e565b60405180910390f35b348015610ac457600080fd5b50610adf6004803603810190610ada91906134e6565b612569565b604051610aec919061330e565b60405180910390f35b348015610b0157600080fd5b50610b0a6125f0565b604051610b179190613b60565b60405180910390f35b348015610b2c57600080fd5b50610b3561267b565b005b348015610b4357600080fd5b50610b4c612916565b005b348015610b5a57600080fd5b50610b756004803603810190610b70919061315e565b612ac6565b604051610b8493929190613373565b60405180910390f35b348015610b9957600080fd5b50610bb46004803603810190610baf919061357b565b612b78565b005b348015610bc257600080fd5b50610bcb612ba0565b604051610bd891906132dd565b60405180910390f35b348015610bed57600080fd5b50610c086004803603810190610c03919061357b565b612cdb565b005b348015610c1657600080fd5b50610c316004803603810190610c2c9190613b82565b612d03565b604051610c3e919061330e565b60405180910390f35b348015610c5357600080fd5b50610c5c612dd2565b604051610c69919061330e565b60405180910390f35b348015610c7e57600080fd5b50610c996004803603810190610c949190613ce0565b612dd8565b604051610ca6919061330e565b60405180910390f35b348015610cbb57600080fd5b50610cd66004803603810190610cd1919061315e565b612ebd565b604051610ce39190613766565b60405180910390f35b348015610cf857600080fd5b50610d136004803603810190610d0e919061315e565b612f65565b604051610d2293929190613373565b60405180910390f35b610d33612916565b80600260008481526020019081526020016000206000828254610d569190613d9a565b925050819055505050565b6060600060075467ffffffffffffffff811115610d8157610d806133bb565b5b604051908082528060200260200182016040528015610db457816020015b6060815260200190600190039081610d9f5790505b509050600080600090505b600754811015610ec55784600e60008381526020019081526020016000206000015403610eb257600e60008281526020019081526020016000206001018054610e0790613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3390613dfd565b8015610e805780601f10610e5557610100808354040283529160200191610e80565b820191906000526020600020905b815481529060010190602001808311610e6357829003601f168201915b5050505050838381518110610e9857610e97613e2e565b5b60200260200101819052508180610eae90613e5d565b9250505b8080610ebd90613e5d565b915050610dbf565b508192505050919050565b6060600060085467ffffffffffffffff811115610ef057610eef6133bb565b5b604051908082528060200260200182016040528015610f2357816020015b6060815260200190600190039081610f0e5790505b509050600080600090505b6008548110156110345784600f6000838152602001908152602001600020600001540361101357600f60008281526020019081526020016000206001018054610f7690613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa290613dfd565b8015610fef5780601f10610fc457610100808354040283529160200191610fef565b820191906000526020600020905b815481529060010190602001808311610fd257829003601f168201915b505050505083838151811061100757611006613e2e565b5b60200260200101819052505b818061101e90613e5d565b925050808061102c90613e5d565b915050610f2e565b508192505050919050565b60075481565b600047905060003373ffffffffffffffffffffffffffffffffffffffff168260405161107090613ed6565b60006040518083038185875af1925050503d80600081146110ad576040519150601f19603f3d011682016040523d82523d6000602084013e6110b2565b606091505b505090505050565b60095481565b60116020528060005260406000206000915090508060000154908060010154908060020180546110ef90613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461111b90613dfd565b80156111685780601f1061113d57610100808354040283529160200191611168565b820191906000526020600020905b81548152906001019060200180831161114b57829003601f168201915b5050505050905083565b600080600090505b6007548110156111d8578280519060200120600e60008381526020019081526020016000206001016040516111af9190613f83565b6040518091039020036111c557809150506111de565b80806111d090613e5d565b91505061117a565b50600090505b919050565b600d60205280600052604060002060009150905080600001805461120690613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461123290613dfd565b801561127f5780601f106112545761010080835404028352916020019161127f565b820191906000526020600020905b81548152906001019060200180831161126257829003601f168201915b50505050509080600101805461129490613dfd565b80601f01602080910402602001604051908101604052809291908181526020018280546112c090613dfd565b801561130d5780601f106112e25761010080835404028352916020019161130d565b820191906000526020600020905b8154815290600101906020018083116112f057829003601f168201915b50505050509080600201805461132290613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461134e90613dfd565b801561139b5780601f106113705761010080835404028352916020019161139b565b820191906000526020600020905b81548152906001019060200180831161137e57829003601f168201915b5050505050905083565b6060600060075467ffffffffffffffff8111156113c5576113c46133bb565b5b6040519080825280602002602001820160405280156113f857816020015b60608152602001906001900390816113e35790505b50905060005b6007548110156114d857600e6000828152602001908152602001600020600101805461142990613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461145590613dfd565b80156114a25780601f10611477576101008083540402835291602001916114a2565b820191906000526020600020905b81548152906001019060200180831161148557829003601f168201915b50505050508282815181106114ba576114b9613e2e565b5b602002602001018190525080806114d090613e5d565b9150506113fe565b508091505090565b60006040518060600160405280600b5481526020018481526020018381525060126000600b5481526020019081526020016000206000820151816000015560208201518160010155604082015181600201908161153d9190614146565b50905050600b600081548092919061155490613e5d565b9190505550600b54905092915050565b601360205280600052604060002060009150905080600001549080600101549080600201805461159390613dfd565b80601f01602080910402602001604051908101604052809291908181526020018280546115bf90613dfd565b801561160c5780601f106115e15761010080835404028352916020019161160c565b820191906000526020600020905b8154815290600101906020018083116115ef57829003601f168201915b5050505050905083565b60026020528060005260406000206000915090505481565b606061080073ffffffffffffffffffffffffffffffffffffffff1663a03ffee13060046040518363ffffffff1660e01b815260040161166e9291906142dd565b600060405180830381865afa15801561168b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116b49190614493565b905090565b600f6020528060005260406000206000915090508060000154908060010180546116e290613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461170e90613dfd565b801561175b5780601f106117305761010080835404028352916020019161175b565b820191906000526020600020905b81548152906001019060200180831161173e57829003601f168201915b5050505050908060020154905083565b600a5481565b60606000600a5467ffffffffffffffff811115611791576117906133bb565b5b6040519080825280602002602001820160405280156117c457816020015b60608152602001906001900390816117af5790505b509050600080600090505b600a548110156118f7578560116000838152602001908152602001600020600001541480156118135750846011600083815260200190815260200160002060010154145b156118d65760116000828152602001908152602001600020600201805461183990613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461186590613dfd565b80156118b25780601f10611887576101008083540402835291602001916118b2565b820191906000526020600020905b81548152906001019060200180831161189557829003601f168201915b50505050508383815181106118ca576118c9613e2e565b5b60200260200101819052505b81806118e190613e5d565b92505080806118ef90613e5d565b9150506117cf565b50819250505092915050565b600080600061080073ffffffffffffffffffffffffffffffffffffffff1663241774e63060046040518363ffffffff1660e01b81526004016119469291906142dd565b600060405180830381865afa158015611963573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061198c91906145b8565b9150915080602001519250505090565b6060600d600083815260200190815260200160002060010180546119bf90613dfd565b80601f01602080910402602001604051908101604052809291908181526020018280546119eb90613dfd565b8015611a385780601f10611a0d57610100808354040283529160200191611a38565b820191906000526020600020905b815481529060010190602001808311611a1b57829003601f168201915b50505050509050919050565b60006040518060600160405280600c5481526020018481526020018381525060136000600c54815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611aa19190614146565b50905050600c6000815480929190611ab890613e5d565b9190505550600c54905092915050565b600047905090565b6000604051806040016040528083815260200184815250600e60006007548152602001908152602001600020600082015181600001556020820151816001019081611b1b9190614146565b5090505060076000815480929190611b3290613e5d565b9190505550600754905092915050565b60056020528060005260406000206000915090508060000160009054906101000a900460070b908060010154905082565b60065481565b600e602052806000526040600020600091509050806000015490806001018054611ba290613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054611bce90613dfd565b8015611c1b5780601f10611bf057610100808354040283529160200191611c1b565b820191906000526020600020905b815481529060010190602001808311611bfe57829003601f168201915b5050505050905082565b60606000600b5467ffffffffffffffff811115611c4557611c446133bb565b5b604051908082528060200260200182016040528015611c735781602001602082028036833780820191505090505b509050600080600090505b600b54811015611cfd5784601260008381526020019081526020016000206001015403611cea576012600082815260200190815260200160002060000154838381518110611ccf57611cce613e2e565b5b6020026020010181815250508180611ce690613e5d565b9250505b8080611cf590613e5d565b915050611c7e565b508192505050919050565b60606000600c5467ffffffffffffffff811115611d2857611d276133bb565b5b604051908082528060200260200182016040528015611d565781602001602082028036833780820191505090505b509050600080600090505b600c54811015611de05784601360008381526020019081526020016000206001015403611dcd576013600082815260200190815260200160002060000154838381518110611db257611db1613e2e565b5b6020026020010181815250508180611dc990613e5d565b9250505b8080611dd890613e5d565b915050611d61565b508192505050919050565b600060405180606001604052808581526020018481526020018381525060116000600a54815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611e469190614146565b50905050600a6000815480929190611e5d90613e5d565b9190505550600a5490509392505050565b81600d60008581526020019081526020016000206000019081611e919190614146565b5080600d60008581526020019081526020016000206001019081611eb59190614146565b50505050565b6060600f60008381526020019081526020016000206001018054611ede90613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054611f0a90613dfd565b8015611f575780601f10611f2c57610100808354040283529160200191611f57565b820191906000526020600020905b815481529060010190602001808311611f3a57829003601f168201915b50505050509050919050565b600b5481565b6060611f73612916565b60006005600084815260200190815260200160002060000160009054906101000a900460070b60070b905080421015611fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd890614660565b60405180910390fd5b60006005600085815260200190815260200160002060010154905060003373ffffffffffffffffffffffffffffffffffffffff168260405161202290613ed6565b60006040518083038185875af1925050503d806000811461205f576040519150601f19603f3d011682016040523d82523d6000602084013e612064565b606091505b50509050604051806060016040528060218152602001614cd0602191399350505050919050565b6060600060085467ffffffffffffffff8111156120ab576120aa6133bb565b5b6040519080825280602002602001820160405280156120de57816020015b60608152602001906001900390816120c95790505b50905060005b6008548110156121be57600f6000828152602001908152602001600020600101805461210f90613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461213b90613dfd565b80156121885780601f1061215d57610100808354040283529160200191612188565b820191906000526020600020905b81548152906001019060200180831161216b57829003601f168201915b50505050508282815181106121a05761219f613e2e565b5b602002602001018190525080806121b690613e5d565b9150506120e4565b508091505090565b60006121d0612916565b600061080173ffffffffffffffffffffffffffffffffffffffff1663b46a8d613060046040518363ffffffff1660e01b81526004016122109291906142dd565b6000604051808303816000875af115801561222f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906122589190614761565b9050600060026000858152602001908152602001600020549050600061080073ffffffffffffffffffffffffffffffffffffffff16633edab33c306004856040518463ffffffff1660e01b81526004016122b4939291906147aa565b6020604051808303816000875af11580156122d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f791906147e8565b905060405180604001604052808260070b815260200183600560008981526020019081526020016000206001015461232f9190613d9a565b8152506005600087815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055506020820151816001015590505060008360008151811061239a57612399613e2e565b5b602002602001015160200151905060003373ffffffffffffffffffffffffffffffffffffffff16826040516123ce90613ed6565b60006040518083038185875af1925050503d806000811461240b576040519150601f19603f3d011682016040523d82523d6000602084013e612410565b606091505b50509050600060026000898152602001908152602001600020819055508295505050505050919050565b600080600090505b6008548110156124a0578280519060200120600f60008381526020019081526020016000206001016040516124779190613f83565b60405180910390200361248d57809150506124a6565b808061249890613e5d565b915050612442565b50600090505b919050565b80600f600084815260200190815260200160002060020160008282546124d19190613d9a565b925050819055505050565b61080073ffffffffffffffffffffffffffffffffffffffff166353266bbb306004846040518463ffffffff1660e01b815260040161251c939291906147aa565b6020604051808303816000875af115801561253b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255f91906147e8565b5050565b600c5481565b600080600090505b6008548110156125e5578280519060200120600f60008381526020019081526020016000206001016040516125a69190613f83565b6040518091039020036125d257600f6000828152602001908152602001600020600001549150506125eb565b80806125dd90613e5d565b915050612571565b50600090505b919050565b606061080173ffffffffffffffffffffffffffffffffffffffff16639ad563b43060046040518363ffffffff1660e01b81526004016126309291906142dd565b600060405180830381865afa15801561264d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061267691906149a2565b905090565b60005b6006548110156126e157600d6000828152602001908152602001600020600080820160006126ac9190613077565b6001820160006126bc9190613077565b6002820160006126cc9190613077565b505080806126d990613e5d565b91505061267e565b5060005b60075481101561273057600e600082815260200190815260200160002060008082016000905560018201600061271b9190613077565b5050808061272890613e5d565b9150506126e5565b5060005b60085481101561278757600f600082815260200190815260200160002060008082016000905560018201600061276a9190613077565b60028201600090555050808061277f90613e5d565b915050612734565b5060005b6007548110156127de576010600082815260200190815260200160002060008082016000905560018201600090556002820160006127c99190613077565b505080806127d690613e5d565b91505061278b565b5060005b600b54811015612835576012600082815260200190815260200160002060008082016000905560018201600090556002820160006128209190613077565b5050808061282d90613e5d565b9150506127e2565b5060005b600c5481101561288c576013600082815260200190815260200160002060008082016000905560018201600090556002820160006128779190613077565b5050808061288490613e5d565b915050612839565b5060005b600a548110156128e3576011600082815260200190815260200160002060008082016000905560018201600090556002820160006128ce9190613077565b505080806128db90613e5d565b915050612890565b506000600681905550600060078190555060006008819055506000600b819055506000600c819055506000600a81905550565b600061080073ffffffffffffffffffffffffffffffffffffffff1663b6039895327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60006040518463ffffffff1660e01b815260040161297893929190614b24565b6020604051808303816000875af1158015612997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129bb9190614b9a565b9050806129fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129f490614c13565b60405180910390fd5b600061080173ffffffffffffffffffffffffffffffffffffffff16637a9841ed3260016040518363ffffffff1660e01b8152600401612a3d929190614c33565b6020604051808303816000875af1158015612a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a809190614b9a565b905080612ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ab990614caf565b60405180910390fd5b5050565b6012602052806000526040600020600091509050806000015490806001015490806002018054612af590613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054612b2190613dfd565b8015612b6e5780601f10612b4357610100808354040283529160200191612b6e565b820191906000526020600020905b815481529060010190602001808311612b5157829003601f168201915b5050505050905083565b80600f60008481526020019081526020016000206001019081612b9b9190614146565b505050565b6060600060065467ffffffffffffffff811115612bc057612bbf6133bb565b5b604051908082528060200260200182016040528015612bf357816020015b6060815260200190600190039081612bde5790505b50905060005b600654811015612cd357600d60008281526020019081526020016000206001018054612c2490613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054612c5090613dfd565b8015612c9d5780601f10612c7257610100808354040283529160200191612c9d565b820191906000526020600020905b815481529060010190602001808311612c8057829003601f168201915b5050505050828281518110612cb557612cb4613e2e565b5b60200260200101819052508080612ccb90613e5d565b915050612bf9565b508091505090565b80600e60008481526020019081526020016000206001019081612cfe9190614146565b505050565b600060405180606001604052808481526020018381526020016040518060400160405280600581526020017f46616c7365000000000000000000000000000000000000000000000000000000815250815250600d600060065481526020019081526020016000206000820151816000019081612d7f9190614146565b506020820151816001019081612d959190614146565b506040820151816002019081612dab9190614146565b5090505060066000815480929190612dc290613e5d565b9190505550600654905092915050565b60085481565b600060405180606001604052808481526020018581526020016000815250600f60006008548152602001908152602001600020600082015181600001556020820151816001019081612e2a9190614146565b506040820151816002015590505060086000815480929190612e4b90613e5d565b919050555060005b8251811015612eb057612e85600854600954858481518110612e7857612e77613e2e565b5b6020026020010151613017565b60096000815480929190612e9890613e5d565b91905055508080612ea890613e5d565b915050612e53565b5060085490509392505050565b6060600e60008381526020019081526020016000206001018054612ee090613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054612f0c90613dfd565b8015612f595780601f10612f2e57610100808354040283529160200191612f59565b820191906000526020600020905b815481529060010190602001808311612f3c57829003601f168201915b50505050509050919050565b6010602052806000526040600020600091509050806000015490806001015490806002018054612f9490613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054612fc090613dfd565b801561300d5780601f10612fe25761010080835404028352916020019161300d565b820191906000526020600020905b815481529060010190602001808311612ff057829003601f168201915b5050505050905083565b604051806060016040528084815260200183815260200182815250601060008481526020019081526020016000206000820151816000015560208201518160010155604082015181600201908161306e9190614146565b50905050505050565b50805461308390613dfd565b6000825580601f1061309557506130b4565b601f0160209004906000526020600020908101906130b391906130b7565b5b50565b5b808211156130d05760008160009055506001016130b8565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6130fb816130e8565b811461310657600080fd5b50565b600081359050613118816130f2565b92915050565b60008060408385031215613135576131346130de565b5b600061314385828601613109565b925050602061315485828601613109565b9150509250929050565b600060208284031215613174576131736130de565b5b600061318284828501613109565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156131f15780820151818401526020810190506131d6565b60008484015250505050565b6000601f19601f8301169050919050565b6000613219826131b7565b61322381856131c2565b93506132338185602086016131d3565b61323c816131fd565b840191505092915050565b6000613253838361320e565b905092915050565b6000602082019050919050565b60006132738261318b565b61327d8185613196565b93508360208202850161328f856131a7565b8060005b858110156132cb57848403895281516132ac8582613247565b94506132b78361325b565b925060208a01995050600181019050613293565b50829750879550505050505092915050565b600060208201905081810360008301526132f78184613268565b905092915050565b613308816130e8565b82525050565b600060208201905061332360008301846132ff565b92915050565b600082825260208201905092915050565b6000613345826131b7565b61334f8185613329565b935061335f8185602086016131d3565b613368816131fd565b840191505092915050565b600060608201905061338860008301866132ff565b61339560208301856132ff565b81810360408301526133a7818461333a565b9050949350505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6133f3826131fd565b810181811067ffffffffffffffff82111715613412576134116133bb565b5b80604052505050565b60006134256130d4565b905061343182826133ea565b919050565b600067ffffffffffffffff821115613451576134506133bb565b5b61345a826131fd565b9050602081019050919050565b82818337600083830152505050565b600061348961348484613436565b61341b565b9050828152602081018484840111156134a5576134a46133b6565b5b6134b0848285613467565b509392505050565b600082601f8301126134cd576134cc6133b1565b5b81356134dd848260208601613476565b91505092915050565b6000602082840312156134fc576134fb6130de565b5b600082013567ffffffffffffffff81111561351a576135196130e3565b5b613526848285016134b8565b91505092915050565b60006060820190508181036000830152613549818661333a565b9050818103602083015261355d818561333a565b90508181036040830152613571818461333a565b9050949350505050565b60008060408385031215613592576135916130de565b5b60006135a085828601613109565b925050602083013567ffffffffffffffff8111156135c1576135c06130e3565b5b6135cd858286016134b8565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008160070b9050919050565b61361981613603565b82525050565b613628816130e8565b82525050565b6080820160008201516136446000850182613610565b5060208201516136576020850182613610565b50604082015161366a604085018261361f565b50606082015161367d606085018261361f565b50505050565b600061368f838361362e565b60808301905092915050565b6000602082019050919050565b60006136b3826135d7565b6136bd81856135e2565b93506136c8836135f3565b8060005b838110156136f95781516136e08882613683565b97506136eb8361369b565b9250506001810190506136cc565b5085935050505092915050565b6000602082019050818103600083015261372081846136a8565b905092915050565b600060608201905061373d60008301866132ff565b818103602083015261374f818561333a565b905061375e60408301846132ff565b949350505050565b60006020820190508181036000830152613780818461333a565b905092915050565b6000806040838503121561379f5761379e6130de565b5b600083013567ffffffffffffffff8111156137bd576137bc6130e3565b5b6137c9858286016134b8565b92505060206137da85828601613109565b9150509250929050565b6137ed81613603565b82525050565b600060408201905061380860008301856137e4565b61381560208301846132ff565b9392505050565b600060408201905061383160008301856132ff565b8181036020830152613843818461333a565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000613884838361361f565b60208301905092915050565b6000602082019050919050565b60006138a88261384c565b6138b28185613857565b93506138bd83613868565b8060005b838110156138ee5781516138d58882613878565b97506138e083613890565b9250506001810190506138c1565b5085935050505092915050565b60006020820190508181036000830152613915818461389d565b905092915050565b600080600060608486031215613936576139356130de565b5b600061394486828701613109565b935050602061395586828701613109565b925050604084013567ffffffffffffffff811115613976576139756130e3565b5b613982868287016134b8565b9150509250925092565b6000806000606084860312156139a5576139a46130de565b5b60006139b386828701613109565b935050602084013567ffffffffffffffff8111156139d4576139d36130e3565b5b6139e0868287016134b8565b925050604084013567ffffffffffffffff811115613a0157613a006130e3565b5b613a0d868287016134b8565b9150509250925092565b6000602082019050613a2c60008301846137e4565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060ff82169050919050565b613a7481613a5e565b82525050565b60006060830160008301518482036000860152613a97828261320e565b9150506020830151613aac602086018261361f565b506040830151613abf6040860182613a6b565b508091505092915050565b6000613ad68383613a7a565b905092915050565b6000602082019050919050565b6000613af682613a32565b613b008185613a3d565b935083602082028501613b1285613a4e565b8060005b85811015613b4e5784840389528151613b2f8582613aca565b9450613b3a83613ade565b925060208a01995050600181019050613b16565b50829750879550505050505092915050565b60006020820190508181036000830152613b7a8184613aeb565b905092915050565b60008060408385031215613b9957613b986130de565b5b600083013567ffffffffffffffff811115613bb757613bb66130e3565b5b613bc3858286016134b8565b925050602083013567ffffffffffffffff811115613be457613be36130e3565b5b613bf0858286016134b8565b9150509250929050565b600067ffffffffffffffff821115613c1557613c146133bb565b5b602082029050602081019050919050565b600080fd5b6000613c3e613c3984613bfa565b61341b565b90508083825260208201905060208402830185811115613c6157613c60613c26565b5b835b81811015613ca857803567ffffffffffffffff811115613c8657613c856133b1565b5b808601613c9389826134b8565b85526020850194505050602081019050613c63565b5050509392505050565b600082601f830112613cc757613cc66133b1565b5b8135613cd7848260208601613c2b565b91505092915050565b600080600060608486031215613cf957613cf86130de565b5b600084013567ffffffffffffffff811115613d1757613d166130e3565b5b613d23868287016134b8565b9350506020613d3486828701613109565b925050604084013567ffffffffffffffff811115613d5557613d546130e3565b5b613d6186828701613cb2565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613da5826130e8565b9150613db0836130e8565b9250828201905080821115613dc857613dc7613d6b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613e1557607f821691505b602082108103613e2857613e27613dce565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613e68826130e8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613e9a57613e99613d6b565b5b600182019050919050565b600081905092915050565b50565b6000613ec0600083613ea5565b9150613ecb82613eb0565b600082019050919050565b6000613ee182613eb3565b9150819050919050565b60008190508160005260206000209050919050565b60008154613f0d81613dfd565b613f178186613ea5565b94506001821660008114613f325760018114613f4757613f7a565b60ff1983168652811515820286019350613f7a565b613f5085613eeb565b60005b83811015613f7257815481890152600182019150602081019050613f53565b838801955050505b50505092915050565b6000613f8f8284613f00565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613ffc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613fbf565b6140068683613fbf565b95508019841693508086168417925050509392505050565b6000819050919050565b600061404361403e614039846130e8565b61401e565b6130e8565b9050919050565b6000819050919050565b61405d83614028565b6140716140698261404a565b848454613fcc565b825550505050565b600090565b614086614079565b614091818484614054565b505050565b5b818110156140b5576140aa60008261407e565b600181019050614097565b5050565b601f8211156140fa576140cb81613f9a565b6140d484613faf565b810160208510156140e3578190505b6140f76140ef85613faf565b830182614096565b50505b505050565b600082821c905092915050565b600061411d600019846008026140ff565b1980831691505092915050565b6000614136838361410c565b9150826002028217905092915050565b61414f826131b7565b67ffffffffffffffff811115614168576141676133bb565b5b6141728254613dfd565b61417d8282856140b9565b600060209050601f8311600181146141b0576000841561419e578287015190505b6141a8858261412a565b865550614210565b601f1984166141be86613f9a565b60005b828110156141e6578489015182556001820191506020850194506020810190506141c1565b8683101561420357848901516141ff601f89168261410c565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061424382614218565b9050919050565b61425381614238565b82525050565b6000815461426681613dfd565b6142708186613329565b9450600182166000811461428b57600181146142a1576142d4565b60ff1983168652811515602002860193506142d4565b6142aa85613f9a565b60005b838110156142cc578154818901526001820191506020810190506142ad565b808801955050505b50505092915050565b60006040820190506142f2600083018561424a565b81810360208301526143048184614259565b90509392505050565b600067ffffffffffffffff821115614328576143276133bb565b5b602082029050602081019050919050565b600080fd5b600080fd5b61434c81613603565b811461435757600080fd5b50565b60008151905061436981614343565b92915050565b60008151905061437e816130f2565b92915050565b60006080828403121561439a57614399614339565b5b6143a4608061341b565b905060006143b48482850161435a565b60008301525060206143c88482850161435a565b60208301525060406143dc8482850161436f565b60408301525060606143f08482850161436f565b60608301525092915050565b600061440f61440a8461430d565b61341b565b9050808382526020820190506080840283018581111561443257614431613c26565b5b835b8181101561445b57806144478882614384565b845260208401935050608081019050614434565b5050509392505050565b600082601f83011261447a576144796133b1565b5b815161448a8482602086016143fc565b91505092915050565b6000602082840312156144a9576144a86130de565b5b600082015167ffffffffffffffff8111156144c7576144c66130e3565b5b6144d384828501614465565b91505092915050565b60006144ef6144ea84613436565b61341b565b90508281526020810184848401111561450b5761450a6133b6565b5b6145168482856131d3565b509392505050565b600082601f830112614533576145326133b1565b5b81516145438482602086016144dc565b91505092915050565b60006040828403121561456257614561614339565b5b61456c604061341b565b9050600082015167ffffffffffffffff81111561458c5761458b61433e565b5b6145988482850161451e565b60008301525060206145ac8482850161436f565b60208301525092915050565b600080604083850312156145cf576145ce6130de565b5b60006145dd8582860161436f565b925050602083015167ffffffffffffffff8111156145fe576145fd6130e3565b5b61460a8582860161454c565b9150509250929050565b7f5468652074696d6520686173206e6f7420706173736564207965740000000000600082015250565b600061464a601b83613329565b915061465582614614565b602082019050919050565b600060208201905081810360008301526146798161463d565b9050919050565b600067ffffffffffffffff82111561469b5761469a6133bb565b5b602082029050602081019050919050565b60006146bf6146ba84614680565b61341b565b905080838252602082019050602084028301858111156146e2576146e1613c26565b5b835b8181101561472957805167ffffffffffffffff811115614707576147066133b1565b5b808601614714898261454c565b855260208501945050506020810190506146e4565b5050509392505050565b600082601f830112614748576147476133b1565b5b81516147588482602086016146ac565b91505092915050565b600060208284031215614777576147766130de565b5b600082015167ffffffffffffffff811115614795576147946130e3565b5b6147a184828501614733565b91505092915050565b60006060820190506147bf600083018661424a565b81810360208301526147d18185614259565b90506147e060408301846132ff565b949350505050565b6000602082840312156147fe576147fd6130de565b5b600061480c8482850161435a565b91505092915050565b600067ffffffffffffffff8211156148305761482f6133bb565b5b602082029050602081019050919050565b61484a81613a5e565b811461485557600080fd5b50565b60008151905061486781614841565b92915050565b60006060828403121561488357614882614339565b5b61488d606061341b565b9050600082015167ffffffffffffffff8111156148ad576148ac61433e565b5b6148b98482850161451e565b60008301525060206148cd8482850161436f565b60208301525060406148e184828501614858565b60408301525092915050565b60006149006148fb84614815565b61341b565b9050808382526020820190506020840283018581111561492357614922613c26565b5b835b8181101561496a57805167ffffffffffffffff811115614948576149476133b1565b5b808601614955898261486d565b85526020850194505050602081019050614925565b5050509392505050565b600082601f830112614989576149886133b1565b5b81516149998482602086016148ed565b91505092915050565b6000602082840312156149b8576149b76130de565b5b600082015167ffffffffffffffff8111156149d6576149d56130e3565b5b6149e284828501614974565b91505092915050565b600081549050919050565b60008190508160005260206000209050919050565b60008154614a1881613dfd565b614a2281866131c2565b94506001821660008114614a3d5760018114614a5357614a86565b60ff198316865281151560200286019350614a86565b614a5c85613f9a565b60005b83811015614a7e57815481890152600182019150602081019050614a5f565b808801955050505b50505092915050565b6000614a9b8383614a0b565b905092915050565b6000600182019050919050565b6000614abb826149eb565b614ac58185613196565b935083602082028501614ad7856149f6565b8060005b85811015614b1257848403895281614af38582614a8f565b9450614afe83614aa3565b925060208a01995050600181019050614adb565b50829750879550505050505092915050565b6000606082019050614b39600083018661424a565b614b4660208301856132ff565b8181036040830152614b588184614ab0565b9050949350505050565b60008115159050919050565b614b7781614b62565b8114614b8257600080fd5b50565b600081519050614b9481614b6e565b92915050565b600060208284031215614bb057614baf6130de565b5b6000614bbe84828501614b85565b91505092915050565b7f5374616b696e6720417070726f7665206661696c656400000000000000000000600082015250565b6000614bfd601683613329565b9150614c0882614bc7565b602082019050919050565b60006020820190508181036000830152614c2c81614bf0565b9050919050565b6000604082019050614c48600083018561424a565b8181036020830152614c5a8184614ab0565b90509392505050565b7f446973747269627574696f6e20417070726f7665206661696c65640000000000600082015250565b6000614c99601b83613329565b9150614ca482614c63565b602082019050919050565b60006020820190508181036000830152614cc881614c8c565b905091905056fe4d6f6e657920686173206265656e2073656e7420746f2049646561204f776e6572a2646970667358221220a137b93ac7c5ccda2324736d8102a753b01fae756cb6a63be410d334e2cc282d64736f6c634300081100332f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746565766d6f7376616c6f7065723135387777617334763666676375327833706c67373073367530666d306c6c653233376b6c74722f636f736d6f732e7374616b696e672e763162657461312e4d7367556e64656c65676174652f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367576974686472617744656c656761746f725265776172642f636f736d6f732e7374616b696e672e763162657461312e4d736744656c6567617465","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x5394 PUSH1 0x23 SWAP2 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x5338 PUSH1 0x25 SWAP2 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x52DB PUSH1 0x2A SWAP2 CODECOPY DUP2 MSTORE POP PUSH1 0x0 SWAP1 PUSH1 0x3 PUSH3 0x7C SWAP3 SWAP2 SWAP1 PUSH3 0xF7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x535D PUSH1 0x37 SWAP2 CODECOPY DUP2 MSTORE POP PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH3 0xB7 SWAP3 SWAP2 SWAP1 PUSH3 0x157 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x5305 PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x4 SWAP1 DUP2 PUSH3 0xE2 SWAP2 SWAP1 PUSH3 0x4BE JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x5A5 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x144 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x143 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH3 0x132 SWAP2 SWAP1 PUSH3 0x4BE JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x118 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x153 SWAP2 SWAP1 PUSH3 0x1B7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x1A4 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1A3 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH3 0x192 SWAP2 SWAP1 PUSH3 0x4BE JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x178 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1B3 SWAP2 SWAP1 PUSH3 0x1B7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1DB JUMPI PUSH1 0x0 DUP2 DUP2 PUSH3 0x1D1 SWAP2 SWAP1 PUSH3 0x1DF JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x1B8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x1ED SWAP1 PUSH3 0x2AD JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x201 JUMPI POP PUSH3 0x222 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x221 SWAP2 SWAP1 PUSH3 0x225 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x240 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x226 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2DC JUMPI PUSH3 0x2DB PUSH3 0x27E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x346 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x307 JUMP JUMPDEST PUSH3 0x352 DUP7 DUP4 PUSH3 0x307 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x39F PUSH3 0x399 PUSH3 0x393 DUP5 PUSH3 0x36A JUMP JUMPDEST PUSH3 0x374 JUMP JUMPDEST PUSH3 0x36A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3BB DUP4 PUSH3 0x37E JUMP JUMPDEST PUSH3 0x3D3 PUSH3 0x3CA DUP3 PUSH3 0x3A6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x314 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3EA PUSH3 0x3DB JUMP JUMPDEST PUSH3 0x3F7 DUP2 DUP5 DUP5 PUSH3 0x3B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x41F JUMPI PUSH3 0x413 PUSH1 0x0 DUP3 PUSH3 0x3E0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3FD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x46E JUMPI PUSH3 0x438 DUP2 PUSH3 0x2E2 JUMP JUMPDEST PUSH3 0x443 DUP5 PUSH3 0x2F7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x453 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x46B PUSH3 0x462 DUP6 PUSH3 0x2F7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3FC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x493 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x473 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4AE DUP4 DUP4 PUSH3 0x480 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4C9 DUP3 PUSH3 0x244 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4E5 JUMPI PUSH3 0x4E4 PUSH3 0x24F JUMP JUMPDEST JUMPDEST PUSH3 0x4F1 DUP3 SLOAD PUSH3 0x2AD JUMP JUMPDEST PUSH3 0x4FE DUP3 DUP3 DUP6 PUSH3 0x423 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x536 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x521 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x52D DUP6 DUP3 PUSH3 0x4A0 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x59D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x546 DUP7 PUSH3 0x2E2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x570 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x549 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x590 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x58C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x480 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4D26 DUP1 PUSH3 0x5B5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2E4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x803F5B9F GT PUSH2 0x190 JUMPI DUP1 PUSH4 0xAA4CDF2A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC04FE978 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD3791B20 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xC47 JUMPI DUP1 PUSH4 0xE3280C96 EQ PUSH2 0xC72 JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xCAF JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xCEC JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xBB6 JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xBE1 JUMPI DUP1 PUSH4 0xC4C2E364 EQ PUSH2 0xC0A JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0xAB8 JUMPI DUP1 PUSH4 0xAE429E47 EQ PUSH2 0xAF5 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0xB20 JUMPI DUP1 PUSH4 0xB2947C71 EQ PUSH2 0xB37 JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0xB4E JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xB8D JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x90D756A7 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xA1CA9178 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0xA2CDB3A9 EQ PUSH2 0xA3B JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xA64 JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0xA8D JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x90D756A7 EQ PUSH2 0x959 JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x996 JUMPI DUP1 PUSH4 0x9C6353E8 EQ PUSH2 0x9C1 JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x811 JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x84E JUMPI DUP1 PUSH4 0x82FCC732 EQ PUSH2 0x88B JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x8C8 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x92E JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x414D9A2B GT PUSH2 0x24F JUMPI DUP1 PUSH4 0x5D907DA1 GT PUSH2 0x208 JUMPI DUP1 PUSH4 0x71085CAB GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x71085CAB EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0x7495F854 EQ PUSH2 0x76A JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x7A8 JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x7D3 JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x6AF3304E EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x702 JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x414D9A2B EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x42C7652A EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0x53F68802 EQ PUSH2 0x65D JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x1BA44C4C GT PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x2D5BF5B0 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x50F JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0xCDD53F6 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x109AC970 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x1B52B9DE EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x3C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH2 0xD2B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BF PUSH2 0x1045 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x422 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x34E6 JUMP JUMPDEST PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x352F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BC PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x536 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A0 PUSH2 0x162E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x3706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60A PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x672 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x3766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x717 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x754 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74F SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH2 0x1AD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x761 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x791 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1B42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79F SWAP3 SWAP2 SWAP1 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7BD PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x808 SWAP3 SWAP2 SWAP1 PUSH2 0x381C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x838 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x38FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x875 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x38FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x391D JUMP JUMPDEST PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x398C JUMP JUMPDEST PUSH2 0x1E6E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x918 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x3766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x943 PUSH2 0x1F63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x950 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x980 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x3766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9AB PUSH2 0x208B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F5 SWAP2 SWAP1 PUSH2 0x3A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA25 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x34E6 JUMP JUMPDEST PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA32 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA62 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH2 0x24AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA86 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x24DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA2 PUSH2 0x2563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xADF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xADA SWAP2 SWAP1 PUSH2 0x34E6 JUMP JUMPDEST PUSH2 0x2569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAEC SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0A PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB17 SWAP2 SWAP1 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB35 PUSH2 0x267B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4C PUSH2 0x2916 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB70 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x2AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB84 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x2B78 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBCB PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD8 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC08 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC03 SWAP2 SWAP1 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x2CDB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC31 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC2C SWAP2 SWAP1 PUSH2 0x3B82 JUMP JUMPDEST PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3E SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC5C PUSH2 0x2DD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC69 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC94 SWAP2 SWAP1 PUSH2 0x3CE0 JUMP JUMPDEST PUSH2 0x2DD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x2EBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE3 SWAP2 SWAP1 PUSH2 0x3766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD13 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0E SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x2F65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD22 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD33 PUSH2 0x2916 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD56 SWAP2 SWAP1 PUSH2 0x3D9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD81 JUMPI PUSH2 0xD80 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDB4 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD9F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xEC5 JUMPI DUP5 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xEB2 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xE07 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE33 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE80 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE55 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE80 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE63 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE98 JUMPI PUSH2 0xE97 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xEAE SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xEBD SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDBF JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF0 JUMPI PUSH2 0xEEF PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF23 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF0E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1034 JUMPI DUP5 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x1013 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xF76 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFA2 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFEF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFC4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFEF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFD2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1007 JUMPI PUSH2 0x1006 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x101E SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x102C SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF2E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1070 SWAP1 PUSH2 0x3ED6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x10EF SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x111B SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1168 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x113D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1168 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x114B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x11D8 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x11AF SWAP2 SWAP1 PUSH2 0x3F83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x11C5 JUMPI DUP1 SWAP2 POP POP PUSH2 0x11DE JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11D0 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x117A JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1206 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1232 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x127F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1254 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x127F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1262 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1294 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12C0 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x130D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x130D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1322 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x134E SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x139B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1370 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x139B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x137E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13C5 JUMPI PUSH2 0x13C4 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13F8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x13E3 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x14D8 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1429 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1455 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1477 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1485 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14BA JUMPI PUSH2 0x14B9 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x14D0 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13FE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0xB SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x153D SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xB PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1554 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xB SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1593 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15BF SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x160C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x160C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA03FFEE1 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166E SWAP3 SWAP2 SWAP1 PUSH2 0x42DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x168B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16B4 SWAP2 SWAP1 PUSH2 0x4493 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x16E2 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x170E SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x175B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1730 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x175B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x173E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1791 JUMPI PUSH2 0x1790 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17C4 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x17AF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x18F7 JUMPI DUP6 PUSH1 0x11 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x1813 JUMPI POP DUP5 PUSH1 0x11 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1839 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1865 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1887 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1895 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18CA JUMPI PUSH2 0x18C9 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x18E1 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x18EF SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17CF JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x241774E6 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1946 SWAP3 SWAP2 SWAP1 PUSH2 0x42DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1963 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198C SWAP2 SWAP1 PUSH2 0x45B8 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x19BF SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19EB SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A38 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A0D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A38 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A1B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 PUSH1 0xC SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xC PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1AB8 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xC SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1B1B SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1B32 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1BA2 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BCE SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C1B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BF0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C1B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BFE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C45 JUMPI PUSH2 0x1C44 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C73 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1CFD JUMPI DUP5 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1CEA JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1CE6 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1CF5 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C7E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xC SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D28 JUMPI PUSH2 0x1D27 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D56 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x1DE0 JUMPI DUP5 PUSH1 0x13 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1DCD JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DB2 JUMPI PUSH2 0x1DB1 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1DC9 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1DD8 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D61 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1E46 SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1E5D SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1E91 SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1EB5 SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1EDE SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F0A SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F57 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F2C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F57 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F3A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F73 PUSH2 0x2916 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND PUSH1 0x7 SIGNEXTEND SWAP1 POP DUP1 TIMESTAMP LT ISZERO PUSH2 0x1FE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD8 SWAP1 PUSH2 0x4660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2022 SWAP1 PUSH2 0x3ED6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x205F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4CD0 PUSH1 0x21 SWAP2 CODECOPY SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20DE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x20C9 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x21BE JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x210F SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x213B SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2188 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x215D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2188 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x216B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x21A0 JUMPI PUSH2 0x219F PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x21B6 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20E4 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D0 PUSH2 0x2916 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB46A8D61 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2210 SWAP3 SWAP2 SWAP1 PUSH2 0x42DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x222F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2258 SWAP2 SWAP1 PUSH2 0x4761 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3EDAB33C ADDRESS PUSH1 0x4 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F7 SWAP2 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x5 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x232F SWAP2 SWAP1 PUSH2 0x3D9A JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x7 SIGNEXTEND PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x239A JUMPI PUSH2 0x2399 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x23CE SWAP1 PUSH2 0x3ED6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x240B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x24A0 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x2477 SWAP2 SWAP1 PUSH2 0x3F83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x248D JUMPI DUP1 SWAP2 POP POP PUSH2 0x24A6 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2498 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2442 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x24D1 SWAP2 SWAP1 PUSH2 0x3D9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x53266BBB ADDRESS PUSH1 0x4 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x253B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x255F SWAP2 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x25E5 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x25A6 SWAP2 SWAP1 PUSH2 0x3F83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x25D2 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x25EB JUMP JUMPDEST DUP1 DUP1 PUSH2 0x25DD SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2571 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9AD563B4 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2630 SWAP3 SWAP2 SWAP1 PUSH2 0x42DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2676 SWAP2 SWAP1 PUSH2 0x49A2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x26E1 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x26AC SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x26BC SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x26CC SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x26D9 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x267E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2730 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x271B SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2728 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26E5 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2787 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x276A SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x277F SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2734 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x27DE JUMPI PUSH1 0x10 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x27C9 SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x27D6 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x278B JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2835 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2820 SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x282D SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27E2 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x288C JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2877 SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2884 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2839 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x28E3 JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x28CE SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x28DB SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2890 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6039895 ORIGIN PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2978 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2997 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29BB SWAP2 SWAP1 PUSH2 0x4B9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x29FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29F4 SWAP1 PUSH2 0x4C13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7A9841ED ORIGIN PUSH1 0x1 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3D SWAP3 SWAP2 SWAP1 PUSH2 0x4C33 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A80 SWAP2 SWAP1 PUSH2 0x4B9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2AC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AB9 SWAP1 PUSH2 0x4CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2AF5 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B21 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B6E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B43 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B6E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B51 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2B9B SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BC0 JUMPI PUSH2 0x2BBF PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2BF3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2BDE JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2CD3 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2C24 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C50 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C9D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C72 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C9D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C80 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2CB5 JUMPI PUSH2 0x2CB4 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2CCB SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BF9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2CFE SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2D7F SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2D95 SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2DAB SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC2 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2E2A SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2E4B SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2EB0 JUMPI PUSH2 0x2E85 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2E78 JUMPI PUSH2 0x2E77 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3017 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x2EA8 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2E53 JUMP JUMPDEST POP PUSH1 0x8 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2EE0 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F0C SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2F94 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2FC0 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x300D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FE2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x300D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FF0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x306E SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3083 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x3095 JUMPI POP PUSH2 0x30B4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x30B3 SWAP2 SWAP1 PUSH2 0x30B7 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x30D0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x30B8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30FB DUP2 PUSH2 0x30E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3118 DUP2 PUSH2 0x30F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3135 JUMPI PUSH2 0x3134 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3143 DUP6 DUP3 DUP7 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3154 DUP6 DUP3 DUP7 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3174 JUMPI PUSH2 0x3173 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3182 DUP5 DUP3 DUP6 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31F1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31D6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3219 DUP3 PUSH2 0x31B7 JUMP JUMPDEST PUSH2 0x3223 DUP2 DUP6 PUSH2 0x31C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x3233 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x323C DUP2 PUSH2 0x31FD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3253 DUP4 DUP4 PUSH2 0x320E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3273 DUP3 PUSH2 0x318B JUMP JUMPDEST PUSH2 0x327D DUP2 DUP6 PUSH2 0x3196 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x328F DUP6 PUSH2 0x31A7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x32CB JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x32AC DUP6 DUP3 PUSH2 0x3247 JUMP JUMPDEST SWAP5 POP PUSH2 0x32B7 DUP4 PUSH2 0x325B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3293 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32F7 DUP2 DUP5 PUSH2 0x3268 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3308 DUP2 PUSH2 0x30E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3323 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3345 DUP3 PUSH2 0x31B7 JUMP JUMPDEST PUSH2 0x334F DUP2 DUP6 PUSH2 0x3329 JUMP JUMPDEST SWAP4 POP PUSH2 0x335F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x3368 DUP2 PUSH2 0x31FD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3388 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x32FF JUMP JUMPDEST PUSH2 0x3395 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x32FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x33A7 DUP2 DUP5 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x33F3 DUP3 PUSH2 0x31FD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3412 JUMPI PUSH2 0x3411 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3425 PUSH2 0x30D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3431 DUP3 DUP3 PUSH2 0x33EA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3451 JUMPI PUSH2 0x3450 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH2 0x345A DUP3 PUSH2 0x31FD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3489 PUSH2 0x3484 DUP5 PUSH2 0x3436 JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x34A5 JUMPI PUSH2 0x34A4 PUSH2 0x33B6 JUMP JUMPDEST JUMPDEST PUSH2 0x34B0 DUP5 DUP3 DUP6 PUSH2 0x3467 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x34CD JUMPI PUSH2 0x34CC PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x34DD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3476 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34FC JUMPI PUSH2 0x34FB PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x351A JUMPI PUSH2 0x3519 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3526 DUP5 DUP3 DUP6 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3549 DUP2 DUP7 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x355D DUP2 DUP6 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3571 DUP2 DUP5 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3592 JUMPI PUSH2 0x3591 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35A0 DUP6 DUP3 DUP7 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35C1 JUMPI PUSH2 0x35C0 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x35CD DUP6 DUP3 DUP7 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3619 DUP2 PUSH2 0x3603 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3628 DUP2 PUSH2 0x30E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3644 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3610 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3657 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3610 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x366A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x361F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x367D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x361F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x368F DUP4 DUP4 PUSH2 0x362E JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B3 DUP3 PUSH2 0x35D7 JUMP JUMPDEST PUSH2 0x36BD DUP2 DUP6 PUSH2 0x35E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x36C8 DUP4 PUSH2 0x35F3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x36F9 JUMPI DUP2 MLOAD PUSH2 0x36E0 DUP9 DUP3 PUSH2 0x3683 JUMP JUMPDEST SWAP8 POP PUSH2 0x36EB DUP4 PUSH2 0x369B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x36CC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3720 DUP2 DUP5 PUSH2 0x36A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x373D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x32FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x374F DUP2 DUP6 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP PUSH2 0x375E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x32FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3780 DUP2 DUP5 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x379F JUMPI PUSH2 0x379E PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37BD JUMPI PUSH2 0x37BC PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x37C9 DUP6 DUP3 DUP7 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x37DA DUP6 DUP3 DUP7 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x37ED DUP2 PUSH2 0x3603 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3808 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x37E4 JUMP JUMPDEST PUSH2 0x3815 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x32FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3831 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x32FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3843 DUP2 DUP5 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3884 DUP4 DUP4 PUSH2 0x361F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A8 DUP3 PUSH2 0x384C JUMP JUMPDEST PUSH2 0x38B2 DUP2 DUP6 PUSH2 0x3857 JUMP JUMPDEST SWAP4 POP PUSH2 0x38BD DUP4 PUSH2 0x3868 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38EE JUMPI DUP2 MLOAD PUSH2 0x38D5 DUP9 DUP3 PUSH2 0x3878 JUMP JUMPDEST SWAP8 POP PUSH2 0x38E0 DUP4 PUSH2 0x3890 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x38C1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3915 DUP2 DUP5 PUSH2 0x389D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3936 JUMPI PUSH2 0x3935 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3944 DUP7 DUP3 DUP8 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3955 DUP7 DUP3 DUP8 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3976 JUMPI PUSH2 0x3975 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3982 DUP7 DUP3 DUP8 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39A5 JUMPI PUSH2 0x39A4 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39B3 DUP7 DUP3 DUP8 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39D4 JUMPI PUSH2 0x39D3 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x39E0 DUP7 DUP3 DUP8 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A01 JUMPI PUSH2 0x3A00 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3A0D DUP7 DUP3 DUP8 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A74 DUP2 PUSH2 0x3A5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x3A97 DUP3 DUP3 PUSH2 0x320E JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3AAC PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x361F JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x3ABF PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3A6B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AD6 DUP4 DUP4 PUSH2 0x3A7A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF6 DUP3 PUSH2 0x3A32 JUMP JUMPDEST PUSH2 0x3B00 DUP2 DUP6 PUSH2 0x3A3D JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3B12 DUP6 PUSH2 0x3A4E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3B4E JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3B2F DUP6 DUP3 PUSH2 0x3ACA JUMP JUMPDEST SWAP5 POP PUSH2 0x3B3A DUP4 PUSH2 0x3ADE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3B16 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B7A DUP2 DUP5 PUSH2 0x3AEB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B99 JUMPI PUSH2 0x3B98 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BB7 JUMPI PUSH2 0x3BB6 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3BC3 DUP6 DUP3 DUP7 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BE4 JUMPI PUSH2 0x3BE3 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3BF0 DUP6 DUP3 DUP7 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3C15 JUMPI PUSH2 0x3C14 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C3E PUSH2 0x3C39 DUP5 PUSH2 0x3BFA JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3C61 JUMPI PUSH2 0x3C60 PUSH2 0x3C26 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CA8 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C86 JUMPI PUSH2 0x3C85 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3C93 DUP10 DUP3 PUSH2 0x34B8 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C63 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CC7 JUMPI PUSH2 0x3CC6 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3CD7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3C2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CF9 JUMPI PUSH2 0x3CF8 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D17 JUMPI PUSH2 0x3D16 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3D23 DUP7 DUP3 DUP8 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3D34 DUP7 DUP3 DUP8 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D55 JUMPI PUSH2 0x3D54 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3D61 DUP7 DUP3 DUP8 ADD PUSH2 0x3CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DA5 DUP3 PUSH2 0x30E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DB0 DUP4 PUSH2 0x30E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3DC8 JUMPI PUSH2 0x3DC7 PUSH2 0x3D6B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3E15 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3E28 JUMPI PUSH2 0x3E27 PUSH2 0x3DCE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E68 DUP3 PUSH2 0x30E8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3E9A JUMPI PUSH2 0x3E99 PUSH2 0x3D6B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC0 PUSH1 0x0 DUP4 PUSH2 0x3EA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ECB DUP3 PUSH2 0x3EB0 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE1 DUP3 PUSH2 0x3EB3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3F0D DUP2 PUSH2 0x3DFD JUMP JUMPDEST PUSH2 0x3F17 DUP2 DUP7 PUSH2 0x3EA5 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3F32 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3F47 JUMPI PUSH2 0x3F7A JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x3F7A JUMP JUMPDEST PUSH2 0x3F50 DUP6 PUSH2 0x3EEB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F72 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F53 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F8F DUP3 DUP5 PUSH2 0x3F00 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3FFC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3FBF JUMP JUMPDEST PUSH2 0x4006 DUP7 DUP4 PUSH2 0x3FBF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4043 PUSH2 0x403E PUSH2 0x4039 DUP5 PUSH2 0x30E8 JUMP JUMPDEST PUSH2 0x401E JUMP JUMPDEST PUSH2 0x30E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x405D DUP4 PUSH2 0x4028 JUMP JUMPDEST PUSH2 0x4071 PUSH2 0x4069 DUP3 PUSH2 0x404A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3FCC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4086 PUSH2 0x4079 JUMP JUMPDEST PUSH2 0x4091 DUP2 DUP5 DUP5 PUSH2 0x4054 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x40B5 JUMPI PUSH2 0x40AA PUSH1 0x0 DUP3 PUSH2 0x407E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4097 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x40FA JUMPI PUSH2 0x40CB DUP2 PUSH2 0x3F9A JUMP JUMPDEST PUSH2 0x40D4 DUP5 PUSH2 0x3FAF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x40E3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x40F7 PUSH2 0x40EF DUP6 PUSH2 0x3FAF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4096 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411D PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x40FF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4136 DUP4 DUP4 PUSH2 0x410C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x414F DUP3 PUSH2 0x31B7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4168 JUMPI PUSH2 0x4167 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH2 0x4172 DUP3 SLOAD PUSH2 0x3DFD JUMP JUMPDEST PUSH2 0x417D DUP3 DUP3 DUP6 PUSH2 0x40B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x41B0 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x419E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x41A8 DUP6 DUP3 PUSH2 0x412A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4210 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x41BE DUP7 PUSH2 0x3F9A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x41E6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x41C1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4203 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x41FF PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x410C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4243 DUP3 PUSH2 0x4218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4253 DUP2 PUSH2 0x4238 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4266 DUP2 PUSH2 0x3DFD JUMP JUMPDEST PUSH2 0x4270 DUP2 DUP7 PUSH2 0x3329 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x428B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x42A1 JUMPI PUSH2 0x42D4 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x42D4 JUMP JUMPDEST PUSH2 0x42AA DUP6 PUSH2 0x3F9A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x42CC JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x42AD JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x42F2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x424A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4304 DUP2 DUP5 PUSH2 0x4259 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4328 JUMPI PUSH2 0x4327 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x434C DUP2 PUSH2 0x3603 JUMP JUMPDEST DUP2 EQ PUSH2 0x4357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4369 DUP2 PUSH2 0x4343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x437E DUP2 PUSH2 0x30F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x439A JUMPI PUSH2 0x4399 PUSH2 0x4339 JUMP JUMPDEST JUMPDEST PUSH2 0x43A4 PUSH1 0x80 PUSH2 0x341B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x43B4 DUP5 DUP3 DUP6 ADD PUSH2 0x435A JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x43C8 DUP5 DUP3 DUP6 ADD PUSH2 0x435A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x43DC DUP5 DUP3 DUP6 ADD PUSH2 0x436F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x43F0 DUP5 DUP3 DUP6 ADD PUSH2 0x436F JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x440F PUSH2 0x440A DUP5 PUSH2 0x430D JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x80 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4432 JUMPI PUSH2 0x4431 PUSH2 0x3C26 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x445B JUMPI DUP1 PUSH2 0x4447 DUP9 DUP3 PUSH2 0x4384 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x80 DUP2 ADD SWAP1 POP PUSH2 0x4434 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x447A JUMPI PUSH2 0x4479 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x448A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x43FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44A9 JUMPI PUSH2 0x44A8 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44C7 JUMPI PUSH2 0x44C6 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x44D3 DUP5 DUP3 DUP6 ADD PUSH2 0x4465 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44EF PUSH2 0x44EA DUP5 PUSH2 0x3436 JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x450B JUMPI PUSH2 0x450A PUSH2 0x33B6 JUMP JUMPDEST JUMPDEST PUSH2 0x4516 DUP5 DUP3 DUP6 PUSH2 0x31D3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4533 JUMPI PUSH2 0x4532 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4543 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x44DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4562 JUMPI PUSH2 0x4561 PUSH2 0x4339 JUMP JUMPDEST JUMPDEST PUSH2 0x456C PUSH1 0x40 PUSH2 0x341B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x458C JUMPI PUSH2 0x458B PUSH2 0x433E JUMP JUMPDEST JUMPDEST PUSH2 0x4598 DUP5 DUP3 DUP6 ADD PUSH2 0x451E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x45AC DUP5 DUP3 DUP6 ADD PUSH2 0x436F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45CF JUMPI PUSH2 0x45CE PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45DD DUP6 DUP3 DUP7 ADD PUSH2 0x436F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45FE JUMPI PUSH2 0x45FD PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x460A DUP6 DUP3 DUP7 ADD PUSH2 0x454C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468652074696D6520686173206E6F7420706173736564207965740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x464A PUSH1 0x1B DUP4 PUSH2 0x3329 JUMP JUMPDEST SWAP2 POP PUSH2 0x4655 DUP3 PUSH2 0x4614 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4679 DUP2 PUSH2 0x463D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x469B JUMPI PUSH2 0x469A PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46BF PUSH2 0x46BA DUP5 PUSH2 0x4680 JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x46E2 JUMPI PUSH2 0x46E1 PUSH2 0x3C26 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4729 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4707 JUMPI PUSH2 0x4706 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4714 DUP10 DUP3 PUSH2 0x454C JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x46E4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4748 JUMPI PUSH2 0x4747 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4758 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x46AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4777 JUMPI PUSH2 0x4776 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4795 JUMPI PUSH2 0x4794 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x47A1 DUP5 DUP3 DUP6 ADD PUSH2 0x4733 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x47BF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x424A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x47D1 DUP2 DUP6 PUSH2 0x4259 JUMP JUMPDEST SWAP1 POP PUSH2 0x47E0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x32FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47FE JUMPI PUSH2 0x47FD PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x480C DUP5 DUP3 DUP6 ADD PUSH2 0x435A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4830 JUMPI PUSH2 0x482F PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x484A DUP2 PUSH2 0x3A5E JUMP JUMPDEST DUP2 EQ PUSH2 0x4855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4867 DUP2 PUSH2 0x4841 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4883 JUMPI PUSH2 0x4882 PUSH2 0x4339 JUMP JUMPDEST JUMPDEST PUSH2 0x488D PUSH1 0x60 PUSH2 0x341B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48AD JUMPI PUSH2 0x48AC PUSH2 0x433E JUMP JUMPDEST JUMPDEST PUSH2 0x48B9 DUP5 DUP3 DUP6 ADD PUSH2 0x451E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x48CD DUP5 DUP3 DUP6 ADD PUSH2 0x436F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x48E1 DUP5 DUP3 DUP6 ADD PUSH2 0x4858 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4900 PUSH2 0x48FB DUP5 PUSH2 0x4815 JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4923 JUMPI PUSH2 0x4922 PUSH2 0x3C26 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x496A JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4948 JUMPI PUSH2 0x4947 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4955 DUP10 DUP3 PUSH2 0x486D JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4925 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4989 JUMPI PUSH2 0x4988 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4999 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x48ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49B8 JUMPI PUSH2 0x49B7 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x49D6 JUMPI PUSH2 0x49D5 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x49E2 DUP5 DUP3 DUP6 ADD PUSH2 0x4974 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4A18 DUP2 PUSH2 0x3DFD JUMP JUMPDEST PUSH2 0x4A22 DUP2 DUP7 PUSH2 0x31C2 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4A3D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4A53 JUMPI PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x4A86 JUMP JUMPDEST PUSH2 0x4A5C DUP6 PUSH2 0x3F9A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A7E JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A5F JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9B DUP4 DUP4 PUSH2 0x4A0B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ABB DUP3 PUSH2 0x49EB JUMP JUMPDEST PUSH2 0x4AC5 DUP2 DUP6 PUSH2 0x3196 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x4AD7 DUP6 PUSH2 0x49F6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4B12 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 PUSH2 0x4AF3 DUP6 DUP3 PUSH2 0x4A8F JUMP JUMPDEST SWAP5 POP PUSH2 0x4AFE DUP4 PUSH2 0x4AA3 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4ADB JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4B39 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x424A JUMP JUMPDEST PUSH2 0x4B46 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x32FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4B58 DUP2 DUP5 PUSH2 0x4AB0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B77 DUP2 PUSH2 0x4B62 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4B94 DUP2 PUSH2 0x4B6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB0 JUMPI PUSH2 0x4BAF PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BBE DUP5 DUP3 DUP6 ADD PUSH2 0x4B85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E6720417070726F7665206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BFD PUSH1 0x16 DUP4 PUSH2 0x3329 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C08 DUP3 PUSH2 0x4BC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C2C DUP2 PUSH2 0x4BF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4C48 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x424A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4C5A DUP2 DUP5 PUSH2 0x4AB0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446973747269627574696F6E20417070726F7665206661696C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C99 PUSH1 0x1B DUP4 PUSH2 0x3329 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CA4 DUP3 PUSH2 0x4C63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CC8 DUP2 PUSH2 0x4C8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID 0x4D PUSH16 0x6E657920686173206265656E2073656E PUSH21 0x20746F2049646561204F776E6572A2646970667358 0x22 SLT KECCAK256 LOG1 CALLDATACOPY 0xB9 GASPRICE 0xC7 0xC5 0xCC 0xDA 0x23 0x24 PUSH20 0x6D8102A753B01FAE756CB6A63BE410D334E2CC28 0x2D PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER 0x2F PUSH4 0x6F736D6F PUSH20 0x2E7374616B696E672E763162657461312E4D7367 TIMESTAMP PUSH6 0x67696E526564 PUSH6 0x6C6567617465 PUSH6 0x766D6F737661 PUSH13 0x6F706572313538777761733476 CALLDATASIZE PUSH7 0x67637532783370 PUSH13 0x67373073367530666D306C6C65 ORIGIN CALLER CALLDATACOPY PUSH12 0x6C74722F636F736D6F732E73 PUSH21 0x616B696E672E763162657461312E4D7367556E6465 PUSH13 0x65676174652F636F736D6F732E PUSH5 0x6973747269 PUSH3 0x757469 PUSH16 0x6E2E763162657461312E4D7367576974 PUSH9 0x6472617744656C6567 PUSH2 0x746F PUSH19 0x5265776172642F636F736D6F732E7374616B69 PUSH15 0x672E763162657461312E4D73674465 PUSH13 0x65676174650000000000000000 ","sourceMap":"208:15597:3:-:0;;;1224:80;;;;;;;;1259:12;;;;;;;;;;;;;;;;;1224:80;;;;1273:14;;;;;;;;;;;;;;;;;1224:80;;;;1289:14;;;;;;;;;;;;;;;;;1224:80;;;;;;;;;;;:::i;:::-;;1311:70;;;;;;;;1351:29;;;;;;;;;;;;;;;;;1311:70;;;;;;;;;;;:::i;:::-;;1621:86;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;208:15597;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;208:15597:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@RedeemDelegetdMoney_2354":{"entryPoint":8041,"id":2354,"parameterSlots":1,"returnSlots":1},"@_approveRequiredMsgs_2626":{"entryPoint":10518,"id":2626,"parameterSlots":0,"returnSlots":0},"@_dao_ids_1287":{"entryPoint":7027,"id":1287,"parameterSlots":0,"returnSlots":0},"@_dao_uris_1304":{"entryPoint":4579,"id":1304,"parameterSlots":0,"returnSlots":0},"@_goal_ids_1289":{"entryPoint":4159,"id":1289,"parameterSlots":0,"returnSlots":0},"@_goal_uris_1309":{"entryPoint":7033,"id":1309,"parameterSlots":0,"returnSlots":0},"@_ideas_ids_1291":{"entryPoint":11730,"id":1291,"parameterSlots":0,"returnSlots":0},"@_ideas_uris_1314":{"entryPoint":5817,"id":1314,"parameterSlots":0,"returnSlots":0},"@_ideas_vote_ids_1295":{"entryPoint":5995,"id":1295,"parameterSlots":0,"returnSlots":0},"@_message_ids_1297":{"entryPoint":8035,"id":1297,"parameterSlots":0,"returnSlots":0},"@_reply_ids_1299":{"entryPoint":9571,"id":1299,"parameterSlots":0,"returnSlots":0},"@_smart_contract_ids_1293":{"entryPoint":4282,"id":1293,"parameterSlots":0,"returnSlots":0},"@_smart_contracts_uris_1319":{"entryPoint":12133,"id":1319,"parameterSlots":0,"returnSlots":0},"@add_donation_1730":{"entryPoint":9387,"id":1730,"parameterSlots":2,"returnSlots":0},"@all_goal_ideas_votes_1324":{"entryPoint":4288,"id":1324,"parameterSlots":0,"returnSlots":0},"@all_messages_1329":{"entryPoint":10950,"id":1329,"parameterSlots":0,"returnSlots":0},"@all_replies_1334":{"entryPoint":5476,"id":1334,"parameterSlots":0,"returnSlots":0},"@create_dao_1359":{"entryPoint":11523,"id":1359,"parameterSlots":2,"returnSlots":1},"@create_goal_1461":{"entryPoint":6864,"id":1461,"parameterSlots":2,"returnSlots":1},"@create_goal_ideas_vote_1952":{"entryPoint":7659,"id":1952,"parameterSlots":3,"returnSlots":1},"@create_ideas_1680":{"entryPoint":11736,"id":1680,"parameterSlots":3,"returnSlots":1},"@create_ideas_smart_contract_1700":{"entryPoint":12311,"id":1700,"parameterSlots":3,"returnSlots":0},"@dao_uri_1437":{"entryPoint":6556,"id":1437,"parameterSlots":1,"returnSlots":1},"@donate_2198":{"entryPoint":3371,"id":2198,"parameterSlots":2,"returnSlots":0},"@donated_1274":{"entryPoint":5654,"id":1274,"parameterSlots":0,"returnSlots":0},"@getContractBalance_2391":{"entryPoint":6856,"id":2391,"parameterSlots":0,"returnSlots":1},"@getContractRewards_2408":{"entryPoint":9712,"id":2408,"parameterSlots":0,"returnSlots":1},"@getDelegation_2431":{"entryPoint":6403,"id":2431,"parameterSlots":0,"returnSlots":1},"@getMsgIDs_2099":{"entryPoint":7205,"id":2099,"parameterSlots":1,"returnSlots":1},"@getReplyIDs_2181":{"entryPoint":7432,"id":2181,"parameterSlots":1,"returnSlots":1},"@getUnbondingDelegation_2448":{"entryPoint":5678,"id":2448,"parameterSlots":0,"returnSlots":1},"@get_all_daos_1424":{"entryPoint":11168,"id":1424,"parameterSlots":0,"returnSlots":1},"@get_all_goals_1517":{"entryPoint":5029,"id":1517,"parameterSlots":0,"returnSlots":1},"@get_all_goals_by_dao_id_1574":{"entryPoint":3425,"id":1574,"parameterSlots":1,"returnSlots":1},"@get_all_ideas_1771":{"entryPoint":8331,"id":1771,"parameterSlots":0,"returnSlots":1},"@get_all_ideas_by_goal_id_1827":{"entryPoint":3792,"id":1827,"parameterSlots":1,"returnSlots":1},"@get_goal_id_by_goal_uri_1615":{"entryPoint":4466,"id":1615,"parameterSlots":1,"returnSlots":1},"@get_goal_id_from_ideas_uri_1912":{"entryPoint":9577,"id":1912,"parameterSlots":1,"returnSlots":1},"@get_ideas_id_by_ideas_uri_1868":{"entryPoint":9274,"id":1868,"parameterSlots":1,"returnSlots":1},"@get_ideas_votes_from_goal_2017":{"entryPoint":6001,"id":2017,"parameterSlots":2,"returnSlots":1},"@goal_uri_1628":{"entryPoint":11965,"id":1628,"parameterSlots":1,"returnSlots":1},"@ideas_uri_1925":{"entryPoint":7867,"id":1925,"parameterSlots":1,"returnSlots":1},"@reset_all_2588":{"entryPoint":9851,"id":2588,"parameterSlots":0,"returnSlots":0},"@sendMsg_2042":{"entryPoint":5344,"id":2042,"parameterSlots":2,"returnSlots":1},"@sendReply_2124":{"entryPoint":6724,"id":2124,"parameterSlots":2,"returnSlots":1},"@set_dao_1383":{"entryPoint":7790,"id":1383,"parameterSlots":3,"returnSlots":0},"@set_goal_1476":{"entryPoint":11483,"id":1476,"parameterSlots":2,"returnSlots":0},"@set_ideas_1715":{"entryPoint":11128,"id":1715,"parameterSlots":2,"returnSlots":0},"@stake_2215":{"entryPoint":9436,"id":2215,"parameterSlots":1,"returnSlots":0},"@unbondingDelegations_1285":{"entryPoint":6978,"id":1285,"parameterSlots":0,"returnSlots":0},"@withdrawAllMoney_2379":{"entryPoint":4165,"id":2379,"parameterSlots":0,"returnSlots":0},"@withdrawDonatedMoney_2300":{"entryPoint":8646,"id":2300,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":15403,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":18092,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":18669,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":17404,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":13430,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":17628,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":15538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":18227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":18804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":17509,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":19333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int64_fromMemory":{"entryPoint":17242,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":13496,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":17694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Coin_$2765_memory_ptr_fromMemory":{"entryPoint":17740,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_DecCoin_$2772_memory_ptr_fromMemory":{"entryPoint":18541,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_fromMemory":{"entryPoint":17284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":12553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":17263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":18520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":18273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":18850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":17555,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":19354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int64_fromMemory":{"entryPoint":18408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":13542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr":{"entryPoint":15234,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256":{"entryPoint":14216,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":15584,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":12638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":13691,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":14732,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_struct$_Coin_$2765_memory_ptr_fromMemory":{"entryPoint":17848,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":12574,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr":{"entryPoint":14621,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":12871,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr":{"entryPoint":19087,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_DecCoin_$2772_memory_ptr_to_t_struct$_DecCoin_$2772_memory_ptr":{"entryPoint":15050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr":{"entryPoint":13955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":14456,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":16970,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12904,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":19120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":15083,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":14493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_int64_to_t_int64":{"entryPoint":13840,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int64_to_t_int64_fromStack":{"entryPoint":14308,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":12814,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":13114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr":{"entryPoint":18955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack":{"entryPoint":16985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974_to_t_string_memory_ptr_fromStack":{"entryPoint":19596,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3_to_t_string_memory_ptr_fromStack":{"entryPoint":19440,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16051,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa_to_t_string_memory_ptr_fromStack":{"entryPoint":17981,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_DecCoin_$2772_memory_ptr_to_t_struct$_DecCoin_$2772_memory_ptr":{"entryPoint":14970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr":{"entryPoint":13870,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":13855,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":13055,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8":{"entryPoint":14955,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16086,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address_t_array$_t_string_storage_$dyn_storage__to_t_address_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":19507,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_string_storage__to_t_address_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17117,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_string_storage_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":18346,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_array$_t_string_storage_$dyn_storage__to_t_address_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":19236,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed":{"entryPoint":14871,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int64_t_uint256__to_t_int64_t_uint256__fromStack_reversed":{"entryPoint":14323,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14182,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13615,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19631,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18016,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14364,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":14120,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13171,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":13339,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":12500,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":15354,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr":{"entryPoint":18048,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr":{"entryPoint":18453,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr":{"entryPoint":17165,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":13366,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":12711,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_storage_$dyn_storage":{"entryPoint":18934,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr":{"entryPoint":14926,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr":{"entryPoint":13811,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14440,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":16107,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":16282,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":12683,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_storage_$dyn_storage":{"entryPoint":18923,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr":{"entryPoint":14898,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr":{"entryPoint":13783,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14412,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12727,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":12891,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_storage_$dyn_storage":{"entryPoint":19107,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr":{"entryPoint":15070,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr":{"entryPoint":13979,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14480,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12694,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14909,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13794,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":14423,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16037,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":12738,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":13097,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15770,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":16569,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":16952,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":19298,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int64":{"entryPoint":13827,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":16920,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12520,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":14942,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":16534,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":16424,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":16710,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":13415,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":12755,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":16303,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":15869,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":16682,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":13290,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":16414,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":15965,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":16652,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":15723,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":15822,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15918,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13243,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":16458,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":13233,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":17209,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":17214,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":15398,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":13238,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":12515,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12510,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12797,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":16319,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":16639,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":16510,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974":{"entryPoint":19555,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3":{"entryPoint":19399,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":16048,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa":{"entryPoint":17940,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":16332,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":16468,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":19310,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int64":{"entryPoint":17219,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12530,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":18497,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":16505,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:58280:9","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:9","statements":[{"nodeType":"YulAssignment","src":"57:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:9"},"nodeType":"YulFunctionCall","src":"67:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:9","type":""}],"src":"7:75:9"},{"body":{"nodeType":"YulBlock","src":"177:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:9"},"nodeType":"YulFunctionCall","src":"187:12:9"},"nodeType":"YulExpressionStatement","src":"187:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:9"},{"body":{"nodeType":"YulBlock","src":"300:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:9"},"nodeType":"YulFunctionCall","src":"310:12:9"},"nodeType":"YulExpressionStatement","src":"310:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:9"},{"body":{"nodeType":"YulBlock","src":"379:32:9","statements":[{"nodeType":"YulAssignment","src":"389:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:9","type":""}],"src":"334:77:9"},{"body":{"nodeType":"YulBlock","src":"460:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:9"},"nodeType":"YulFunctionCall","src":"519:12:9"},"nodeType":"YulExpressionStatement","src":"519:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:9"},"nodeType":"YulFunctionCall","src":"490:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:9"},"nodeType":"YulFunctionCall","src":"480:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:9"},"nodeType":"YulFunctionCall","src":"473:43:9"},"nodeType":"YulIf","src":"470:63:9"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:9","type":""}],"src":"417:122:9"},{"body":{"nodeType":"YulBlock","src":"597:87:9","statements":[{"nodeType":"YulAssignment","src":"607:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:9"},"nodeType":"YulFunctionCall","src":"616:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:9"},"nodeType":"YulFunctionCall","src":"645:33:9"},"nodeType":"YulExpressionStatement","src":"645:33:9"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:9","type":""}],"src":"545:139:9"},{"body":{"nodeType":"YulBlock","src":"773:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"819:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"821:77:9"},"nodeType":"YulFunctionCall","src":"821:79:9"},"nodeType":"YulExpressionStatement","src":"821:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"794:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"803:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"790:3:9"},"nodeType":"YulFunctionCall","src":"790:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"815:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"786:3:9"},"nodeType":"YulFunctionCall","src":"786:32:9"},"nodeType":"YulIf","src":"783:119:9"},{"nodeType":"YulBlock","src":"912:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"927:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"941:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"931:6:9","type":""}]},{"nodeType":"YulAssignment","src":"956:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"991:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1002:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"987:3:9"},"nodeType":"YulFunctionCall","src":"987:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1011:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"966:20:9"},"nodeType":"YulFunctionCall","src":"966:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"956:6:9"}]}]},{"nodeType":"YulBlock","src":"1039:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1054:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1068:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1058:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1084:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1119:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1130:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1115:3:9"},"nodeType":"YulFunctionCall","src":"1115:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1139:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1094:20:9"},"nodeType":"YulFunctionCall","src":"1094:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1084:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"735:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"746:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"758:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"766:6:9","type":""}],"src":"690:474:9"},{"body":{"nodeType":"YulBlock","src":"1236:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"1282:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1284:77:9"},"nodeType":"YulFunctionCall","src":"1284:79:9"},"nodeType":"YulExpressionStatement","src":"1284:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1257:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1266:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1253:3:9"},"nodeType":"YulFunctionCall","src":"1253:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1278:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1249:3:9"},"nodeType":"YulFunctionCall","src":"1249:32:9"},"nodeType":"YulIf","src":"1246:119:9"},{"nodeType":"YulBlock","src":"1375:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1390:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1404:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1394:6:9","type":""}]},{"nodeType":"YulAssignment","src":"1419:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1454:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1465:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1450:3:9"},"nodeType":"YulFunctionCall","src":"1450:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1474:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1429:20:9"},"nodeType":"YulFunctionCall","src":"1429:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1419:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1206:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1217:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1229:6:9","type":""}],"src":"1170:329:9"},{"body":{"nodeType":"YulBlock","src":"1589:40:9","statements":[{"nodeType":"YulAssignment","src":"1600:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1616:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1610:5:9"},"nodeType":"YulFunctionCall","src":"1610:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1600:6:9"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1572:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1582:6:9","type":""}],"src":"1505:124:9"},{"body":{"nodeType":"YulBlock","src":"1756:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1773:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"1778:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1766:6:9"},"nodeType":"YulFunctionCall","src":"1766:19:9"},"nodeType":"YulExpressionStatement","src":"1766:19:9"},{"nodeType":"YulAssignment","src":"1794:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1813:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"1818:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:9"},"nodeType":"YulFunctionCall","src":"1809:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1794:11:9"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1728:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"1733:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1744:11:9","type":""}],"src":"1635:194:9"},{"body":{"nodeType":"YulBlock","src":"1917:60:9","statements":[{"nodeType":"YulAssignment","src":"1927:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1935:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1927:4:9"}]},{"nodeType":"YulAssignment","src":"1948:22:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1960:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"1965:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1956:3:9"},"nodeType":"YulFunctionCall","src":"1956:14:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1948:4:9"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1904:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1912:4:9","type":""}],"src":"1835:142:9"},{"body":{"nodeType":"YulBlock","src":"2042:40:9","statements":[{"nodeType":"YulAssignment","src":"2053:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2069:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2063:5:9"},"nodeType":"YulFunctionCall","src":"2063:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2053:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2025:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2035:6:9","type":""}],"src":"1983:99:9"},{"body":{"nodeType":"YulBlock","src":"2174:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2191:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"2196:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2184:6:9"},"nodeType":"YulFunctionCall","src":"2184:19:9"},"nodeType":"YulExpressionStatement","src":"2184:19:9"},{"nodeType":"YulAssignment","src":"2212:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2231:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"2236:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2227:3:9"},"nodeType":"YulFunctionCall","src":"2227:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2212:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2146:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"2151:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2162:11:9","type":""}],"src":"2088:159:9"},{"body":{"nodeType":"YulBlock","src":"2315:184:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2325:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2334:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2329:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"2394:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2419:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"2424:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2415:3:9"},"nodeType":"YulFunctionCall","src":"2415:11:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2438:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"2443:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2434:3:9"},"nodeType":"YulFunctionCall","src":"2434:11:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2428:5:9"},"nodeType":"YulFunctionCall","src":"2428:18:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2408:6:9"},"nodeType":"YulFunctionCall","src":"2408:39:9"},"nodeType":"YulExpressionStatement","src":"2408:39:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2355:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"2358:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2352:2:9"},"nodeType":"YulFunctionCall","src":"2352:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2366:19:9","statements":[{"nodeType":"YulAssignment","src":"2368:15:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2377:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"2380:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2373:3:9"},"nodeType":"YulFunctionCall","src":"2373:10:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2368:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"2348:3:9","statements":[]},"src":"2344:113:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2477:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"2482:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2473:3:9"},"nodeType":"YulFunctionCall","src":"2473:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"2491:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2466:6:9"},"nodeType":"YulFunctionCall","src":"2466:27:9"},"nodeType":"YulExpressionStatement","src":"2466:27:9"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2297:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2302:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"2307:6:9","type":""}],"src":"2253:246:9"},{"body":{"nodeType":"YulBlock","src":"2553:54:9","statements":[{"nodeType":"YulAssignment","src":"2563:38:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2581:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"2588:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:9"},"nodeType":"YulFunctionCall","src":"2577:14:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2597:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2593:3:9"},"nodeType":"YulFunctionCall","src":"2593:7:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2573:3:9"},"nodeType":"YulFunctionCall","src":"2573:28:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2563:6:9"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2536:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2546:6:9","type":""}],"src":"2505:102:9"},{"body":{"nodeType":"YulBlock","src":"2695:275:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2705:53:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2752:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2719:32:9"},"nodeType":"YulFunctionCall","src":"2719:39:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2709:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2767:68:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2823:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"2828:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2774:48:9"},"nodeType":"YulFunctionCall","src":"2774:61:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2767:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2883:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"2890:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2879:3:9"},"nodeType":"YulFunctionCall","src":"2879:16:9"},{"name":"pos","nodeType":"YulIdentifier","src":"2897:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"2902:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2844:34:9"},"nodeType":"YulFunctionCall","src":"2844:65:9"},"nodeType":"YulExpressionStatement","src":"2844:65:9"},{"nodeType":"YulAssignment","src":"2918:46:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2929:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2956:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2934:21:9"},"nodeType":"YulFunctionCall","src":"2934:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2925:3:9"},"nodeType":"YulFunctionCall","src":"2925:39:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2918:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2676:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2683:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2691:3:9","type":""}],"src":"2613:357:9"},{"body":{"nodeType":"YulBlock","src":"3076:96:9","statements":[{"nodeType":"YulAssignment","src":"3086:80:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3154:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"3162:3:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3100:53:9"},"nodeType":"YulFunctionCall","src":"3100:66:9"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"3086:10:9"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"3049:6:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3057:3:9","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"3065:10:9","type":""}],"src":"2976:196:9"},{"body":{"nodeType":"YulBlock","src":"3263:38:9","statements":[{"nodeType":"YulAssignment","src":"3273:22:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3285:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"3290:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3281:3:9"},"nodeType":"YulFunctionCall","src":"3281:14:9"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"3273:4:9"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3250:3:9","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"3258:4:9","type":""}],"src":"3178:123:9"},{"body":{"nodeType":"YulBlock","src":"3479:847:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3489:78:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3561:5:9"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3503:57:9"},"nodeType":"YulFunctionCall","src":"3503:64:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3493:6:9","type":""}]},{"nodeType":"YulAssignment","src":"3576:103:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3667:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"3672:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3583:83:9"},"nodeType":"YulFunctionCall","src":"3583:96:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"3688:20:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"3705:3:9"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"3692:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3717:39:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3733:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3742:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3750:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3738:3:9"},"nodeType":"YulFunctionCall","src":"3738:17:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3729:3:9"},"nodeType":"YulFunctionCall","src":"3729:27:9"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"3721:4:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3765:81:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3840:5:9"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3780:59:9"},"nodeType":"YulFunctionCall","src":"3780:66:9"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"3769:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3855:21:9","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"3869:7:9"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3859:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3945:336:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3966:3:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3975:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3981:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3971:3:9"},"nodeType":"YulFunctionCall","src":"3971:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3959:6:9"},"nodeType":"YulFunctionCall","src":"3959:33:9"},"nodeType":"YulExpressionStatement","src":"3959:33:9"},{"nodeType":"YulVariableDeclaration","src":"4005:34:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4032:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4026:5:9"},"nodeType":"YulFunctionCall","src":"4026:13:9"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"4009:13:9","type":""}]},{"nodeType":"YulAssignment","src":"4052:92:9","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"4124:13:9"},{"name":"tail","nodeType":"YulIdentifier","src":"4139:4:9"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4060:63:9"},"nodeType":"YulFunctionCall","src":"4060:84:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4052:4:9"}]},{"nodeType":"YulAssignment","src":"4157:80:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4230:6:9"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4167:62:9"},"nodeType":"YulFunctionCall","src":"4167:70:9"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4157:6:9"}]},{"nodeType":"YulAssignment","src":"4250:21:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4261:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"4266:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4257:3:9"},"nodeType":"YulFunctionCall","src":"4257:14:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4250:3:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3907:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"3910:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3904:2:9"},"nodeType":"YulFunctionCall","src":"3904:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3918:18:9","statements":[{"nodeType":"YulAssignment","src":"3920:14:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3929:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"3932:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3925:3:9"},"nodeType":"YulFunctionCall","src":"3925:9:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3920:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"3889:14:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3891:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3900:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3895:1:9","type":""}]}]},"src":"3885:396:9"},{"nodeType":"YulAssignment","src":"4290:11:9","value":{"name":"tail","nodeType":"YulIdentifier","src":"4297:4:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4290:3:9"}]},{"nodeType":"YulAssignment","src":"4310:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"4317:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4310:3:9"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3458:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3465:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3474:3:9","type":""}],"src":"3335:991:9"},{"body":{"nodeType":"YulBlock","src":"4500:245:9","statements":[{"nodeType":"YulAssignment","src":"4510:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4522:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4533:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4518:3:9"},"nodeType":"YulFunctionCall","src":"4518:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4510:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4557:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4568:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4553:3:9"},"nodeType":"YulFunctionCall","src":"4553:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4576:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"4582:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4572:3:9"},"nodeType":"YulFunctionCall","src":"4572:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4546:6:9"},"nodeType":"YulFunctionCall","src":"4546:47:9"},"nodeType":"YulExpressionStatement","src":"4546:47:9"},{"nodeType":"YulAssignment","src":"4602:136:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"4733:4:9"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4610:113:9"},"nodeType":"YulFunctionCall","src":"4610:128:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4602:4:9"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4472:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4484:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4495:4:9","type":""}],"src":"4332:413:9"},{"body":{"nodeType":"YulBlock","src":"4816:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4833:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4856:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4838:17:9"},"nodeType":"YulFunctionCall","src":"4838:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4826:6:9"},"nodeType":"YulFunctionCall","src":"4826:37:9"},"nodeType":"YulExpressionStatement","src":"4826:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4804:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4811:3:9","type":""}],"src":"4751:118:9"},{"body":{"nodeType":"YulBlock","src":"4973:124:9","statements":[{"nodeType":"YulAssignment","src":"4983:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4995:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5006:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4991:3:9"},"nodeType":"YulFunctionCall","src":"4991:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4983:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5063:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5076:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5087:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5072:3:9"},"nodeType":"YulFunctionCall","src":"5072:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5019:43:9"},"nodeType":"YulFunctionCall","src":"5019:71:9"},"nodeType":"YulExpressionStatement","src":"5019:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4945:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4957:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4968:4:9","type":""}],"src":"4875:222:9"},{"body":{"nodeType":"YulBlock","src":"5199:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5216:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"5221:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5209:6:9"},"nodeType":"YulFunctionCall","src":"5209:19:9"},"nodeType":"YulExpressionStatement","src":"5209:19:9"},{"nodeType":"YulAssignment","src":"5237:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5256:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"5261:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:9"},"nodeType":"YulFunctionCall","src":"5252:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5237:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5171:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"5176:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5187:11:9","type":""}],"src":"5103:169:9"},{"body":{"nodeType":"YulBlock","src":"5370:285:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5380:53:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5427:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5394:32:9"},"nodeType":"YulFunctionCall","src":"5394:39:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5384:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5442:78:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5508:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"5513:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5449:58:9"},"nodeType":"YulFunctionCall","src":"5449:71:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5442:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5568:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"5575:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5564:3:9"},"nodeType":"YulFunctionCall","src":"5564:16:9"},{"name":"pos","nodeType":"YulIdentifier","src":"5582:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"5587:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5529:34:9"},"nodeType":"YulFunctionCall","src":"5529:65:9"},"nodeType":"YulExpressionStatement","src":"5529:65:9"},{"nodeType":"YulAssignment","src":"5603:46:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5614:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5641:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5619:21:9"},"nodeType":"YulFunctionCall","src":"5619:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:9"},"nodeType":"YulFunctionCall","src":"5610:39:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5603:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5351:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5358:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5366:3:9","type":""}],"src":"5278:377:9"},{"body":{"nodeType":"YulBlock","src":"5835:359:9","statements":[{"nodeType":"YulAssignment","src":"5845:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5857:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5868:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5853:3:9"},"nodeType":"YulFunctionCall","src":"5853:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5845:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5925:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5938:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5949:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5934:3:9"},"nodeType":"YulFunctionCall","src":"5934:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5881:43:9"},"nodeType":"YulFunctionCall","src":"5881:71:9"},"nodeType":"YulExpressionStatement","src":"5881:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6006:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6019:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6030:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6015:3:9"},"nodeType":"YulFunctionCall","src":"6015:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5962:43:9"},"nodeType":"YulFunctionCall","src":"5962:72:9"},"nodeType":"YulExpressionStatement","src":"5962:72:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6055:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6066:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6051:3:9"},"nodeType":"YulFunctionCall","src":"6051:18:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6075:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"6081:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6071:3:9"},"nodeType":"YulFunctionCall","src":"6071:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6044:6:9"},"nodeType":"YulFunctionCall","src":"6044:48:9"},"nodeType":"YulExpressionStatement","src":"6044:48:9"},{"nodeType":"YulAssignment","src":"6101:86:9","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6173:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"6182:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6109:63:9"},"nodeType":"YulFunctionCall","src":"6109:78:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6101:4:9"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5791:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5803:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5811:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5819:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5830:4:9","type":""}],"src":"5661:533:9"},{"body":{"nodeType":"YulBlock","src":"6289:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6306:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6309:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6299:6:9"},"nodeType":"YulFunctionCall","src":"6299:12:9"},"nodeType":"YulExpressionStatement","src":"6299:12:9"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6200:117:9"},{"body":{"nodeType":"YulBlock","src":"6412:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6429:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6432:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6422:6:9"},"nodeType":"YulFunctionCall","src":"6422:12:9"},"nodeType":"YulExpressionStatement","src":"6422:12:9"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"6323:117:9"},{"body":{"nodeType":"YulBlock","src":"6474:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6491:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6494:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6484:6:9"},"nodeType":"YulFunctionCall","src":"6484:88:9"},"nodeType":"YulExpressionStatement","src":"6484:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6588:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6591:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6581:6:9"},"nodeType":"YulFunctionCall","src":"6581:15:9"},"nodeType":"YulExpressionStatement","src":"6581:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6612:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6615:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6605:6:9"},"nodeType":"YulFunctionCall","src":"6605:15:9"},"nodeType":"YulExpressionStatement","src":"6605:15:9"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6446:180:9"},{"body":{"nodeType":"YulBlock","src":"6675:238:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6685:58:9","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6707:6:9"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6737:4:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6715:21:9"},"nodeType":"YulFunctionCall","src":"6715:27:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6703:3:9"},"nodeType":"YulFunctionCall","src":"6703:40:9"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6689:10:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"6854:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6856:16:9"},"nodeType":"YulFunctionCall","src":"6856:18:9"},"nodeType":"YulExpressionStatement","src":"6856:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6797:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"6809:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6794:2:9"},"nodeType":"YulFunctionCall","src":"6794:34:9"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6833:10:9"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6845:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6830:2:9"},"nodeType":"YulFunctionCall","src":"6830:22:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6791:2:9"},"nodeType":"YulFunctionCall","src":"6791:62:9"},"nodeType":"YulIf","src":"6788:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6892:2:9","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6896:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6885:6:9"},"nodeType":"YulFunctionCall","src":"6885:22:9"},"nodeType":"YulExpressionStatement","src":"6885:22:9"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:9","type":""},{"name":"size","nodeType":"YulTypedName","src":"6669:4:9","type":""}],"src":"6632:281:9"},{"body":{"nodeType":"YulBlock","src":"6960:88:9","statements":[{"nodeType":"YulAssignment","src":"6970:30:9","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6980:18:9"},"nodeType":"YulFunctionCall","src":"6980:20:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6970:6:9"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7029:6:9"},{"name":"size","nodeType":"YulIdentifier","src":"7037:4:9"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7009:19:9"},"nodeType":"YulFunctionCall","src":"7009:33:9"},"nodeType":"YulExpressionStatement","src":"7009:33:9"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6944:4:9","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6953:6:9","type":""}],"src":"6919:129:9"},{"body":{"nodeType":"YulBlock","src":"7121:241:9","statements":[{"body":{"nodeType":"YulBlock","src":"7226:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7228:16:9"},"nodeType":"YulFunctionCall","src":"7228:18:9"},"nodeType":"YulExpressionStatement","src":"7228:18:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7198:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7206:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7195:2:9"},"nodeType":"YulFunctionCall","src":"7195:30:9"},"nodeType":"YulIf","src":"7192:56:9"},{"nodeType":"YulAssignment","src":"7258:37:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7288:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7266:21:9"},"nodeType":"YulFunctionCall","src":"7266:29:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7258:4:9"}]},{"nodeType":"YulAssignment","src":"7332:23:9","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7344:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"7350:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7340:3:9"},"nodeType":"YulFunctionCall","src":"7340:15:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7332:4:9"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7105:6:9","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7116:4:9","type":""}],"src":"7054:308:9"},{"body":{"nodeType":"YulBlock","src":"7432:82:9","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7455:3:9"},{"name":"src","nodeType":"YulIdentifier","src":"7460:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"7465:6:9"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7442:12:9"},"nodeType":"YulFunctionCall","src":"7442:30:9"},"nodeType":"YulExpressionStatement","src":"7442:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7492:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"7497:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:9"},"nodeType":"YulFunctionCall","src":"7488:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"7506:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7481:6:9"},"nodeType":"YulFunctionCall","src":"7481:27:9"},"nodeType":"YulExpressionStatement","src":"7481:27:9"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7414:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7419:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"7424:6:9","type":""}],"src":"7368:146:9"},{"body":{"nodeType":"YulBlock","src":"7604:341:9","statements":[{"nodeType":"YulAssignment","src":"7614:75:9","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7681:6:9"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7639:41:9"},"nodeType":"YulFunctionCall","src":"7639:49:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7623:15:9"},"nodeType":"YulFunctionCall","src":"7623:66:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7614:5:9"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7705:5:9"},{"name":"length","nodeType":"YulIdentifier","src":"7712:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7698:6:9"},"nodeType":"YulFunctionCall","src":"7698:21:9"},"nodeType":"YulExpressionStatement","src":"7698:21:9"},{"nodeType":"YulVariableDeclaration","src":"7728:27:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7743:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"7750:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7739:3:9"},"nodeType":"YulFunctionCall","src":"7739:16:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7732:3:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"7793:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7795:77:9"},"nodeType":"YulFunctionCall","src":"7795:79:9"},"nodeType":"YulExpressionStatement","src":"7795:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7774:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"7779:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7770:3:9"},"nodeType":"YulFunctionCall","src":"7770:16:9"},{"name":"end","nodeType":"YulIdentifier","src":"7788:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7767:2:9"},"nodeType":"YulFunctionCall","src":"7767:25:9"},"nodeType":"YulIf","src":"7764:112:9"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7922:3:9"},{"name":"dst","nodeType":"YulIdentifier","src":"7927:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"7932:6:9"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7885:36:9"},"nodeType":"YulFunctionCall","src":"7885:54:9"},"nodeType":"YulExpressionStatement","src":"7885:54:9"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7577:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"7582:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"7590:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7598:5:9","type":""}],"src":"7520:425:9"},{"body":{"nodeType":"YulBlock","src":"8027:278:9","statements":[{"body":{"nodeType":"YulBlock","src":"8076:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8078:77:9"},"nodeType":"YulFunctionCall","src":"8078:79:9"},"nodeType":"YulExpressionStatement","src":"8078:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8055:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8063:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8051:3:9"},"nodeType":"YulFunctionCall","src":"8051:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"8070:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8047:3:9"},"nodeType":"YulFunctionCall","src":"8047:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8040:6:9"},"nodeType":"YulFunctionCall","src":"8040:35:9"},"nodeType":"YulIf","src":"8037:122:9"},{"nodeType":"YulVariableDeclaration","src":"8168:34:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8195:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8182:12:9"},"nodeType":"YulFunctionCall","src":"8182:20:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8172:6:9","type":""}]},{"nodeType":"YulAssignment","src":"8211:88:9","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8272:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8280:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8268:3:9"},"nodeType":"YulFunctionCall","src":"8268:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"8287:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"8295:3:9"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8220:47:9"},"nodeType":"YulFunctionCall","src":"8220:79:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8211:5:9"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8005:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"8013:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8021:5:9","type":""}],"src":"7965:340:9"},{"body":{"nodeType":"YulBlock","src":"8387:433:9","statements":[{"body":{"nodeType":"YulBlock","src":"8433:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8435:77:9"},"nodeType":"YulFunctionCall","src":"8435:79:9"},"nodeType":"YulExpressionStatement","src":"8435:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8408:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"8417:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8404:3:9"},"nodeType":"YulFunctionCall","src":"8404:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"8429:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8400:3:9"},"nodeType":"YulFunctionCall","src":"8400:32:9"},"nodeType":"YulIf","src":"8397:119:9"},{"nodeType":"YulBlock","src":"8526:287:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8541:45:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8572:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8583:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8568:3:9"},"nodeType":"YulFunctionCall","src":"8568:17:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8555:12:9"},"nodeType":"YulFunctionCall","src":"8555:31:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8545:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"8633:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8635:77:9"},"nodeType":"YulFunctionCall","src":"8635:79:9"},"nodeType":"YulExpressionStatement","src":"8635:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8605:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8613:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8602:2:9"},"nodeType":"YulFunctionCall","src":"8602:30:9"},"nodeType":"YulIf","src":"8599:117:9"},{"nodeType":"YulAssignment","src":"8730:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8775:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"8786:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8771:3:9"},"nodeType":"YulFunctionCall","src":"8771:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8795:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8740:30:9"},"nodeType":"YulFunctionCall","src":"8740:63:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8730:6:9"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8357:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8368:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8380:6:9","type":""}],"src":"8311:509:9"},{"body":{"nodeType":"YulBlock","src":"9040:501:9","statements":[{"nodeType":"YulAssignment","src":"9050:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9062:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9073:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9058:3:9"},"nodeType":"YulFunctionCall","src":"9058:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9050:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9097:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9108:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9093:3:9"},"nodeType":"YulFunctionCall","src":"9093:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9116:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"9122:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9112:3:9"},"nodeType":"YulFunctionCall","src":"9112:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9086:6:9"},"nodeType":"YulFunctionCall","src":"9086:47:9"},"nodeType":"YulExpressionStatement","src":"9086:47:9"},{"nodeType":"YulAssignment","src":"9142:86:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9214:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"9223:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9150:63:9"},"nodeType":"YulFunctionCall","src":"9150:78:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9142:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9249:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9260:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9245:3:9"},"nodeType":"YulFunctionCall","src":"9245:18:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9269:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"9275:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9265:3:9"},"nodeType":"YulFunctionCall","src":"9265:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9238:6:9"},"nodeType":"YulFunctionCall","src":"9238:48:9"},"nodeType":"YulExpressionStatement","src":"9238:48:9"},{"nodeType":"YulAssignment","src":"9295:86:9","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9367:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"9376:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9303:63:9"},"nodeType":"YulFunctionCall","src":"9303:78:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9295:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9402:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9413:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9398:3:9"},"nodeType":"YulFunctionCall","src":"9398:18:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9422:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"9428:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9418:3:9"},"nodeType":"YulFunctionCall","src":"9418:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9391:6:9"},"nodeType":"YulFunctionCall","src":"9391:48:9"},"nodeType":"YulExpressionStatement","src":"9391:48:9"},{"nodeType":"YulAssignment","src":"9448:86:9","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9520:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"9529:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9456:63:9"},"nodeType":"YulFunctionCall","src":"9456:78:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9448:4:9"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8996:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9008:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9016:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9024:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9035:4:9","type":""}],"src":"8826:715:9"},{"body":{"nodeType":"YulBlock","src":"9640:561:9","statements":[{"body":{"nodeType":"YulBlock","src":"9686:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9688:77:9"},"nodeType":"YulFunctionCall","src":"9688:79:9"},"nodeType":"YulExpressionStatement","src":"9688:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9661:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"9670:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9657:3:9"},"nodeType":"YulFunctionCall","src":"9657:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"9682:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9653:3:9"},"nodeType":"YulFunctionCall","src":"9653:32:9"},"nodeType":"YulIf","src":"9650:119:9"},{"nodeType":"YulBlock","src":"9779:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9794:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"9808:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9798:6:9","type":""}]},{"nodeType":"YulAssignment","src":"9823:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9858:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"9869:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9854:3:9"},"nodeType":"YulFunctionCall","src":"9854:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9878:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9833:20:9"},"nodeType":"YulFunctionCall","src":"9833:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9823:6:9"}]}]},{"nodeType":"YulBlock","src":"9906:288:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9921:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9952:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9963:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9948:3:9"},"nodeType":"YulFunctionCall","src":"9948:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9935:12:9"},"nodeType":"YulFunctionCall","src":"9935:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9925:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"10014:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10016:77:9"},"nodeType":"YulFunctionCall","src":"10016:79:9"},"nodeType":"YulExpressionStatement","src":"10016:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9986:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"9994:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9983:2:9"},"nodeType":"YulFunctionCall","src":"9983:30:9"},"nodeType":"YulIf","src":"9980:117:9"},{"nodeType":"YulAssignment","src":"10111:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10156:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"10167:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10152:3:9"},"nodeType":"YulFunctionCall","src":"10152:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10176:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10121:30:9"},"nodeType":"YulFunctionCall","src":"10121:63:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10111:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9602:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9613:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9625:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9633:6:9","type":""}],"src":"9547:654:9"},{"body":{"nodeType":"YulBlock","src":"10323:40:9","statements":[{"nodeType":"YulAssignment","src":"10334:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10350:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10344:5:9"},"nodeType":"YulFunctionCall","src":"10344:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10334:6:9"}]}]},"name":"array_length_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10306:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10316:6:9","type":""}],"src":"10207:156:9"},{"body":{"nodeType":"YulBlock","src":"10522:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10539:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"10544:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10532:6:9"},"nodeType":"YulFunctionCall","src":"10532:19:9"},"nodeType":"YulExpressionStatement","src":"10532:19:9"},{"nodeType":"YulAssignment","src":"10560:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10579:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10584:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10575:3:9"},"nodeType":"YulFunctionCall","src":"10575:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10560:11:9"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10494:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"10499:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10510:11:9","type":""}],"src":"10369:226:9"},{"body":{"nodeType":"YulBlock","src":"10715:60:9","statements":[{"nodeType":"YulAssignment","src":"10725:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"10733:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10725:4:9"}]},{"nodeType":"YulAssignment","src":"10746:22:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10758:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10763:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10754:3:9"},"nodeType":"YulFunctionCall","src":"10754:14:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10746:4:9"}]}]},"name":"array_dataslot_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10702:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10710:4:9","type":""}],"src":"10601:174:9"},{"body":{"nodeType":"YulBlock","src":"10824:47:9","statements":[{"nodeType":"YulAssignment","src":"10834:31:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10856:1:9","type":"","value":"7"},{"name":"value","nodeType":"YulIdentifier","src":"10859:5:9"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"10845:10:9"},"nodeType":"YulFunctionCall","src":"10845:20:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10834:7:9"}]}]},"name":"cleanup_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10806:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10816:7:9","type":""}],"src":"10781:90:9"},{"body":{"nodeType":"YulBlock","src":"10928:51:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10945:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10966:5:9"}],"functionName":{"name":"cleanup_t_int64","nodeType":"YulIdentifier","src":"10950:15:9"},"nodeType":"YulFunctionCall","src":"10950:22:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10938:6:9"},"nodeType":"YulFunctionCall","src":"10938:35:9"},"nodeType":"YulExpressionStatement","src":"10938:35:9"}]},"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10916:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10923:3:9","type":""}],"src":"10877:102:9"},{"body":{"nodeType":"YulBlock","src":"11040:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11057:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11080:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11062:17:9"},"nodeType":"YulFunctionCall","src":"11062:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11050:6:9"},"nodeType":"YulFunctionCall","src":"11050:37:9"},"nodeType":"YulExpressionStatement","src":"11050:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11028:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11035:3:9","type":""}],"src":"10985:108:9"},{"body":{"nodeType":"YulBlock","src":"11313:764:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11323:26:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11339:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11344:4:9","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11335:3:9"},"nodeType":"YulFunctionCall","src":"11335:14:9"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"11327:4:9","type":""}]},{"nodeType":"YulBlock","src":"11359:170:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11404:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11434:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"11441:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11430:3:9"},"nodeType":"YulFunctionCall","src":"11430:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11424:5:9"},"nodeType":"YulFunctionCall","src":"11424:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11408:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11490:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11508:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11513:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11504:3:9"},"nodeType":"YulFunctionCall","src":"11504:14:9"}],"functionName":{"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulIdentifier","src":"11460:29:9"},"nodeType":"YulFunctionCall","src":"11460:59:9"},"nodeType":"YulExpressionStatement","src":"11460:59:9"}]},{"nodeType":"YulBlock","src":"11539:170:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11584:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11614:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"11621:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:9"},"nodeType":"YulFunctionCall","src":"11610:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11604:5:9"},"nodeType":"YulFunctionCall","src":"11604:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11588:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11670:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11688:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11693:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11684:3:9"},"nodeType":"YulFunctionCall","src":"11684:14:9"}],"functionName":{"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulIdentifier","src":"11640:29:9"},"nodeType":"YulFunctionCall","src":"11640:59:9"},"nodeType":"YulExpressionStatement","src":"11640:59:9"}]},{"nodeType":"YulBlock","src":"11719:174:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11764:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11794:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"11801:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11790:3:9"},"nodeType":"YulFunctionCall","src":"11790:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11784:5:9"},"nodeType":"YulFunctionCall","src":"11784:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11768:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11854:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11872:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11877:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11868:3:9"},"nodeType":"YulFunctionCall","src":"11868:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11820:33:9"},"nodeType":"YulFunctionCall","src":"11820:63:9"},"nodeType":"YulExpressionStatement","src":"11820:63:9"}]},{"nodeType":"YulBlock","src":"11903:167:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11941:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11971:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"11978:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11967:3:9"},"nodeType":"YulFunctionCall","src":"11967:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11961:5:9"},"nodeType":"YulFunctionCall","src":"11961:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11945:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12031:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12049:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"12054:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12045:3:9"},"nodeType":"YulFunctionCall","src":"12045:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11997:33:9"},"nodeType":"YulFunctionCall","src":"11997:63:9"},"nodeType":"YulExpressionStatement","src":"11997:63:9"}]}]},"name":"abi_encode_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11300:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11307:3:9","type":""}],"src":"11173:904:9"},{"body":{"nodeType":"YulBlock","src":"12247:183:9","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12375:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"12383:3:9"}],"functionName":{"name":"abi_encode_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr","nodeType":"YulIdentifier","src":"12257:117:9"},"nodeType":"YulFunctionCall","src":"12257:130:9"},"nodeType":"YulExpressionStatement","src":"12257:130:9"},{"nodeType":"YulAssignment","src":"12396:28:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12414:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"12419:4:9","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12410:3:9"},"nodeType":"YulFunctionCall","src":"12410:14:9"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"12396:10:9"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"12220:6:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12228:3:9","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"12236:10:9","type":""}],"src":"12083:347:9"},{"body":{"nodeType":"YulBlock","src":"12553:38:9","statements":[{"nodeType":"YulAssignment","src":"12563:22:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12575:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"12580:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12571:3:9"},"nodeType":"YulFunctionCall","src":"12571:14:9"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"12563:4:9"}]}]},"name":"array_nextElement_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12540:3:9","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"12548:4:9","type":""}],"src":"12436:155:9"},{"body":{"nodeType":"YulBlock","src":"12883:860:9","statements":[{"nodeType":"YulVariableDeclaration","src":"12893:110:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12997:5:9"}],"functionName":{"name":"array_length_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12907:89:9"},"nodeType":"YulFunctionCall","src":"12907:96:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12897:6:9","type":""}]},{"nodeType":"YulAssignment","src":"13012:135:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13135:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"13140:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13019:115:9"},"nodeType":"YulFunctionCall","src":"13019:128:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13012:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"13156:113:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13263:5:9"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13171:91:9"},"nodeType":"YulFunctionCall","src":"13171:98:9"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13160:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13278:21:9","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"13292:7:9"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13282:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"13368:350:9","statements":[{"nodeType":"YulVariableDeclaration","src":"13382:34:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13409:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13403:5:9"},"nodeType":"YulFunctionCall","src":"13403:13:9"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"13386:13:9","type":""}]},{"nodeType":"YulAssignment","src":"13429:154:9","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"13564:13:9"},{"name":"pos","nodeType":"YulIdentifier","src":"13579:3:9"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr","nodeType":"YulIdentifier","src":"13436:127:9"},"nodeType":"YulFunctionCall","src":"13436:147:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13429:3:9"}]},{"nodeType":"YulAssignment","src":"13596:112:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13701:6:9"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13606:94:9"},"nodeType":"YulFunctionCall","src":"13606:102:9"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13596:6:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13330:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"13333:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13327:2:9"},"nodeType":"YulFunctionCall","src":"13327:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13341:18:9","statements":[{"nodeType":"YulAssignment","src":"13343:14:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13352:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"13355:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13348:3:9"},"nodeType":"YulFunctionCall","src":"13348:9:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13343:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"13312:14:9","statements":[{"nodeType":"YulVariableDeclaration","src":"13314:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"13323:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13318:1:9","type":""}]}]},"src":"13308:410:9"},{"nodeType":"YulAssignment","src":"13727:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"13734:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13727:3:9"}]}]},"name":"abi_encode_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12862:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12869:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12878:3:9","type":""}],"src":"12675:1068:9"},{"body":{"nodeType":"YulBlock","src":"13981:309:9","statements":[{"nodeType":"YulAssignment","src":"13991:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14003:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14014:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13999:3:9"},"nodeType":"YulFunctionCall","src":"13999:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13991:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14038:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14049:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14034:3:9"},"nodeType":"YulFunctionCall","src":"14034:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14057:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"14063:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14053:3:9"},"nodeType":"YulFunctionCall","src":"14053:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14027:6:9"},"nodeType":"YulFunctionCall","src":"14027:47:9"},"nodeType":"YulExpressionStatement","src":"14027:47:9"},{"nodeType":"YulAssignment","src":"14083:200:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14269:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"14278:4:9"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14091:177:9"},"nodeType":"YulFunctionCall","src":"14091:192:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14083:4:9"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13953:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13965:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13976:4:9","type":""}],"src":"13749:541:9"},{"body":{"nodeType":"YulBlock","src":"14470:359:9","statements":[{"nodeType":"YulAssignment","src":"14480:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14492:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14503:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14488:3:9"},"nodeType":"YulFunctionCall","src":"14488:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14480:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14560:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14573:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14584:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14569:3:9"},"nodeType":"YulFunctionCall","src":"14569:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14516:43:9"},"nodeType":"YulFunctionCall","src":"14516:71:9"},"nodeType":"YulExpressionStatement","src":"14516:71:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14608:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14619:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14604:3:9"},"nodeType":"YulFunctionCall","src":"14604:18:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14628:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"14634:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14624:3:9"},"nodeType":"YulFunctionCall","src":"14624:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14597:6:9"},"nodeType":"YulFunctionCall","src":"14597:48:9"},"nodeType":"YulExpressionStatement","src":"14597:48:9"},{"nodeType":"YulAssignment","src":"14654:86:9","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14726:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"14735:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14662:63:9"},"nodeType":"YulFunctionCall","src":"14662:78:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14654:4:9"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14794:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14807:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14818:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14803:3:9"},"nodeType":"YulFunctionCall","src":"14803:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14750:43:9"},"nodeType":"YulFunctionCall","src":"14750:72:9"},"nodeType":"YulExpressionStatement","src":"14750:72:9"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14426:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14438:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14446:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14454:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14465:4:9","type":""}],"src":"14296:533:9"},{"body":{"nodeType":"YulBlock","src":"14953:195:9","statements":[{"nodeType":"YulAssignment","src":"14963:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14975:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14986:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14971:3:9"},"nodeType":"YulFunctionCall","src":"14971:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14963:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15010:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15021:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15006:3:9"},"nodeType":"YulFunctionCall","src":"15006:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15029:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"15035:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15025:3:9"},"nodeType":"YulFunctionCall","src":"15025:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14999:6:9"},"nodeType":"YulFunctionCall","src":"14999:47:9"},"nodeType":"YulExpressionStatement","src":"14999:47:9"},{"nodeType":"YulAssignment","src":"15055:86:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15127:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"15136:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15063:63:9"},"nodeType":"YulFunctionCall","src":"15063:78:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15055:4:9"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14925:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14937:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14948:4:9","type":""}],"src":"14835:313:9"},{"body":{"nodeType":"YulBlock","src":"15247:561:9","statements":[{"body":{"nodeType":"YulBlock","src":"15293:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15295:77:9"},"nodeType":"YulFunctionCall","src":"15295:79:9"},"nodeType":"YulExpressionStatement","src":"15295:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15268:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"15277:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15264:3:9"},"nodeType":"YulFunctionCall","src":"15264:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"15289:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15260:3:9"},"nodeType":"YulFunctionCall","src":"15260:32:9"},"nodeType":"YulIf","src":"15257:119:9"},{"nodeType":"YulBlock","src":"15386:287:9","statements":[{"nodeType":"YulVariableDeclaration","src":"15401:45:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15432:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15443:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15428:3:9"},"nodeType":"YulFunctionCall","src":"15428:17:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15415:12:9"},"nodeType":"YulFunctionCall","src":"15415:31:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15405:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"15493:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15495:77:9"},"nodeType":"YulFunctionCall","src":"15495:79:9"},"nodeType":"YulExpressionStatement","src":"15495:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15465:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"15473:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15462:2:9"},"nodeType":"YulFunctionCall","src":"15462:30:9"},"nodeType":"YulIf","src":"15459:117:9"},{"nodeType":"YulAssignment","src":"15590:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15635:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"15646:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15631:3:9"},"nodeType":"YulFunctionCall","src":"15631:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15655:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15600:30:9"},"nodeType":"YulFunctionCall","src":"15600:63:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15590:6:9"}]}]},{"nodeType":"YulBlock","src":"15683:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"15698:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"15712:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15702:6:9","type":""}]},{"nodeType":"YulAssignment","src":"15728:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15763:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"15774:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15759:3:9"},"nodeType":"YulFunctionCall","src":"15759:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15783:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15738:20:9"},"nodeType":"YulFunctionCall","src":"15738:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15728:6:9"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15209:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15220:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15232:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15240:6:9","type":""}],"src":"15154:654:9"},{"body":{"nodeType":"YulBlock","src":"15875:51:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15892:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15913:5:9"}],"functionName":{"name":"cleanup_t_int64","nodeType":"YulIdentifier","src":"15897:15:9"},"nodeType":"YulFunctionCall","src":"15897:22:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15885:6:9"},"nodeType":"YulFunctionCall","src":"15885:35:9"},"nodeType":"YulExpressionStatement","src":"15885:35:9"}]},"name":"abi_encode_t_int64_to_t_int64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15863:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15870:3:9","type":""}],"src":"15814:112:9"},{"body":{"nodeType":"YulBlock","src":"16054:202:9","statements":[{"nodeType":"YulAssignment","src":"16064:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16076:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"16087:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16072:3:9"},"nodeType":"YulFunctionCall","src":"16072:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16064:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16140:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16153:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"16164:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16149:3:9"},"nodeType":"YulFunctionCall","src":"16149:17:9"}],"functionName":{"name":"abi_encode_t_int64_to_t_int64_fromStack","nodeType":"YulIdentifier","src":"16100:39:9"},"nodeType":"YulFunctionCall","src":"16100:67:9"},"nodeType":"YulExpressionStatement","src":"16100:67:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16221:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16234:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"16245:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16230:3:9"},"nodeType":"YulFunctionCall","src":"16230:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16177:43:9"},"nodeType":"YulFunctionCall","src":"16177:72:9"},"nodeType":"YulExpressionStatement","src":"16177:72:9"}]},"name":"abi_encode_tuple_t_int64_t_uint256__to_t_int64_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16018:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16030:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16038:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16049:4:9","type":""}],"src":"15932:324:9"},{"body":{"nodeType":"YulBlock","src":"16408:277:9","statements":[{"nodeType":"YulAssignment","src":"16418:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16430:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"16441:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16426:3:9"},"nodeType":"YulFunctionCall","src":"16426:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16418:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16498:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16511:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"16522:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16507:3:9"},"nodeType":"YulFunctionCall","src":"16507:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16454:43:9"},"nodeType":"YulFunctionCall","src":"16454:71:9"},"nodeType":"YulExpressionStatement","src":"16454:71:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16546:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"16557:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16542:3:9"},"nodeType":"YulFunctionCall","src":"16542:18:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16566:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"16572:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16562:3:9"},"nodeType":"YulFunctionCall","src":"16562:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16535:6:9"},"nodeType":"YulFunctionCall","src":"16535:48:9"},"nodeType":"YulExpressionStatement","src":"16535:48:9"},{"nodeType":"YulAssignment","src":"16592:86:9","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16664:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"16673:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16600:63:9"},"nodeType":"YulFunctionCall","src":"16600:78:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16592:4:9"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16372:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16384:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16392:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16403:4:9","type":""}],"src":"16262:423:9"},{"body":{"nodeType":"YulBlock","src":"16765:40:9","statements":[{"nodeType":"YulAssignment","src":"16776:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16792:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16786:5:9"},"nodeType":"YulFunctionCall","src":"16786:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16776:6:9"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16748:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16758:6:9","type":""}],"src":"16691:114:9"},{"body":{"nodeType":"YulBlock","src":"16922:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16939:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"16944:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16932:6:9"},"nodeType":"YulFunctionCall","src":"16932:19:9"},"nodeType":"YulExpressionStatement","src":"16932:19:9"},{"nodeType":"YulAssignment","src":"16960:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16979:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"16984:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16975:3:9"},"nodeType":"YulFunctionCall","src":"16975:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16960:11:9"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16894:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"16899:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16910:11:9","type":""}],"src":"16811:184:9"},{"body":{"nodeType":"YulBlock","src":"17073:60:9","statements":[{"nodeType":"YulAssignment","src":"17083:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17091:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17083:4:9"}]},{"nodeType":"YulAssignment","src":"17104:22:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17116:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"17121:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17112:3:9"},"nodeType":"YulFunctionCall","src":"17112:14:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17104:4:9"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17060:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17068:4:9","type":""}],"src":"17001:132:9"},{"body":{"nodeType":"YulBlock","src":"17219:99:9","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17263:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"17271:3:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17229:33:9"},"nodeType":"YulFunctionCall","src":"17229:46:9"},"nodeType":"YulExpressionStatement","src":"17229:46:9"},{"nodeType":"YulAssignment","src":"17284:28:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17302:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"17307:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17298:3:9"},"nodeType":"YulFunctionCall","src":"17298:14:9"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"17284:10:9"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"17192:6:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17200:3:9","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"17208:10:9","type":""}],"src":"17139:179:9"},{"body":{"nodeType":"YulBlock","src":"17399:38:9","statements":[{"nodeType":"YulAssignment","src":"17409:22:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17421:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"17426:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17417:3:9"},"nodeType":"YulFunctionCall","src":"17417:14:9"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"17409:4:9"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17386:3:9","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"17394:4:9","type":""}],"src":"17324:113:9"},{"body":{"nodeType":"YulBlock","src":"17597:608:9","statements":[{"nodeType":"YulVariableDeclaration","src":"17607:68:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17669:5:9"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17621:47:9"},"nodeType":"YulFunctionCall","src":"17621:54:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17611:6:9","type":""}]},{"nodeType":"YulAssignment","src":"17684:93:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17765:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"17770:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17691:73:9"},"nodeType":"YulFunctionCall","src":"17691:86:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17684:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"17786:71:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17851:5:9"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17801:49:9"},"nodeType":"YulFunctionCall","src":"17801:56:9"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"17790:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17866:21:9","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"17880:7:9"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"17870:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"17956:224:9","statements":[{"nodeType":"YulVariableDeclaration","src":"17970:34:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17997:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17991:5:9"},"nodeType":"YulFunctionCall","src":"17991:13:9"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"17974:13:9","type":""}]},{"nodeType":"YulAssignment","src":"18017:70:9","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"18068:13:9"},{"name":"pos","nodeType":"YulIdentifier","src":"18083:3:9"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18024:43:9"},"nodeType":"YulFunctionCall","src":"18024:63:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18017:3:9"}]},{"nodeType":"YulAssignment","src":"18100:70:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18163:6:9"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18110:52:9"},"nodeType":"YulFunctionCall","src":"18110:60:9"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18100:6:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17918:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"17921:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17915:2:9"},"nodeType":"YulFunctionCall","src":"17915:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17929:18:9","statements":[{"nodeType":"YulAssignment","src":"17931:14:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17940:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"17943:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17936:3:9"},"nodeType":"YulFunctionCall","src":"17936:9:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17931:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"17900:14:9","statements":[{"nodeType":"YulVariableDeclaration","src":"17902:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"17911:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17906:1:9","type":""}]}]},"src":"17896:284:9"},{"nodeType":"YulAssignment","src":"18189:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"18196:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18189:3:9"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17576:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17583:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17592:3:9","type":""}],"src":"17473:732:9"},{"body":{"nodeType":"YulBlock","src":"18359:225:9","statements":[{"nodeType":"YulAssignment","src":"18369:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18381:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18392:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18377:3:9"},"nodeType":"YulFunctionCall","src":"18377:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18369:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18416:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18427:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18412:3:9"},"nodeType":"YulFunctionCall","src":"18412:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18435:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"18441:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18431:3:9"},"nodeType":"YulFunctionCall","src":"18431:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18405:6:9"},"nodeType":"YulFunctionCall","src":"18405:47:9"},"nodeType":"YulExpressionStatement","src":"18405:47:9"},{"nodeType":"YulAssignment","src":"18461:116:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18563:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"18572:4:9"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18469:93:9"},"nodeType":"YulFunctionCall","src":"18469:108:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18461:4:9"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18331:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18343:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18354:4:9","type":""}],"src":"18211:373:9"},{"body":{"nodeType":"YulBlock","src":"18700:689:9","statements":[{"body":{"nodeType":"YulBlock","src":"18746:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18748:77:9"},"nodeType":"YulFunctionCall","src":"18748:79:9"},"nodeType":"YulExpressionStatement","src":"18748:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18721:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"18730:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18717:3:9"},"nodeType":"YulFunctionCall","src":"18717:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"18742:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18713:3:9"},"nodeType":"YulFunctionCall","src":"18713:32:9"},"nodeType":"YulIf","src":"18710:119:9"},{"nodeType":"YulBlock","src":"18839:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"18854:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"18868:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18858:6:9","type":""}]},{"nodeType":"YulAssignment","src":"18883:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18918:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"18929:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18914:3:9"},"nodeType":"YulFunctionCall","src":"18914:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18938:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18893:20:9"},"nodeType":"YulFunctionCall","src":"18893:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18883:6:9"}]}]},{"nodeType":"YulBlock","src":"18966:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"18981:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"18995:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18985:6:9","type":""}]},{"nodeType":"YulAssignment","src":"19011:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19046:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"19057:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19042:3:9"},"nodeType":"YulFunctionCall","src":"19042:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19066:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19021:20:9"},"nodeType":"YulFunctionCall","src":"19021:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19011:6:9"}]}]},{"nodeType":"YulBlock","src":"19094:288:9","statements":[{"nodeType":"YulVariableDeclaration","src":"19109:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19140:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19151:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19136:3:9"},"nodeType":"YulFunctionCall","src":"19136:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19123:12:9"},"nodeType":"YulFunctionCall","src":"19123:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19113:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"19202:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19204:77:9"},"nodeType":"YulFunctionCall","src":"19204:79:9"},"nodeType":"YulExpressionStatement","src":"19204:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19174:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19182:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19171:2:9"},"nodeType":"YulFunctionCall","src":"19171:30:9"},"nodeType":"YulIf","src":"19168:117:9"},{"nodeType":"YulAssignment","src":"19299:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19344:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"19355:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19340:3:9"},"nodeType":"YulFunctionCall","src":"19340:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19364:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19309:30:9"},"nodeType":"YulFunctionCall","src":"19309:63:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19299:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18654:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18665:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18677:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18685:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18693:6:9","type":""}],"src":"18590:799:9"},{"body":{"nodeType":"YulBlock","src":"19515:859:9","statements":[{"body":{"nodeType":"YulBlock","src":"19561:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19563:77:9"},"nodeType":"YulFunctionCall","src":"19563:79:9"},"nodeType":"YulExpressionStatement","src":"19563:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19536:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"19545:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19532:3:9"},"nodeType":"YulFunctionCall","src":"19532:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"19557:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19528:3:9"},"nodeType":"YulFunctionCall","src":"19528:32:9"},"nodeType":"YulIf","src":"19525:119:9"},{"nodeType":"YulBlock","src":"19654:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"19669:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"19683:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19673:6:9","type":""}]},{"nodeType":"YulAssignment","src":"19698:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19733:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"19744:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19729:3:9"},"nodeType":"YulFunctionCall","src":"19729:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19753:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19708:20:9"},"nodeType":"YulFunctionCall","src":"19708:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19698:6:9"}]}]},{"nodeType":"YulBlock","src":"19781:288:9","statements":[{"nodeType":"YulVariableDeclaration","src":"19796:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19827:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19838:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19823:3:9"},"nodeType":"YulFunctionCall","src":"19823:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19810:12:9"},"nodeType":"YulFunctionCall","src":"19810:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19800:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"19889:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19891:77:9"},"nodeType":"YulFunctionCall","src":"19891:79:9"},"nodeType":"YulExpressionStatement","src":"19891:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19861:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19869:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19858:2:9"},"nodeType":"YulFunctionCall","src":"19858:30:9"},"nodeType":"YulIf","src":"19855:117:9"},{"nodeType":"YulAssignment","src":"19986:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20031:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"20042:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20027:3:9"},"nodeType":"YulFunctionCall","src":"20027:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20051:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19996:30:9"},"nodeType":"YulFunctionCall","src":"19996:63:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19986:6:9"}]}]},{"nodeType":"YulBlock","src":"20079:288:9","statements":[{"nodeType":"YulVariableDeclaration","src":"20094:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20125:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"20136:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20121:3:9"},"nodeType":"YulFunctionCall","src":"20121:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20108:12:9"},"nodeType":"YulFunctionCall","src":"20108:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20098:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"20187:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20189:77:9"},"nodeType":"YulFunctionCall","src":"20189:79:9"},"nodeType":"YulExpressionStatement","src":"20189:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20159:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"20167:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20156:2:9"},"nodeType":"YulFunctionCall","src":"20156:30:9"},"nodeType":"YulIf","src":"20153:117:9"},{"nodeType":"YulAssignment","src":"20284:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20329:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"20340:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20325:3:9"},"nodeType":"YulFunctionCall","src":"20325:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20349:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20294:30:9"},"nodeType":"YulFunctionCall","src":"20294:63:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20284:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19469:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19480:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19492:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19500:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19508:6:9","type":""}],"src":"19395:979:9"},{"body":{"nodeType":"YulBlock","src":"20474:120:9","statements":[{"nodeType":"YulAssignment","src":"20484:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20496:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"20507:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20492:3:9"},"nodeType":"YulFunctionCall","src":"20492:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20484:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20560:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20573:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"20584:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20569:3:9"},"nodeType":"YulFunctionCall","src":"20569:17:9"}],"functionName":{"name":"abi_encode_t_int64_to_t_int64_fromStack","nodeType":"YulIdentifier","src":"20520:39:9"},"nodeType":"YulFunctionCall","src":"20520:67:9"},"nodeType":"YulExpressionStatement","src":"20520:67:9"}]},"name":"abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20446:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20458:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20469:4:9","type":""}],"src":"20380:214:9"},{"body":{"nodeType":"YulBlock","src":"20699:40:9","statements":[{"nodeType":"YulAssignment","src":"20710:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20726:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20720:5:9"},"nodeType":"YulFunctionCall","src":"20720:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20710:6:9"}]}]},"name":"array_length_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20682:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20692:6:9","type":""}],"src":"20600:139:9"},{"body":{"nodeType":"YulBlock","src":"20881:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20898:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"20903:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20891:6:9"},"nodeType":"YulFunctionCall","src":"20891:19:9"},"nodeType":"YulExpressionStatement","src":"20891:19:9"},{"nodeType":"YulAssignment","src":"20919:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20938:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"20943:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20934:3:9"},"nodeType":"YulFunctionCall","src":"20934:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20919:11:9"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20853:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"20858:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20869:11:9","type":""}],"src":"20745:209:9"},{"body":{"nodeType":"YulBlock","src":"21057:60:9","statements":[{"nodeType":"YulAssignment","src":"21067:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"21075:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21067:4:9"}]},{"nodeType":"YulAssignment","src":"21088:22:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21100:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"21105:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21096:3:9"},"nodeType":"YulFunctionCall","src":"21096:14:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21088:4:9"}]}]},"name":"array_dataslot_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21044:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"21052:4:9","type":""}],"src":"20960:157:9"},{"body":{"nodeType":"YulBlock","src":"21166:43:9","statements":[{"nodeType":"YulAssignment","src":"21176:27:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21191:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"21198:4:9","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21187:3:9"},"nodeType":"YulFunctionCall","src":"21187:16:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21176:7:9"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21148:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21158:7:9","type":""}],"src":"21123:86:9"},{"body":{"nodeType":"YulBlock","src":"21266:51:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21283:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21304:5:9"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"21288:15:9"},"nodeType":"YulFunctionCall","src":"21288:22:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21276:6:9"},"nodeType":"YulFunctionCall","src":"21276:35:9"},"nodeType":"YulExpressionStatement","src":"21276:35:9"}]},"name":"abi_encode_t_uint8_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21254:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21261:3:9","type":""}],"src":"21215:102:9"},{"body":{"nodeType":"YulBlock","src":"21477:660:9","statements":[{"nodeType":"YulVariableDeclaration","src":"21487:26:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21503:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"21508:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21499:3:9"},"nodeType":"YulFunctionCall","src":"21499:14:9"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"21491:4:9","type":""}]},{"nodeType":"YulBlock","src":"21523:236:9","statements":[{"nodeType":"YulVariableDeclaration","src":"21559:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21589:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"21596:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21585:3:9"},"nodeType":"YulFunctionCall","src":"21585:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21579:5:9"},"nodeType":"YulFunctionCall","src":"21579:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21563:12:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21627:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"21632:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21623:3:9"},"nodeType":"YulFunctionCall","src":"21623:14:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21643:4:9"},{"name":"pos","nodeType":"YulIdentifier","src":"21649:3:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21639:3:9"},"nodeType":"YulFunctionCall","src":"21639:14:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21616:6:9"},"nodeType":"YulFunctionCall","src":"21616:38:9"},"nodeType":"YulExpressionStatement","src":"21616:38:9"},{"nodeType":"YulAssignment","src":"21667:81:9","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21729:12:9"},{"name":"tail","nodeType":"YulIdentifier","src":"21743:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21675:53:9"},"nodeType":"YulFunctionCall","src":"21675:73:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21667:4:9"}]}]},{"nodeType":"YulBlock","src":"21769:166:9","statements":[{"nodeType":"YulVariableDeclaration","src":"21806:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21836:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"21843:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21832:3:9"},"nodeType":"YulFunctionCall","src":"21832:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21826:5:9"},"nodeType":"YulFunctionCall","src":"21826:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21810:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21896:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21914:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"21919:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21910:3:9"},"nodeType":"YulFunctionCall","src":"21910:14:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21862:33:9"},"nodeType":"YulFunctionCall","src":"21862:63:9"},"nodeType":"YulExpressionStatement","src":"21862:63:9"}]},{"nodeType":"YulBlock","src":"21945:165:9","statements":[{"nodeType":"YulVariableDeclaration","src":"21985:43:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22015:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"22022:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22011:3:9"},"nodeType":"YulFunctionCall","src":"22011:16:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22005:5:9"},"nodeType":"YulFunctionCall","src":"22005:23:9"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21989:12:9","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22071:12:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22089:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"22094:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22085:3:9"},"nodeType":"YulFunctionCall","src":"22085:14:9"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8","nodeType":"YulIdentifier","src":"22041:29:9"},"nodeType":"YulFunctionCall","src":"22041:59:9"},"nodeType":"YulExpressionStatement","src":"22041:59:9"}]},{"nodeType":"YulAssignment","src":"22120:11:9","value":{"name":"tail","nodeType":"YulIdentifier","src":"22127:4:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22120:3:9"}]}]},"name":"abi_encode_t_struct$_DecCoin_$2772_memory_ptr_to_t_struct$_DecCoin_$2772_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21456:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21463:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21472:3:9","type":""}],"src":"21363:774:9"},{"body":{"nodeType":"YulBlock","src":"22273:126:9","statements":[{"nodeType":"YulAssignment","src":"22283:110:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22381:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"22389:3:9"}],"functionName":{"name":"abi_encode_t_struct$_DecCoin_$2772_memory_ptr_to_t_struct$_DecCoin_$2772_memory_ptr","nodeType":"YulIdentifier","src":"22297:83:9"},"nodeType":"YulFunctionCall","src":"22297:96:9"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"22283:10:9"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_DecCoin_$2772_memory_ptr_to_t_struct$_DecCoin_$2772_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"22246:6:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22254:3:9","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"22262:10:9","type":""}],"src":"22143:256:9"},{"body":{"nodeType":"YulBlock","src":"22505:38:9","statements":[{"nodeType":"YulAssignment","src":"22515:22:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22527:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"22532:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22523:3:9"},"nodeType":"YulFunctionCall","src":"22523:14:9"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"22515:4:9"}]}]},"name":"array_nextElement_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"22492:3:9","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"22500:4:9","type":""}],"src":"22405:138:9"},{"body":{"nodeType":"YulBlock","src":"22767:937:9","statements":[{"nodeType":"YulVariableDeclaration","src":"22777:93:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22864:5:9"}],"functionName":{"name":"array_length_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22791:72:9"},"nodeType":"YulFunctionCall","src":"22791:79:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22781:6:9","type":""}]},{"nodeType":"YulAssignment","src":"22879:118:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22985:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"22990:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22886:98:9"},"nodeType":"YulFunctionCall","src":"22886:111:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22879:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"23006:20:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"23023:3:9"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"23010:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23035:39:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23051:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23060:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"23068:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23056:3:9"},"nodeType":"YulFunctionCall","src":"23056:17:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23047:3:9"},"nodeType":"YulFunctionCall","src":"23047:27:9"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"23039:4:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23083:96:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23173:5:9"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"23098:74:9"},"nodeType":"YulFunctionCall","src":"23098:81:9"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"23087:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23188:21:9","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"23202:7:9"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"23192:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"23278:381:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23299:3:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23308:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"23314:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23304:3:9"},"nodeType":"YulFunctionCall","src":"23304:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23292:6:9"},"nodeType":"YulFunctionCall","src":"23292:33:9"},"nodeType":"YulExpressionStatement","src":"23292:33:9"},{"nodeType":"YulVariableDeclaration","src":"23338:34:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23365:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23359:5:9"},"nodeType":"YulFunctionCall","src":"23359:13:9"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"23342:13:9","type":""}]},{"nodeType":"YulAssignment","src":"23385:122:9","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"23487:13:9"},{"name":"tail","nodeType":"YulIdentifier","src":"23502:4:9"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_DecCoin_$2772_memory_ptr_to_t_struct$_DecCoin_$2772_memory_ptr","nodeType":"YulIdentifier","src":"23393:93:9"},"nodeType":"YulFunctionCall","src":"23393:114:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23385:4:9"}]},{"nodeType":"YulAssignment","src":"23520:95:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23608:6:9"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"23530:77:9"},"nodeType":"YulFunctionCall","src":"23530:85:9"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23520:6:9"}]},{"nodeType":"YulAssignment","src":"23628:21:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23639:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"23644:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23635:3:9"},"nodeType":"YulFunctionCall","src":"23635:14:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23628:3:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23240:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"23243:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23237:2:9"},"nodeType":"YulFunctionCall","src":"23237:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23251:18:9","statements":[{"nodeType":"YulAssignment","src":"23253:14:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23262:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"23265:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23258:3:9"},"nodeType":"YulFunctionCall","src":"23258:9:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23253:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"23222:14:9","statements":[{"nodeType":"YulVariableDeclaration","src":"23224:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"23233:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23228:1:9","type":""}]}]},"src":"23218:441:9"},{"nodeType":"YulAssignment","src":"23668:11:9","value":{"name":"tail","nodeType":"YulIdentifier","src":"23675:4:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23668:3:9"}]},{"nodeType":"YulAssignment","src":"23688:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"23695:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23688:3:9"}]}]},"name":"abi_encode_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22746:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22753:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22762:3:9","type":""}],"src":"22593:1111:9"},{"body":{"nodeType":"YulBlock","src":"23908:275:9","statements":[{"nodeType":"YulAssignment","src":"23918:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23930:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"23941:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23926:3:9"},"nodeType":"YulFunctionCall","src":"23926:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23918:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23965:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"23976:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23961:3:9"},"nodeType":"YulFunctionCall","src":"23961:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23984:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"23990:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23980:3:9"},"nodeType":"YulFunctionCall","src":"23980:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23954:6:9"},"nodeType":"YulFunctionCall","src":"23954:47:9"},"nodeType":"YulExpressionStatement","src":"23954:47:9"},{"nodeType":"YulAssignment","src":"24010:166:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24162:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"24171:4:9"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24018:143:9"},"nodeType":"YulFunctionCall","src":"24018:158:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24010:4:9"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23880:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23892:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23903:4:9","type":""}],"src":"23710:473:9"},{"body":{"nodeType":"YulBlock","src":"24292:731:9","statements":[{"body":{"nodeType":"YulBlock","src":"24338:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24340:77:9"},"nodeType":"YulFunctionCall","src":"24340:79:9"},"nodeType":"YulExpressionStatement","src":"24340:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24313:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"24322:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24309:3:9"},"nodeType":"YulFunctionCall","src":"24309:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"24334:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24305:3:9"},"nodeType":"YulFunctionCall","src":"24305:32:9"},"nodeType":"YulIf","src":"24302:119:9"},{"nodeType":"YulBlock","src":"24431:287:9","statements":[{"nodeType":"YulVariableDeclaration","src":"24446:45:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24477:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24488:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24473:3:9"},"nodeType":"YulFunctionCall","src":"24473:17:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24460:12:9"},"nodeType":"YulFunctionCall","src":"24460:31:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24450:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"24538:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24540:77:9"},"nodeType":"YulFunctionCall","src":"24540:79:9"},"nodeType":"YulExpressionStatement","src":"24540:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24510:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"24518:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24507:2:9"},"nodeType":"YulFunctionCall","src":"24507:30:9"},"nodeType":"YulIf","src":"24504:117:9"},{"nodeType":"YulAssignment","src":"24635:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24680:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"24691:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24676:3:9"},"nodeType":"YulFunctionCall","src":"24676:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24700:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24645:30:9"},"nodeType":"YulFunctionCall","src":"24645:63:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24635:6:9"}]}]},{"nodeType":"YulBlock","src":"24728:288:9","statements":[{"nodeType":"YulVariableDeclaration","src":"24743:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24774:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24785:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24770:3:9"},"nodeType":"YulFunctionCall","src":"24770:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24757:12:9"},"nodeType":"YulFunctionCall","src":"24757:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24747:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"24836:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24838:77:9"},"nodeType":"YulFunctionCall","src":"24838:79:9"},"nodeType":"YulExpressionStatement","src":"24838:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24808:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"24816:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24805:2:9"},"nodeType":"YulFunctionCall","src":"24805:30:9"},"nodeType":"YulIf","src":"24802:117:9"},{"nodeType":"YulAssignment","src":"24933:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24978:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"24989:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24974:3:9"},"nodeType":"YulFunctionCall","src":"24974:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24998:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24943:30:9"},"nodeType":"YulFunctionCall","src":"24943:63:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24933:6:9"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24254:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24265:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24277:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24285:6:9","type":""}],"src":"24189:834:9"},{"body":{"nodeType":"YulBlock","src":"25121:229:9","statements":[{"body":{"nodeType":"YulBlock","src":"25226:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"25228:16:9"},"nodeType":"YulFunctionCall","src":"25228:18:9"},"nodeType":"YulExpressionStatement","src":"25228:18:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25198:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"25206:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25195:2:9"},"nodeType":"YulFunctionCall","src":"25195:30:9"},"nodeType":"YulIf","src":"25192:56:9"},{"nodeType":"YulAssignment","src":"25258:25:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25270:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"25278:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25266:3:9"},"nodeType":"YulFunctionCall","src":"25266:17:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"25258:4:9"}]},{"nodeType":"YulAssignment","src":"25320:23:9","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"25332:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"25338:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25328:3:9"},"nodeType":"YulFunctionCall","src":"25328:15:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"25320:4:9"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"25105:6:9","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"25116:4:9","type":""}],"src":"25029:321:9"},{"body":{"nodeType":"YulBlock","src":"25445:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25462:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25465:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25455:6:9"},"nodeType":"YulFunctionCall","src":"25455:12:9"},"nodeType":"YulExpressionStatement","src":"25455:12:9"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"25356:117:9"},{"body":{"nodeType":"YulBlock","src":"25607:833:9","statements":[{"nodeType":"YulAssignment","src":"25617:100:9","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25709:6:9"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25642:66:9"},"nodeType":"YulFunctionCall","src":"25642:74:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"25626:15:9"},"nodeType":"YulFunctionCall","src":"25626:91:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"25617:5:9"}]},{"nodeType":"YulVariableDeclaration","src":"25726:16:9","value":{"name":"array","nodeType":"YulIdentifier","src":"25737:5:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"25730:3:9","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"25759:5:9"},{"name":"length","nodeType":"YulIdentifier","src":"25766:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25752:6:9"},"nodeType":"YulFunctionCall","src":"25752:21:9"},"nodeType":"YulExpressionStatement","src":"25752:21:9"},{"nodeType":"YulAssignment","src":"25782:23:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"25793:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"25800:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25789:3:9"},"nodeType":"YulFunctionCall","src":"25789:16:9"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"25782:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"25815:44:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25833:6:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25845:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"25853:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25841:3:9"},"nodeType":"YulFunctionCall","src":"25841:17:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25829:3:9"},"nodeType":"YulFunctionCall","src":"25829:30:9"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"25819:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"25887:103:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"25901:77:9"},"nodeType":"YulFunctionCall","src":"25901:79:9"},"nodeType":"YulExpressionStatement","src":"25901:79:9"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"25874:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"25882:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25871:2:9"},"nodeType":"YulFunctionCall","src":"25871:15:9"},"nodeType":"YulIf","src":"25868:122:9"},{"body":{"nodeType":"YulBlock","src":"26075:359:9","statements":[{"nodeType":"YulVariableDeclaration","src":"26090:36:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"26122:3:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26109:12:9"},"nodeType":"YulFunctionCall","src":"26109:17:9"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"26094:11:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"26178:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"26180:77:9"},"nodeType":"YulFunctionCall","src":"26180:79:9"},"nodeType":"YulExpressionStatement","src":"26180:79:9"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"26145:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"26158:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26142:2:9"},"nodeType":"YulFunctionCall","src":"26142:35:9"},"nodeType":"YulIf","src":"26139:122:9"},{"nodeType":"YulVariableDeclaration","src":"26274:42:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26296:6:9"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"26304:11:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26292:3:9"},"nodeType":"YulFunctionCall","src":"26292:24:9"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"26278:10:9","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"26337:3:9"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"26373:10:9"},{"name":"end","nodeType":"YulIdentifier","src":"26385:3:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"26342:30:9"},"nodeType":"YulFunctionCall","src":"26342:47:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26330:6:9"},"nodeType":"YulFunctionCall","src":"26330:60:9"},"nodeType":"YulExpressionStatement","src":"26330:60:9"},{"nodeType":"YulAssignment","src":"26403:21:9","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"26414:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"26419:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26410:3:9"},"nodeType":"YulFunctionCall","src":"26410:14:9"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"26403:3:9"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"26028:3:9"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"26033:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26025:2:9"},"nodeType":"YulFunctionCall","src":"26025:15:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"26041:25:9","statements":[{"nodeType":"YulAssignment","src":"26043:21:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"26054:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"26059:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26050:3:9"},"nodeType":"YulFunctionCall","src":"26050:14:9"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"26043:3:9"}]}]},"pre":{"nodeType":"YulBlock","src":"26003:21:9","statements":[{"nodeType":"YulVariableDeclaration","src":"26005:17:9","value":{"name":"offset","nodeType":"YulIdentifier","src":"26016:6:9"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"26009:3:9","type":""}]}]},"src":"25999:435:9"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25577:6:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"25585:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"25593:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"25601:5:9","type":""}],"src":"25495:945:9"},{"body":{"nodeType":"YulBlock","src":"26549:303:9","statements":[{"body":{"nodeType":"YulBlock","src":"26598:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"26600:77:9"},"nodeType":"YulFunctionCall","src":"26600:79:9"},"nodeType":"YulExpressionStatement","src":"26600:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26577:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"26585:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26573:3:9"},"nodeType":"YulFunctionCall","src":"26573:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"26592:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26569:3:9"},"nodeType":"YulFunctionCall","src":"26569:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26562:6:9"},"nodeType":"YulFunctionCall","src":"26562:35:9"},"nodeType":"YulIf","src":"26559:122:9"},{"nodeType":"YulVariableDeclaration","src":"26690:34:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26717:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26704:12:9"},"nodeType":"YulFunctionCall","src":"26704:20:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26694:6:9","type":""}]},{"nodeType":"YulAssignment","src":"26733:113:9","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26819:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"26827:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26815:3:9"},"nodeType":"YulFunctionCall","src":"26815:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"26834:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"26842:3:9"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"26742:72:9"},"nodeType":"YulFunctionCall","src":"26742:104:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"26733:5:9"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"26527:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"26535:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"26543:5:9","type":""}],"src":"26462:390:9"},{"body":{"nodeType":"YulBlock","src":"27003:884:9","statements":[{"body":{"nodeType":"YulBlock","src":"27049:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"27051:77:9"},"nodeType":"YulFunctionCall","src":"27051:79:9"},"nodeType":"YulExpressionStatement","src":"27051:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"27024:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"27033:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27020:3:9"},"nodeType":"YulFunctionCall","src":"27020:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"27045:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27016:3:9"},"nodeType":"YulFunctionCall","src":"27016:32:9"},"nodeType":"YulIf","src":"27013:119:9"},{"nodeType":"YulBlock","src":"27142:287:9","statements":[{"nodeType":"YulVariableDeclaration","src":"27157:45:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27188:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"27199:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27184:3:9"},"nodeType":"YulFunctionCall","src":"27184:17:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27171:12:9"},"nodeType":"YulFunctionCall","src":"27171:31:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27161:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"27249:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27251:77:9"},"nodeType":"YulFunctionCall","src":"27251:79:9"},"nodeType":"YulExpressionStatement","src":"27251:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27221:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"27229:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27218:2:9"},"nodeType":"YulFunctionCall","src":"27218:30:9"},"nodeType":"YulIf","src":"27215:117:9"},{"nodeType":"YulAssignment","src":"27346:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27391:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"27402:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27387:3:9"},"nodeType":"YulFunctionCall","src":"27387:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27411:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"27356:30:9"},"nodeType":"YulFunctionCall","src":"27356:63:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"27346:6:9"}]}]},{"nodeType":"YulBlock","src":"27439:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"27454:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"27468:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27458:6:9","type":""}]},{"nodeType":"YulAssignment","src":"27484:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27519:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"27530:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27515:3:9"},"nodeType":"YulFunctionCall","src":"27515:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27539:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"27494:20:9"},"nodeType":"YulFunctionCall","src":"27494:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"27484:6:9"}]}]},{"nodeType":"YulBlock","src":"27567:313:9","statements":[{"nodeType":"YulVariableDeclaration","src":"27582:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27613:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"27624:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27609:3:9"},"nodeType":"YulFunctionCall","src":"27609:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27596:12:9"},"nodeType":"YulFunctionCall","src":"27596:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27586:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"27675:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27677:77:9"},"nodeType":"YulFunctionCall","src":"27677:79:9"},"nodeType":"YulExpressionStatement","src":"27677:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27647:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"27655:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27644:2:9"},"nodeType":"YulFunctionCall","src":"27644:30:9"},"nodeType":"YulIf","src":"27641:117:9"},{"nodeType":"YulAssignment","src":"27772:98:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27842:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"27853:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27838:3:9"},"nodeType":"YulFunctionCall","src":"27838:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27862:7:9"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"27782:55:9"},"nodeType":"YulFunctionCall","src":"27782:88:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"27772:6:9"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26957:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26968:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26980:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26988:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26996:6:9","type":""}],"src":"26858:1029:9"},{"body":{"nodeType":"YulBlock","src":"27921:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27938:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27941:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27931:6:9"},"nodeType":"YulFunctionCall","src":"27931:88:9"},"nodeType":"YulExpressionStatement","src":"27931:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28035:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28038:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28028:6:9"},"nodeType":"YulFunctionCall","src":"28028:15:9"},"nodeType":"YulExpressionStatement","src":"28028:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28059:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28062:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28052:6:9"},"nodeType":"YulFunctionCall","src":"28052:15:9"},"nodeType":"YulExpressionStatement","src":"28052:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"27893:180:9"},{"body":{"nodeType":"YulBlock","src":"28123:147:9","statements":[{"nodeType":"YulAssignment","src":"28133:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28156:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28138:17:9"},"nodeType":"YulFunctionCall","src":"28138:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"28133:1:9"}]},{"nodeType":"YulAssignment","src":"28167:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28190:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28172:17:9"},"nodeType":"YulFunctionCall","src":"28172:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28167:1:9"}]},{"nodeType":"YulAssignment","src":"28201:16:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28212:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"28215:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28208:3:9"},"nodeType":"YulFunctionCall","src":"28208:9:9"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"28201:3:9"}]},{"body":{"nodeType":"YulBlock","src":"28241:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28243:16:9"},"nodeType":"YulFunctionCall","src":"28243:18:9"},"nodeType":"YulExpressionStatement","src":"28243:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28233:1:9"},{"name":"sum","nodeType":"YulIdentifier","src":"28236:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28230:2:9"},"nodeType":"YulFunctionCall","src":"28230:10:9"},"nodeType":"YulIf","src":"28227:36:9"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28110:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"28113:1:9","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"28119:3:9","type":""}],"src":"28079:191:9"},{"body":{"nodeType":"YulBlock","src":"28304:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28321:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28324:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28314:6:9"},"nodeType":"YulFunctionCall","src":"28314:88:9"},"nodeType":"YulExpressionStatement","src":"28314:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28418:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28421:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28411:6:9"},"nodeType":"YulFunctionCall","src":"28411:15:9"},"nodeType":"YulExpressionStatement","src":"28411:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28442:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28445:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28435:6:9"},"nodeType":"YulFunctionCall","src":"28435:15:9"},"nodeType":"YulExpressionStatement","src":"28435:15:9"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"28276:180:9"},{"body":{"nodeType":"YulBlock","src":"28513:269:9","statements":[{"nodeType":"YulAssignment","src":"28523:22:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28537:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"28543:1:9","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28533:3:9"},"nodeType":"YulFunctionCall","src":"28533:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28523:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"28554:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28584:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"28590:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28580:3:9"},"nodeType":"YulFunctionCall","src":"28580:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"28558:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"28631:51:9","statements":[{"nodeType":"YulAssignment","src":"28645:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28659:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"28667:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28655:3:9"},"nodeType":"YulFunctionCall","src":"28655:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28645:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"28611:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28604:6:9"},"nodeType":"YulFunctionCall","src":"28604:26:9"},"nodeType":"YulIf","src":"28601:81:9"},{"body":{"nodeType":"YulBlock","src":"28734:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"28748:16:9"},"nodeType":"YulFunctionCall","src":"28748:18:9"},"nodeType":"YulExpressionStatement","src":"28748:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"28698:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28721:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"28729:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28718:2:9"},"nodeType":"YulFunctionCall","src":"28718:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28695:2:9"},"nodeType":"YulFunctionCall","src":"28695:38:9"},"nodeType":"YulIf","src":"28692:84:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"28497:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"28506:6:9","type":""}],"src":"28462:320:9"},{"body":{"nodeType":"YulBlock","src":"28816:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28833:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28836:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28826:6:9"},"nodeType":"YulFunctionCall","src":"28826:88:9"},"nodeType":"YulExpressionStatement","src":"28826:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28930:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28933:4:9","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28923:6:9"},"nodeType":"YulFunctionCall","src":"28923:15:9"},"nodeType":"YulExpressionStatement","src":"28923:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28954:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28957:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28947:6:9"},"nodeType":"YulFunctionCall","src":"28947:15:9"},"nodeType":"YulExpressionStatement","src":"28947:15:9"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"28788:180:9"},{"body":{"nodeType":"YulBlock","src":"29017:190:9","statements":[{"nodeType":"YulAssignment","src":"29027:33:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29054:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29036:17:9"},"nodeType":"YulFunctionCall","src":"29036:24:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29027:5:9"}]},{"body":{"nodeType":"YulBlock","src":"29150:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29152:16:9"},"nodeType":"YulFunctionCall","src":"29152:18:9"},"nodeType":"YulExpressionStatement","src":"29152:18:9"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29075:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"29082:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29072:2:9"},"nodeType":"YulFunctionCall","src":"29072:77:9"},"nodeType":"YulIf","src":"29069:103:9"},{"nodeType":"YulAssignment","src":"29181:20:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29192:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"29199:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29188:3:9"},"nodeType":"YulFunctionCall","src":"29188:13:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29181:3:9"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29003:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29013:3:9","type":""}],"src":"28974:233:9"},{"body":{"nodeType":"YulBlock","src":"29326:34:9","statements":[{"nodeType":"YulAssignment","src":"29336:18:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"29351:3:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29336:11:9"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29298:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"29303:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"29314:11:9","type":""}],"src":"29213:147:9"},{"body":{"nodeType":"YulBlock","src":"29472:8:9","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29464:6:9","type":""}],"src":"29366:114:9"},{"body":{"nodeType":"YulBlock","src":"29649:235:9","statements":[{"nodeType":"YulAssignment","src":"29659:90:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29742:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"29747:1:9","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29666:75:9"},"nodeType":"YulFunctionCall","src":"29666:83:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29659:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29847:3:9"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"29758:88:9"},"nodeType":"YulFunctionCall","src":"29758:93:9"},"nodeType":"YulExpressionStatement","src":"29758:93:9"},{"nodeType":"YulAssignment","src":"29860:18:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29871:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"29876:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29867:3:9"},"nodeType":"YulFunctionCall","src":"29867:11:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29860:3:9"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29637:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29645:3:9","type":""}],"src":"29486:398:9"},{"body":{"nodeType":"YulBlock","src":"30078:191:9","statements":[{"nodeType":"YulAssignment","src":"30089:154:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30239:3:9"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30096:141:9"},"nodeType":"YulFunctionCall","src":"30096:147:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30089:3:9"}]},{"nodeType":"YulAssignment","src":"30253:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"30260:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30253:3:9"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30065:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30074:3:9","type":""}],"src":"29890:379:9"},{"body":{"nodeType":"YulBlock","src":"30332:87:9","statements":[{"nodeType":"YulAssignment","src":"30342:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"30350:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30342:4:9"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30370:1:9","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"30373:3:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30363:6:9"},"nodeType":"YulFunctionCall","src":"30363:14:9"},"nodeType":"YulExpressionStatement","src":"30363:14:9"},{"nodeType":"YulAssignment","src":"30386:26:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30404:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30407:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"30394:9:9"},"nodeType":"YulFunctionCall","src":"30394:18:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30386:4:9"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"30319:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"30327:4:9","type":""}],"src":"30275:144:9"},{"body":{"nodeType":"YulBlock","src":"30556:769:9","statements":[{"nodeType":"YulVariableDeclaration","src":"30566:29:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30589:5:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"30583:5:9"},"nodeType":"YulFunctionCall","src":"30583:12:9"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"30570:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30604:50:9","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"30644:9:9"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"30618:25:9"},"nodeType":"YulFunctionCall","src":"30618:36:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"30608:6:9","type":""}]},{"nodeType":"YulAssignment","src":"30663:95:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30746:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"30751:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30670:75:9"},"nodeType":"YulFunctionCall","src":"30670:88:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30663:3:9"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"30807:159:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30860:3:9"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"30869:9:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30884:4:9","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30880:3:9"},"nodeType":"YulFunctionCall","src":"30880:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30865:3:9"},"nodeType":"YulFunctionCall","src":"30865:25:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30853:6:9"},"nodeType":"YulFunctionCall","src":"30853:38:9"},"nodeType":"YulExpressionStatement","src":"30853:38:9"},{"nodeType":"YulAssignment","src":"30904:52:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30915:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30924:6:9"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30946:6:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30939:6:9"},"nodeType":"YulFunctionCall","src":"30939:14:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30932:6:9"},"nodeType":"YulFunctionCall","src":"30932:22:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30920:3:9"},"nodeType":"YulFunctionCall","src":"30920:35:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30911:3:9"},"nodeType":"YulFunctionCall","src":"30911:45:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30904:3:9"}]}]},"nodeType":"YulCase","src":"30800:166:9","value":{"kind":"number","nodeType":"YulLiteral","src":"30805:1:9","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"30982:337:9","statements":[{"nodeType":"YulVariableDeclaration","src":"31027:56:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31077:5:9"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"31042:34:9"},"nodeType":"YulFunctionCall","src":"31042:41:9"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"31031:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31096:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"31105:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"31100:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"31163:110:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31192:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"31197:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31188:3:9"},"nodeType":"YulFunctionCall","src":"31188:11:9"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"31207:7:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"31201:5:9"},"nodeType":"YulFunctionCall","src":"31201:14:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31181:6:9"},"nodeType":"YulFunctionCall","src":"31181:35:9"},"nodeType":"YulExpressionStatement","src":"31181:35:9"},{"nodeType":"YulAssignment","src":"31233:26:9","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"31248:7:9"},{"kind":"number","nodeType":"YulLiteral","src":"31257:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31244:3:9"},"nodeType":"YulFunctionCall","src":"31244:15:9"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"31233:7:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31130:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"31133:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31127:2:9"},"nodeType":"YulFunctionCall","src":"31127:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31141:21:9","statements":[{"nodeType":"YulAssignment","src":"31143:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31152:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"31155:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31148:3:9"},"nodeType":"YulFunctionCall","src":"31148:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"31143:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"31123:3:9","statements":[]},"src":"31119:154:9"},{"nodeType":"YulAssignment","src":"31286:23:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31297:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"31302:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31293:3:9"},"nodeType":"YulFunctionCall","src":"31293:16:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"31286:3:9"}]}]},"nodeType":"YulCase","src":"30975:344:9","value":{"kind":"number","nodeType":"YulLiteral","src":"30980:1:9","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"30778:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"30789:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30774:3:9"},"nodeType":"YulFunctionCall","src":"30774:17:9"},"nodeType":"YulSwitch","src":"30767:552:9"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30537:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30544:3:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"30552:3:9","type":""}],"src":"30447:878:9"},{"body":{"nodeType":"YulBlock","src":"31466:138:9","statements":[{"nodeType":"YulAssignment","src":"31477:101:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31565:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"31574:3:9"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31484:80:9"},"nodeType":"YulFunctionCall","src":"31484:94:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31477:3:9"}]},{"nodeType":"YulAssignment","src":"31588:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"31595:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31588:3:9"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31445:3:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31451:6:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31462:3:9","type":""}],"src":"31331:273:9"},{"body":{"nodeType":"YulBlock","src":"31664:87:9","statements":[{"nodeType":"YulAssignment","src":"31674:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"31682:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31674:4:9"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31702:1:9","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"31705:3:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31695:6:9"},"nodeType":"YulFunctionCall","src":"31695:14:9"},"nodeType":"YulExpressionStatement","src":"31695:14:9"},{"nodeType":"YulAssignment","src":"31718:26:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31736:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31739:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"31726:9:9"},"nodeType":"YulFunctionCall","src":"31726:18:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31718:4:9"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"31651:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"31659:4:9","type":""}],"src":"31610:141:9"},{"body":{"nodeType":"YulBlock","src":"31801:49:9","statements":[{"nodeType":"YulAssignment","src":"31811:33:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31829:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"31836:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31825:3:9"},"nodeType":"YulFunctionCall","src":"31825:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"31841:2:9","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"31821:3:9"},"nodeType":"YulFunctionCall","src":"31821:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"31811:6:9"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31784:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"31794:6:9","type":""}],"src":"31757:93:9"},{"body":{"nodeType":"YulBlock","src":"31909:54:9","statements":[{"nodeType":"YulAssignment","src":"31919:37:9","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"31944:4:9"},{"name":"value","nodeType":"YulIdentifier","src":"31950:5:9"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"31940:3:9"},"nodeType":"YulFunctionCall","src":"31940:16:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"31919:8:9"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"31884:4:9","type":""},{"name":"value","nodeType":"YulTypedName","src":"31890:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"31900:8:9","type":""}],"src":"31856:107:9"},{"body":{"nodeType":"YulBlock","src":"32045:317:9","statements":[{"nodeType":"YulVariableDeclaration","src":"32055:35:9","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"32076:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"32088:1:9","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32072:3:9"},"nodeType":"YulFunctionCall","src":"32072:18:9"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"32059:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32099:109:9","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"32130:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"32141:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"32111:18:9"},"nodeType":"YulFunctionCall","src":"32111:97:9"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"32103:4:9","type":""}]},{"nodeType":"YulAssignment","src":"32217:51:9","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"32248:9:9"},{"name":"toInsert","nodeType":"YulIdentifier","src":"32259:8:9"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"32229:18:9"},"nodeType":"YulFunctionCall","src":"32229:39:9"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32217:8:9"}]},{"nodeType":"YulAssignment","src":"32277:30:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32290:5:9"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"32301:4:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32297:3:9"},"nodeType":"YulFunctionCall","src":"32297:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32286:3:9"},"nodeType":"YulFunctionCall","src":"32286:21:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32277:5:9"}]},{"nodeType":"YulAssignment","src":"32316:40:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32329:5:9"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32340:8:9"},{"name":"mask","nodeType":"YulIdentifier","src":"32350:4:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32336:3:9"},"nodeType":"YulFunctionCall","src":"32336:19:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"32326:2:9"},"nodeType":"YulFunctionCall","src":"32326:30:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"32316:6:9"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32006:5:9","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"32013:10:9","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"32025:8:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"32038:6:9","type":""}],"src":"31969:393:9"},{"body":{"nodeType":"YulBlock","src":"32400:28:9","statements":[{"nodeType":"YulAssignment","src":"32410:12:9","value":{"name":"value","nodeType":"YulIdentifier","src":"32417:5:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32410:3:9"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32386:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32396:3:9","type":""}],"src":"32368:60:9"},{"body":{"nodeType":"YulBlock","src":"32494:82:9","statements":[{"nodeType":"YulAssignment","src":"32504:66:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32562:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32544:17:9"},"nodeType":"YulFunctionCall","src":"32544:24:9"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"32535:8:9"},"nodeType":"YulFunctionCall","src":"32535:34:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32517:17:9"},"nodeType":"YulFunctionCall","src":"32517:53:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"32504:9:9"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32474:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"32484:9:9","type":""}],"src":"32434:142:9"},{"body":{"nodeType":"YulBlock","src":"32629:28:9","statements":[{"nodeType":"YulAssignment","src":"32639:12:9","value":{"name":"value","nodeType":"YulIdentifier","src":"32646:5:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32639:3:9"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32615:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32625:3:9","type":""}],"src":"32582:75:9"},{"body":{"nodeType":"YulBlock","src":"32739:193:9","statements":[{"nodeType":"YulVariableDeclaration","src":"32749:63:9","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"32804:7:9"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"32773:30:9"},"nodeType":"YulFunctionCall","src":"32773:39:9"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"32753:16:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32828:4:9"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32868:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"32862:5:9"},"nodeType":"YulFunctionCall","src":"32862:11:9"},{"name":"offset","nodeType":"YulIdentifier","src":"32875:6:9"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"32907:16:9"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"32883:23:9"},"nodeType":"YulFunctionCall","src":"32883:41:9"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"32834:27:9"},"nodeType":"YulFunctionCall","src":"32834:91:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32821:6:9"},"nodeType":"YulFunctionCall","src":"32821:105:9"},"nodeType":"YulExpressionStatement","src":"32821:105:9"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"32716:4:9","type":""},{"name":"offset","nodeType":"YulTypedName","src":"32722:6:9","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"32730:7:9","type":""}],"src":"32663:269:9"},{"body":{"nodeType":"YulBlock","src":"32987:24:9","statements":[{"nodeType":"YulAssignment","src":"32997:8:9","value":{"kind":"number","nodeType":"YulLiteral","src":"33004:1:9","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32997:3:9"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32983:3:9","type":""}],"src":"32938:73:9"},{"body":{"nodeType":"YulBlock","src":"33070:136:9","statements":[{"nodeType":"YulVariableDeclaration","src":"33080:46:9","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"33094:30:9"},"nodeType":"YulFunctionCall","src":"33094:32:9"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"33084:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33179:4:9"},{"name":"offset","nodeType":"YulIdentifier","src":"33185:6:9"},{"name":"zero_0","nodeType":"YulIdentifier","src":"33193:6:9"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"33135:43:9"},"nodeType":"YulFunctionCall","src":"33135:65:9"},"nodeType":"YulExpressionStatement","src":"33135:65:9"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"33056:4:9","type":""},{"name":"offset","nodeType":"YulTypedName","src":"33062:6:9","type":""}],"src":"33017:189:9"},{"body":{"nodeType":"YulBlock","src":"33262:136:9","statements":[{"body":{"nodeType":"YulBlock","src":"33329:63:9","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33373:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"33380:1:9","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"33343:29:9"},"nodeType":"YulFunctionCall","src":"33343:39:9"},"nodeType":"YulExpressionStatement","src":"33343:39:9"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33282:5:9"},{"name":"end","nodeType":"YulIdentifier","src":"33289:3:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33279:2:9"},"nodeType":"YulFunctionCall","src":"33279:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33294:26:9","statements":[{"nodeType":"YulAssignment","src":"33296:22:9","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33309:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"33316:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33305:3:9"},"nodeType":"YulFunctionCall","src":"33305:13:9"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"33296:5:9"}]}]},"pre":{"nodeType":"YulBlock","src":"33276:2:9","statements":[]},"src":"33272:120:9"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"33250:5:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"33257:3:9","type":""}],"src":"33212:186:9"},{"body":{"nodeType":"YulBlock","src":"33483:464:9","statements":[{"body":{"nodeType":"YulBlock","src":"33509:431:9","statements":[{"nodeType":"YulVariableDeclaration","src":"33523:54:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"33571:5:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"33539:31:9"},"nodeType":"YulFunctionCall","src":"33539:38:9"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"33527:8:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33590:63:9","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"33613:8:9"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"33641:10:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"33623:17:9"},"nodeType":"YulFunctionCall","src":"33623:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33609:3:9"},"nodeType":"YulFunctionCall","src":"33609:44:9"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"33594:11:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"33810:27:9","statements":[{"nodeType":"YulAssignment","src":"33812:23:9","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"33827:8:9"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"33812:11:9"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"33794:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"33806:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33791:2:9"},"nodeType":"YulFunctionCall","src":"33791:18:9"},"nodeType":"YulIf","src":"33788:49:9"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"33879:11:9"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"33896:8:9"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"33924:3:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"33906:17:9"},"nodeType":"YulFunctionCall","src":"33906:22:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33892:3:9"},"nodeType":"YulFunctionCall","src":"33892:37:9"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"33850:28:9"},"nodeType":"YulFunctionCall","src":"33850:80:9"},"nodeType":"YulExpressionStatement","src":"33850:80:9"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"33500:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"33505:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33497:2:9"},"nodeType":"YulFunctionCall","src":"33497:11:9"},"nodeType":"YulIf","src":"33494:446:9"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"33459:5:9","type":""},{"name":"len","nodeType":"YulTypedName","src":"33466:3:9","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"33471:10:9","type":""}],"src":"33404:543:9"},{"body":{"nodeType":"YulBlock","src":"34016:54:9","statements":[{"nodeType":"YulAssignment","src":"34026:37:9","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"34051:4:9"},{"name":"value","nodeType":"YulIdentifier","src":"34057:5:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"34047:3:9"},"nodeType":"YulFunctionCall","src":"34047:16:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"34026:8:9"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"33991:4:9","type":""},{"name":"value","nodeType":"YulTypedName","src":"33997:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"34007:8:9","type":""}],"src":"33953:117:9"},{"body":{"nodeType":"YulBlock","src":"34127:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"34137:68:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34186:1:9","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"34189:5:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34182:3:9"},"nodeType":"YulFunctionCall","src":"34182:13:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34201:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34197:3:9"},"nodeType":"YulFunctionCall","src":"34197:6:9"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"34153:28:9"},"nodeType":"YulFunctionCall","src":"34153:51:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34149:3:9"},"nodeType":"YulFunctionCall","src":"34149:56:9"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"34141:4:9","type":""}]},{"nodeType":"YulAssignment","src":"34214:25:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34228:4:9"},{"name":"mask","nodeType":"YulIdentifier","src":"34234:4:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34224:3:9"},"nodeType":"YulFunctionCall","src":"34224:15:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"34214:6:9"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"34104:4:9","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"34110:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"34120:6:9","type":""}],"src":"34076:169:9"},{"body":{"nodeType":"YulBlock","src":"34331:214:9","statements":[{"nodeType":"YulAssignment","src":"34464:37:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34491:4:9"},{"name":"len","nodeType":"YulIdentifier","src":"34497:3:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"34472:18:9"},"nodeType":"YulFunctionCall","src":"34472:29:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"34464:4:9"}]},{"nodeType":"YulAssignment","src":"34510:29:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34521:4:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34531:1:9","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"34534:3:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34527:3:9"},"nodeType":"YulFunctionCall","src":"34527:11:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"34518:2:9"},"nodeType":"YulFunctionCall","src":"34518:21:9"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"34510:4:9"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"34312:4:9","type":""},{"name":"len","nodeType":"YulTypedName","src":"34318:3:9","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"34326:4:9","type":""}],"src":"34250:295:9"},{"body":{"nodeType":"YulBlock","src":"34642:1303:9","statements":[{"nodeType":"YulVariableDeclaration","src":"34653:51:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"34700:3:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"34667:32:9"},"nodeType":"YulFunctionCall","src":"34667:37:9"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"34657:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"34789:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"34791:16:9"},"nodeType":"YulFunctionCall","src":"34791:18:9"},"nodeType":"YulExpressionStatement","src":"34791:18:9"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"34761:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"34769:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34758:2:9"},"nodeType":"YulFunctionCall","src":"34758:30:9"},"nodeType":"YulIf","src":"34755:56:9"},{"nodeType":"YulVariableDeclaration","src":"34821:52:9","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34867:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34861:5:9"},"nodeType":"YulFunctionCall","src":"34861:11:9"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"34835:25:9"},"nodeType":"YulFunctionCall","src":"34835:38:9"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"34825:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34966:4:9"},{"name":"oldLen","nodeType":"YulIdentifier","src":"34972:6:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"34980:6:9"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"34920:45:9"},"nodeType":"YulFunctionCall","src":"34920:67:9"},"nodeType":"YulExpressionStatement","src":"34920:67:9"},{"nodeType":"YulVariableDeclaration","src":"34997:18:9","value":{"kind":"number","nodeType":"YulLiteral","src":"35014:1:9","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"35001:9:9","type":""}]},{"nodeType":"YulAssignment","src":"35025:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"35038:4:9","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35025:9:9"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"35089:611:9","statements":[{"nodeType":"YulVariableDeclaration","src":"35103:37:9","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35122:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35134:4:9","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35130:3:9"},"nodeType":"YulFunctionCall","src":"35130:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35118:3:9"},"nodeType":"YulFunctionCall","src":"35118:22:9"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"35107:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35154:51:9","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35200:4:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"35168:31:9"},"nodeType":"YulFunctionCall","src":"35168:37:9"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"35158:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35218:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"35227:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"35222:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"35286:163:9","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35311:6:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35329:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35334:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35325:3:9"},"nodeType":"YulFunctionCall","src":"35325:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35319:5:9"},"nodeType":"YulFunctionCall","src":"35319:26:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35304:6:9"},"nodeType":"YulFunctionCall","src":"35304:42:9"},"nodeType":"YulExpressionStatement","src":"35304:42:9"},{"nodeType":"YulAssignment","src":"35363:24:9","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35377:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"35385:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35373:3:9"},"nodeType":"YulFunctionCall","src":"35373:14:9"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35363:6:9"}]},{"nodeType":"YulAssignment","src":"35404:31:9","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35421:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"35432:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35417:3:9"},"nodeType":"YulFunctionCall","src":"35417:18:9"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35404:9:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35252:1:9"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"35255:7:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35249:2:9"},"nodeType":"YulFunctionCall","src":"35249:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"35264:21:9","statements":[{"nodeType":"YulAssignment","src":"35266:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35275:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"35278:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35271:3:9"},"nodeType":"YulFunctionCall","src":"35271:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"35266:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"35245:3:9","statements":[]},"src":"35241:208:9"},{"body":{"nodeType":"YulBlock","src":"35485:156:9","statements":[{"nodeType":"YulVariableDeclaration","src":"35503:43:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35530:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35535:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35526:3:9"},"nodeType":"YulFunctionCall","src":"35526:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35520:5:9"},"nodeType":"YulFunctionCall","src":"35520:26:9"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"35507:9:9","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35570:6:9"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"35597:9:9"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35612:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"35620:4:9","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35608:3:9"},"nodeType":"YulFunctionCall","src":"35608:17:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"35578:18:9"},"nodeType":"YulFunctionCall","src":"35578:48:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35563:6:9"},"nodeType":"YulFunctionCall","src":"35563:64:9"},"nodeType":"YulExpressionStatement","src":"35563:64:9"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"35468:7:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"35477:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35465:2:9"},"nodeType":"YulFunctionCall","src":"35465:19:9"},"nodeType":"YulIf","src":"35462:179:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35661:4:9"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35675:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"35683:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35671:3:9"},"nodeType":"YulFunctionCall","src":"35671:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"35687:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35667:3:9"},"nodeType":"YulFunctionCall","src":"35667:22:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35654:6:9"},"nodeType":"YulFunctionCall","src":"35654:36:9"},"nodeType":"YulExpressionStatement","src":"35654:36:9"}]},"nodeType":"YulCase","src":"35082:618:9","value":{"kind":"number","nodeType":"YulLiteral","src":"35087:1:9","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"35717:222:9","statements":[{"nodeType":"YulVariableDeclaration","src":"35731:14:9","value":{"kind":"number","nodeType":"YulLiteral","src":"35744:1:9","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"35735:5:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"35768:67:9","statements":[{"nodeType":"YulAssignment","src":"35786:35:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35805:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35810:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35801:3:9"},"nodeType":"YulFunctionCall","src":"35801:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35795:5:9"},"nodeType":"YulFunctionCall","src":"35795:26:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35786:5:9"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"35761:6:9"},"nodeType":"YulIf","src":"35758:77:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35855:4:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35914:5:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"35921:6:9"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"35861:52:9"},"nodeType":"YulFunctionCall","src":"35861:67:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35848:6:9"},"nodeType":"YulFunctionCall","src":"35848:81:9"},"nodeType":"YulExpressionStatement","src":"35848:81:9"}]},"nodeType":"YulCase","src":"35709:230:9","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35062:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"35070:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35059:2:9"},"nodeType":"YulFunctionCall","src":"35059:14:9"},"nodeType":"YulSwitch","src":"35052:887:9"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"34631:4:9","type":""},{"name":"src","nodeType":"YulTypedName","src":"34637:3:9","type":""}],"src":"34550:1395:9"},{"body":{"nodeType":"YulBlock","src":"35996:81:9","statements":[{"nodeType":"YulAssignment","src":"36006:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36021:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"36028:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36017:3:9"},"nodeType":"YulFunctionCall","src":"36017:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"36006:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35978:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35988:7:9","type":""}],"src":"35951:126:9"},{"body":{"nodeType":"YulBlock","src":"36128:51:9","statements":[{"nodeType":"YulAssignment","src":"36138:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36167:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"36149:17:9"},"nodeType":"YulFunctionCall","src":"36149:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"36138:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36110:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"36120:7:9","type":""}],"src":"36083:96:9"},{"body":{"nodeType":"YulBlock","src":"36250:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36267:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36290:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"36272:17:9"},"nodeType":"YulFunctionCall","src":"36272:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36260:6:9"},"nodeType":"YulFunctionCall","src":"36260:37:9"},"nodeType":"YulExpressionStatement","src":"36260:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36238:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36245:3:9","type":""}],"src":"36185:118:9"},{"body":{"nodeType":"YulBlock","src":"36422:742:9","statements":[{"nodeType":"YulVariableDeclaration","src":"36432:29:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36455:5:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"36449:5:9"},"nodeType":"YulFunctionCall","src":"36449:12:9"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"36436:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36470:50:9","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"36510:9:9"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"36484:25:9"},"nodeType":"YulFunctionCall","src":"36484:36:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"36474:6:9","type":""}]},{"nodeType":"YulAssignment","src":"36529:78:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36595:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"36600:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36536:58:9"},"nodeType":"YulFunctionCall","src":"36536:71:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36529:3:9"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"36656:157:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36709:3:9"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"36718:9:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36733:4:9","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"36729:3:9"},"nodeType":"YulFunctionCall","src":"36729:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36714:3:9"},"nodeType":"YulFunctionCall","src":"36714:25:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36702:6:9"},"nodeType":"YulFunctionCall","src":"36702:38:9"},"nodeType":"YulExpressionStatement","src":"36702:38:9"},{"nodeType":"YulAssignment","src":"36753:50:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36764:3:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36773:4:9","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"36793:6:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36786:6:9"},"nodeType":"YulFunctionCall","src":"36786:14:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36779:6:9"},"nodeType":"YulFunctionCall","src":"36779:22:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36769:3:9"},"nodeType":"YulFunctionCall","src":"36769:33:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36760:3:9"},"nodeType":"YulFunctionCall","src":"36760:43:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"36753:3:9"}]}]},"nodeType":"YulCase","src":"36649:164:9","value":{"kind":"number","nodeType":"YulLiteral","src":"36654:1:9","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"36829:329:9","statements":[{"nodeType":"YulVariableDeclaration","src":"36874:53:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36921:5:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"36889:31:9"},"nodeType":"YulFunctionCall","src":"36889:38:9"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"36878:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36940:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"36949:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"36944:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"37007:110:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37036:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"37041:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37032:3:9"},"nodeType":"YulFunctionCall","src":"37032:11:9"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"37051:7:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"37045:5:9"},"nodeType":"YulFunctionCall","src":"37045:14:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37025:6:9"},"nodeType":"YulFunctionCall","src":"37025:35:9"},"nodeType":"YulExpressionStatement","src":"37025:35:9"},{"nodeType":"YulAssignment","src":"37077:26:9","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"37092:7:9"},{"kind":"number","nodeType":"YulLiteral","src":"37101:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37088:3:9"},"nodeType":"YulFunctionCall","src":"37088:15:9"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"37077:7:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36974:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"36977:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36971:2:9"},"nodeType":"YulFunctionCall","src":"36971:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"36985:21:9","statements":[{"nodeType":"YulAssignment","src":"36987:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36996:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"36999:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36992:3:9"},"nodeType":"YulFunctionCall","src":"36992:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"36987:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"36967:3:9","statements":[]},"src":"36963:154:9"},{"nodeType":"YulAssignment","src":"37130:18:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37141:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"37146:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37137:3:9"},"nodeType":"YulFunctionCall","src":"37137:11:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"37130:3:9"}]}]},"nodeType":"YulCase","src":"36822:336:9","value":{"kind":"number","nodeType":"YulLiteral","src":"36827:1:9","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"36627:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"36638:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36623:3:9"},"nodeType":"YulFunctionCall","src":"36623:17:9"},"nodeType":"YulSwitch","src":"36616:542:9"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36403:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36410:3:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"36418:3:9","type":""}],"src":"36333:831:9"},{"body":{"nodeType":"YulBlock","src":"37313:274:9","statements":[{"nodeType":"YulAssignment","src":"37323:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37335:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"37346:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37331:3:9"},"nodeType":"YulFunctionCall","src":"37331:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37323:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37403:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37416:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"37427:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37412:3:9"},"nodeType":"YulFunctionCall","src":"37412:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"37359:43:9"},"nodeType":"YulFunctionCall","src":"37359:71:9"},"nodeType":"YulExpressionStatement","src":"37359:71:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37451:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"37462:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37447:3:9"},"nodeType":"YulFunctionCall","src":"37447:18:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37471:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"37477:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37467:3:9"},"nodeType":"YulFunctionCall","src":"37467:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37440:6:9"},"nodeType":"YulFunctionCall","src":"37440:48:9"},"nodeType":"YulExpressionStatement","src":"37440:48:9"},{"nodeType":"YulAssignment","src":"37497:83:9","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37566:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"37575:4:9"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37505:60:9"},"nodeType":"YulFunctionCall","src":"37505:75:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37497:4:9"}]}]},"name":"abi_encode_tuple_t_address_t_string_storage__to_t_address_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37277:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37289:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37297:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37308:4:9","type":""}],"src":"37170:417:9"},{"body":{"nodeType":"YulBlock","src":"37717:229:9","statements":[{"body":{"nodeType":"YulBlock","src":"37822:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"37824:16:9"},"nodeType":"YulFunctionCall","src":"37824:18:9"},"nodeType":"YulExpressionStatement","src":"37824:18:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37794:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"37802:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37791:2:9"},"nodeType":"YulFunctionCall","src":"37791:30:9"},"nodeType":"YulIf","src":"37788:56:9"},{"nodeType":"YulAssignment","src":"37854:25:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37866:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"37874:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37862:3:9"},"nodeType":"YulFunctionCall","src":"37862:17:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"37854:4:9"}]},{"nodeType":"YulAssignment","src":"37916:23:9","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"37928:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"37934:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37924:3:9"},"nodeType":"YulFunctionCall","src":"37924:15:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"37916:4:9"}]}]},"name":"array_allocation_size_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"37701:6:9","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"37712:4:9","type":""}],"src":"37593:353:9"},{"body":{"nodeType":"YulBlock","src":"38041:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38058:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38061:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38051:6:9"},"nodeType":"YulFunctionCall","src":"38051:12:9"},"nodeType":"YulExpressionStatement","src":"38051:12:9"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"37952:117:9"},{"body":{"nodeType":"YulBlock","src":"38164:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38181:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38184:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38174:6:9"},"nodeType":"YulFunctionCall","src":"38174:12:9"},"nodeType":"YulExpressionStatement","src":"38174:12:9"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"38075:117:9"},{"body":{"nodeType":"YulBlock","src":"38239:77:9","statements":[{"body":{"nodeType":"YulBlock","src":"38294:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38303:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38306:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38296:6:9"},"nodeType":"YulFunctionCall","src":"38296:12:9"},"nodeType":"YulExpressionStatement","src":"38296:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38262:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38285:5:9"}],"functionName":{"name":"cleanup_t_int64","nodeType":"YulIdentifier","src":"38269:15:9"},"nodeType":"YulFunctionCall","src":"38269:22:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"38259:2:9"},"nodeType":"YulFunctionCall","src":"38259:33:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"38252:6:9"},"nodeType":"YulFunctionCall","src":"38252:41:9"},"nodeType":"YulIf","src":"38249:61:9"}]},"name":"validator_revert_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38232:5:9","type":""}],"src":"38198:118:9"},{"body":{"nodeType":"YulBlock","src":"38383:78:9","statements":[{"nodeType":"YulAssignment","src":"38393:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"38408:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38402:5:9"},"nodeType":"YulFunctionCall","src":"38402:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"38393:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38449:5:9"}],"functionName":{"name":"validator_revert_t_int64","nodeType":"YulIdentifier","src":"38424:24:9"},"nodeType":"YulFunctionCall","src":"38424:31:9"},"nodeType":"YulExpressionStatement","src":"38424:31:9"}]},"name":"abi_decode_t_int64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"38361:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"38369:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"38377:5:9","type":""}],"src":"38322:139:9"},{"body":{"nodeType":"YulBlock","src":"38530:80:9","statements":[{"nodeType":"YulAssignment","src":"38540:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"38555:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38549:5:9"},"nodeType":"YulFunctionCall","src":"38549:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"38540:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38598:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"38571:26:9"},"nodeType":"YulFunctionCall","src":"38571:33:9"},"nodeType":"YulExpressionStatement","src":"38571:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"38508:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"38516:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"38524:5:9","type":""}],"src":"38467:143:9"},{"body":{"nodeType":"YulBlock","src":"38763:889:9","statements":[{"body":{"nodeType":"YulBlock","src":"38807:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"38809:77:9"},"nodeType":"YulFunctionCall","src":"38809:79:9"},"nodeType":"YulExpressionStatement","src":"38809:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"38784:3:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"38789:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38780:3:9"},"nodeType":"YulFunctionCall","src":"38780:19:9"},{"kind":"number","nodeType":"YulLiteral","src":"38801:4:9","type":"","value":"0x80"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"38776:3:9"},"nodeType":"YulFunctionCall","src":"38776:30:9"},"nodeType":"YulIf","src":"38773:117:9"},{"nodeType":"YulAssignment","src":"38899:30:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38924:4:9","type":"","value":"0x80"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"38908:15:9"},"nodeType":"YulFunctionCall","src":"38908:21:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"38899:5:9"}]},{"nodeType":"YulBlock","src":"38939:169:9","statements":[{"nodeType":"YulVariableDeclaration","src":"38984:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"38998:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"38988:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39024:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"39031:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39020:3:9"},"nodeType":"YulFunctionCall","src":"39020:16:9"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39072:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"39083:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39068:3:9"},"nodeType":"YulFunctionCall","src":"39068:22:9"},{"name":"end","nodeType":"YulIdentifier","src":"39092:3:9"}],"functionName":{"name":"abi_decode_t_int64_fromMemory","nodeType":"YulIdentifier","src":"39038:29:9"},"nodeType":"YulFunctionCall","src":"39038:58:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39013:6:9"},"nodeType":"YulFunctionCall","src":"39013:84:9"},"nodeType":"YulExpressionStatement","src":"39013:84:9"}]},{"nodeType":"YulBlock","src":"39118:170:9","statements":[{"nodeType":"YulVariableDeclaration","src":"39163:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"39177:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"39167:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39204:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"39211:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39200:3:9"},"nodeType":"YulFunctionCall","src":"39200:16:9"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39252:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"39263:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39248:3:9"},"nodeType":"YulFunctionCall","src":"39248:22:9"},{"name":"end","nodeType":"YulIdentifier","src":"39272:3:9"}],"functionName":{"name":"abi_decode_t_int64_fromMemory","nodeType":"YulIdentifier","src":"39218:29:9"},"nodeType":"YulFunctionCall","src":"39218:58:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39193:6:9"},"nodeType":"YulFunctionCall","src":"39193:84:9"},"nodeType":"YulExpressionStatement","src":"39193:84:9"}]},{"nodeType":"YulBlock","src":"39298:172:9","statements":[{"nodeType":"YulVariableDeclaration","src":"39343:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"39357:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"39347:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39384:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"39391:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39380:3:9"},"nodeType":"YulFunctionCall","src":"39380:16:9"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39434:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"39445:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39430:3:9"},"nodeType":"YulFunctionCall","src":"39430:22:9"},{"name":"end","nodeType":"YulIdentifier","src":"39454:3:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"39398:31:9"},"nodeType":"YulFunctionCall","src":"39398:60:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39373:6:9"},"nodeType":"YulFunctionCall","src":"39373:86:9"},"nodeType":"YulExpressionStatement","src":"39373:86:9"}]},{"nodeType":"YulBlock","src":"39480:165:9","statements":[{"nodeType":"YulVariableDeclaration","src":"39518:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"39532:2:9","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"39522:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39559:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"39566:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39555:3:9"},"nodeType":"YulFunctionCall","src":"39555:16:9"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39609:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"39620:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39605:3:9"},"nodeType":"YulFunctionCall","src":"39605:22:9"},{"name":"end","nodeType":"YulIdentifier","src":"39629:3:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"39573:31:9"},"nodeType":"YulFunctionCall","src":"39573:60:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39548:6:9"},"nodeType":"YulFunctionCall","src":"39548:86:9"},"nodeType":"YulExpressionStatement","src":"39548:86:9"}]}]},"name":"abi_decode_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38738:9:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"38749:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"38757:5:9","type":""}],"src":"38655:997:9"},{"body":{"nodeType":"YulBlock","src":"39854:703:9","statements":[{"nodeType":"YulAssignment","src":"39864:132:9","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"39988:6:9"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"39889:98:9"},"nodeType":"YulFunctionCall","src":"39889:106:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"39873:15:9"},"nodeType":"YulFunctionCall","src":"39873:123:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"39864:5:9"}]},{"nodeType":"YulVariableDeclaration","src":"40005:16:9","value":{"name":"array","nodeType":"YulIdentifier","src":"40016:5:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"40009:3:9","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"40038:5:9"},{"name":"length","nodeType":"YulIdentifier","src":"40045:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40031:6:9"},"nodeType":"YulFunctionCall","src":"40031:21:9"},"nodeType":"YulExpressionStatement","src":"40031:21:9"},{"nodeType":"YulAssignment","src":"40061:23:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"40072:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"40079:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40068:3:9"},"nodeType":"YulFunctionCall","src":"40068:16:9"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"40061:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"40094:44:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40112:6:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"40124:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"40132:4:9","type":"","value":"0x80"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"40120:3:9"},"nodeType":"YulFunctionCall","src":"40120:17:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40108:3:9"},"nodeType":"YulFunctionCall","src":"40108:30:9"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"40098:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"40166:103:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"40180:77:9"},"nodeType":"YulFunctionCall","src":"40180:79:9"},"nodeType":"YulExpressionStatement","src":"40180:79:9"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"40153:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"40161:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40150:2:9"},"nodeType":"YulFunctionCall","src":"40150:15:9"},"nodeType":"YulIf","src":"40147:122:9"},{"body":{"nodeType":"YulBlock","src":"40354:197:9","statements":[{"nodeType":"YulVariableDeclaration","src":"40369:21:9","value":{"name":"src","nodeType":"YulIdentifier","src":"40387:3:9"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"40373:10:9","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"40411:3:9"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"40490:10:9"},{"name":"end","nodeType":"YulIdentifier","src":"40502:3:9"}],"functionName":{"name":"abi_decode_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"40416:73:9"},"nodeType":"YulFunctionCall","src":"40416:90:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40404:6:9"},"nodeType":"YulFunctionCall","src":"40404:103:9"},"nodeType":"YulExpressionStatement","src":"40404:103:9"},{"nodeType":"YulAssignment","src":"40520:21:9","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"40531:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"40536:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40527:3:9"},"nodeType":"YulFunctionCall","src":"40527:14:9"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"40520:3:9"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"40307:3:9"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"40312:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"40304:2:9"},"nodeType":"YulFunctionCall","src":"40304:15:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"40320:25:9","statements":[{"nodeType":"YulAssignment","src":"40322:21:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"40333:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"40338:4:9","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40329:3:9"},"nodeType":"YulFunctionCall","src":"40329:14:9"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"40322:3:9"}]}]},"pre":{"nodeType":"YulBlock","src":"40282:21:9","statements":[{"nodeType":"YulVariableDeclaration","src":"40284:17:9","value":{"name":"offset","nodeType":"YulIdentifier","src":"40295:6:9"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"40288:3:9","type":""}]}]},"src":"40278:273:9"}]},"name":"abi_decode_available_length_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"39824:6:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"39832:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"39840:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"39848:5:9","type":""}],"src":"39699:858:9"},{"body":{"nodeType":"YulBlock","src":"40734:339:9","statements":[{"body":{"nodeType":"YulBlock","src":"40783:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"40785:77:9"},"nodeType":"YulFunctionCall","src":"40785:79:9"},"nodeType":"YulExpressionStatement","src":"40785:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40762:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"40770:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40758:3:9"},"nodeType":"YulFunctionCall","src":"40758:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"40777:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"40754:3:9"},"nodeType":"YulFunctionCall","src":"40754:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40747:6:9"},"nodeType":"YulFunctionCall","src":"40747:35:9"},"nodeType":"YulIf","src":"40744:122:9"},{"nodeType":"YulVariableDeclaration","src":"40875:27:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40895:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"40889:5:9"},"nodeType":"YulFunctionCall","src":"40889:13:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"40879:6:9","type":""}]},{"nodeType":"YulAssignment","src":"40911:156:9","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"41040:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"41048:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41036:3:9"},"nodeType":"YulFunctionCall","src":"41036:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"41055:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"41063:3:9"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"40920:115:9"},"nodeType":"YulFunctionCall","src":"40920:147:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"40911:5:9"}]}]},"name":"abi_decode_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"40712:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"40720:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"40728:5:9","type":""}],"src":"40604:469:9"},{"body":{"nodeType":"YulBlock","src":"41223:494:9","statements":[{"body":{"nodeType":"YulBlock","src":"41269:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"41271:77:9"},"nodeType":"YulFunctionCall","src":"41271:79:9"},"nodeType":"YulExpressionStatement","src":"41271:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"41244:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"41253:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41240:3:9"},"nodeType":"YulFunctionCall","src":"41240:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"41265:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"41236:3:9"},"nodeType":"YulFunctionCall","src":"41236:32:9"},"nodeType":"YulIf","src":"41233:119:9"},{"nodeType":"YulBlock","src":"41362:348:9","statements":[{"nodeType":"YulVariableDeclaration","src":"41377:38:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41401:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"41412:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41397:3:9"},"nodeType":"YulFunctionCall","src":"41397:17:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41391:5:9"},"nodeType":"YulFunctionCall","src":"41391:24:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"41381:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"41462:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"41464:77:9"},"nodeType":"YulFunctionCall","src":"41464:79:9"},"nodeType":"YulExpressionStatement","src":"41464:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"41434:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"41442:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41431:2:9"},"nodeType":"YulFunctionCall","src":"41431:30:9"},"nodeType":"YulIf","src":"41428:117:9"},{"nodeType":"YulAssignment","src":"41559:141:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41672:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"41683:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41668:3:9"},"nodeType":"YulFunctionCall","src":"41668:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"41692:7:9"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"41569:98:9"},"nodeType":"YulFunctionCall","src":"41569:131:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"41559:6:9"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41193:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"41204:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"41216:6:9","type":""}],"src":"41079:638:9"},{"body":{"nodeType":"YulBlock","src":"41818:339:9","statements":[{"nodeType":"YulAssignment","src":"41828:75:9","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"41895:6:9"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"41853:41:9"},"nodeType":"YulFunctionCall","src":"41853:49:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"41837:15:9"},"nodeType":"YulFunctionCall","src":"41837:66:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"41828:5:9"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41919:5:9"},{"name":"length","nodeType":"YulIdentifier","src":"41926:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41912:6:9"},"nodeType":"YulFunctionCall","src":"41912:21:9"},"nodeType":"YulExpressionStatement","src":"41912:21:9"},{"nodeType":"YulVariableDeclaration","src":"41942:27:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41957:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"41964:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41953:3:9"},"nodeType":"YulFunctionCall","src":"41953:16:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"41946:3:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"42007:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"42009:77:9"},"nodeType":"YulFunctionCall","src":"42009:79:9"},"nodeType":"YulExpressionStatement","src":"42009:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"41988:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"41993:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41984:3:9"},"nodeType":"YulFunctionCall","src":"41984:16:9"},{"name":"end","nodeType":"YulIdentifier","src":"42002:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41981:2:9"},"nodeType":"YulFunctionCall","src":"41981:25:9"},"nodeType":"YulIf","src":"41978:112:9"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"42134:3:9"},{"name":"dst","nodeType":"YulIdentifier","src":"42139:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"42144:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"42099:34:9"},"nodeType":"YulFunctionCall","src":"42099:52:9"},"nodeType":"YulExpressionStatement","src":"42099:52:9"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"41791:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"41796:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"41804:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"41812:5:9","type":""}],"src":"41723:434:9"},{"body":{"nodeType":"YulBlock","src":"42250:282:9","statements":[{"body":{"nodeType":"YulBlock","src":"42299:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"42301:77:9"},"nodeType":"YulFunctionCall","src":"42301:79:9"},"nodeType":"YulExpressionStatement","src":"42301:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"42278:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"42286:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42274:3:9"},"nodeType":"YulFunctionCall","src":"42274:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"42293:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"42270:3:9"},"nodeType":"YulFunctionCall","src":"42270:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"42263:6:9"},"nodeType":"YulFunctionCall","src":"42263:35:9"},"nodeType":"YulIf","src":"42260:122:9"},{"nodeType":"YulVariableDeclaration","src":"42391:27:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"42411:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42405:5:9"},"nodeType":"YulFunctionCall","src":"42405:13:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"42395:6:9","type":""}]},{"nodeType":"YulAssignment","src":"42427:99:9","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"42499:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"42507:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42495:3:9"},"nodeType":"YulFunctionCall","src":"42495:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"42514:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"42522:3:9"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"42436:58:9"},"nodeType":"YulFunctionCall","src":"42436:90:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"42427:5:9"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42228:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"42236:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"42244:5:9","type":""}],"src":"42177:355:9"},{"body":{"nodeType":"YulBlock","src":"42645:682:9","statements":[{"body":{"nodeType":"YulBlock","src":"42689:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"42691:77:9"},"nodeType":"YulFunctionCall","src":"42691:79:9"},"nodeType":"YulExpressionStatement","src":"42691:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"42666:3:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"42671:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42662:3:9"},"nodeType":"YulFunctionCall","src":"42662:19:9"},{"kind":"number","nodeType":"YulLiteral","src":"42683:4:9","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"42658:3:9"},"nodeType":"YulFunctionCall","src":"42658:30:9"},"nodeType":"YulIf","src":"42655:117:9"},{"nodeType":"YulAssignment","src":"42781:30:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42806:4:9","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"42790:15:9"},"nodeType":"YulFunctionCall","src":"42790:21:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"42781:5:9"}]},{"nodeType":"YulBlock","src":"42821:325:9","statements":[{"nodeType":"YulVariableDeclaration","src":"42857:38:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42881:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"42892:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42877:3:9"},"nodeType":"YulFunctionCall","src":"42877:17:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42871:5:9"},"nodeType":"YulFunctionCall","src":"42871:24:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"42861:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"42942:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"42944:77:9"},"nodeType":"YulFunctionCall","src":"42944:79:9"},"nodeType":"YulExpressionStatement","src":"42944:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"42914:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"42922:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42911:2:9"},"nodeType":"YulFunctionCall","src":"42911:30:9"},"nodeType":"YulIf","src":"42908:117:9"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43050:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"43057:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43046:3:9"},"nodeType":"YulFunctionCall","src":"43046:16:9"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43110:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"43121:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43106:3:9"},"nodeType":"YulFunctionCall","src":"43106:22:9"},{"name":"end","nodeType":"YulIdentifier","src":"43130:3:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"43064:41:9"},"nodeType":"YulFunctionCall","src":"43064:70:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43039:6:9"},"nodeType":"YulFunctionCall","src":"43039:96:9"},"nodeType":"YulExpressionStatement","src":"43039:96:9"}]},{"nodeType":"YulBlock","src":"43156:164:9","statements":[{"nodeType":"YulVariableDeclaration","src":"43193:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"43207:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"43197:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43234:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"43241:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43230:3:9"},"nodeType":"YulFunctionCall","src":"43230:16:9"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43284:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"43295:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43280:3:9"},"nodeType":"YulFunctionCall","src":"43280:22:9"},{"name":"end","nodeType":"YulIdentifier","src":"43304:3:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"43248:31:9"},"nodeType":"YulFunctionCall","src":"43248:60:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43223:6:9"},"nodeType":"YulFunctionCall","src":"43223:86:9"},"nodeType":"YulExpressionStatement","src":"43223:86:9"}]}]},"name":"abi_decode_t_struct$_Coin_$2765_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42620:9:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"42631:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"42639:5:9","type":""}],"src":"42557:770:9"},{"body":{"nodeType":"YulBlock","src":"43449:588:9","statements":[{"body":{"nodeType":"YulBlock","src":"43495:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"43497:77:9"},"nodeType":"YulFunctionCall","src":"43497:79:9"},"nodeType":"YulExpressionStatement","src":"43497:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"43470:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"43479:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43466:3:9"},"nodeType":"YulFunctionCall","src":"43466:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"43491:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"43462:3:9"},"nodeType":"YulFunctionCall","src":"43462:32:9"},"nodeType":"YulIf","src":"43459:119:9"},{"nodeType":"YulBlock","src":"43588:128:9","statements":[{"nodeType":"YulVariableDeclaration","src":"43603:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"43617:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"43607:6:9","type":""}]},{"nodeType":"YulAssignment","src":"43632:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43678:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"43689:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43674:3:9"},"nodeType":"YulFunctionCall","src":"43674:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"43698:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"43642:31:9"},"nodeType":"YulFunctionCall","src":"43642:64:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"43632:6:9"}]}]},{"nodeType":"YulBlock","src":"43726:304:9","statements":[{"nodeType":"YulVariableDeclaration","src":"43741:39:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43765:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"43776:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43761:3:9"},"nodeType":"YulFunctionCall","src":"43761:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43755:5:9"},"nodeType":"YulFunctionCall","src":"43755:25:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"43745:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"43827:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"43829:77:9"},"nodeType":"YulFunctionCall","src":"43829:79:9"},"nodeType":"YulExpressionStatement","src":"43829:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"43799:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"43807:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"43796:2:9"},"nodeType":"YulFunctionCall","src":"43796:30:9"},"nodeType":"YulIf","src":"43793:117:9"},{"nodeType":"YulAssignment","src":"43924:96:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43992:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"44003:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43988:3:9"},"nodeType":"YulFunctionCall","src":"43988:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"44012:7:9"}],"functionName":{"name":"abi_decode_t_struct$_Coin_$2765_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"43934:53:9"},"nodeType":"YulFunctionCall","src":"43934:86:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"43924:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_struct$_Coin_$2765_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43411:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"43422:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"43434:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43442:6:9","type":""}],"src":"43333:704:9"},{"body":{"nodeType":"YulBlock","src":"44149:71:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44171:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"44179:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44167:3:9"},"nodeType":"YulFunctionCall","src":"44167:14:9"},{"hexValue":"5468652074696d6520686173206e6f742070617373656420796574","kind":"string","nodeType":"YulLiteral","src":"44183:29:9","type":"","value":"The time has not passed yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44160:6:9"},"nodeType":"YulFunctionCall","src":"44160:53:9"},"nodeType":"YulExpressionStatement","src":"44160:53:9"}]},"name":"store_literal_in_memory_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44141:6:9","type":""}],"src":"44043:177:9"},{"body":{"nodeType":"YulBlock","src":"44372:220:9","statements":[{"nodeType":"YulAssignment","src":"44382:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44448:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"44453:2:9","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44389:58:9"},"nodeType":"YulFunctionCall","src":"44389:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44382:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44554:3:9"}],"functionName":{"name":"store_literal_in_memory_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa","nodeType":"YulIdentifier","src":"44465:88:9"},"nodeType":"YulFunctionCall","src":"44465:93:9"},"nodeType":"YulExpressionStatement","src":"44465:93:9"},{"nodeType":"YulAssignment","src":"44567:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44578:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"44583:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44574:3:9"},"nodeType":"YulFunctionCall","src":"44574:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44567:3:9"}]}]},"name":"abi_encode_t_stringliteral_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44360:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44368:3:9","type":""}],"src":"44226:366:9"},{"body":{"nodeType":"YulBlock","src":"44769:248:9","statements":[{"nodeType":"YulAssignment","src":"44779:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44791:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"44802:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44787:3:9"},"nodeType":"YulFunctionCall","src":"44787:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44779:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44826:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"44837:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44822:3:9"},"nodeType":"YulFunctionCall","src":"44822:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44845:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"44851:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44841:3:9"},"nodeType":"YulFunctionCall","src":"44841:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44815:6:9"},"nodeType":"YulFunctionCall","src":"44815:47:9"},"nodeType":"YulExpressionStatement","src":"44815:47:9"},{"nodeType":"YulAssignment","src":"44871:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45005:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44879:124:9"},"nodeType":"YulFunctionCall","src":"44879:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44871:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44749:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44764:4:9","type":""}],"src":"44598:419:9"},{"body":{"nodeType":"YulBlock","src":"45127:229:9","statements":[{"body":{"nodeType":"YulBlock","src":"45232:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"45234:16:9"},"nodeType":"YulFunctionCall","src":"45234:18:9"},"nodeType":"YulExpressionStatement","src":"45234:18:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"45204:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"45212:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"45201:2:9"},"nodeType":"YulFunctionCall","src":"45201:30:9"},"nodeType":"YulIf","src":"45198:56:9"},{"nodeType":"YulAssignment","src":"45264:25:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"45276:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"45284:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"45272:3:9"},"nodeType":"YulFunctionCall","src":"45272:17:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"45264:4:9"}]},{"nodeType":"YulAssignment","src":"45326:23:9","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"45338:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"45344:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45334:3:9"},"nodeType":"YulFunctionCall","src":"45334:15:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"45326:4:9"}]}]},"name":"array_allocation_size_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"45111:6:9","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"45122:4:9","type":""}],"src":"45023:333:9"},{"body":{"nodeType":"YulBlock","src":"45518:861:9","statements":[{"nodeType":"YulAssignment","src":"45528:112:9","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"45632:6:9"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"45553:78:9"},"nodeType":"YulFunctionCall","src":"45553:86:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"45537:15:9"},"nodeType":"YulFunctionCall","src":"45537:103:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"45528:5:9"}]},{"nodeType":"YulVariableDeclaration","src":"45649:16:9","value":{"name":"array","nodeType":"YulIdentifier","src":"45660:5:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"45653:3:9","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"45682:5:9"},{"name":"length","nodeType":"YulIdentifier","src":"45689:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45675:6:9"},"nodeType":"YulFunctionCall","src":"45675:21:9"},"nodeType":"YulExpressionStatement","src":"45675:21:9"},{"nodeType":"YulAssignment","src":"45705:23:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"45716:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"45723:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45712:3:9"},"nodeType":"YulFunctionCall","src":"45712:16:9"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"45705:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"45738:44:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"45756:6:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"45768:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"45776:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"45764:3:9"},"nodeType":"YulFunctionCall","src":"45764:17:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45752:3:9"},"nodeType":"YulFunctionCall","src":"45752:30:9"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"45742:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"45810:103:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"45824:77:9"},"nodeType":"YulFunctionCall","src":"45824:79:9"},"nodeType":"YulExpressionStatement","src":"45824:79:9"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"45797:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"45805:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"45794:2:9"},"nodeType":"YulFunctionCall","src":"45794:15:9"},"nodeType":"YulIf","src":"45791:122:9"},{"body":{"nodeType":"YulBlock","src":"45998:375:9","statements":[{"nodeType":"YulVariableDeclaration","src":"46013:29:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"46038:3:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"46032:5:9"},"nodeType":"YulFunctionCall","src":"46032:10:9"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"46017:11:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"46094:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"46096:77:9"},"nodeType":"YulFunctionCall","src":"46096:79:9"},"nodeType":"YulExpressionStatement","src":"46096:79:9"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"46061:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"46074:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"46058:2:9"},"nodeType":"YulFunctionCall","src":"46058:35:9"},"nodeType":"YulIf","src":"46055:122:9"},{"nodeType":"YulVariableDeclaration","src":"46190:42:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"46212:6:9"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"46220:11:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46208:3:9"},"nodeType":"YulFunctionCall","src":"46208:24:9"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"46194:10:9","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"46253:3:9"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"46312:10:9"},{"name":"end","nodeType":"YulIdentifier","src":"46324:3:9"}],"functionName":{"name":"abi_decode_t_struct$_Coin_$2765_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"46258:53:9"},"nodeType":"YulFunctionCall","src":"46258:70:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46246:6:9"},"nodeType":"YulFunctionCall","src":"46246:83:9"},"nodeType":"YulExpressionStatement","src":"46246:83:9"},{"nodeType":"YulAssignment","src":"46342:21:9","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"46353:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"46358:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46349:3:9"},"nodeType":"YulFunctionCall","src":"46349:14:9"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"46342:3:9"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"45951:3:9"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"45956:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"45948:2:9"},"nodeType":"YulFunctionCall","src":"45948:15:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"45964:25:9","statements":[{"nodeType":"YulAssignment","src":"45966:21:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"45977:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"45982:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45973:3:9"},"nodeType":"YulFunctionCall","src":"45973:14:9"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"45966:3:9"}]}]},"pre":{"nodeType":"YulBlock","src":"45926:21:9","statements":[{"nodeType":"YulVariableDeclaration","src":"45928:17:9","value":{"name":"offset","nodeType":"YulIdentifier","src":"45939:6:9"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"45932:3:9","type":""}]}]},"src":"45922:451:9"}]},"name":"abi_decode_available_length_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"45488:6:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"45496:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"45504:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"45512:5:9","type":""}],"src":"45383:996:9"},{"body":{"nodeType":"YulBlock","src":"46516:319:9","statements":[{"body":{"nodeType":"YulBlock","src":"46565:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"46567:77:9"},"nodeType":"YulFunctionCall","src":"46567:79:9"},"nodeType":"YulExpressionStatement","src":"46567:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"46544:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"46552:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46540:3:9"},"nodeType":"YulFunctionCall","src":"46540:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"46559:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"46536:3:9"},"nodeType":"YulFunctionCall","src":"46536:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46529:6:9"},"nodeType":"YulFunctionCall","src":"46529:35:9"},"nodeType":"YulIf","src":"46526:122:9"},{"nodeType":"YulVariableDeclaration","src":"46657:27:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"46677:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"46671:5:9"},"nodeType":"YulFunctionCall","src":"46671:13:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"46661:6:9","type":""}]},{"nodeType":"YulAssignment","src":"46693:136:9","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"46802:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"46810:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46798:3:9"},"nodeType":"YulFunctionCall","src":"46798:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"46817:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"46825:3:9"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"46702:95:9"},"nodeType":"YulFunctionCall","src":"46702:127:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"46693:5:9"}]}]},"name":"abi_decode_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"46494:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"46502:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"46510:5:9","type":""}],"src":"46406:429:9"},{"body":{"nodeType":"YulBlock","src":"46965:474:9","statements":[{"body":{"nodeType":"YulBlock","src":"47011:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"47013:77:9"},"nodeType":"YulFunctionCall","src":"47013:79:9"},"nodeType":"YulExpressionStatement","src":"47013:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"46986:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"46995:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46982:3:9"},"nodeType":"YulFunctionCall","src":"46982:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"47007:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"46978:3:9"},"nodeType":"YulFunctionCall","src":"46978:32:9"},"nodeType":"YulIf","src":"46975:119:9"},{"nodeType":"YulBlock","src":"47104:328:9","statements":[{"nodeType":"YulVariableDeclaration","src":"47119:38:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47143:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"47154:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47139:3:9"},"nodeType":"YulFunctionCall","src":"47139:17:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47133:5:9"},"nodeType":"YulFunctionCall","src":"47133:24:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"47123:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"47204:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"47206:77:9"},"nodeType":"YulFunctionCall","src":"47206:79:9"},"nodeType":"YulExpressionStatement","src":"47206:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"47176:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"47184:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"47173:2:9"},"nodeType":"YulFunctionCall","src":"47173:30:9"},"nodeType":"YulIf","src":"47170:117:9"},{"nodeType":"YulAssignment","src":"47301:121:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47394:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"47405:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47390:3:9"},"nodeType":"YulFunctionCall","src":"47390:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"47414:7:9"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"47311:78:9"},"nodeType":"YulFunctionCall","src":"47311:111:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"47301:6:9"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46935:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"46946:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"46958:6:9","type":""}],"src":"46841:598:9"},{"body":{"nodeType":"YulBlock","src":"47616:356:9","statements":[{"nodeType":"YulAssignment","src":"47626:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47638:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"47649:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47634:3:9"},"nodeType":"YulFunctionCall","src":"47634:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47626:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"47706:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47719:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"47730:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47715:3:9"},"nodeType":"YulFunctionCall","src":"47715:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"47662:43:9"},"nodeType":"YulFunctionCall","src":"47662:71:9"},"nodeType":"YulExpressionStatement","src":"47662:71:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47754:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"47765:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47750:3:9"},"nodeType":"YulFunctionCall","src":"47750:18:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47774:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"47780:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47770:3:9"},"nodeType":"YulFunctionCall","src":"47770:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47743:6:9"},"nodeType":"YulFunctionCall","src":"47743:48:9"},"nodeType":"YulExpressionStatement","src":"47743:48:9"},{"nodeType":"YulAssignment","src":"47800:83:9","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"47869:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"47878:4:9"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47808:60:9"},"nodeType":"YulFunctionCall","src":"47808:75:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47800:4:9"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"47937:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47950:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"47961:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47946:3:9"},"nodeType":"YulFunctionCall","src":"47946:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"47893:43:9"},"nodeType":"YulFunctionCall","src":"47893:72:9"},"nodeType":"YulExpressionStatement","src":"47893:72:9"}]},"name":"abi_encode_tuple_t_address_t_string_storage_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47572:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"47584:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47592:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47600:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47611:4:9","type":""}],"src":"47445:527:9"},{"body":{"nodeType":"YulBlock","src":"48053:272:9","statements":[{"body":{"nodeType":"YulBlock","src":"48099:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"48101:77:9"},"nodeType":"YulFunctionCall","src":"48101:79:9"},"nodeType":"YulExpressionStatement","src":"48101:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"48074:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"48083:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48070:3:9"},"nodeType":"YulFunctionCall","src":"48070:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"48095:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"48066:3:9"},"nodeType":"YulFunctionCall","src":"48066:32:9"},"nodeType":"YulIf","src":"48063:119:9"},{"nodeType":"YulBlock","src":"48192:126:9","statements":[{"nodeType":"YulVariableDeclaration","src":"48207:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"48221:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"48211:6:9","type":""}]},{"nodeType":"YulAssignment","src":"48236:72:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48280:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"48291:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48276:3:9"},"nodeType":"YulFunctionCall","src":"48276:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"48300:7:9"}],"functionName":{"name":"abi_decode_t_int64_fromMemory","nodeType":"YulIdentifier","src":"48246:29:9"},"nodeType":"YulFunctionCall","src":"48246:62:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"48236:6:9"}]}]}]},"name":"abi_decode_tuple_t_int64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48023:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"48034:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"48046:6:9","type":""}],"src":"47978:347:9"},{"body":{"nodeType":"YulBlock","src":"48438:229:9","statements":[{"body":{"nodeType":"YulBlock","src":"48543:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"48545:16:9"},"nodeType":"YulFunctionCall","src":"48545:18:9"},"nodeType":"YulExpressionStatement","src":"48545:18:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"48515:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"48523:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"48512:2:9"},"nodeType":"YulFunctionCall","src":"48512:30:9"},"nodeType":"YulIf","src":"48509:56:9"},{"nodeType":"YulAssignment","src":"48575:25:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"48587:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"48595:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"48583:3:9"},"nodeType":"YulFunctionCall","src":"48583:17:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"48575:4:9"}]},{"nodeType":"YulAssignment","src":"48637:23:9","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"48649:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"48655:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48645:3:9"},"nodeType":"YulFunctionCall","src":"48645:15:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"48637:4:9"}]}]},"name":"array_allocation_size_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"48422:6:9","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"48433:4:9","type":""}],"src":"48331:336:9"},{"body":{"nodeType":"YulBlock","src":"48714:77:9","statements":[{"body":{"nodeType":"YulBlock","src":"48769:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48778:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"48781:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"48771:6:9"},"nodeType":"YulFunctionCall","src":"48771:12:9"},"nodeType":"YulExpressionStatement","src":"48771:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48737:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48760:5:9"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"48744:15:9"},"nodeType":"YulFunctionCall","src":"48744:22:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"48734:2:9"},"nodeType":"YulFunctionCall","src":"48734:33:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"48727:6:9"},"nodeType":"YulFunctionCall","src":"48727:41:9"},"nodeType":"YulIf","src":"48724:61:9"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48707:5:9","type":""}],"src":"48673:118:9"},{"body":{"nodeType":"YulBlock","src":"48858:78:9","statements":[{"nodeType":"YulAssignment","src":"48868:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48883:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48877:5:9"},"nodeType":"YulFunctionCall","src":"48877:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"48868:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48924:5:9"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"48899:24:9"},"nodeType":"YulFunctionCall","src":"48899:31:9"},"nodeType":"YulExpressionStatement","src":"48899:31:9"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48836:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"48844:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"48852:5:9","type":""}],"src":"48797:139:9"},{"body":{"nodeType":"YulBlock","src":"49055:857:9","statements":[{"body":{"nodeType":"YulBlock","src":"49099:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"49101:77:9"},"nodeType":"YulFunctionCall","src":"49101:79:9"},"nodeType":"YulExpressionStatement","src":"49101:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"49076:3:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"49081:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49072:3:9"},"nodeType":"YulFunctionCall","src":"49072:19:9"},{"kind":"number","nodeType":"YulLiteral","src":"49093:4:9","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"49068:3:9"},"nodeType":"YulFunctionCall","src":"49068:30:9"},"nodeType":"YulIf","src":"49065:117:9"},{"nodeType":"YulAssignment","src":"49191:30:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49216:4:9","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"49200:15:9"},"nodeType":"YulFunctionCall","src":"49200:21:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"49191:5:9"}]},{"nodeType":"YulBlock","src":"49231:325:9","statements":[{"nodeType":"YulVariableDeclaration","src":"49267:38:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49291:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"49302:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49287:3:9"},"nodeType":"YulFunctionCall","src":"49287:17:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49281:5:9"},"nodeType":"YulFunctionCall","src":"49281:24:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"49271:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"49352:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"49354:77:9"},"nodeType":"YulFunctionCall","src":"49354:79:9"},"nodeType":"YulExpressionStatement","src":"49354:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"49324:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"49332:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"49321:2:9"},"nodeType":"YulFunctionCall","src":"49321:30:9"},"nodeType":"YulIf","src":"49318:117:9"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49460:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"49467:4:9","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49456:3:9"},"nodeType":"YulFunctionCall","src":"49456:16:9"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49520:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"49531:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49516:3:9"},"nodeType":"YulFunctionCall","src":"49516:22:9"},{"name":"end","nodeType":"YulIdentifier","src":"49540:3:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"49474:41:9"},"nodeType":"YulFunctionCall","src":"49474:70:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49449:6:9"},"nodeType":"YulFunctionCall","src":"49449:96:9"},"nodeType":"YulExpressionStatement","src":"49449:96:9"}]},{"nodeType":"YulBlock","src":"49566:164:9","statements":[{"nodeType":"YulVariableDeclaration","src":"49603:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"49617:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"49607:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49644:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"49651:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49640:3:9"},"nodeType":"YulFunctionCall","src":"49640:16:9"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49694:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"49705:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49690:3:9"},"nodeType":"YulFunctionCall","src":"49690:22:9"},{"name":"end","nodeType":"YulIdentifier","src":"49714:3:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"49658:31:9"},"nodeType":"YulFunctionCall","src":"49658:60:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49633:6:9"},"nodeType":"YulFunctionCall","src":"49633:86:9"},"nodeType":"YulExpressionStatement","src":"49633:86:9"}]},{"nodeType":"YulBlock","src":"49740:165:9","statements":[{"nodeType":"YulVariableDeclaration","src":"49780:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"49794:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"49784:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49821:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"49828:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49817:3:9"},"nodeType":"YulFunctionCall","src":"49817:16:9"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49869:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"49880:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49865:3:9"},"nodeType":"YulFunctionCall","src":"49865:22:9"},{"name":"end","nodeType":"YulIdentifier","src":"49889:3:9"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"49835:29:9"},"nodeType":"YulFunctionCall","src":"49835:58:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49810:6:9"},"nodeType":"YulFunctionCall","src":"49810:84:9"},"nodeType":"YulExpressionStatement","src":"49810:84:9"}]}]},"name":"abi_decode_t_struct$_DecCoin_$2772_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49030:9:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"49041:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"49049:5:9","type":""}],"src":"48964:948:9"},{"body":{"nodeType":"YulBlock","src":"50080:867:9","statements":[{"nodeType":"YulAssignment","src":"50090:115:9","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"50197:6:9"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"50115:81:9"},"nodeType":"YulFunctionCall","src":"50115:89:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"50099:15:9"},"nodeType":"YulFunctionCall","src":"50099:106:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"50090:5:9"}]},{"nodeType":"YulVariableDeclaration","src":"50214:16:9","value":{"name":"array","nodeType":"YulIdentifier","src":"50225:5:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"50218:3:9","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"50247:5:9"},{"name":"length","nodeType":"YulIdentifier","src":"50254:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50240:6:9"},"nodeType":"YulFunctionCall","src":"50240:21:9"},"nodeType":"YulExpressionStatement","src":"50240:21:9"},{"nodeType":"YulAssignment","src":"50270:23:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"50281:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"50288:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50277:3:9"},"nodeType":"YulFunctionCall","src":"50277:16:9"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"50270:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"50303:44:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"50321:6:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"50333:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"50341:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"50329:3:9"},"nodeType":"YulFunctionCall","src":"50329:17:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50317:3:9"},"nodeType":"YulFunctionCall","src":"50317:30:9"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"50307:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"50375:103:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"50389:77:9"},"nodeType":"YulFunctionCall","src":"50389:79:9"},"nodeType":"YulExpressionStatement","src":"50389:79:9"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"50362:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"50370:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"50359:2:9"},"nodeType":"YulFunctionCall","src":"50359:15:9"},"nodeType":"YulIf","src":"50356:122:9"},{"body":{"nodeType":"YulBlock","src":"50563:378:9","statements":[{"nodeType":"YulVariableDeclaration","src":"50578:29:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"50603:3:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"50597:5:9"},"nodeType":"YulFunctionCall","src":"50597:10:9"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"50582:11:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"50659:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"50661:77:9"},"nodeType":"YulFunctionCall","src":"50661:79:9"},"nodeType":"YulExpressionStatement","src":"50661:79:9"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"50626:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"50639:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"50623:2:9"},"nodeType":"YulFunctionCall","src":"50623:35:9"},"nodeType":"YulIf","src":"50620:122:9"},{"nodeType":"YulVariableDeclaration","src":"50755:42:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"50777:6:9"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"50785:11:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50773:3:9"},"nodeType":"YulFunctionCall","src":"50773:24:9"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"50759:10:9","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"50818:3:9"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"50880:10:9"},{"name":"end","nodeType":"YulIdentifier","src":"50892:3:9"}],"functionName":{"name":"abi_decode_t_struct$_DecCoin_$2772_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"50823:56:9"},"nodeType":"YulFunctionCall","src":"50823:73:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50811:6:9"},"nodeType":"YulFunctionCall","src":"50811:86:9"},"nodeType":"YulExpressionStatement","src":"50811:86:9"},{"nodeType":"YulAssignment","src":"50910:21:9","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"50921:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"50926:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50917:3:9"},"nodeType":"YulFunctionCall","src":"50917:14:9"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"50910:3:9"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"50516:3:9"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"50521:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"50513:2:9"},"nodeType":"YulFunctionCall","src":"50513:15:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"50529:25:9","statements":[{"nodeType":"YulAssignment","src":"50531:21:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"50542:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"50547:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50538:3:9"},"nodeType":"YulFunctionCall","src":"50538:14:9"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"50531:3:9"}]}]},"pre":{"nodeType":"YulBlock","src":"50491:21:9","statements":[{"nodeType":"YulVariableDeclaration","src":"50493:17:9","value":{"name":"offset","nodeType":"YulIdentifier","src":"50504:6:9"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"50497:3:9","type":""}]}]},"src":"50487:454:9"}]},"name":"abi_decode_available_length_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"50050:6:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"50058:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"50066:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"50074:5:9","type":""}],"src":"49942:1005:9"},{"body":{"nodeType":"YulBlock","src":"51090:322:9","statements":[{"body":{"nodeType":"YulBlock","src":"51139:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"51141:77:9"},"nodeType":"YulFunctionCall","src":"51141:79:9"},"nodeType":"YulExpressionStatement","src":"51141:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"51118:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"51126:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51114:3:9"},"nodeType":"YulFunctionCall","src":"51114:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"51133:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"51110:3:9"},"nodeType":"YulFunctionCall","src":"51110:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"51103:6:9"},"nodeType":"YulFunctionCall","src":"51103:35:9"},"nodeType":"YulIf","src":"51100:122:9"},{"nodeType":"YulVariableDeclaration","src":"51231:27:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"51251:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"51245:5:9"},"nodeType":"YulFunctionCall","src":"51245:13:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"51235:6:9","type":""}]},{"nodeType":"YulAssignment","src":"51267:139:9","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"51379:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"51387:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51375:3:9"},"nodeType":"YulFunctionCall","src":"51375:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"51394:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"51402:3:9"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"51276:98:9"},"nodeType":"YulFunctionCall","src":"51276:130:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"51267:5:9"}]}]},"name":"abi_decode_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"51068:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"51076:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"51084:5:9","type":""}],"src":"50977:435:9"},{"body":{"nodeType":"YulBlock","src":"51545:477:9","statements":[{"body":{"nodeType":"YulBlock","src":"51591:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"51593:77:9"},"nodeType":"YulFunctionCall","src":"51593:79:9"},"nodeType":"YulExpressionStatement","src":"51593:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"51566:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"51575:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51562:3:9"},"nodeType":"YulFunctionCall","src":"51562:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"51587:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"51558:3:9"},"nodeType":"YulFunctionCall","src":"51558:32:9"},"nodeType":"YulIf","src":"51555:119:9"},{"nodeType":"YulBlock","src":"51684:331:9","statements":[{"nodeType":"YulVariableDeclaration","src":"51699:38:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51723:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"51734:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51719:3:9"},"nodeType":"YulFunctionCall","src":"51719:17:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"51713:5:9"},"nodeType":"YulFunctionCall","src":"51713:24:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"51703:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"51784:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"51786:77:9"},"nodeType":"YulFunctionCall","src":"51786:79:9"},"nodeType":"YulExpressionStatement","src":"51786:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"51756:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"51764:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"51753:2:9"},"nodeType":"YulFunctionCall","src":"51753:30:9"},"nodeType":"YulIf","src":"51750:117:9"},{"nodeType":"YulAssignment","src":"51881:124:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51977:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"51988:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51973:3:9"},"nodeType":"YulFunctionCall","src":"51973:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"51997:7:9"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"51891:81:9"},"nodeType":"YulFunctionCall","src":"51891:114:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"51881:6:9"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51515:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"51526:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"51538:6:9","type":""}],"src":"51418:604:9"},{"body":{"nodeType":"YulBlock","src":"52106:40:9","statements":[{"nodeType":"YulAssignment","src":"52117:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52133:5:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"52127:5:9"},"nodeType":"YulFunctionCall","src":"52127:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"52117:6:9"}]}]},"name":"array_length_t_array$_t_string_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"52089:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"52099:6:9","type":""}],"src":"52028:118:9"},{"body":{"nodeType":"YulBlock","src":"52228:87:9","statements":[{"nodeType":"YulAssignment","src":"52238:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"52246:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"52238:4:9"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52266:1:9","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"52269:3:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52259:6:9"},"nodeType":"YulFunctionCall","src":"52259:14:9"},"nodeType":"YulExpressionStatement","src":"52259:14:9"},{"nodeType":"YulAssignment","src":"52282:26:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52300:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"52303:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"52290:9:9"},"nodeType":"YulFunctionCall","src":"52290:18:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"52282:4:9"}]}]},"name":"array_dataslot_t_array$_t_string_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"52215:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"52223:4:9","type":""}],"src":"52152:163:9"},{"body":{"nodeType":"YulBlock","src":"52424:732:9","statements":[{"nodeType":"YulVariableDeclaration","src":"52434:29:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52457:5:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"52451:5:9"},"nodeType":"YulFunctionCall","src":"52451:12:9"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"52438:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"52472:50:9","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"52512:9:9"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"52486:25:9"},"nodeType":"YulFunctionCall","src":"52486:36:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"52476:6:9","type":""}]},{"nodeType":"YulAssignment","src":"52531:68:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52587:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"52592:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"52538:48:9"},"nodeType":"YulFunctionCall","src":"52538:61:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52531:3:9"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"52648:157:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52701:3:9"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"52710:9:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52725:4:9","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"52721:3:9"},"nodeType":"YulFunctionCall","src":"52721:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"52706:3:9"},"nodeType":"YulFunctionCall","src":"52706:25:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52694:6:9"},"nodeType":"YulFunctionCall","src":"52694:38:9"},"nodeType":"YulExpressionStatement","src":"52694:38:9"},{"nodeType":"YulAssignment","src":"52745:50:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52756:3:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52765:4:9","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"52785:6:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"52778:6:9"},"nodeType":"YulFunctionCall","src":"52778:14:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"52771:6:9"},"nodeType":"YulFunctionCall","src":"52771:22:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"52761:3:9"},"nodeType":"YulFunctionCall","src":"52761:33:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52752:3:9"},"nodeType":"YulFunctionCall","src":"52752:43:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"52745:3:9"}]}]},"nodeType":"YulCase","src":"52641:164:9","value":{"kind":"number","nodeType":"YulLiteral","src":"52646:1:9","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"52821:329:9","statements":[{"nodeType":"YulVariableDeclaration","src":"52866:53:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52913:5:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"52881:31:9"},"nodeType":"YulFunctionCall","src":"52881:38:9"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"52870:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"52932:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"52941:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"52936:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"52999:110:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53028:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"53033:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53024:3:9"},"nodeType":"YulFunctionCall","src":"53024:11:9"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"53043:7:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"53037:5:9"},"nodeType":"YulFunctionCall","src":"53037:14:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53017:6:9"},"nodeType":"YulFunctionCall","src":"53017:35:9"},"nodeType":"YulExpressionStatement","src":"53017:35:9"},{"nodeType":"YulAssignment","src":"53069:26:9","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"53084:7:9"},{"kind":"number","nodeType":"YulLiteral","src":"53093:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53080:3:9"},"nodeType":"YulFunctionCall","src":"53080:15:9"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"53069:7:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"52966:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"52969:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"52963:2:9"},"nodeType":"YulFunctionCall","src":"52963:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"52977:21:9","statements":[{"nodeType":"YulAssignment","src":"52979:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"52988:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"52991:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52984:3:9"},"nodeType":"YulFunctionCall","src":"52984:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"52979:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"52959:3:9","statements":[]},"src":"52955:154:9"},{"nodeType":"YulAssignment","src":"53122:18:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53133:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"53138:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53129:3:9"},"nodeType":"YulFunctionCall","src":"53129:11:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"53122:3:9"}]}]},"nodeType":"YulCase","src":"52814:336:9","value":{"kind":"number","nodeType":"YulLiteral","src":"52819:1:9","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"52619:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"52630:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"52615:3:9"},"nodeType":"YulFunctionCall","src":"52615:17:9"},"nodeType":"YulSwitch","src":"52608:542:9"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"52405:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"52412:3:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"52420:3:9","type":""}],"src":"52345:811:9"},{"body":{"nodeType":"YulBlock","src":"53259:93:9","statements":[{"nodeType":"YulAssignment","src":"53269:77:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"53334:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"53342:3:9"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"53283:50:9"},"nodeType":"YulFunctionCall","src":"53283:63:9"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"53269:10:9"}]}]},"name":"abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"53232:6:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"53240:3:9","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"53248:10:9","type":""}],"src":"53162:190:9"},{"body":{"nodeType":"YulBlock","src":"53437:38:9","statements":[{"nodeType":"YulAssignment","src":"53447:22:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"53459:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"53464:4:9","type":"","value":"0x01"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53455:3:9"},"nodeType":"YulFunctionCall","src":"53455:14:9"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"53447:4:9"}]}]},"name":"array_nextElement_t_array$_t_string_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"53424:3:9","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"53432:4:9","type":""}],"src":"53358:117:9"},{"body":{"nodeType":"YulBlock","src":"53647:819:9","statements":[{"nodeType":"YulVariableDeclaration","src":"53657:72:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53723:5:9"}],"functionName":{"name":"array_length_t_array$_t_string_storage_$dyn_storage","nodeType":"YulIdentifier","src":"53671:51:9"},"nodeType":"YulFunctionCall","src":"53671:58:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"53661:6:9","type":""}]},{"nodeType":"YulAssignment","src":"53738:103:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53829:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"53834:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53745:83:9"},"nodeType":"YulFunctionCall","src":"53745:96:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53738:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"53850:20:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"53867:3:9"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"53854:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"53879:39:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53895:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"53904:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"53912:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"53900:3:9"},"nodeType":"YulFunctionCall","src":"53900:17:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53891:3:9"},"nodeType":"YulFunctionCall","src":"53891:27:9"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"53883:4:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"53927:75:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53996:5:9"}],"functionName":{"name":"array_dataslot_t_array$_t_string_storage_$dyn_storage","nodeType":"YulIdentifier","src":"53942:53:9"},"nodeType":"YulFunctionCall","src":"53942:60:9"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"53931:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"54011:21:9","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"54025:7:9"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"54015:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"54101:320:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54122:3:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54131:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"54137:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54127:3:9"},"nodeType":"YulFunctionCall","src":"54127:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54115:6:9"},"nodeType":"YulFunctionCall","src":"54115:33:9"},"nodeType":"YulExpressionStatement","src":"54115:33:9"},{"nodeType":"YulVariableDeclaration","src":"54161:27:9","value":{"name":"srcPtr","nodeType":"YulIdentifier","src":"54182:6:9"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"54165:13:9","type":""}]},{"nodeType":"YulAssignment","src":"54201:89:9","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"54270:13:9"},{"name":"tail","nodeType":"YulIdentifier","src":"54285:4:9"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"54209:60:9"},"nodeType":"YulFunctionCall","src":"54209:81:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54201:4:9"}]},{"nodeType":"YulAssignment","src":"54303:74:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"54370:6:9"}],"functionName":{"name":"array_nextElement_t_array$_t_string_storage_$dyn_storage","nodeType":"YulIdentifier","src":"54313:56:9"},"nodeType":"YulFunctionCall","src":"54313:64:9"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"54303:6:9"}]},{"nodeType":"YulAssignment","src":"54390:21:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54401:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"54406:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54397:3:9"},"nodeType":"YulFunctionCall","src":"54397:14:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54390:3:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"54063:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"54066:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"54060:2:9"},"nodeType":"YulFunctionCall","src":"54060:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"54074:18:9","statements":[{"nodeType":"YulAssignment","src":"54076:14:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"54085:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"54088:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54081:3:9"},"nodeType":"YulFunctionCall","src":"54081:9:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"54076:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"54045:14:9","statements":[{"nodeType":"YulVariableDeclaration","src":"54047:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"54056:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"54051:1:9","type":""}]}]},"src":"54041:380:9"},{"nodeType":"YulAssignment","src":"54430:11:9","value":{"name":"tail","nodeType":"YulIdentifier","src":"54437:4:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54430:3:9"}]},{"nodeType":"YulAssignment","src":"54450:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"54457:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54450:3:9"}]}]},"name":"abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"53626:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"53633:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"53642:3:9","type":""}],"src":"53509:957:9"},{"body":{"nodeType":"YulBlock","src":"54690:403:9","statements":[{"nodeType":"YulAssignment","src":"54700:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54712:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"54723:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54708:3:9"},"nodeType":"YulFunctionCall","src":"54708:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54700:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"54780:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54793:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"54804:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54789:3:9"},"nodeType":"YulFunctionCall","src":"54789:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"54736:43:9"},"nodeType":"YulFunctionCall","src":"54736:71:9"},"nodeType":"YulExpressionStatement","src":"54736:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"54861:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54874:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"54885:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54870:3:9"},"nodeType":"YulFunctionCall","src":"54870:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"54817:43:9"},"nodeType":"YulFunctionCall","src":"54817:72:9"},"nodeType":"YulExpressionStatement","src":"54817:72:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54910:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"54921:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54906:3:9"},"nodeType":"YulFunctionCall","src":"54906:18:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54930:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"54936:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54926:3:9"},"nodeType":"YulFunctionCall","src":"54926:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54899:6:9"},"nodeType":"YulFunctionCall","src":"54899:48:9"},"nodeType":"YulExpressionStatement","src":"54899:48:9"},{"nodeType":"YulAssignment","src":"54956:130:9","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"55072:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"55081:4:9"}],"functionName":{"name":"abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54964:107:9"},"nodeType":"YulFunctionCall","src":"54964:122:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54956:4:9"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_array$_t_string_storage_$dyn_storage__to_t_address_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54646:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"54658:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"54666:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"54674:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54685:4:9","type":""}],"src":"54472:621:9"},{"body":{"nodeType":"YulBlock","src":"55141:48:9","statements":[{"nodeType":"YulAssignment","src":"55151:32:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55176:5:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"55169:6:9"},"nodeType":"YulFunctionCall","src":"55169:13:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"55162:6:9"},"nodeType":"YulFunctionCall","src":"55162:21:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"55151:7:9"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"55123:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"55133:7:9","type":""}],"src":"55099:90:9"},{"body":{"nodeType":"YulBlock","src":"55235:76:9","statements":[{"body":{"nodeType":"YulBlock","src":"55289:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"55298:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55301:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"55291:6:9"},"nodeType":"YulFunctionCall","src":"55291:12:9"},"nodeType":"YulExpressionStatement","src":"55291:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55258:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55280:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"55265:14:9"},"nodeType":"YulFunctionCall","src":"55265:21:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"55255:2:9"},"nodeType":"YulFunctionCall","src":"55255:32:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"55248:6:9"},"nodeType":"YulFunctionCall","src":"55248:40:9"},"nodeType":"YulIf","src":"55245:60:9"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"55228:5:9","type":""}],"src":"55195:116:9"},{"body":{"nodeType":"YulBlock","src":"55377:77:9","statements":[{"nodeType":"YulAssignment","src":"55387:22:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"55402:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"55396:5:9"},"nodeType":"YulFunctionCall","src":"55396:13:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"55387:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55442:5:9"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"55418:23:9"},"nodeType":"YulFunctionCall","src":"55418:30:9"},"nodeType":"YulExpressionStatement","src":"55418:30:9"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55355:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"55363:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55371:5:9","type":""}],"src":"55317:137:9"},{"body":{"nodeType":"YulBlock","src":"55534:271:9","statements":[{"body":{"nodeType":"YulBlock","src":"55580:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"55582:77:9"},"nodeType":"YulFunctionCall","src":"55582:79:9"},"nodeType":"YulExpressionStatement","src":"55582:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"55555:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"55564:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55551:3:9"},"nodeType":"YulFunctionCall","src":"55551:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"55576:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"55547:3:9"},"nodeType":"YulFunctionCall","src":"55547:32:9"},"nodeType":"YulIf","src":"55544:119:9"},{"nodeType":"YulBlock","src":"55673:125:9","statements":[{"nodeType":"YulVariableDeclaration","src":"55688:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"55702:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"55692:6:9","type":""}]},{"nodeType":"YulAssignment","src":"55717:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55760:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"55771:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55756:3:9"},"nodeType":"YulFunctionCall","src":"55756:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"55780:7:9"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"55727:28:9"},"nodeType":"YulFunctionCall","src":"55727:61:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"55717:6:9"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55504:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"55515:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"55527:6:9","type":""}],"src":"55460:345:9"},{"body":{"nodeType":"YulBlock","src":"55917:66:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55939:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"55947:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55935:3:9"},"nodeType":"YulFunctionCall","src":"55935:14:9"},{"hexValue":"5374616b696e6720417070726f7665206661696c6564","kind":"string","nodeType":"YulLiteral","src":"55951:24:9","type":"","value":"Staking Approve failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55928:6:9"},"nodeType":"YulFunctionCall","src":"55928:48:9"},"nodeType":"YulExpressionStatement","src":"55928:48:9"}]},"name":"store_literal_in_memory_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"55909:6:9","type":""}],"src":"55811:172:9"},{"body":{"nodeType":"YulBlock","src":"56135:220:9","statements":[{"nodeType":"YulAssignment","src":"56145:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56211:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"56216:2:9","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56152:58:9"},"nodeType":"YulFunctionCall","src":"56152:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56145:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56317:3:9"}],"functionName":{"name":"store_literal_in_memory_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3","nodeType":"YulIdentifier","src":"56228:88:9"},"nodeType":"YulFunctionCall","src":"56228:93:9"},"nodeType":"YulExpressionStatement","src":"56228:93:9"},{"nodeType":"YulAssignment","src":"56330:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56341:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"56346:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56337:3:9"},"nodeType":"YulFunctionCall","src":"56337:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"56330:3:9"}]}]},"name":"abi_encode_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"56123:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56131:3:9","type":""}],"src":"55989:366:9"},{"body":{"nodeType":"YulBlock","src":"56532:248:9","statements":[{"nodeType":"YulAssignment","src":"56542:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56554:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"56565:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56550:3:9"},"nodeType":"YulFunctionCall","src":"56550:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56542:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56589:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"56600:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56585:3:9"},"nodeType":"YulFunctionCall","src":"56585:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56608:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"56614:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56604:3:9"},"nodeType":"YulFunctionCall","src":"56604:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56578:6:9"},"nodeType":"YulFunctionCall","src":"56578:47:9"},"nodeType":"YulExpressionStatement","src":"56578:47:9"},{"nodeType":"YulAssignment","src":"56634:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56768:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56642:124:9"},"nodeType":"YulFunctionCall","src":"56642:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56634:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56512:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56527:4:9","type":""}],"src":"56361:419:9"},{"body":{"nodeType":"YulBlock","src":"56976:321:9","statements":[{"nodeType":"YulAssignment","src":"56986:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56998:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"57009:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56994:3:9"},"nodeType":"YulFunctionCall","src":"56994:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56986:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"57066:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57079:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"57090:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57075:3:9"},"nodeType":"YulFunctionCall","src":"57075:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"57022:43:9"},"nodeType":"YulFunctionCall","src":"57022:71:9"},"nodeType":"YulExpressionStatement","src":"57022:71:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57114:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"57125:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57110:3:9"},"nodeType":"YulFunctionCall","src":"57110:18:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57134:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"57140:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"57130:3:9"},"nodeType":"YulFunctionCall","src":"57130:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57103:6:9"},"nodeType":"YulFunctionCall","src":"57103:48:9"},"nodeType":"YulExpressionStatement","src":"57103:48:9"},{"nodeType":"YulAssignment","src":"57160:130:9","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"57276:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"57285:4:9"}],"functionName":{"name":"abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57168:107:9"},"nodeType":"YulFunctionCall","src":"57168:122:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57160:4:9"}]}]},"name":"abi_encode_tuple_t_address_t_array$_t_string_storage_$dyn_storage__to_t_address_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56940:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"56952:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"56960:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56971:4:9","type":""}],"src":"56786:511:9"},{"body":{"nodeType":"YulBlock","src":"57409:71:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57431:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"57439:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57427:3:9"},"nodeType":"YulFunctionCall","src":"57427:14:9"},{"hexValue":"446973747269627574696f6e20417070726f7665206661696c6564","kind":"string","nodeType":"YulLiteral","src":"57443:29:9","type":"","value":"Distribution Approve failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57420:6:9"},"nodeType":"YulFunctionCall","src":"57420:53:9"},"nodeType":"YulExpressionStatement","src":"57420:53:9"}]},"name":"store_literal_in_memory_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"57401:6:9","type":""}],"src":"57303:177:9"},{"body":{"nodeType":"YulBlock","src":"57632:220:9","statements":[{"nodeType":"YulAssignment","src":"57642:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57708:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"57713:2:9","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57649:58:9"},"nodeType":"YulFunctionCall","src":"57649:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"57642:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57814:3:9"}],"functionName":{"name":"store_literal_in_memory_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974","nodeType":"YulIdentifier","src":"57725:88:9"},"nodeType":"YulFunctionCall","src":"57725:93:9"},"nodeType":"YulExpressionStatement","src":"57725:93:9"},{"nodeType":"YulAssignment","src":"57827:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57838:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"57843:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57834:3:9"},"nodeType":"YulFunctionCall","src":"57834:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"57827:3:9"}]}]},"name":"abi_encode_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"57620:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"57628:3:9","type":""}],"src":"57486:366:9"},{"body":{"nodeType":"YulBlock","src":"58029:248:9","statements":[{"nodeType":"YulAssignment","src":"58039:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58051:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"58062:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58047:3:9"},"nodeType":"YulFunctionCall","src":"58047:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58039:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58086:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"58097:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58082:3:9"},"nodeType":"YulFunctionCall","src":"58082:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"58105:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"58111:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"58101:3:9"},"nodeType":"YulFunctionCall","src":"58101:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"58075:6:9"},"nodeType":"YulFunctionCall","src":"58075:47:9"},"nodeType":"YulExpressionStatement","src":"58075:47:9"},{"nodeType":"YulAssignment","src":"58131:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"58265:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"58139:124:9"},"nodeType":"YulFunctionCall","src":"58139:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58131:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58009:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"58024:4:9","type":""}],"src":"57858:419:9"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_int64(value) -> cleaned {\n        cleaned := signextend(7, value)\n    }\n\n    function abi_encode_t_int64_to_t_int64(value, pos) {\n        mstore(pos, cleanup_t_int64(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct UnbondingDelegationEntry -> struct UnbondingDelegationEntry\n    function abi_encode_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // creationHeight\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_int64_to_t_int64(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // completionTime\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_int64_to_t_int64(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // initialBalance\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // balance\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function array_nextElement_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct UnbondingDelegationEntry[] -> struct UnbondingDelegationEntry[]\n    function abi_encode_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int64_to_t_int64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int64(value))\n    }\n\n    function abi_encode_tuple_t_int64_t_uint256__to_t_int64_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_int64_to_t_int64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int64_to_t_int64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    // struct DecCoin -> struct DecCoin\n    function abi_encode_t_struct$_DecCoin_$2772_memory_ptr_to_t_struct$_DecCoin_$2772_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // denom\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // precision\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x40))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_DecCoin_$2772_memory_ptr_to_t_struct$_DecCoin_$2772_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_DecCoin_$2772_memory_ptr_to_t_struct$_DecCoin_$2772_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct DecCoin[] -> struct DecCoin[]\n    function abi_encode_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_DecCoin_$2772_memory_ptr_to_t_struct$_DecCoin_$2772_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_string_storage__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_int64(value) {\n        if iszero(eq(value, cleanup_t_int64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int64(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct UnbondingDelegationEntry\n    function abi_decode_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x80) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x80)\n\n        {\n            // creationHeight\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_int64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // completionTime\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_int64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // initialBalance\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // balance\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct UnbondingDelegationEntry[]\n    function abi_decode_available_length_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x80))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x80) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct UnbondingDelegationEntry[]\n    function abi_decode_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_struct$_UnbondingDelegationEntry_$3077_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // struct Coin\n    function abi_decode_t_struct$_Coin_$2765_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // denom\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_struct$_Coin_$2765_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_struct$_Coin_$2765_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"The time has not passed yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d927671f27eb3f0cb88460bc8031c1d0c11b6c056182a481e92e6e53c899a9aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // struct Coin[]\n    function abi_decode_available_length_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_struct$_Coin_$2765_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct Coin[]\n    function abi_decode_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_struct$_Coin_$2765_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_storage_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_int64_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    // struct DecCoin\n    function abi_decode_t_struct$_DecCoin_$2772_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // denom\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // precision\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint8_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct DecCoin[]\n    function abi_decode_available_length_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_struct$_DecCoin_$2772_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct DecCoin[]\n    function abi_decode_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_struct$_DecCoin_$2772_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_storage_$dyn_storage(value) -> length {\n\n        length := sload(value)\n\n    }\n\n    function array_dataslot_t_array$_t_string_storage_$dyn_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_storage_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_storage_$dyn_storage(ptr) -> next {\n        next := add(ptr, 0x01)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_storage_$dyn_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_storage_$dyn_storage(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := srcPtr\n            tail := abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_storage_$dyn_storage(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_array$_t_string_storage_$dyn_storage__to_t_address_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking Approve failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_array$_t_string_storage_$dyn_storage__to_t_address_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974(memPtr) {\n\n        mstore(add(memPtr, 0), \"Distribution Approve failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106102e45760003560e01c8063803f5b9f11610190578063aa4cdf2a116100dc578063c04fe97811610095578063d3791b201161006f578063d3791b2014610c47578063e3280c9614610c72578063e32acc1a14610caf578063ff4a37ef14610cec576102e4565b8063c04fe97814610bb6578063c29595c514610be1578063c4c2e36414610c0a576102e4565b8063aa4cdf2a14610ab8578063ae429e4714610af5578063b16060a614610b20578063b2947c7114610b37578063b527d45e14610b4e578063c04e743014610b8d576102e4565b806390d756a711610149578063a1ca917811610123578063a1ca9178146109fe578063a2cdb3a914610a3b578063a694fc3a14610a64578063aa2bf5d314610a8d576102e4565b806390d756a71461095957806397ee7606146109965780639c6353e8146109c1576102e4565b8063803f5b9f14610811578063812fae1f1461084e57806382fcc7321461088b578063881de858146108c85780638d3d2595146108f15780639077007d1461092e576102e4565b8063414d9a2b1161024f5780635d907da11161020857806371085cab116101e257806371085cab1461072d5780637495f8541461076a5780637bbd582d146107a85780637f2035d4146107d3576102e4565b80635d907da1146106885780636af3304e146106c55780636f9fb98a14610702576102e4565b8063414d9a2b1461054e57806342c7652a1461058b578063468d0c80146105b65780634a797bd7146105f55780634be7adb51461062057806353f688021461065d576102e4565b80631ba44c4c116102a15780631ba44c4c146103ec5780631e9ac9f51461042b57806327a568b91461046857806329b56f60146104a75780632d5bf5b0146104d25780633f87a2f41461050f576102e4565b80630cdd53f6146102e9578063109ac97014610305578063131d44f21461034257806313bf4cea1461037f5780631b52b9de146103aa5780631b592aeb146103c1575b600080fd5b61030360048036038101906102fe919061311e565b610d2b565b005b34801561031157600080fd5b5061032c6004803603810190610327919061315e565b610d61565b60405161033991906132dd565b60405180910390f35b34801561034e57600080fd5b506103696004803603810190610364919061315e565b610ed0565b60405161037691906132dd565b60405180910390f35b34801561038b57600080fd5b5061039461103f565b6040516103a1919061330e565b60405180910390f35b3480156103b657600080fd5b506103bf611045565b005b3480156103cd57600080fd5b506103d66110ba565b6040516103e3919061330e565b60405180910390f35b3480156103f857600080fd5b50610413600480360381019061040e919061315e565b6110c0565b60405161042293929190613373565b60405180910390f35b34801561043757600080fd5b50610452600480360381019061044d91906134e6565b611172565b60405161045f919061330e565b60405180910390f35b34801561047457600080fd5b5061048f600480360381019061048a919061315e565b6111e3565b60405161049e9392919061352f565b60405180910390f35b3480156104b357600080fd5b506104bc6113a5565b6040516104c991906132dd565b60405180910390f35b3480156104de57600080fd5b506104f960048036038101906104f4919061357b565b6114e0565b604051610506919061330e565b60405180910390f35b34801561051b57600080fd5b506105366004803603810190610531919061315e565b611564565b60405161054593929190613373565b60405180910390f35b34801561055a57600080fd5b506105756004803603810190610570919061315e565b611616565b604051610582919061330e565b60405180910390f35b34801561059757600080fd5b506105a061162e565b6040516105ad9190613706565b60405180910390f35b3480156105c257600080fd5b506105dd60048036038101906105d8919061315e565b6116b9565b6040516105ec93929190613728565b60405180910390f35b34801561060157600080fd5b5061060a61176b565b604051610617919061330e565b60405180910390f35b34801561062c57600080fd5b506106476004803603810190610642919061311e565b611771565b60405161065491906132dd565b60405180910390f35b34801561066957600080fd5b50610672611903565b60405161067f919061330e565b60405180910390f35b34801561069457600080fd5b506106af60048036038101906106aa919061315e565b61199c565b6040516106bc9190613766565b60405180910390f35b3480156106d157600080fd5b506106ec60048036038101906106e7919061357b565b611a44565b6040516106f9919061330e565b60405180910390f35b34801561070e57600080fd5b50610717611ac8565b604051610724919061330e565b60405180910390f35b34801561073957600080fd5b50610754600480360381019061074f9190613788565b611ad0565b604051610761919061330e565b60405180910390f35b34801561077657600080fd5b50610791600480360381019061078c919061315e565b611b42565b60405161079f9291906137f3565b60405180910390f35b3480156107b457600080fd5b506107bd611b73565b6040516107ca919061330e565b60405180910390f35b3480156107df57600080fd5b506107fa60048036038101906107f5919061315e565b611b79565b60405161080892919061381c565b60405180910390f35b34801561081d57600080fd5b506108386004803603810190610833919061315e565b611c25565b60405161084591906138fb565b60405180910390f35b34801561085a57600080fd5b506108756004803603810190610870919061315e565b611d08565b60405161088291906138fb565b60405180910390f35b34801561089757600080fd5b506108b260048036038101906108ad919061391d565b611deb565b6040516108bf919061330e565b60405180910390f35b3480156108d457600080fd5b506108ef60048036038101906108ea919061398c565b611e6e565b005b3480156108fd57600080fd5b506109186004803603810190610913919061315e565b611ebb565b6040516109259190613766565b60405180910390f35b34801561093a57600080fd5b50610943611f63565b604051610950919061330e565b60405180910390f35b34801561096557600080fd5b50610980600480360381019061097b919061315e565b611f69565b60405161098d9190613766565b60405180910390f35b3480156109a257600080fd5b506109ab61208b565b6040516109b891906132dd565b60405180910390f35b3480156109cd57600080fd5b506109e860048036038101906109e3919061315e565b6121c6565b6040516109f59190613a17565b60405180910390f35b348015610a0a57600080fd5b50610a256004803603810190610a2091906134e6565b61243a565b604051610a32919061330e565b60405180910390f35b348015610a4757600080fd5b50610a626004803603810190610a5d919061311e565b6124ab565b005b348015610a7057600080fd5b50610a8b6004803603810190610a86919061315e565b6124dc565b005b348015610a9957600080fd5b50610aa2612563565b604051610aaf919061330e565b60405180910390f35b348015610ac457600080fd5b50610adf6004803603810190610ada91906134e6565b612569565b604051610aec919061330e565b60405180910390f35b348015610b0157600080fd5b50610b0a6125f0565b604051610b179190613b60565b60405180910390f35b348015610b2c57600080fd5b50610b3561267b565b005b348015610b4357600080fd5b50610b4c612916565b005b348015610b5a57600080fd5b50610b756004803603810190610b70919061315e565b612ac6565b604051610b8493929190613373565b60405180910390f35b348015610b9957600080fd5b50610bb46004803603810190610baf919061357b565b612b78565b005b348015610bc257600080fd5b50610bcb612ba0565b604051610bd891906132dd565b60405180910390f35b348015610bed57600080fd5b50610c086004803603810190610c03919061357b565b612cdb565b005b348015610c1657600080fd5b50610c316004803603810190610c2c9190613b82565b612d03565b604051610c3e919061330e565b60405180910390f35b348015610c5357600080fd5b50610c5c612dd2565b604051610c69919061330e565b60405180910390f35b348015610c7e57600080fd5b50610c996004803603810190610c949190613ce0565b612dd8565b604051610ca6919061330e565b60405180910390f35b348015610cbb57600080fd5b50610cd66004803603810190610cd1919061315e565b612ebd565b604051610ce39190613766565b60405180910390f35b348015610cf857600080fd5b50610d136004803603810190610d0e919061315e565b612f65565b604051610d2293929190613373565b60405180910390f35b610d33612916565b80600260008481526020019081526020016000206000828254610d569190613d9a565b925050819055505050565b6060600060075467ffffffffffffffff811115610d8157610d806133bb565b5b604051908082528060200260200182016040528015610db457816020015b6060815260200190600190039081610d9f5790505b509050600080600090505b600754811015610ec55784600e60008381526020019081526020016000206000015403610eb257600e60008281526020019081526020016000206001018054610e0790613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3390613dfd565b8015610e805780601f10610e5557610100808354040283529160200191610e80565b820191906000526020600020905b815481529060010190602001808311610e6357829003601f168201915b5050505050838381518110610e9857610e97613e2e565b5b60200260200101819052508180610eae90613e5d565b9250505b8080610ebd90613e5d565b915050610dbf565b508192505050919050565b6060600060085467ffffffffffffffff811115610ef057610eef6133bb565b5b604051908082528060200260200182016040528015610f2357816020015b6060815260200190600190039081610f0e5790505b509050600080600090505b6008548110156110345784600f6000838152602001908152602001600020600001540361101357600f60008281526020019081526020016000206001018054610f7690613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa290613dfd565b8015610fef5780601f10610fc457610100808354040283529160200191610fef565b820191906000526020600020905b815481529060010190602001808311610fd257829003601f168201915b505050505083838151811061100757611006613e2e565b5b60200260200101819052505b818061101e90613e5d565b925050808061102c90613e5d565b915050610f2e565b508192505050919050565b60075481565b600047905060003373ffffffffffffffffffffffffffffffffffffffff168260405161107090613ed6565b60006040518083038185875af1925050503d80600081146110ad576040519150601f19603f3d011682016040523d82523d6000602084013e6110b2565b606091505b505090505050565b60095481565b60116020528060005260406000206000915090508060000154908060010154908060020180546110ef90613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461111b90613dfd565b80156111685780601f1061113d57610100808354040283529160200191611168565b820191906000526020600020905b81548152906001019060200180831161114b57829003601f168201915b5050505050905083565b600080600090505b6007548110156111d8578280519060200120600e60008381526020019081526020016000206001016040516111af9190613f83565b6040518091039020036111c557809150506111de565b80806111d090613e5d565b91505061117a565b50600090505b919050565b600d60205280600052604060002060009150905080600001805461120690613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461123290613dfd565b801561127f5780601f106112545761010080835404028352916020019161127f565b820191906000526020600020905b81548152906001019060200180831161126257829003601f168201915b50505050509080600101805461129490613dfd565b80601f01602080910402602001604051908101604052809291908181526020018280546112c090613dfd565b801561130d5780601f106112e25761010080835404028352916020019161130d565b820191906000526020600020905b8154815290600101906020018083116112f057829003601f168201915b50505050509080600201805461132290613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461134e90613dfd565b801561139b5780601f106113705761010080835404028352916020019161139b565b820191906000526020600020905b81548152906001019060200180831161137e57829003601f168201915b5050505050905083565b6060600060075467ffffffffffffffff8111156113c5576113c46133bb565b5b6040519080825280602002602001820160405280156113f857816020015b60608152602001906001900390816113e35790505b50905060005b6007548110156114d857600e6000828152602001908152602001600020600101805461142990613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461145590613dfd565b80156114a25780601f10611477576101008083540402835291602001916114a2565b820191906000526020600020905b81548152906001019060200180831161148557829003601f168201915b50505050508282815181106114ba576114b9613e2e565b5b602002602001018190525080806114d090613e5d565b9150506113fe565b508091505090565b60006040518060600160405280600b5481526020018481526020018381525060126000600b5481526020019081526020016000206000820151816000015560208201518160010155604082015181600201908161153d9190614146565b50905050600b600081548092919061155490613e5d565b9190505550600b54905092915050565b601360205280600052604060002060009150905080600001549080600101549080600201805461159390613dfd565b80601f01602080910402602001604051908101604052809291908181526020018280546115bf90613dfd565b801561160c5780601f106115e15761010080835404028352916020019161160c565b820191906000526020600020905b8154815290600101906020018083116115ef57829003601f168201915b5050505050905083565b60026020528060005260406000206000915090505481565b606061080073ffffffffffffffffffffffffffffffffffffffff1663a03ffee13060046040518363ffffffff1660e01b815260040161166e9291906142dd565b600060405180830381865afa15801561168b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116b49190614493565b905090565b600f6020528060005260406000206000915090508060000154908060010180546116e290613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461170e90613dfd565b801561175b5780601f106117305761010080835404028352916020019161175b565b820191906000526020600020905b81548152906001019060200180831161173e57829003601f168201915b5050505050908060020154905083565b600a5481565b60606000600a5467ffffffffffffffff811115611791576117906133bb565b5b6040519080825280602002602001820160405280156117c457816020015b60608152602001906001900390816117af5790505b509050600080600090505b600a548110156118f7578560116000838152602001908152602001600020600001541480156118135750846011600083815260200190815260200160002060010154145b156118d65760116000828152602001908152602001600020600201805461183990613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461186590613dfd565b80156118b25780601f10611887576101008083540402835291602001916118b2565b820191906000526020600020905b81548152906001019060200180831161189557829003601f168201915b50505050508383815181106118ca576118c9613e2e565b5b60200260200101819052505b81806118e190613e5d565b92505080806118ef90613e5d565b9150506117cf565b50819250505092915050565b600080600061080073ffffffffffffffffffffffffffffffffffffffff1663241774e63060046040518363ffffffff1660e01b81526004016119469291906142dd565b600060405180830381865afa158015611963573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061198c91906145b8565b9150915080602001519250505090565b6060600d600083815260200190815260200160002060010180546119bf90613dfd565b80601f01602080910402602001604051908101604052809291908181526020018280546119eb90613dfd565b8015611a385780601f10611a0d57610100808354040283529160200191611a38565b820191906000526020600020905b815481529060010190602001808311611a1b57829003601f168201915b50505050509050919050565b60006040518060600160405280600c5481526020018481526020018381525060136000600c54815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611aa19190614146565b50905050600c6000815480929190611ab890613e5d565b9190505550600c54905092915050565b600047905090565b6000604051806040016040528083815260200184815250600e60006007548152602001908152602001600020600082015181600001556020820151816001019081611b1b9190614146565b5090505060076000815480929190611b3290613e5d565b9190505550600754905092915050565b60056020528060005260406000206000915090508060000160009054906101000a900460070b908060010154905082565b60065481565b600e602052806000526040600020600091509050806000015490806001018054611ba290613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054611bce90613dfd565b8015611c1b5780601f10611bf057610100808354040283529160200191611c1b565b820191906000526020600020905b815481529060010190602001808311611bfe57829003601f168201915b5050505050905082565b60606000600b5467ffffffffffffffff811115611c4557611c446133bb565b5b604051908082528060200260200182016040528015611c735781602001602082028036833780820191505090505b509050600080600090505b600b54811015611cfd5784601260008381526020019081526020016000206001015403611cea576012600082815260200190815260200160002060000154838381518110611ccf57611cce613e2e565b5b6020026020010181815250508180611ce690613e5d565b9250505b8080611cf590613e5d565b915050611c7e565b508192505050919050565b60606000600c5467ffffffffffffffff811115611d2857611d276133bb565b5b604051908082528060200260200182016040528015611d565781602001602082028036833780820191505090505b509050600080600090505b600c54811015611de05784601360008381526020019081526020016000206001015403611dcd576013600082815260200190815260200160002060000154838381518110611db257611db1613e2e565b5b6020026020010181815250508180611dc990613e5d565b9250505b8080611dd890613e5d565b915050611d61565b508192505050919050565b600060405180606001604052808581526020018481526020018381525060116000600a54815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611e469190614146565b50905050600a6000815480929190611e5d90613e5d565b9190505550600a5490509392505050565b81600d60008581526020019081526020016000206000019081611e919190614146565b5080600d60008581526020019081526020016000206001019081611eb59190614146565b50505050565b6060600f60008381526020019081526020016000206001018054611ede90613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054611f0a90613dfd565b8015611f575780601f10611f2c57610100808354040283529160200191611f57565b820191906000526020600020905b815481529060010190602001808311611f3a57829003601f168201915b50505050509050919050565b600b5481565b6060611f73612916565b60006005600084815260200190815260200160002060000160009054906101000a900460070b60070b905080421015611fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd890614660565b60405180910390fd5b60006005600085815260200190815260200160002060010154905060003373ffffffffffffffffffffffffffffffffffffffff168260405161202290613ed6565b60006040518083038185875af1925050503d806000811461205f576040519150601f19603f3d011682016040523d82523d6000602084013e612064565b606091505b50509050604051806060016040528060218152602001614cd0602191399350505050919050565b6060600060085467ffffffffffffffff8111156120ab576120aa6133bb565b5b6040519080825280602002602001820160405280156120de57816020015b60608152602001906001900390816120c95790505b50905060005b6008548110156121be57600f6000828152602001908152602001600020600101805461210f90613dfd565b80601f016020809104026020016040519081016040528092919081815260200182805461213b90613dfd565b80156121885780601f1061215d57610100808354040283529160200191612188565b820191906000526020600020905b81548152906001019060200180831161216b57829003601f168201915b50505050508282815181106121a05761219f613e2e565b5b602002602001018190525080806121b690613e5d565b9150506120e4565b508091505090565b60006121d0612916565b600061080173ffffffffffffffffffffffffffffffffffffffff1663b46a8d613060046040518363ffffffff1660e01b81526004016122109291906142dd565b6000604051808303816000875af115801561222f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906122589190614761565b9050600060026000858152602001908152602001600020549050600061080073ffffffffffffffffffffffffffffffffffffffff16633edab33c306004856040518463ffffffff1660e01b81526004016122b4939291906147aa565b6020604051808303816000875af11580156122d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f791906147e8565b905060405180604001604052808260070b815260200183600560008981526020019081526020016000206001015461232f9190613d9a565b8152506005600087815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055506020820151816001015590505060008360008151811061239a57612399613e2e565b5b602002602001015160200151905060003373ffffffffffffffffffffffffffffffffffffffff16826040516123ce90613ed6565b60006040518083038185875af1925050503d806000811461240b576040519150601f19603f3d011682016040523d82523d6000602084013e612410565b606091505b50509050600060026000898152602001908152602001600020819055508295505050505050919050565b600080600090505b6008548110156124a0578280519060200120600f60008381526020019081526020016000206001016040516124779190613f83565b60405180910390200361248d57809150506124a6565b808061249890613e5d565b915050612442565b50600090505b919050565b80600f600084815260200190815260200160002060020160008282546124d19190613d9a565b925050819055505050565b61080073ffffffffffffffffffffffffffffffffffffffff166353266bbb306004846040518463ffffffff1660e01b815260040161251c939291906147aa565b6020604051808303816000875af115801561253b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255f91906147e8565b5050565b600c5481565b600080600090505b6008548110156125e5578280519060200120600f60008381526020019081526020016000206001016040516125a69190613f83565b6040518091039020036125d257600f6000828152602001908152602001600020600001549150506125eb565b80806125dd90613e5d565b915050612571565b50600090505b919050565b606061080173ffffffffffffffffffffffffffffffffffffffff16639ad563b43060046040518363ffffffff1660e01b81526004016126309291906142dd565b600060405180830381865afa15801561264d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061267691906149a2565b905090565b60005b6006548110156126e157600d6000828152602001908152602001600020600080820160006126ac9190613077565b6001820160006126bc9190613077565b6002820160006126cc9190613077565b505080806126d990613e5d565b91505061267e565b5060005b60075481101561273057600e600082815260200190815260200160002060008082016000905560018201600061271b9190613077565b5050808061272890613e5d565b9150506126e5565b5060005b60085481101561278757600f600082815260200190815260200160002060008082016000905560018201600061276a9190613077565b60028201600090555050808061277f90613e5d565b915050612734565b5060005b6007548110156127de576010600082815260200190815260200160002060008082016000905560018201600090556002820160006127c99190613077565b505080806127d690613e5d565b91505061278b565b5060005b600b54811015612835576012600082815260200190815260200160002060008082016000905560018201600090556002820160006128209190613077565b5050808061282d90613e5d565b9150506127e2565b5060005b600c5481101561288c576013600082815260200190815260200160002060008082016000905560018201600090556002820160006128779190613077565b5050808061288490613e5d565b915050612839565b5060005b600a548110156128e3576011600082815260200190815260200160002060008082016000905560018201600090556002820160006128ce9190613077565b505080806128db90613e5d565b915050612890565b506000600681905550600060078190555060006008819055506000600b819055506000600c819055506000600a81905550565b600061080073ffffffffffffffffffffffffffffffffffffffff1663b6039895327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60006040518463ffffffff1660e01b815260040161297893929190614b24565b6020604051808303816000875af1158015612997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129bb9190614b9a565b9050806129fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129f490614c13565b60405180910390fd5b600061080173ffffffffffffffffffffffffffffffffffffffff16637a9841ed3260016040518363ffffffff1660e01b8152600401612a3d929190614c33565b6020604051808303816000875af1158015612a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a809190614b9a565b905080612ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ab990614caf565b60405180910390fd5b5050565b6012602052806000526040600020600091509050806000015490806001015490806002018054612af590613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054612b2190613dfd565b8015612b6e5780601f10612b4357610100808354040283529160200191612b6e565b820191906000526020600020905b815481529060010190602001808311612b5157829003601f168201915b5050505050905083565b80600f60008481526020019081526020016000206001019081612b9b9190614146565b505050565b6060600060065467ffffffffffffffff811115612bc057612bbf6133bb565b5b604051908082528060200260200182016040528015612bf357816020015b6060815260200190600190039081612bde5790505b50905060005b600654811015612cd357600d60008281526020019081526020016000206001018054612c2490613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054612c5090613dfd565b8015612c9d5780601f10612c7257610100808354040283529160200191612c9d565b820191906000526020600020905b815481529060010190602001808311612c8057829003601f168201915b5050505050828281518110612cb557612cb4613e2e565b5b60200260200101819052508080612ccb90613e5d565b915050612bf9565b508091505090565b80600e60008481526020019081526020016000206001019081612cfe9190614146565b505050565b600060405180606001604052808481526020018381526020016040518060400160405280600581526020017f46616c7365000000000000000000000000000000000000000000000000000000815250815250600d600060065481526020019081526020016000206000820151816000019081612d7f9190614146565b506020820151816001019081612d959190614146565b506040820151816002019081612dab9190614146565b5090505060066000815480929190612dc290613e5d565b9190505550600654905092915050565b60085481565b600060405180606001604052808481526020018581526020016000815250600f60006008548152602001908152602001600020600082015181600001556020820151816001019081612e2a9190614146565b506040820151816002015590505060086000815480929190612e4b90613e5d565b919050555060005b8251811015612eb057612e85600854600954858481518110612e7857612e77613e2e565b5b6020026020010151613017565b60096000815480929190612e9890613e5d565b91905055508080612ea890613e5d565b915050612e53565b5060085490509392505050565b6060600e60008381526020019081526020016000206001018054612ee090613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054612f0c90613dfd565b8015612f595780601f10612f2e57610100808354040283529160200191612f59565b820191906000526020600020905b815481529060010190602001808311612f3c57829003601f168201915b50505050509050919050565b6010602052806000526040600020600091509050806000015490806001015490806002018054612f9490613dfd565b80601f0160208091040260200160405190810160405280929190818152602001828054612fc090613dfd565b801561300d5780601f10612fe25761010080835404028352916020019161300d565b820191906000526020600020905b815481529060010190602001808311612ff057829003601f168201915b5050505050905083565b604051806060016040528084815260200183815260200182815250601060008481526020019081526020016000206000820151816000015560208201518160010155604082015181600201908161306e9190614146565b50905050505050565b50805461308390613dfd565b6000825580601f1061309557506130b4565b601f0160209004906000526020600020908101906130b391906130b7565b5b50565b5b808211156130d05760008160009055506001016130b8565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6130fb816130e8565b811461310657600080fd5b50565b600081359050613118816130f2565b92915050565b60008060408385031215613135576131346130de565b5b600061314385828601613109565b925050602061315485828601613109565b9150509250929050565b600060208284031215613174576131736130de565b5b600061318284828501613109565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156131f15780820151818401526020810190506131d6565b60008484015250505050565b6000601f19601f8301169050919050565b6000613219826131b7565b61322381856131c2565b93506132338185602086016131d3565b61323c816131fd565b840191505092915050565b6000613253838361320e565b905092915050565b6000602082019050919050565b60006132738261318b565b61327d8185613196565b93508360208202850161328f856131a7565b8060005b858110156132cb57848403895281516132ac8582613247565b94506132b78361325b565b925060208a01995050600181019050613293565b50829750879550505050505092915050565b600060208201905081810360008301526132f78184613268565b905092915050565b613308816130e8565b82525050565b600060208201905061332360008301846132ff565b92915050565b600082825260208201905092915050565b6000613345826131b7565b61334f8185613329565b935061335f8185602086016131d3565b613368816131fd565b840191505092915050565b600060608201905061338860008301866132ff565b61339560208301856132ff565b81810360408301526133a7818461333a565b9050949350505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6133f3826131fd565b810181811067ffffffffffffffff82111715613412576134116133bb565b5b80604052505050565b60006134256130d4565b905061343182826133ea565b919050565b600067ffffffffffffffff821115613451576134506133bb565b5b61345a826131fd565b9050602081019050919050565b82818337600083830152505050565b600061348961348484613436565b61341b565b9050828152602081018484840111156134a5576134a46133b6565b5b6134b0848285613467565b509392505050565b600082601f8301126134cd576134cc6133b1565b5b81356134dd848260208601613476565b91505092915050565b6000602082840312156134fc576134fb6130de565b5b600082013567ffffffffffffffff81111561351a576135196130e3565b5b613526848285016134b8565b91505092915050565b60006060820190508181036000830152613549818661333a565b9050818103602083015261355d818561333a565b90508181036040830152613571818461333a565b9050949350505050565b60008060408385031215613592576135916130de565b5b60006135a085828601613109565b925050602083013567ffffffffffffffff8111156135c1576135c06130e3565b5b6135cd858286016134b8565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008160070b9050919050565b61361981613603565b82525050565b613628816130e8565b82525050565b6080820160008201516136446000850182613610565b5060208201516136576020850182613610565b50604082015161366a604085018261361f565b50606082015161367d606085018261361f565b50505050565b600061368f838361362e565b60808301905092915050565b6000602082019050919050565b60006136b3826135d7565b6136bd81856135e2565b93506136c8836135f3565b8060005b838110156136f95781516136e08882613683565b97506136eb8361369b565b9250506001810190506136cc565b5085935050505092915050565b6000602082019050818103600083015261372081846136a8565b905092915050565b600060608201905061373d60008301866132ff565b818103602083015261374f818561333a565b905061375e60408301846132ff565b949350505050565b60006020820190508181036000830152613780818461333a565b905092915050565b6000806040838503121561379f5761379e6130de565b5b600083013567ffffffffffffffff8111156137bd576137bc6130e3565b5b6137c9858286016134b8565b92505060206137da85828601613109565b9150509250929050565b6137ed81613603565b82525050565b600060408201905061380860008301856137e4565b61381560208301846132ff565b9392505050565b600060408201905061383160008301856132ff565b8181036020830152613843818461333a565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000613884838361361f565b60208301905092915050565b6000602082019050919050565b60006138a88261384c565b6138b28185613857565b93506138bd83613868565b8060005b838110156138ee5781516138d58882613878565b97506138e083613890565b9250506001810190506138c1565b5085935050505092915050565b60006020820190508181036000830152613915818461389d565b905092915050565b600080600060608486031215613936576139356130de565b5b600061394486828701613109565b935050602061395586828701613109565b925050604084013567ffffffffffffffff811115613976576139756130e3565b5b613982868287016134b8565b9150509250925092565b6000806000606084860312156139a5576139a46130de565b5b60006139b386828701613109565b935050602084013567ffffffffffffffff8111156139d4576139d36130e3565b5b6139e0868287016134b8565b925050604084013567ffffffffffffffff811115613a0157613a006130e3565b5b613a0d868287016134b8565b9150509250925092565b6000602082019050613a2c60008301846137e4565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060ff82169050919050565b613a7481613a5e565b82525050565b60006060830160008301518482036000860152613a97828261320e565b9150506020830151613aac602086018261361f565b506040830151613abf6040860182613a6b565b508091505092915050565b6000613ad68383613a7a565b905092915050565b6000602082019050919050565b6000613af682613a32565b613b008185613a3d565b935083602082028501613b1285613a4e565b8060005b85811015613b4e5784840389528151613b2f8582613aca565b9450613b3a83613ade565b925060208a01995050600181019050613b16565b50829750879550505050505092915050565b60006020820190508181036000830152613b7a8184613aeb565b905092915050565b60008060408385031215613b9957613b986130de565b5b600083013567ffffffffffffffff811115613bb757613bb66130e3565b5b613bc3858286016134b8565b925050602083013567ffffffffffffffff811115613be457613be36130e3565b5b613bf0858286016134b8565b9150509250929050565b600067ffffffffffffffff821115613c1557613c146133bb565b5b602082029050602081019050919050565b600080fd5b6000613c3e613c3984613bfa565b61341b565b90508083825260208201905060208402830185811115613c6157613c60613c26565b5b835b81811015613ca857803567ffffffffffffffff811115613c8657613c856133b1565b5b808601613c9389826134b8565b85526020850194505050602081019050613c63565b5050509392505050565b600082601f830112613cc757613cc66133b1565b5b8135613cd7848260208601613c2b565b91505092915050565b600080600060608486031215613cf957613cf86130de565b5b600084013567ffffffffffffffff811115613d1757613d166130e3565b5b613d23868287016134b8565b9350506020613d3486828701613109565b925050604084013567ffffffffffffffff811115613d5557613d546130e3565b5b613d6186828701613cb2565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613da5826130e8565b9150613db0836130e8565b9250828201905080821115613dc857613dc7613d6b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613e1557607f821691505b602082108103613e2857613e27613dce565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613e68826130e8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613e9a57613e99613d6b565b5b600182019050919050565b600081905092915050565b50565b6000613ec0600083613ea5565b9150613ecb82613eb0565b600082019050919050565b6000613ee182613eb3565b9150819050919050565b60008190508160005260206000209050919050565b60008154613f0d81613dfd565b613f178186613ea5565b94506001821660008114613f325760018114613f4757613f7a565b60ff1983168652811515820286019350613f7a565b613f5085613eeb565b60005b83811015613f7257815481890152600182019150602081019050613f53565b838801955050505b50505092915050565b6000613f8f8284613f00565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613ffc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613fbf565b6140068683613fbf565b95508019841693508086168417925050509392505050565b6000819050919050565b600061404361403e614039846130e8565b61401e565b6130e8565b9050919050565b6000819050919050565b61405d83614028565b6140716140698261404a565b848454613fcc565b825550505050565b600090565b614086614079565b614091818484614054565b505050565b5b818110156140b5576140aa60008261407e565b600181019050614097565b5050565b601f8211156140fa576140cb81613f9a565b6140d484613faf565b810160208510156140e3578190505b6140f76140ef85613faf565b830182614096565b50505b505050565b600082821c905092915050565b600061411d600019846008026140ff565b1980831691505092915050565b6000614136838361410c565b9150826002028217905092915050565b61414f826131b7565b67ffffffffffffffff811115614168576141676133bb565b5b6141728254613dfd565b61417d8282856140b9565b600060209050601f8311600181146141b0576000841561419e578287015190505b6141a8858261412a565b865550614210565b601f1984166141be86613f9a565b60005b828110156141e6578489015182556001820191506020850194506020810190506141c1565b8683101561420357848901516141ff601f89168261410c565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061424382614218565b9050919050565b61425381614238565b82525050565b6000815461426681613dfd565b6142708186613329565b9450600182166000811461428b57600181146142a1576142d4565b60ff1983168652811515602002860193506142d4565b6142aa85613f9a565b60005b838110156142cc578154818901526001820191506020810190506142ad565b808801955050505b50505092915050565b60006040820190506142f2600083018561424a565b81810360208301526143048184614259565b90509392505050565b600067ffffffffffffffff821115614328576143276133bb565b5b602082029050602081019050919050565b600080fd5b600080fd5b61434c81613603565b811461435757600080fd5b50565b60008151905061436981614343565b92915050565b60008151905061437e816130f2565b92915050565b60006080828403121561439a57614399614339565b5b6143a4608061341b565b905060006143b48482850161435a565b60008301525060206143c88482850161435a565b60208301525060406143dc8482850161436f565b60408301525060606143f08482850161436f565b60608301525092915050565b600061440f61440a8461430d565b61341b565b9050808382526020820190506080840283018581111561443257614431613c26565b5b835b8181101561445b57806144478882614384565b845260208401935050608081019050614434565b5050509392505050565b600082601f83011261447a576144796133b1565b5b815161448a8482602086016143fc565b91505092915050565b6000602082840312156144a9576144a86130de565b5b600082015167ffffffffffffffff8111156144c7576144c66130e3565b5b6144d384828501614465565b91505092915050565b60006144ef6144ea84613436565b61341b565b90508281526020810184848401111561450b5761450a6133b6565b5b6145168482856131d3565b509392505050565b600082601f830112614533576145326133b1565b5b81516145438482602086016144dc565b91505092915050565b60006040828403121561456257614561614339565b5b61456c604061341b565b9050600082015167ffffffffffffffff81111561458c5761458b61433e565b5b6145988482850161451e565b60008301525060206145ac8482850161436f565b60208301525092915050565b600080604083850312156145cf576145ce6130de565b5b60006145dd8582860161436f565b925050602083015167ffffffffffffffff8111156145fe576145fd6130e3565b5b61460a8582860161454c565b9150509250929050565b7f5468652074696d6520686173206e6f7420706173736564207965740000000000600082015250565b600061464a601b83613329565b915061465582614614565b602082019050919050565b600060208201905081810360008301526146798161463d565b9050919050565b600067ffffffffffffffff82111561469b5761469a6133bb565b5b602082029050602081019050919050565b60006146bf6146ba84614680565b61341b565b905080838252602082019050602084028301858111156146e2576146e1613c26565b5b835b8181101561472957805167ffffffffffffffff811115614707576147066133b1565b5b808601614714898261454c565b855260208501945050506020810190506146e4565b5050509392505050565b600082601f830112614748576147476133b1565b5b81516147588482602086016146ac565b91505092915050565b600060208284031215614777576147766130de565b5b600082015167ffffffffffffffff811115614795576147946130e3565b5b6147a184828501614733565b91505092915050565b60006060820190506147bf600083018661424a565b81810360208301526147d18185614259565b90506147e060408301846132ff565b949350505050565b6000602082840312156147fe576147fd6130de565b5b600061480c8482850161435a565b91505092915050565b600067ffffffffffffffff8211156148305761482f6133bb565b5b602082029050602081019050919050565b61484a81613a5e565b811461485557600080fd5b50565b60008151905061486781614841565b92915050565b60006060828403121561488357614882614339565b5b61488d606061341b565b9050600082015167ffffffffffffffff8111156148ad576148ac61433e565b5b6148b98482850161451e565b60008301525060206148cd8482850161436f565b60208301525060406148e184828501614858565b60408301525092915050565b60006149006148fb84614815565b61341b565b9050808382526020820190506020840283018581111561492357614922613c26565b5b835b8181101561496a57805167ffffffffffffffff811115614948576149476133b1565b5b808601614955898261486d565b85526020850194505050602081019050614925565b5050509392505050565b600082601f830112614989576149886133b1565b5b81516149998482602086016148ed565b91505092915050565b6000602082840312156149b8576149b76130de565b5b600082015167ffffffffffffffff8111156149d6576149d56130e3565b5b6149e284828501614974565b91505092915050565b600081549050919050565b60008190508160005260206000209050919050565b60008154614a1881613dfd565b614a2281866131c2565b94506001821660008114614a3d5760018114614a5357614a86565b60ff198316865281151560200286019350614a86565b614a5c85613f9a565b60005b83811015614a7e57815481890152600182019150602081019050614a5f565b808801955050505b50505092915050565b6000614a9b8383614a0b565b905092915050565b6000600182019050919050565b6000614abb826149eb565b614ac58185613196565b935083602082028501614ad7856149f6565b8060005b85811015614b1257848403895281614af38582614a8f565b9450614afe83614aa3565b925060208a01995050600181019050614adb565b50829750879550505050505092915050565b6000606082019050614b39600083018661424a565b614b4660208301856132ff565b8181036040830152614b588184614ab0565b9050949350505050565b60008115159050919050565b614b7781614b62565b8114614b8257600080fd5b50565b600081519050614b9481614b6e565b92915050565b600060208284031215614bb057614baf6130de565b5b6000614bbe84828501614b85565b91505092915050565b7f5374616b696e6720417070726f7665206661696c656400000000000000000000600082015250565b6000614bfd601683613329565b9150614c0882614bc7565b602082019050919050565b60006020820190508181036000830152614c2c81614bf0565b9050919050565b6000604082019050614c48600083018561424a565b8181036020830152614c5a8184614ab0565b90509392505050565b7f446973747269627574696f6e20417070726f7665206661696c65640000000000600082015250565b6000614c99601b83613329565b9150614ca482614c63565b602082019050919050565b60006020820190508181036000830152614cc881614c8c565b905091905056fe4d6f6e657920686173206265656e2073656e7420746f2049646561204f776e6572a2646970667358221220a137b93ac7c5ccda2324736d8102a753b01fae756cb6a63be410d334e2cc282d64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2E4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x803F5B9F GT PUSH2 0x190 JUMPI DUP1 PUSH4 0xAA4CDF2A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC04FE978 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD3791B20 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xC47 JUMPI DUP1 PUSH4 0xE3280C96 EQ PUSH2 0xC72 JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xCAF JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xCEC JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xBB6 JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xBE1 JUMPI DUP1 PUSH4 0xC4C2E364 EQ PUSH2 0xC0A JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0xAB8 JUMPI DUP1 PUSH4 0xAE429E47 EQ PUSH2 0xAF5 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0xB20 JUMPI DUP1 PUSH4 0xB2947C71 EQ PUSH2 0xB37 JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0xB4E JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xB8D JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x90D756A7 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xA1CA9178 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0xA2CDB3A9 EQ PUSH2 0xA3B JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xA64 JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0xA8D JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x90D756A7 EQ PUSH2 0x959 JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x996 JUMPI DUP1 PUSH4 0x9C6353E8 EQ PUSH2 0x9C1 JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x811 JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x84E JUMPI DUP1 PUSH4 0x82FCC732 EQ PUSH2 0x88B JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x8C8 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x92E JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x414D9A2B GT PUSH2 0x24F JUMPI DUP1 PUSH4 0x5D907DA1 GT PUSH2 0x208 JUMPI DUP1 PUSH4 0x71085CAB GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x71085CAB EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0x7495F854 EQ PUSH2 0x76A JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x7A8 JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x7D3 JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x6AF3304E EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x702 JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x414D9A2B EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x42C7652A EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0x53F68802 EQ PUSH2 0x65D JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0x1BA44C4C GT PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x2D5BF5B0 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x50F JUMPI PUSH2 0x2E4 JUMP JUMPDEST DUP1 PUSH4 0xCDD53F6 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x109AC970 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x1B52B9DE EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x3C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH2 0xD2B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BF PUSH2 0x1045 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x422 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x34E6 JUMP JUMPDEST PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x352F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BC PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x536 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A0 PUSH2 0x162E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x3706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60A PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x672 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x3766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x717 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x754 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74F SWAP2 SWAP1 PUSH2 0x3788 JUMP JUMPDEST PUSH2 0x1AD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x761 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x791 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1B42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79F SWAP3 SWAP2 SWAP1 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7BD PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x808 SWAP3 SWAP2 SWAP1 PUSH2 0x381C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x838 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x38FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x875 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x38FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x391D JUMP JUMPDEST PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x398C JUMP JUMPDEST PUSH2 0x1E6E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x918 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x3766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x943 PUSH2 0x1F63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x950 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x980 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x3766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9AB PUSH2 0x208B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F5 SWAP2 SWAP1 PUSH2 0x3A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA25 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x34E6 JUMP JUMPDEST PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA32 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA62 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH2 0x24AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA86 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x24DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA2 PUSH2 0x2563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xADF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xADA SWAP2 SWAP1 PUSH2 0x34E6 JUMP JUMPDEST PUSH2 0x2569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAEC SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0A PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB17 SWAP2 SWAP1 PUSH2 0x3B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB35 PUSH2 0x267B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4C PUSH2 0x2916 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB70 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x2AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB84 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x2B78 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBCB PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD8 SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC08 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC03 SWAP2 SWAP1 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x2CDB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC31 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC2C SWAP2 SWAP1 PUSH2 0x3B82 JUMP JUMPDEST PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3E SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC5C PUSH2 0x2DD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC69 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC94 SWAP2 SWAP1 PUSH2 0x3CE0 JUMP JUMPDEST PUSH2 0x2DD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x2EBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE3 SWAP2 SWAP1 PUSH2 0x3766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD13 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0E SWAP2 SWAP1 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x2F65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD22 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD33 PUSH2 0x2916 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD56 SWAP2 SWAP1 PUSH2 0x3D9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD81 JUMPI PUSH2 0xD80 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDB4 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD9F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xEC5 JUMPI DUP5 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xEB2 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xE07 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE33 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE80 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE55 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE80 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE63 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE98 JUMPI PUSH2 0xE97 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xEAE SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xEBD SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDBF JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF0 JUMPI PUSH2 0xEEF PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF23 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF0E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1034 JUMPI DUP5 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x1013 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xF76 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFA2 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFEF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFC4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFEF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFD2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1007 JUMPI PUSH2 0x1006 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x101E SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x102C SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF2E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1070 SWAP1 PUSH2 0x3ED6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x10EF SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x111B SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1168 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x113D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1168 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x114B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x11D8 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x11AF SWAP2 SWAP1 PUSH2 0x3F83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x11C5 JUMPI DUP1 SWAP2 POP POP PUSH2 0x11DE JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11D0 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x117A JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1206 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1232 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x127F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1254 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x127F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1262 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1294 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12C0 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x130D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x130D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1322 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x134E SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x139B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1370 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x139B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x137E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13C5 JUMPI PUSH2 0x13C4 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13F8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x13E3 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x14D8 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1429 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1455 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1477 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1485 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14BA JUMPI PUSH2 0x14B9 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x14D0 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13FE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0xB SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x153D SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xB PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1554 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xB SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1593 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15BF SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x160C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x160C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA03FFEE1 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166E SWAP3 SWAP2 SWAP1 PUSH2 0x42DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x168B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16B4 SWAP2 SWAP1 PUSH2 0x4493 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x16E2 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x170E SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x175B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1730 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x175B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x173E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1791 JUMPI PUSH2 0x1790 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17C4 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x17AF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x18F7 JUMPI DUP6 PUSH1 0x11 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x1813 JUMPI POP DUP5 PUSH1 0x11 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1839 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1865 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1887 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1895 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18CA JUMPI PUSH2 0x18C9 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x18E1 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x18EF SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17CF JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x241774E6 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1946 SWAP3 SWAP2 SWAP1 PUSH2 0x42DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1963 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198C SWAP2 SWAP1 PUSH2 0x45B8 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x19BF SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19EB SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A38 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A0D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A38 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A1B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 PUSH1 0xC SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xC PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1AB8 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xC SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1B1B SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1B32 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1BA2 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BCE SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C1B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BF0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C1B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BFE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C45 JUMPI PUSH2 0x1C44 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C73 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1CFD JUMPI DUP5 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1CEA JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1CE6 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1CF5 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C7E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xC SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D28 JUMPI PUSH2 0x1D27 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D56 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x1DE0 JUMPI DUP5 PUSH1 0x13 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1DCD JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DB2 JUMPI PUSH2 0x1DB1 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1DC9 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1DD8 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D61 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1E46 SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1E5D SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1E91 SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1EB5 SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1EDE SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F0A SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F57 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F2C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F57 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F3A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F73 PUSH2 0x2916 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x7 SIGNEXTEND PUSH1 0x7 SIGNEXTEND SWAP1 POP DUP1 TIMESTAMP LT ISZERO PUSH2 0x1FE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD8 SWAP1 PUSH2 0x4660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2022 SWAP1 PUSH2 0x3ED6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x205F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4CD0 PUSH1 0x21 SWAP2 CODECOPY SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20DE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x20C9 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x21BE JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x210F SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x213B SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2188 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x215D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2188 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x216B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x21A0 JUMPI PUSH2 0x219F PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x21B6 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20E4 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D0 PUSH2 0x2916 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB46A8D61 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2210 SWAP3 SWAP2 SWAP1 PUSH2 0x42DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x222F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2258 SWAP2 SWAP1 PUSH2 0x4761 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3EDAB33C ADDRESS PUSH1 0x4 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F7 SWAP2 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x7 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x5 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x232F SWAP2 SWAP1 PUSH2 0x3D9A JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x7 SIGNEXTEND PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x239A JUMPI PUSH2 0x2399 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x23CE SWAP1 PUSH2 0x3ED6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x240B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x24A0 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x2477 SWAP2 SWAP1 PUSH2 0x3F83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x248D JUMPI DUP1 SWAP2 POP POP PUSH2 0x24A6 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2498 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2442 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x24D1 SWAP2 SWAP1 PUSH2 0x3D9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x53266BBB ADDRESS PUSH1 0x4 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x253B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x255F SWAP2 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x25E5 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x25A6 SWAP2 SWAP1 PUSH2 0x3F83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x25D2 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x25EB JUMP JUMPDEST DUP1 DUP1 PUSH2 0x25DD SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2571 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9AD563B4 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2630 SWAP3 SWAP2 SWAP1 PUSH2 0x42DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2676 SWAP2 SWAP1 PUSH2 0x49A2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x26E1 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x26AC SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x26BC SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x26CC SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x26D9 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x267E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2730 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x271B SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2728 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26E5 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2787 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x276A SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x277F SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2734 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x27DE JUMPI PUSH1 0x10 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x27C9 SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x27D6 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x278B JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2835 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2820 SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x282D SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27E2 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x288C JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2877 SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2884 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2839 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x28E3 JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x28CE SWAP2 SWAP1 PUSH2 0x3077 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x28DB SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2890 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6039895 ORIGIN PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2978 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2997 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29BB SWAP2 SWAP1 PUSH2 0x4B9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x29FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29F4 SWAP1 PUSH2 0x4C13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7A9841ED ORIGIN PUSH1 0x1 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3D SWAP3 SWAP2 SWAP1 PUSH2 0x4C33 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A80 SWAP2 SWAP1 PUSH2 0x4B9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2AC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AB9 SWAP1 PUSH2 0x4CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2AF5 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B21 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B6E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B43 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B6E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B51 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2B9B SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BC0 JUMPI PUSH2 0x2BBF PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2BF3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2BDE JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2CD3 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2C24 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C50 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C9D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C72 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C9D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C80 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2CB5 JUMPI PUSH2 0x2CB4 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2CCB SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BF9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2CFE SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2D7F SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2D95 SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2DAB SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC2 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2E2A SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2E4B SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2EB0 JUMPI PUSH2 0x2E85 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2E78 JUMPI PUSH2 0x2E77 PUSH2 0x3E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3017 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x2EA8 SWAP1 PUSH2 0x3E5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2E53 JUMP JUMPDEST POP PUSH1 0x8 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2EE0 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F0C SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2F94 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2FC0 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x300D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FE2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x300D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FF0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x306E SWAP2 SWAP1 PUSH2 0x4146 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3083 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x3095 JUMPI POP PUSH2 0x30B4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x30B3 SWAP2 SWAP1 PUSH2 0x30B7 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x30D0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x30B8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30FB DUP2 PUSH2 0x30E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3118 DUP2 PUSH2 0x30F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3135 JUMPI PUSH2 0x3134 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3143 DUP6 DUP3 DUP7 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3154 DUP6 DUP3 DUP7 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3174 JUMPI PUSH2 0x3173 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3182 DUP5 DUP3 DUP6 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31F1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31D6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3219 DUP3 PUSH2 0x31B7 JUMP JUMPDEST PUSH2 0x3223 DUP2 DUP6 PUSH2 0x31C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x3233 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x323C DUP2 PUSH2 0x31FD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3253 DUP4 DUP4 PUSH2 0x320E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3273 DUP3 PUSH2 0x318B JUMP JUMPDEST PUSH2 0x327D DUP2 DUP6 PUSH2 0x3196 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x328F DUP6 PUSH2 0x31A7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x32CB JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x32AC DUP6 DUP3 PUSH2 0x3247 JUMP JUMPDEST SWAP5 POP PUSH2 0x32B7 DUP4 PUSH2 0x325B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3293 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32F7 DUP2 DUP5 PUSH2 0x3268 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3308 DUP2 PUSH2 0x30E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3323 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3345 DUP3 PUSH2 0x31B7 JUMP JUMPDEST PUSH2 0x334F DUP2 DUP6 PUSH2 0x3329 JUMP JUMPDEST SWAP4 POP PUSH2 0x335F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x3368 DUP2 PUSH2 0x31FD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3388 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x32FF JUMP JUMPDEST PUSH2 0x3395 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x32FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x33A7 DUP2 DUP5 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x33F3 DUP3 PUSH2 0x31FD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3412 JUMPI PUSH2 0x3411 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3425 PUSH2 0x30D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3431 DUP3 DUP3 PUSH2 0x33EA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3451 JUMPI PUSH2 0x3450 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH2 0x345A DUP3 PUSH2 0x31FD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3489 PUSH2 0x3484 DUP5 PUSH2 0x3436 JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x34A5 JUMPI PUSH2 0x34A4 PUSH2 0x33B6 JUMP JUMPDEST JUMPDEST PUSH2 0x34B0 DUP5 DUP3 DUP6 PUSH2 0x3467 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x34CD JUMPI PUSH2 0x34CC PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x34DD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3476 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34FC JUMPI PUSH2 0x34FB PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x351A JUMPI PUSH2 0x3519 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3526 DUP5 DUP3 DUP6 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3549 DUP2 DUP7 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x355D DUP2 DUP6 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3571 DUP2 DUP5 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3592 JUMPI PUSH2 0x3591 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35A0 DUP6 DUP3 DUP7 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35C1 JUMPI PUSH2 0x35C0 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x35CD DUP6 DUP3 DUP7 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3619 DUP2 PUSH2 0x3603 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3628 DUP2 PUSH2 0x30E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3644 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3610 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3657 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3610 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x366A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x361F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x367D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x361F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x368F DUP4 DUP4 PUSH2 0x362E JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B3 DUP3 PUSH2 0x35D7 JUMP JUMPDEST PUSH2 0x36BD DUP2 DUP6 PUSH2 0x35E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x36C8 DUP4 PUSH2 0x35F3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x36F9 JUMPI DUP2 MLOAD PUSH2 0x36E0 DUP9 DUP3 PUSH2 0x3683 JUMP JUMPDEST SWAP8 POP PUSH2 0x36EB DUP4 PUSH2 0x369B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x36CC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3720 DUP2 DUP5 PUSH2 0x36A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x373D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x32FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x374F DUP2 DUP6 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP PUSH2 0x375E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x32FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3780 DUP2 DUP5 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x379F JUMPI PUSH2 0x379E PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37BD JUMPI PUSH2 0x37BC PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x37C9 DUP6 DUP3 DUP7 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x37DA DUP6 DUP3 DUP7 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x37ED DUP2 PUSH2 0x3603 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3808 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x37E4 JUMP JUMPDEST PUSH2 0x3815 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x32FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3831 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x32FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3843 DUP2 DUP5 PUSH2 0x333A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3884 DUP4 DUP4 PUSH2 0x361F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A8 DUP3 PUSH2 0x384C JUMP JUMPDEST PUSH2 0x38B2 DUP2 DUP6 PUSH2 0x3857 JUMP JUMPDEST SWAP4 POP PUSH2 0x38BD DUP4 PUSH2 0x3868 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38EE JUMPI DUP2 MLOAD PUSH2 0x38D5 DUP9 DUP3 PUSH2 0x3878 JUMP JUMPDEST SWAP8 POP PUSH2 0x38E0 DUP4 PUSH2 0x3890 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x38C1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3915 DUP2 DUP5 PUSH2 0x389D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3936 JUMPI PUSH2 0x3935 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3944 DUP7 DUP3 DUP8 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3955 DUP7 DUP3 DUP8 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3976 JUMPI PUSH2 0x3975 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3982 DUP7 DUP3 DUP8 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39A5 JUMPI PUSH2 0x39A4 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39B3 DUP7 DUP3 DUP8 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39D4 JUMPI PUSH2 0x39D3 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x39E0 DUP7 DUP3 DUP8 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A01 JUMPI PUSH2 0x3A00 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3A0D DUP7 DUP3 DUP8 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A74 DUP2 PUSH2 0x3A5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x3A97 DUP3 DUP3 PUSH2 0x320E JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3AAC PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x361F JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x3ABF PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3A6B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AD6 DUP4 DUP4 PUSH2 0x3A7A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF6 DUP3 PUSH2 0x3A32 JUMP JUMPDEST PUSH2 0x3B00 DUP2 DUP6 PUSH2 0x3A3D JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3B12 DUP6 PUSH2 0x3A4E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3B4E JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3B2F DUP6 DUP3 PUSH2 0x3ACA JUMP JUMPDEST SWAP5 POP PUSH2 0x3B3A DUP4 PUSH2 0x3ADE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3B16 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B7A DUP2 DUP5 PUSH2 0x3AEB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B99 JUMPI PUSH2 0x3B98 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BB7 JUMPI PUSH2 0x3BB6 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3BC3 DUP6 DUP3 DUP7 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BE4 JUMPI PUSH2 0x3BE3 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3BF0 DUP6 DUP3 DUP7 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3C15 JUMPI PUSH2 0x3C14 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C3E PUSH2 0x3C39 DUP5 PUSH2 0x3BFA JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3C61 JUMPI PUSH2 0x3C60 PUSH2 0x3C26 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CA8 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C86 JUMPI PUSH2 0x3C85 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3C93 DUP10 DUP3 PUSH2 0x34B8 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C63 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CC7 JUMPI PUSH2 0x3CC6 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3CD7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3C2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CF9 JUMPI PUSH2 0x3CF8 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D17 JUMPI PUSH2 0x3D16 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3D23 DUP7 DUP3 DUP8 ADD PUSH2 0x34B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3D34 DUP7 DUP3 DUP8 ADD PUSH2 0x3109 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D55 JUMPI PUSH2 0x3D54 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3D61 DUP7 DUP3 DUP8 ADD PUSH2 0x3CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DA5 DUP3 PUSH2 0x30E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DB0 DUP4 PUSH2 0x30E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3DC8 JUMPI PUSH2 0x3DC7 PUSH2 0x3D6B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3E15 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3E28 JUMPI PUSH2 0x3E27 PUSH2 0x3DCE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E68 DUP3 PUSH2 0x30E8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3E9A JUMPI PUSH2 0x3E99 PUSH2 0x3D6B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC0 PUSH1 0x0 DUP4 PUSH2 0x3EA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ECB DUP3 PUSH2 0x3EB0 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE1 DUP3 PUSH2 0x3EB3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3F0D DUP2 PUSH2 0x3DFD JUMP JUMPDEST PUSH2 0x3F17 DUP2 DUP7 PUSH2 0x3EA5 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3F32 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3F47 JUMPI PUSH2 0x3F7A JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x3F7A JUMP JUMPDEST PUSH2 0x3F50 DUP6 PUSH2 0x3EEB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F72 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F53 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F8F DUP3 DUP5 PUSH2 0x3F00 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3FFC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3FBF JUMP JUMPDEST PUSH2 0x4006 DUP7 DUP4 PUSH2 0x3FBF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4043 PUSH2 0x403E PUSH2 0x4039 DUP5 PUSH2 0x30E8 JUMP JUMPDEST PUSH2 0x401E JUMP JUMPDEST PUSH2 0x30E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x405D DUP4 PUSH2 0x4028 JUMP JUMPDEST PUSH2 0x4071 PUSH2 0x4069 DUP3 PUSH2 0x404A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3FCC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4086 PUSH2 0x4079 JUMP JUMPDEST PUSH2 0x4091 DUP2 DUP5 DUP5 PUSH2 0x4054 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x40B5 JUMPI PUSH2 0x40AA PUSH1 0x0 DUP3 PUSH2 0x407E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4097 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x40FA JUMPI PUSH2 0x40CB DUP2 PUSH2 0x3F9A JUMP JUMPDEST PUSH2 0x40D4 DUP5 PUSH2 0x3FAF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x40E3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x40F7 PUSH2 0x40EF DUP6 PUSH2 0x3FAF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4096 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411D PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x40FF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4136 DUP4 DUP4 PUSH2 0x410C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x414F DUP3 PUSH2 0x31B7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4168 JUMPI PUSH2 0x4167 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH2 0x4172 DUP3 SLOAD PUSH2 0x3DFD JUMP JUMPDEST PUSH2 0x417D DUP3 DUP3 DUP6 PUSH2 0x40B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x41B0 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x419E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x41A8 DUP6 DUP3 PUSH2 0x412A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4210 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x41BE DUP7 PUSH2 0x3F9A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x41E6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x41C1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4203 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x41FF PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x410C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4243 DUP3 PUSH2 0x4218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4253 DUP2 PUSH2 0x4238 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4266 DUP2 PUSH2 0x3DFD JUMP JUMPDEST PUSH2 0x4270 DUP2 DUP7 PUSH2 0x3329 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x428B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x42A1 JUMPI PUSH2 0x42D4 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x42D4 JUMP JUMPDEST PUSH2 0x42AA DUP6 PUSH2 0x3F9A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x42CC JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x42AD JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x42F2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x424A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4304 DUP2 DUP5 PUSH2 0x4259 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4328 JUMPI PUSH2 0x4327 PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x434C DUP2 PUSH2 0x3603 JUMP JUMPDEST DUP2 EQ PUSH2 0x4357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4369 DUP2 PUSH2 0x4343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x437E DUP2 PUSH2 0x30F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x439A JUMPI PUSH2 0x4399 PUSH2 0x4339 JUMP JUMPDEST JUMPDEST PUSH2 0x43A4 PUSH1 0x80 PUSH2 0x341B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x43B4 DUP5 DUP3 DUP6 ADD PUSH2 0x435A JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x43C8 DUP5 DUP3 DUP6 ADD PUSH2 0x435A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x43DC DUP5 DUP3 DUP6 ADD PUSH2 0x436F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x43F0 DUP5 DUP3 DUP6 ADD PUSH2 0x436F JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x440F PUSH2 0x440A DUP5 PUSH2 0x430D JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x80 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4432 JUMPI PUSH2 0x4431 PUSH2 0x3C26 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x445B JUMPI DUP1 PUSH2 0x4447 DUP9 DUP3 PUSH2 0x4384 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x80 DUP2 ADD SWAP1 POP PUSH2 0x4434 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x447A JUMPI PUSH2 0x4479 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x448A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x43FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44A9 JUMPI PUSH2 0x44A8 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44C7 JUMPI PUSH2 0x44C6 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x44D3 DUP5 DUP3 DUP6 ADD PUSH2 0x4465 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44EF PUSH2 0x44EA DUP5 PUSH2 0x3436 JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x450B JUMPI PUSH2 0x450A PUSH2 0x33B6 JUMP JUMPDEST JUMPDEST PUSH2 0x4516 DUP5 DUP3 DUP6 PUSH2 0x31D3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4533 JUMPI PUSH2 0x4532 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4543 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x44DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4562 JUMPI PUSH2 0x4561 PUSH2 0x4339 JUMP JUMPDEST JUMPDEST PUSH2 0x456C PUSH1 0x40 PUSH2 0x341B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x458C JUMPI PUSH2 0x458B PUSH2 0x433E JUMP JUMPDEST JUMPDEST PUSH2 0x4598 DUP5 DUP3 DUP6 ADD PUSH2 0x451E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x45AC DUP5 DUP3 DUP6 ADD PUSH2 0x436F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45CF JUMPI PUSH2 0x45CE PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45DD DUP6 DUP3 DUP7 ADD PUSH2 0x436F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45FE JUMPI PUSH2 0x45FD PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x460A DUP6 DUP3 DUP7 ADD PUSH2 0x454C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468652074696D6520686173206E6F7420706173736564207965740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x464A PUSH1 0x1B DUP4 PUSH2 0x3329 JUMP JUMPDEST SWAP2 POP PUSH2 0x4655 DUP3 PUSH2 0x4614 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4679 DUP2 PUSH2 0x463D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x469B JUMPI PUSH2 0x469A PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46BF PUSH2 0x46BA DUP5 PUSH2 0x4680 JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x46E2 JUMPI PUSH2 0x46E1 PUSH2 0x3C26 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4729 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4707 JUMPI PUSH2 0x4706 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4714 DUP10 DUP3 PUSH2 0x454C JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x46E4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4748 JUMPI PUSH2 0x4747 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4758 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x46AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4777 JUMPI PUSH2 0x4776 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4795 JUMPI PUSH2 0x4794 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x47A1 DUP5 DUP3 DUP6 ADD PUSH2 0x4733 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x47BF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x424A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x47D1 DUP2 DUP6 PUSH2 0x4259 JUMP JUMPDEST SWAP1 POP PUSH2 0x47E0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x32FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47FE JUMPI PUSH2 0x47FD PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x480C DUP5 DUP3 DUP6 ADD PUSH2 0x435A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4830 JUMPI PUSH2 0x482F PUSH2 0x33BB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x484A DUP2 PUSH2 0x3A5E JUMP JUMPDEST DUP2 EQ PUSH2 0x4855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4867 DUP2 PUSH2 0x4841 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4883 JUMPI PUSH2 0x4882 PUSH2 0x4339 JUMP JUMPDEST JUMPDEST PUSH2 0x488D PUSH1 0x60 PUSH2 0x341B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48AD JUMPI PUSH2 0x48AC PUSH2 0x433E JUMP JUMPDEST JUMPDEST PUSH2 0x48B9 DUP5 DUP3 DUP6 ADD PUSH2 0x451E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x48CD DUP5 DUP3 DUP6 ADD PUSH2 0x436F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x48E1 DUP5 DUP3 DUP6 ADD PUSH2 0x4858 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4900 PUSH2 0x48FB DUP5 PUSH2 0x4815 JUMP JUMPDEST PUSH2 0x341B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4923 JUMPI PUSH2 0x4922 PUSH2 0x3C26 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x496A JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4948 JUMPI PUSH2 0x4947 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4955 DUP10 DUP3 PUSH2 0x486D JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4925 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4989 JUMPI PUSH2 0x4988 PUSH2 0x33B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4999 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x48ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49B8 JUMPI PUSH2 0x49B7 PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x49D6 JUMPI PUSH2 0x49D5 PUSH2 0x30E3 JUMP JUMPDEST JUMPDEST PUSH2 0x49E2 DUP5 DUP3 DUP6 ADD PUSH2 0x4974 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4A18 DUP2 PUSH2 0x3DFD JUMP JUMPDEST PUSH2 0x4A22 DUP2 DUP7 PUSH2 0x31C2 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4A3D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4A53 JUMPI PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x4A86 JUMP JUMPDEST PUSH2 0x4A5C DUP6 PUSH2 0x3F9A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A7E JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A5F JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9B DUP4 DUP4 PUSH2 0x4A0B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ABB DUP3 PUSH2 0x49EB JUMP JUMPDEST PUSH2 0x4AC5 DUP2 DUP6 PUSH2 0x3196 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x4AD7 DUP6 PUSH2 0x49F6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4B12 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 PUSH2 0x4AF3 DUP6 DUP3 PUSH2 0x4A8F JUMP JUMPDEST SWAP5 POP PUSH2 0x4AFE DUP4 PUSH2 0x4AA3 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4ADB JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4B39 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x424A JUMP JUMPDEST PUSH2 0x4B46 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x32FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4B58 DUP2 DUP5 PUSH2 0x4AB0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B77 DUP2 PUSH2 0x4B62 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4B94 DUP2 PUSH2 0x4B6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB0 JUMPI PUSH2 0x4BAF PUSH2 0x30DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BBE DUP5 DUP3 DUP6 ADD PUSH2 0x4B85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E6720417070726F7665206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BFD PUSH1 0x16 DUP4 PUSH2 0x3329 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C08 DUP3 PUSH2 0x4BC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C2C DUP2 PUSH2 0x4BF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4C48 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x424A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4C5A DUP2 DUP5 PUSH2 0x4AB0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446973747269627574696F6E20417070726F7665206661696C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C99 PUSH1 0x1B DUP4 PUSH2 0x3329 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CA4 DUP3 PUSH2 0x4C63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CC8 DUP2 PUSH2 0x4C8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID 0x4D PUSH16 0x6E657920686173206265656E2073656E PUSH21 0x20746F2049646561204F776E6572A2646970667358 0x22 SLT KECCAK256 LOG1 CALLDATACOPY 0xB9 GASPRICE 0xC7 0xC5 0xCC 0xDA 0x23 0x24 PUSH20 0x6D8102A753B01FAE756CB6A63BE410D334E2CC28 0x2D PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"208:15597:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12086:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4956:496;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7661:485;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1953:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13774:169;;;;;;;;;;;;;:::i;:::-;;2016:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2721:71;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5460:378;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2160:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4640:308;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10233:359;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3000:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1454:42;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14443:183;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2434:55;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2057:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9584:620;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14235:200;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4017:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11142:346;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13949:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4191:281;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1788:64;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1923:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2304:53;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;10605:531;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11496:540;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9150:426;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3426:273;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8964:165;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2094:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13286:480;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7341:312;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12373:903;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8154:386;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7178:155;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12240:125;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2128:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8548:408;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14062:165;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14636:728;;;;;;;;;;;;;:::i;:::-;;15445:357;;;;;;;;;;;;;:::i;:::-;;2881:54;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;7010:160;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3707:302;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4480:152;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3124:294;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1984:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6026:615;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5846:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2568:74;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;12086:146;12163:22;:20;:22::i;:::-;12217:7;12196;:17;12204:8;12196:17;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;12086:146;;:::o;4956:496::-;5043:15;5110:26;5152:9;;5139:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5110:52;;5173:17;5206:9;5218:1;5206:13;;5201:214;5225:9;;5221:1;:13;5201:214;;;5284:7;5260:10;:13;5271:1;5260:13;;;;;;;;;;;:20;;;:31;5256:148;;5336:10;:13;5347:1;5336:13;;;;;;;;;;;:22;;5312:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;5323:9;5312:21;;;;;;;;:::i;:::-;;;;;;;:46;;;;5377:11;;;;;:::i;:::-;;;;5256:148;5236:3;;;;;:::i;:::-;;;;5201:214;;;;5434:10;5427:17;;;;4956:496;;;:::o;7661:485::-;7750:15;7818:26;7860:10;;7847:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7818:53;;7882:17;7915:9;7927:1;7915:13;;7910:199;7934:10;;7930:1;:14;7910:199;;;7996:8;7970:11;:14;7982:1;7970:14;;;;;;;;;;;:22;;;:34;7966:105;;8047:11;:14;8059:1;8047:14;;;;;;;;;;;:24;;8023:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;8034:9;8023:21;;;;;;;;:::i;:::-;;;;;;;:48;;;;7966:105;8086:11;;;;;:::i;:::-;;;;7946:3;;;;;:::i;:::-;;;;7910:199;;;;8128:10;8121:17;;;;7661:485;;;:::o;1953:24::-;;;;:::o;13774:169::-;13821:15;13839:21;13821:39;;13872:9;13894:10;13886:24;;13918:7;13886:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13871:59;;;13810:133;;13774:169::o;2016:34::-;;;;:::o;2721:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5460:378::-;5555:7;5614:9;5626:1;5614:13;;5609:201;5633:9;;5629:1;:13;5609:201;;;5763:9;5747:27;;;;;;5702:10;:13;5713:1;5702:13;;;;;;;;;;;:22;;5686:40;;;;;;:::i;:::-;;;;;;;;:88;5664:134;;5797:1;5790:8;;;;;5664:134;5644:3;;;;;:::i;:::-;;;;5609:201;;;;5829:1;5822:8;;5460:378;;;;:::o;2160:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4640:308::-;4686:15;4743:26;4785:9;;4772:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4743:52;;4811:9;4806:105;4830:9;;4826:1;:13;4806:105;;;4877:10;:13;4888:1;4877:13;;;;;;;;;;;:22;;4861:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;4872:1;4861:13;;;;;;;;:::i;:::-;;;;;;;:38;;;;4841:3;;;;;:::i;:::-;;;;4806:105;;;;4930:10;4923:17;;;4640:308;:::o;10233:359::-;10334:7;10428:99;;;;;;;;10457:12;;10428:99;;;;10484:9;10428:99;;;;10508:8;10428:99;;;10399:12;:26;10412:12;;10399:26;;;;;;;;;;;:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;10538:12;;:14;;;;;;;;;:::i;:::-;;;;;;10572:12;;10565:19;;10233:359;;;;:::o;3000:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1454:42::-;;;;;;;;;;;;;;;;;:::o;14443:183::-;14498:33;237:42:8;14551:36:3;;;14596:4;14603:14;14551:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14544:74;;14443:183;:::o;2434:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2057:30::-;;;;:::o;9584:620::-;9702:15;9772:26;9814:15;;9801:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9772:58;;9841:17;9874:9;9886:1;9874:13;;9869:300;9893:15;;9889:1;:19;9869:300;;;9987:8;9952:20;:23;9973:1;9952:23;;;;;;;;;;;:31;;;:43;:109;;;;;10052:9;10016:20;:23;10037:1;10016:23;;;;;;;;;;;:32;;;:45;9952:109;9930:201;;;10101:20;:23;10122:1;10101:23;;;;;;;;;;;:30;;10077:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;10088:9;10077:21;;;;;;;;:::i;:::-;;;;;;;:54;;;;9930:201;10146:11;;;;;:::i;:::-;;;;9910:3;;;;;:::i;:::-;;;;9869:300;;;;10186:10;10179:17;;;;9584:620;;;;:::o;14235:200::-;14281:7;14302:13;14318:16;237:42:8;14340:27:3;;;14376:4;14383:14;14340:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14301:97;;;;14416:4;:11;;;14409:18;;;;14235:200;:::o;4017:153::-;4072:13;4136:9;:18;4146:7;4136:18;;;;;;;;;;;:26;;4129:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4017:153;;;:::o;11142:346::-;11245:7;11332:95;;;;;;;;11359:10;;11332:95;;;;11384:11;11332:95;;;;11410:6;11332:95;;;11306:11;:23;11318:10;;11306:23;;;;;;;;;;;:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;11438:10;;:12;;;;;;;;;:::i;:::-;;;;;;11470:10;;11463:17;;11142:346;;;;:::o;13949:101::-;14000:4;14021:21;14014:28;;13949:101;:::o;4191:281::-;4295:7;4378:35;;;;;;;;4394:7;4378:35;;;;4403:9;4378:35;;;4354:10;:21;4365:9;;4354:21;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4424:9;;:11;;;;;;;;;:::i;:::-;;;;;;4455:9;;4448:16;;4191:281;;;;:::o;1788:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1923:23::-;;;;:::o;2304:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10605:531::-;10679:16;10756:36;10809:12;;10795:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10756:66;;10833:15;10864:9;10876:1;10864:13;;10859:231;10883:12;;10879:1;:16;10859:231;;;10949:8;10921:12;:15;10934:1;10921:15;;;;;;;;;;;:24;;;:36;10917:162;;11009:12;:15;11022:1;11009:15;;;;;;;;;;;:26;;;10978:19;10998:7;10978:28;;;;;;;;:::i;:::-;;;;;;;:57;;;;;11054:9;;;;;:::i;:::-;;;;10917:162;10897:3;;;;;:::i;:::-;;;;10859:231;;;;11109:19;11102:26;;;;10605:531;;;:::o;11496:540::-;11574:16;11651:37;11705:10;;11691:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11651:65;;11727:17;11760:9;11772:1;11760:13;;11755:234;11779:10;;11775:1;:14;11755:234;;;11844:10;11815:11;:14;11827:1;11815:14;;;;;;;;;;;:25;;;:39;11811:167;;11909:11;:14;11921:1;11909:14;;;;;;;;;;;:23;;;11875:20;11896:9;11875:31;;;;;;;;:::i;:::-;;;;;;;:57;;;;;11951:11;;;;;:::i;:::-;;;;11811:167;11791:3;;;;;:::i;:::-;;;;11755:234;;;;12008:20;12001:27;;;;11496:540;;;:::o;9150:426::-;9292:7;9402:103;;;;;;;;9440:8;9402:103;;;;9463:9;9402:103;;;;9487:7;9402:103;;;9362:20;:37;9383:15;;9362:37;;;;;;;;;;;:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;9516:15;;:17;;;;;;;;;:::i;:::-;;;;;;9553:15;;9546:22;;9150:426;;;;;:::o;3426:273::-;3632:11;3600:9;:18;3610:7;3600:18;;;;;;;;;;;:29;;:43;;;;;;:::i;:::-;;3683:8;3654:9;:18;3664:7;3654:18;;;;;;;;;;;:26;;:37;;;;;;:::i;:::-;;3426:273;;;:::o;8964:165::-;9023:13;9089:11;:22;9101:9;9089:22;;;;;;;;;;;:32;;9082:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8964:165;;;:::o;2094:27::-;;;;:::o;13286:480::-;13349:13;13381:22;:20;:22::i;:::-;13417:10;13445:20;:30;13466:8;13445:30;;;;;;;;;;;:45;;;;;;;;;;;;13438:53;;13417:75;;13530:2;13511:15;:21;;13503:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;13577:15;13595:20;:30;13616:8;13595:30;;;;;;;;;;;:37;;;13577:55;;13644:9;13666:10;13658:24;;13690:7;13658:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13643:59;;;13715:43;;;;;;;;;;;;;;;;;;;;;;13286:480;;;:::o;7341:312::-;7387:15;7444:26;7486:10;;7473:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7444:53;;7513:9;7508:108;7532:10;;7528:1;:14;7508:108;;;7580:11;:14;7592:1;7580:14;;;;;;;;;;;:24;;7564:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;7575:1;7564:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;7544:3;;;;;:::i;:::-;;;;7508:108;;;;7635:10;7628:17;;;7341:312;:::o;12373:903::-;12437:5;12461:22;:20;:22::i;:::-;12539:24;252:42:7;12566:46:3;;;12621:4;12628:14;12566:77;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12539:104;;12700:15;12718:7;:17;12726:8;12718:17;;;;;;;;;;;;12700:35;;12746:20;237:42:8;12769:27:3;;;12805:4;12812:14;12828:7;12769:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12746:90;;12940:81;;;;;;;;12957:14;12940:81;;;;;;13013:7;12973:20;:30;12994:8;12973:30;;;;;;;;;;;:37;;;:47;;;;:::i;:::-;12940:81;;;12907:20;:30;12928:8;12907:30;;;;;;;;;;;:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13074:23;13100:10;13111:1;13100:13;;;;;;;;:::i;:::-;;;;;;;;:20;;;13074:46;;13132:9;13154:10;13146:24;;13178:15;13146:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13131:67;;;13234:1;13214:7;:17;13222:8;13214:17;;;;;;;;;;;:21;;;;13254:14;13246:22;;;;;;;12373:903;;;:::o;8154:386::-;8252:7;8312:9;8324:1;8312:13;;8307:205;8331:10;;8327:1;:14;8307:205;;;8464:10;8448:28;;;;;;8401:11;:14;8413:1;8401:14;;;;;;;;;;;:24;;8385:42;;;;;;:::i;:::-;;;;;;;;:91;8363:137;;8499:1;8492:8;;;;;8363:137;8343:3;;;;;:::i;:::-;;;;8307:205;;;;8531:1;8524:8;;8154:386;;;;:::o;7178:155::-;7316:9;7281:11;:22;7293:9;7281:22;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;7178:155;;:::o;12240:125::-;237:42:8;12290:25:3;;;12324:4;12331:14;12347:7;12290:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12240:125;:::o;2128:25::-;;;;:::o;8548:408::-;8647:7;8707:9;8719:1;8707:13;;8702:226;8726:10;;8722:1;:14;8702:226;;;8859:10;8843:28;;;;;;8796:11;:14;8808:1;8796:14;;;;;;;;;;;:24;;8780:42;;;;;;:::i;:::-;;;;;;;;:91;8758:158;;8894:11;:14;8906:1;8894:14;;;;;;;;;;;:22;;;8887:29;;;;;8758:158;8738:3;;;;;:::i;:::-;;;;8702:226;;;;8947:1;8940:8;;8548:408;;;;:::o;14062:165::-;14113:16;252:42:7;14149:39:3;;;14197:4;14204:14;14149:70;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14142:77;;14062:165;:::o;14636:728::-;14680:9;14675:58;14699:8;;14695:1;:12;14675:58;;;14721:9;:12;14731:1;14721:12;;;;;;;;;;;;14714:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14709:3;;;;;:::i;:::-;;;;14675:58;;;;14749:9;14744:60;14768:9;;14764:1;:13;14744:60;;;14791:10;:13;14802:1;14791:13;;;;;;;;;;;;14784:20;;;;;;;;;;;;;;:::i;:::-;;;14779:3;;;;;:::i;:::-;;;;14744:60;;;;14820:9;14815:62;14839:10;;14835:1;:14;14815:62;;;14863:11;:14;14875:1;14863:14;;;;;;;;;;;;14856:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;14851:3;;;;;:::i;:::-;;;;14815:62;;;;14893:9;14888:71;14912:9;;14908:1;:13;14888:71;;;14935:21;:24;14957:1;14935:24;;;;;;;;;;;;14928:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14923:3;;;;;:::i;:::-;;;;14888:71;;;;14975:9;14970:65;14994:12;;14990:1;:16;14970:65;;;15020:12;:15;15033:1;15020:15;;;;;;;;;;;;15013:22;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15008:3;;;;;:::i;:::-;;;;14970:65;;;;15051:9;15046:62;15070:10;;15066:1;:14;15046:62;;;15094:11;:14;15106:1;15094:14;;;;;;;;;;;;15087:21;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15082:3;;;;;:::i;:::-;;;;15046:62;;;;15124:9;15119:75;15143:15;;15139:1;:19;15119:75;;;15171:20;:23;15192:1;15171:23;;;;;;;;;;;;15164:30;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15160:3;;;;;:::i;:::-;;;;15119:75;;;;15216:1;15205:8;:12;;;;15240:1;15228:9;:13;;;;15265:1;15252:10;:14;;;;15292:1;15277:12;:16;;;;15317:1;15304:10;:14;;;;15355:1;15337:15;:19;;;;14636:728::o;15445:357::-;15495:15;237:42:8;15513:24:3;;;15538:9;15551:17;15570:14;15513:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15495:90;;15604:10;15596:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;15652:16;252:42:7;15671:29:3;;;15701:9;15712:19;15671:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15652:80;;15751:11;15743:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;15484:318;;15445:357::o;2881:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7010:160::-;7152:10;7117:11;:22;7129:9;7117:22;;;;;;;;;;;:32;;:45;;;;;;:::i;:::-;;7010:160;;:::o;3707:302::-;3752:15;3808:26;3850:8;;3837:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3808:51;;3875:9;3870:102;3894:8;;3890:1;:12;3870:102;;;3940:9;:12;3950:1;3940:12;;;;;;;;;;;:20;;3924:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;3935:1;3924:13;;;;;;;;:::i;:::-;;;;;;;:36;;;;3904:3;;;;;:::i;:::-;;;;3870:102;;;;3991:10;3984:17;;;3707:302;:::o;4480:152::-;4615:9;4583:10;:20;4594:8;4583:20;;;;;;;;;;;:29;;:41;;;;;;:::i;:::-;;4480:152;;:::o;3124:294::-;3236:7;3315:46;;;;;;;;3330:11;3315:46;;;;3343:8;3315:46;;;;;;;;;;;;;;;;;;;;;;;;3293:9;:19;3303:8;;3293:19;;;;;;;;;;;:68;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;3372:8;;:10;;;;;;;;;:::i;:::-;;;;;;3402:8;;3395:15;;3124:294;;;;:::o;1984:25::-;;;;:::o;6026:615::-;6176:7;6263:41;;;;;;;;6280:8;6263:41;;;;6290:10;6263:41;;;;6302:1;6263:41;;;6237:11;:23;6249:10;;6237:23;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6315:10;;:12;;;;;;;;;:::i;:::-;;;;;;6345:9;6340:264;6364:16;:23;6360:1;:27;6340:264;;;6409:147;6455:10;;6484:19;;6522:16;6539:1;6522:19;;;;;;;;:::i;:::-;;;;;;;;6409:27;:147::i;:::-;6571:19;;:21;;;;;;;;;:::i;:::-;;;;;;6389:3;;;;;:::i;:::-;;;;6340:264;;;;6623:10;;6616:17;;6026:615;;;;;:::o;5846:159::-;5903:13;5968:10;:20;5979:8;5968:20;;;;;;;;;;;:29;;5961:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5846:159;;;:::o;2568:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6649:353::-;6861:123;;;;;;;;6901:9;6861:123;;;;6925:18;6861:123;;;;6958:15;6861:123;;;6817:21;:41;6839:18;6817:41;;;;;;;;;;;:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6649:353;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:329::-;1229:6;1278:2;1266:9;1257:7;1253:23;1249:32;1246:119;;;1284:79;;:::i;:::-;1246:119;1404:1;1429:53;1474:7;1465:6;1454:9;1450:22;1429:53;:::i;:::-;1419:63;;1375:117;1170:329;;;;:::o;1505:124::-;1582:6;1616:5;1610:12;1600:22;;1505:124;;;:::o;1635:194::-;1744:11;1778:6;1773:3;1766:19;1818:4;1813:3;1809:14;1794:29;;1635:194;;;;:::o;1835:142::-;1912:4;1935:3;1927:11;;1965:4;1960:3;1956:14;1948:22;;1835:142;;;:::o;1983:99::-;2035:6;2069:5;2063:12;2053:22;;1983:99;;;:::o;2088:159::-;2162:11;2196:6;2191:3;2184:19;2236:4;2231:3;2227:14;2212:29;;2088:159;;;;:::o;2253:246::-;2334:1;2344:113;2358:6;2355:1;2352:13;2344:113;;;2443:1;2438:3;2434:11;2428:18;2424:1;2419:3;2415:11;2408:39;2380:2;2377:1;2373:10;2368:15;;2344:113;;;2491:1;2482:6;2477:3;2473:16;2466:27;2315:184;2253:246;;;:::o;2505:102::-;2546:6;2597:2;2593:7;2588:2;2581:5;2577:14;2573:28;2563:38;;2505:102;;;:::o;2613:357::-;2691:3;2719:39;2752:5;2719:39;:::i;:::-;2774:61;2828:6;2823:3;2774:61;:::i;:::-;2767:68;;2844:65;2902:6;2897:3;2890:4;2883:5;2879:16;2844:65;:::i;:::-;2934:29;2956:6;2934:29;:::i;:::-;2929:3;2925:39;2918:46;;2695:275;2613:357;;;;:::o;2976:196::-;3065:10;3100:66;3162:3;3154:6;3100:66;:::i;:::-;3086:80;;2976:196;;;;:::o;3178:123::-;3258:4;3290;3285:3;3281:14;3273:22;;3178:123;;;:::o;3335:991::-;3474:3;3503:64;3561:5;3503:64;:::i;:::-;3583:96;3672:6;3667:3;3583:96;:::i;:::-;3576:103;;3705:3;3750:4;3742:6;3738:17;3733:3;3729:27;3780:66;3840:5;3780:66;:::i;:::-;3869:7;3900:1;3885:396;3910:6;3907:1;3904:13;3885:396;;;3981:9;3975:4;3971:20;3966:3;3959:33;4032:6;4026:13;4060:84;4139:4;4124:13;4060:84;:::i;:::-;4052:92;;4167:70;4230:6;4167:70;:::i;:::-;4157:80;;4266:4;4261:3;4257:14;4250:21;;3945:336;3932:1;3929;3925:9;3920:14;;3885:396;;;3889:14;4297:4;4290:11;;4317:3;4310:10;;3479:847;;;;;3335:991;;;;:::o;4332:413::-;4495:4;4533:2;4522:9;4518:18;4510:26;;4582:9;4576:4;4572:20;4568:1;4557:9;4553:17;4546:47;4610:128;4733:4;4724:6;4610:128;:::i;:::-;4602:136;;4332:413;;;;:::o;4751:118::-;4838:24;4856:5;4838:24;:::i;:::-;4833:3;4826:37;4751:118;;:::o;4875:222::-;4968:4;5006:2;4995:9;4991:18;4983:26;;5019:71;5087:1;5076:9;5072:17;5063:6;5019:71;:::i;:::-;4875:222;;;;:::o;5103:169::-;5187:11;5221:6;5216:3;5209:19;5261:4;5256:3;5252:14;5237:29;;5103:169;;;;:::o;5278:377::-;5366:3;5394:39;5427:5;5394:39;:::i;:::-;5449:71;5513:6;5508:3;5449:71;:::i;:::-;5442:78;;5529:65;5587:6;5582:3;5575:4;5568:5;5564:16;5529:65;:::i;:::-;5619:29;5641:6;5619:29;:::i;:::-;5614:3;5610:39;5603:46;;5370:285;5278:377;;;;:::o;5661:533::-;5830:4;5868:2;5857:9;5853:18;5845:26;;5881:71;5949:1;5938:9;5934:17;5925:6;5881:71;:::i;:::-;5962:72;6030:2;6019:9;6015:18;6006:6;5962:72;:::i;:::-;6081:9;6075:4;6071:20;6066:2;6055:9;6051:18;6044:48;6109:78;6182:4;6173:6;6109:78;:::i;:::-;6101:86;;5661:533;;;;;;:::o;6200:117::-;6309:1;6306;6299:12;6323:117;6432:1;6429;6422:12;6446:180;6494:77;6491:1;6484:88;6591:4;6588:1;6581:15;6615:4;6612:1;6605:15;6632:281;6715:27;6737:4;6715:27;:::i;:::-;6707:6;6703:40;6845:6;6833:10;6830:22;6809:18;6797:10;6794:34;6791:62;6788:88;;;6856:18;;:::i;:::-;6788:88;6896:10;6892:2;6885:22;6675:238;6632:281;;:::o;6919:129::-;6953:6;6980:20;;:::i;:::-;6970:30;;7009:33;7037:4;7029:6;7009:33;:::i;:::-;6919:129;;;:::o;7054:308::-;7116:4;7206:18;7198:6;7195:30;7192:56;;;7228:18;;:::i;:::-;7192:56;7266:29;7288:6;7266:29;:::i;:::-;7258:37;;7350:4;7344;7340:15;7332:23;;7054:308;;;:::o;7368:146::-;7465:6;7460:3;7455;7442:30;7506:1;7497:6;7492:3;7488:16;7481:27;7368:146;;;:::o;7520:425::-;7598:5;7623:66;7639:49;7681:6;7639:49;:::i;:::-;7623:66;:::i;:::-;7614:75;;7712:6;7705:5;7698:21;7750:4;7743:5;7739:16;7788:3;7779:6;7774:3;7770:16;7767:25;7764:112;;;7795:79;;:::i;:::-;7764:112;7885:54;7932:6;7927:3;7922;7885:54;:::i;:::-;7604:341;7520:425;;;;;:::o;7965:340::-;8021:5;8070:3;8063:4;8055:6;8051:17;8047:27;8037:122;;8078:79;;:::i;:::-;8037:122;8195:6;8182:20;8220:79;8295:3;8287:6;8280:4;8272:6;8268:17;8220:79;:::i;:::-;8211:88;;8027:278;7965:340;;;;:::o;8311:509::-;8380:6;8429:2;8417:9;8408:7;8404:23;8400:32;8397:119;;;8435:79;;:::i;:::-;8397:119;8583:1;8572:9;8568:17;8555:31;8613:18;8605:6;8602:30;8599:117;;;8635:79;;:::i;:::-;8599:117;8740:63;8795:7;8786:6;8775:9;8771:22;8740:63;:::i;:::-;8730:73;;8526:287;8311:509;;;;:::o;8826:715::-;9035:4;9073:2;9062:9;9058:18;9050:26;;9122:9;9116:4;9112:20;9108:1;9097:9;9093:17;9086:47;9150:78;9223:4;9214:6;9150:78;:::i;:::-;9142:86;;9275:9;9269:4;9265:20;9260:2;9249:9;9245:18;9238:48;9303:78;9376:4;9367:6;9303:78;:::i;:::-;9295:86;;9428:9;9422:4;9418:20;9413:2;9402:9;9398:18;9391:48;9456:78;9529:4;9520:6;9456:78;:::i;:::-;9448:86;;8826:715;;;;;;:::o;9547:654::-;9625:6;9633;9682:2;9670:9;9661:7;9657:23;9653:32;9650:119;;;9688:79;;:::i;:::-;9650:119;9808:1;9833:53;9878:7;9869:6;9858:9;9854:22;9833:53;:::i;:::-;9823:63;;9779:117;9963:2;9952:9;9948:18;9935:32;9994:18;9986:6;9983:30;9980:117;;;10016:79;;:::i;:::-;9980:117;10121:63;10176:7;10167:6;10156:9;10152:22;10121:63;:::i;:::-;10111:73;;9906:288;9547:654;;;;;:::o;10207:156::-;10316:6;10350:5;10344:12;10334:22;;10207:156;;;:::o;10369:226::-;10510:11;10544:6;10539:3;10532:19;10584:4;10579:3;10575:14;10560:29;;10369:226;;;;:::o;10601:174::-;10710:4;10733:3;10725:11;;10763:4;10758:3;10754:14;10746:22;;10601:174;;;:::o;10781:90::-;10816:7;10859:5;10856:1;10845:20;10834:31;;10781:90;;;:::o;10877:102::-;10950:22;10966:5;10950:22;:::i;:::-;10945:3;10938:35;10877:102;;:::o;10985:108::-;11062:24;11080:5;11062:24;:::i;:::-;11057:3;11050:37;10985:108;;:::o;11173:904::-;11344:4;11339:3;11335:14;11441:4;11434:5;11430:16;11424:23;11460:59;11513:4;11508:3;11504:14;11490:12;11460:59;:::i;:::-;11359:170;11621:4;11614:5;11610:16;11604:23;11640:59;11693:4;11688:3;11684:14;11670:12;11640:59;:::i;:::-;11539:170;11801:4;11794:5;11790:16;11784:23;11820:63;11877:4;11872:3;11868:14;11854:12;11820:63;:::i;:::-;11719:174;11978:4;11971:5;11967:16;11961:23;11997:63;12054:4;12049:3;12045:14;12031:12;11997:63;:::i;:::-;11903:167;11313:764;11173:904;;:::o;12083:347::-;12236:10;12257:130;12383:3;12375:6;12257:130;:::i;:::-;12419:4;12414:3;12410:14;12396:28;;12083:347;;;;:::o;12436:155::-;12548:4;12580;12575:3;12571:14;12563:22;;12436:155;;;:::o;12675:1068::-;12878:3;12907:96;12997:5;12907:96;:::i;:::-;13019:128;13140:6;13135:3;13019:128;:::i;:::-;13012:135;;13171:98;13263:5;13171:98;:::i;:::-;13292:7;13323:1;13308:410;13333:6;13330:1;13327:13;13308:410;;;13409:6;13403:13;13436:147;13579:3;13564:13;13436:147;:::i;:::-;13429:154;;13606:102;13701:6;13606:102;:::i;:::-;13596:112;;13368:350;13355:1;13352;13348:9;13343:14;;13308:410;;;13312:14;13734:3;13727:10;;12883:860;;;12675:1068;;;;:::o;13749:541::-;13976:4;14014:2;14003:9;13999:18;13991:26;;14063:9;14057:4;14053:20;14049:1;14038:9;14034:17;14027:47;14091:192;14278:4;14269:6;14091:192;:::i;:::-;14083:200;;13749:541;;;;:::o;14296:533::-;14465:4;14503:2;14492:9;14488:18;14480:26;;14516:71;14584:1;14573:9;14569:17;14560:6;14516:71;:::i;:::-;14634:9;14628:4;14624:20;14619:2;14608:9;14604:18;14597:48;14662:78;14735:4;14726:6;14662:78;:::i;:::-;14654:86;;14750:72;14818:2;14807:9;14803:18;14794:6;14750:72;:::i;:::-;14296:533;;;;;;:::o;14835:313::-;14948:4;14986:2;14975:9;14971:18;14963:26;;15035:9;15029:4;15025:20;15021:1;15010:9;15006:17;14999:47;15063:78;15136:4;15127:6;15063:78;:::i;:::-;15055:86;;14835:313;;;;:::o;15154:654::-;15232:6;15240;15289:2;15277:9;15268:7;15264:23;15260:32;15257:119;;;15295:79;;:::i;:::-;15257:119;15443:1;15432:9;15428:17;15415:31;15473:18;15465:6;15462:30;15459:117;;;15495:79;;:::i;:::-;15459:117;15600:63;15655:7;15646:6;15635:9;15631:22;15600:63;:::i;:::-;15590:73;;15386:287;15712:2;15738:53;15783:7;15774:6;15763:9;15759:22;15738:53;:::i;:::-;15728:63;;15683:118;15154:654;;;;;:::o;15814:112::-;15897:22;15913:5;15897:22;:::i;:::-;15892:3;15885:35;15814:112;;:::o;15932:324::-;16049:4;16087:2;16076:9;16072:18;16064:26;;16100:67;16164:1;16153:9;16149:17;16140:6;16100:67;:::i;:::-;16177:72;16245:2;16234:9;16230:18;16221:6;16177:72;:::i;:::-;15932:324;;;;;:::o;16262:423::-;16403:4;16441:2;16430:9;16426:18;16418:26;;16454:71;16522:1;16511:9;16507:17;16498:6;16454:71;:::i;:::-;16572:9;16566:4;16562:20;16557:2;16546:9;16542:18;16535:48;16600:78;16673:4;16664:6;16600:78;:::i;:::-;16592:86;;16262:423;;;;;:::o;16691:114::-;16758:6;16792:5;16786:12;16776:22;;16691:114;;;:::o;16811:184::-;16910:11;16944:6;16939:3;16932:19;16984:4;16979:3;16975:14;16960:29;;16811:184;;;;:::o;17001:132::-;17068:4;17091:3;17083:11;;17121:4;17116:3;17112:14;17104:22;;17001:132;;;:::o;17139:179::-;17208:10;17229:46;17271:3;17263:6;17229:46;:::i;:::-;17307:4;17302:3;17298:14;17284:28;;17139:179;;;;:::o;17324:113::-;17394:4;17426;17421:3;17417:14;17409:22;;17324:113;;;:::o;17473:732::-;17592:3;17621:54;17669:5;17621:54;:::i;:::-;17691:86;17770:6;17765:3;17691:86;:::i;:::-;17684:93;;17801:56;17851:5;17801:56;:::i;:::-;17880:7;17911:1;17896:284;17921:6;17918:1;17915:13;17896:284;;;17997:6;17991:13;18024:63;18083:3;18068:13;18024:63;:::i;:::-;18017:70;;18110:60;18163:6;18110:60;:::i;:::-;18100:70;;17956:224;17943:1;17940;17936:9;17931:14;;17896:284;;;17900:14;18196:3;18189:10;;17597:608;;;17473:732;;;;:::o;18211:373::-;18354:4;18392:2;18381:9;18377:18;18369:26;;18441:9;18435:4;18431:20;18427:1;18416:9;18412:17;18405:47;18469:108;18572:4;18563:6;18469:108;:::i;:::-;18461:116;;18211:373;;;;:::o;18590:799::-;18677:6;18685;18693;18742:2;18730:9;18721:7;18717:23;18713:32;18710:119;;;18748:79;;:::i;:::-;18710:119;18868:1;18893:53;18938:7;18929:6;18918:9;18914:22;18893:53;:::i;:::-;18883:63;;18839:117;18995:2;19021:53;19066:7;19057:6;19046:9;19042:22;19021:53;:::i;:::-;19011:63;;18966:118;19151:2;19140:9;19136:18;19123:32;19182:18;19174:6;19171:30;19168:117;;;19204:79;;:::i;:::-;19168:117;19309:63;19364:7;19355:6;19344:9;19340:22;19309:63;:::i;:::-;19299:73;;19094:288;18590:799;;;;;:::o;19395:979::-;19492:6;19500;19508;19557:2;19545:9;19536:7;19532:23;19528:32;19525:119;;;19563:79;;:::i;:::-;19525:119;19683:1;19708:53;19753:7;19744:6;19733:9;19729:22;19708:53;:::i;:::-;19698:63;;19654:117;19838:2;19827:9;19823:18;19810:32;19869:18;19861:6;19858:30;19855:117;;;19891:79;;:::i;:::-;19855:117;19996:63;20051:7;20042:6;20031:9;20027:22;19996:63;:::i;:::-;19986:73;;19781:288;20136:2;20125:9;20121:18;20108:32;20167:18;20159:6;20156:30;20153:117;;;20189:79;;:::i;:::-;20153:117;20294:63;20349:7;20340:6;20329:9;20325:22;20294:63;:::i;:::-;20284:73;;20079:288;19395:979;;;;;:::o;20380:214::-;20469:4;20507:2;20496:9;20492:18;20484:26;;20520:67;20584:1;20573:9;20569:17;20560:6;20520:67;:::i;:::-;20380:214;;;;:::o;20600:139::-;20692:6;20726:5;20720:12;20710:22;;20600:139;;;:::o;20745:209::-;20869:11;20903:6;20898:3;20891:19;20943:4;20938:3;20934:14;20919:29;;20745:209;;;;:::o;20960:157::-;21052:4;21075:3;21067:11;;21105:4;21100:3;21096:14;21088:22;;20960:157;;;:::o;21123:86::-;21158:7;21198:4;21191:5;21187:16;21176:27;;21123:86;;;:::o;21215:102::-;21288:22;21304:5;21288:22;:::i;:::-;21283:3;21276:35;21215:102;;:::o;21363:774::-;21472:3;21508:4;21503:3;21499:14;21596:4;21589:5;21585:16;21579:23;21649:3;21643:4;21639:14;21632:4;21627:3;21623:14;21616:38;21675:73;21743:4;21729:12;21675:73;:::i;:::-;21667:81;;21523:236;21843:4;21836:5;21832:16;21826:23;21862:63;21919:4;21914:3;21910:14;21896:12;21862:63;:::i;:::-;21769:166;22022:4;22015:5;22011:16;22005:23;22041:59;22094:4;22089:3;22085:14;22071:12;22041:59;:::i;:::-;21945:165;22127:4;22120:11;;21477:660;21363:774;;;;:::o;22143:256::-;22262:10;22297:96;22389:3;22381:6;22297:96;:::i;:::-;22283:110;;22143:256;;;;:::o;22405:138::-;22500:4;22532;22527:3;22523:14;22515:22;;22405:138;;;:::o;22593:1111::-;22762:3;22791:79;22864:5;22791:79;:::i;:::-;22886:111;22990:6;22985:3;22886:111;:::i;:::-;22879:118;;23023:3;23068:4;23060:6;23056:17;23051:3;23047:27;23098:81;23173:5;23098:81;:::i;:::-;23202:7;23233:1;23218:441;23243:6;23240:1;23237:13;23218:441;;;23314:9;23308:4;23304:20;23299:3;23292:33;23365:6;23359:13;23393:114;23502:4;23487:13;23393:114;:::i;:::-;23385:122;;23530:85;23608:6;23530:85;:::i;:::-;23520:95;;23644:4;23639:3;23635:14;23628:21;;23278:381;23265:1;23262;23258:9;23253:14;;23218:441;;;23222:14;23675:4;23668:11;;23695:3;23688:10;;22767:937;;;;;22593:1111;;;;:::o;23710:473::-;23903:4;23941:2;23930:9;23926:18;23918:26;;23990:9;23984:4;23980:20;23976:1;23965:9;23961:17;23954:47;24018:158;24171:4;24162:6;24018:158;:::i;:::-;24010:166;;23710:473;;;;:::o;24189:834::-;24277:6;24285;24334:2;24322:9;24313:7;24309:23;24305:32;24302:119;;;24340:79;;:::i;:::-;24302:119;24488:1;24477:9;24473:17;24460:31;24518:18;24510:6;24507:30;24504:117;;;24540:79;;:::i;:::-;24504:117;24645:63;24700:7;24691:6;24680:9;24676:22;24645:63;:::i;:::-;24635:73;;24431:287;24785:2;24774:9;24770:18;24757:32;24816:18;24808:6;24805:30;24802:117;;;24838:79;;:::i;:::-;24802:117;24943:63;24998:7;24989:6;24978:9;24974:22;24943:63;:::i;:::-;24933:73;;24728:288;24189:834;;;;;:::o;25029:321::-;25116:4;25206:18;25198:6;25195:30;25192:56;;;25228:18;;:::i;:::-;25192:56;25278:4;25270:6;25266:17;25258:25;;25338:4;25332;25328:15;25320:23;;25029:321;;;:::o;25356:117::-;25465:1;25462;25455:12;25495:945;25601:5;25626:91;25642:74;25709:6;25642:74;:::i;:::-;25626:91;:::i;:::-;25617:100;;25737:5;25766:6;25759:5;25752:21;25800:4;25793:5;25789:16;25782:23;;25853:4;25845:6;25841:17;25833:6;25829:30;25882:3;25874:6;25871:15;25868:122;;;25901:79;;:::i;:::-;25868:122;26016:6;25999:435;26033:6;26028:3;26025:15;25999:435;;;26122:3;26109:17;26158:18;26145:11;26142:35;26139:122;;;26180:79;;:::i;:::-;26139:122;26304:11;26296:6;26292:24;26342:47;26385:3;26373:10;26342:47;:::i;:::-;26337:3;26330:60;26419:4;26414:3;26410:14;26403:21;;26075:359;;26059:4;26054:3;26050:14;26043:21;;25999:435;;;26003:21;25607:833;;25495:945;;;;;:::o;26462:390::-;26543:5;26592:3;26585:4;26577:6;26573:17;26569:27;26559:122;;26600:79;;:::i;:::-;26559:122;26717:6;26704:20;26742:104;26842:3;26834:6;26827:4;26819:6;26815:17;26742:104;:::i;:::-;26733:113;;26549:303;26462:390;;;;:::o;26858:1029::-;26980:6;26988;26996;27045:2;27033:9;27024:7;27020:23;27016:32;27013:119;;;27051:79;;:::i;:::-;27013:119;27199:1;27188:9;27184:17;27171:31;27229:18;27221:6;27218:30;27215:117;;;27251:79;;:::i;:::-;27215:117;27356:63;27411:7;27402:6;27391:9;27387:22;27356:63;:::i;:::-;27346:73;;27142:287;27468:2;27494:53;27539:7;27530:6;27519:9;27515:22;27494:53;:::i;:::-;27484:63;;27439:118;27624:2;27613:9;27609:18;27596:32;27655:18;27647:6;27644:30;27641:117;;;27677:79;;:::i;:::-;27641:117;27782:88;27862:7;27853:6;27842:9;27838:22;27782:88;:::i;:::-;27772:98;;27567:313;26858:1029;;;;;:::o;27893:180::-;27941:77;27938:1;27931:88;28038:4;28035:1;28028:15;28062:4;28059:1;28052:15;28079:191;28119:3;28138:20;28156:1;28138:20;:::i;:::-;28133:25;;28172:20;28190:1;28172:20;:::i;:::-;28167:25;;28215:1;28212;28208:9;28201:16;;28236:3;28233:1;28230:10;28227:36;;;28243:18;;:::i;:::-;28227:36;28079:191;;;;:::o;28276:180::-;28324:77;28321:1;28314:88;28421:4;28418:1;28411:15;28445:4;28442:1;28435:15;28462:320;28506:6;28543:1;28537:4;28533:12;28523:22;;28590:1;28584:4;28580:12;28611:18;28601:81;;28667:4;28659:6;28655:17;28645:27;;28601:81;28729:2;28721:6;28718:14;28698:18;28695:38;28692:84;;28748:18;;:::i;:::-;28692:84;28513:269;28462:320;;;:::o;28788:180::-;28836:77;28833:1;28826:88;28933:4;28930:1;28923:15;28957:4;28954:1;28947:15;28974:233;29013:3;29036:24;29054:5;29036:24;:::i;:::-;29027:33;;29082:66;29075:5;29072:77;29069:103;;29152:18;;:::i;:::-;29069:103;29199:1;29192:5;29188:13;29181:20;;28974:233;;;:::o;29213:147::-;29314:11;29351:3;29336:18;;29213:147;;;;:::o;29366:114::-;;:::o;29486:398::-;29645:3;29666:83;29747:1;29742:3;29666:83;:::i;:::-;29659:90;;29758:93;29847:3;29758:93;:::i;:::-;29876:1;29871:3;29867:11;29860:18;;29486:398;;;:::o;29890:379::-;30074:3;30096:147;30239:3;30096:147;:::i;:::-;30089:154;;30260:3;30253:10;;29890:379;;;:::o;30275:144::-;30327:4;30350:3;30342:11;;30373:3;30370:1;30363:14;30407:4;30404:1;30394:18;30386:26;;30275:144;;;:::o;30447:878::-;30552:3;30589:5;30583:12;30618:36;30644:9;30618:36;:::i;:::-;30670:88;30751:6;30746:3;30670:88;:::i;:::-;30663:95;;30789:1;30778:9;30774:17;30805:1;30800:166;;;;30980:1;30975:344;;;;30767:552;;30800:166;30884:4;30880:9;30869;30865:25;30860:3;30853:38;30946:6;30939:14;30932:22;30924:6;30920:35;30915:3;30911:45;30904:52;;30800:166;;30975:344;31042:41;31077:5;31042:41;:::i;:::-;31105:1;31119:154;31133:6;31130:1;31127:13;31119:154;;;31207:7;31201:14;31197:1;31192:3;31188:11;31181:35;31257:1;31248:7;31244:15;31233:26;;31155:4;31152:1;31148:12;31143:17;;31119:154;;;31302:6;31297:3;31293:16;31286:23;;30982:337;;30767:552;;30556:769;;30447:878;;;;:::o;31331:273::-;31462:3;31484:94;31574:3;31565:6;31484:94;:::i;:::-;31477:101;;31595:3;31588:10;;31331:273;;;;:::o;31610:141::-;31659:4;31682:3;31674:11;;31705:3;31702:1;31695:14;31739:4;31736:1;31726:18;31718:26;;31610:141;;;:::o;31757:93::-;31794:6;31841:2;31836;31829:5;31825:14;31821:23;31811:33;;31757:93;;;:::o;31856:107::-;31900:8;31950:5;31944:4;31940:16;31919:37;;31856:107;;;;:::o;31969:393::-;32038:6;32088:1;32076:10;32072:18;32111:97;32141:66;32130:9;32111:97;:::i;:::-;32229:39;32259:8;32248:9;32229:39;:::i;:::-;32217:51;;32301:4;32297:9;32290:5;32286:21;32277:30;;32350:4;32340:8;32336:19;32329:5;32326:30;32316:40;;32045:317;;31969:393;;;;;:::o;32368:60::-;32396:3;32417:5;32410:12;;32368:60;;;:::o;32434:142::-;32484:9;32517:53;32535:34;32544:24;32562:5;32544:24;:::i;:::-;32535:34;:::i;:::-;32517:53;:::i;:::-;32504:66;;32434:142;;;:::o;32582:75::-;32625:3;32646:5;32639:12;;32582:75;;;:::o;32663:269::-;32773:39;32804:7;32773:39;:::i;:::-;32834:91;32883:41;32907:16;32883:41;:::i;:::-;32875:6;32868:4;32862:11;32834:91;:::i;:::-;32828:4;32821:105;32739:193;32663:269;;;:::o;32938:73::-;32983:3;32938:73;:::o;33017:189::-;33094:32;;:::i;:::-;33135:65;33193:6;33185;33179:4;33135:65;:::i;:::-;33070:136;33017:189;;:::o;33212:186::-;33272:120;33289:3;33282:5;33279:14;33272:120;;;33343:39;33380:1;33373:5;33343:39;:::i;:::-;33316:1;33309:5;33305:13;33296:22;;33272:120;;;33212:186;;:::o;33404:543::-;33505:2;33500:3;33497:11;33494:446;;;33539:38;33571:5;33539:38;:::i;:::-;33623:29;33641:10;33623:29;:::i;:::-;33613:8;33609:44;33806:2;33794:10;33791:18;33788:49;;;33827:8;33812:23;;33788:49;33850:80;33906:22;33924:3;33906:22;:::i;:::-;33896:8;33892:37;33879:11;33850:80;:::i;:::-;33509:431;;33494:446;33404:543;;;:::o;33953:117::-;34007:8;34057:5;34051:4;34047:16;34026:37;;33953:117;;;;:::o;34076:169::-;34120:6;34153:51;34201:1;34197:6;34189:5;34186:1;34182:13;34153:51;:::i;:::-;34149:56;34234:4;34228;34224:15;34214:25;;34127:118;34076:169;;;;:::o;34250:295::-;34326:4;34472:29;34497:3;34491:4;34472:29;:::i;:::-;34464:37;;34534:3;34531:1;34527:11;34521:4;34518:21;34510:29;;34250:295;;;;:::o;34550:1395::-;34667:37;34700:3;34667:37;:::i;:::-;34769:18;34761:6;34758:30;34755:56;;;34791:18;;:::i;:::-;34755:56;34835:38;34867:4;34861:11;34835:38;:::i;:::-;34920:67;34980:6;34972;34966:4;34920:67;:::i;:::-;35014:1;35038:4;35025:17;;35070:2;35062:6;35059:14;35087:1;35082:618;;;;35744:1;35761:6;35758:77;;;35810:9;35805:3;35801:19;35795:26;35786:35;;35758:77;35861:67;35921:6;35914:5;35861:67;:::i;:::-;35855:4;35848:81;35717:222;35052:887;;35082:618;35134:4;35130:9;35122:6;35118:22;35168:37;35200:4;35168:37;:::i;:::-;35227:1;35241:208;35255:7;35252:1;35249:14;35241:208;;;35334:9;35329:3;35325:19;35319:26;35311:6;35304:42;35385:1;35377:6;35373:14;35363:24;;35432:2;35421:9;35417:18;35404:31;;35278:4;35275:1;35271:12;35266:17;;35241:208;;;35477:6;35468:7;35465:19;35462:179;;;35535:9;35530:3;35526:19;35520:26;35578:48;35620:4;35612:6;35608:17;35597:9;35578:48;:::i;:::-;35570:6;35563:64;35485:156;35462:179;35687:1;35683;35675:6;35671:14;35667:22;35661:4;35654:36;35089:611;;;35052:887;;34642:1303;;;34550:1395;;:::o;35951:126::-;35988:7;36028:42;36021:5;36017:54;36006:65;;35951:126;;;:::o;36083:96::-;36120:7;36149:24;36167:5;36149:24;:::i;:::-;36138:35;;36083:96;;;:::o;36185:118::-;36272:24;36290:5;36272:24;:::i;:::-;36267:3;36260:37;36185:118;;:::o;36333:831::-;36418:3;36455:5;36449:12;36484:36;36510:9;36484:36;:::i;:::-;36536:71;36600:6;36595:3;36536:71;:::i;:::-;36529:78;;36638:1;36627:9;36623:17;36654:1;36649:164;;;;36827:1;36822:336;;;;36616:542;;36649:164;36733:4;36729:9;36718;36714:25;36709:3;36702:38;36793:6;36786:14;36779:22;36773:4;36769:33;36764:3;36760:43;36753:50;;36649:164;;36822:336;36889:38;36921:5;36889:38;:::i;:::-;36949:1;36963:154;36977:6;36974:1;36971:13;36963:154;;;37051:7;37045:14;37041:1;37036:3;37032:11;37025:35;37101:1;37092:7;37088:15;37077:26;;36999:4;36996:1;36992:12;36987:17;;36963:154;;;37146:1;37141:3;37137:11;37130:18;;36829:329;;36616:542;;36422:742;;36333:831;;;;:::o;37170:417::-;37308:4;37346:2;37335:9;37331:18;37323:26;;37359:71;37427:1;37416:9;37412:17;37403:6;37359:71;:::i;:::-;37477:9;37471:4;37467:20;37462:2;37451:9;37447:18;37440:48;37505:75;37575:4;37566:6;37505:75;:::i;:::-;37497:83;;37170:417;;;;;:::o;37593:353::-;37712:4;37802:18;37794:6;37791:30;37788:56;;;37824:18;;:::i;:::-;37788:56;37874:4;37866:6;37862:17;37854:25;;37934:4;37928;37924:15;37916:23;;37593:353;;;:::o;37952:117::-;38061:1;38058;38051:12;38075:117;38184:1;38181;38174:12;38198:118;38269:22;38285:5;38269:22;:::i;:::-;38262:5;38259:33;38249:61;;38306:1;38303;38296:12;38249:61;38198:118;:::o;38322:139::-;38377:5;38408:6;38402:13;38393:22;;38424:31;38449:5;38424:31;:::i;:::-;38322:139;;;;:::o;38467:143::-;38524:5;38555:6;38549:13;38540:22;;38571:33;38598:5;38571:33;:::i;:::-;38467:143;;;;:::o;38655:997::-;38757:5;38801:4;38789:9;38784:3;38780:19;38776:30;38773:117;;;38809:79;;:::i;:::-;38773:117;38908:21;38924:4;38908:21;:::i;:::-;38899:30;;38998:1;39038:58;39092:3;39083:6;39072:9;39068:22;39038:58;:::i;:::-;39031:4;39024:5;39020:16;39013:84;38939:169;39177:2;39218:58;39272:3;39263:6;39252:9;39248:22;39218:58;:::i;:::-;39211:4;39204:5;39200:16;39193:84;39118:170;39357:2;39398:60;39454:3;39445:6;39434:9;39430:22;39398:60;:::i;:::-;39391:4;39384:5;39380:16;39373:86;39298:172;39532:2;39573:60;39629:3;39620:6;39609:9;39605:22;39573:60;:::i;:::-;39566:4;39559:5;39555:16;39548:86;39480:165;38655:997;;;;:::o;39699:858::-;39848:5;39873:123;39889:106;39988:6;39889:106;:::i;:::-;39873:123;:::i;:::-;39864:132;;40016:5;40045:6;40038:5;40031:21;40079:4;40072:5;40068:16;40061:23;;40132:4;40124:6;40120:17;40112:6;40108:30;40161:3;40153:6;40150:15;40147:122;;;40180:79;;:::i;:::-;40147:122;40295:6;40278:273;40312:6;40307:3;40304:15;40278:273;;;40387:3;40416:90;40502:3;40490:10;40416:90;:::i;:::-;40411:3;40404:103;40536:4;40531:3;40527:14;40520:21;;40354:197;40338:4;40333:3;40329:14;40322:21;;40278:273;;;40282:21;39854:703;;39699:858;;;;;:::o;40604:469::-;40728:5;40777:3;40770:4;40762:6;40758:17;40754:27;40744:122;;40785:79;;:::i;:::-;40744:122;40895:6;40889:13;40920:147;41063:3;41055:6;41048:4;41040:6;41036:17;40920:147;:::i;:::-;40911:156;;40734:339;40604:469;;;;:::o;41079:638::-;41216:6;41265:2;41253:9;41244:7;41240:23;41236:32;41233:119;;;41271:79;;:::i;:::-;41233:119;41412:1;41401:9;41397:17;41391:24;41442:18;41434:6;41431:30;41428:117;;;41464:79;;:::i;:::-;41428:117;41569:131;41692:7;41683:6;41672:9;41668:22;41569:131;:::i;:::-;41559:141;;41362:348;41079:638;;;;:::o;41723:434::-;41812:5;41837:66;41853:49;41895:6;41853:49;:::i;:::-;41837:66;:::i;:::-;41828:75;;41926:6;41919:5;41912:21;41964:4;41957:5;41953:16;42002:3;41993:6;41988:3;41984:16;41981:25;41978:112;;;42009:79;;:::i;:::-;41978:112;42099:52;42144:6;42139:3;42134;42099:52;:::i;:::-;41818:339;41723:434;;;;;:::o;42177:355::-;42244:5;42293:3;42286:4;42278:6;42274:17;42270:27;42260:122;;42301:79;;:::i;:::-;42260:122;42411:6;42405:13;42436:90;42522:3;42514:6;42507:4;42499:6;42495:17;42436:90;:::i;:::-;42427:99;;42250:282;42177:355;;;;:::o;42557:770::-;42639:5;42683:4;42671:9;42666:3;42662:19;42658:30;42655:117;;;42691:79;;:::i;:::-;42655:117;42790:21;42806:4;42790:21;:::i;:::-;42781:30;;42892:1;42881:9;42877:17;42871:24;42922:18;42914:6;42911:30;42908:117;;;42944:79;;:::i;:::-;42908:117;43064:70;43130:3;43121:6;43110:9;43106:22;43064:70;:::i;:::-;43057:4;43050:5;43046:16;43039:96;42821:325;43207:2;43248:60;43304:3;43295:6;43284:9;43280:22;43248:60;:::i;:::-;43241:4;43234:5;43230:16;43223:86;43156:164;42557:770;;;;:::o;43333:704::-;43434:6;43442;43491:2;43479:9;43470:7;43466:23;43462:32;43459:119;;;43497:79;;:::i;:::-;43459:119;43617:1;43642:64;43698:7;43689:6;43678:9;43674:22;43642:64;:::i;:::-;43632:74;;43588:128;43776:2;43765:9;43761:18;43755:25;43807:18;43799:6;43796:30;43793:117;;;43829:79;;:::i;:::-;43793:117;43934:86;44012:7;44003:6;43992:9;43988:22;43934:86;:::i;:::-;43924:96;;43726:304;43333:704;;;;;:::o;44043:177::-;44183:29;44179:1;44171:6;44167:14;44160:53;44043:177;:::o;44226:366::-;44368:3;44389:67;44453:2;44448:3;44389:67;:::i;:::-;44382:74;;44465:93;44554:3;44465:93;:::i;:::-;44583:2;44578:3;44574:12;44567:19;;44226:366;;;:::o;44598:419::-;44764:4;44802:2;44791:9;44787:18;44779:26;;44851:9;44845:4;44841:20;44837:1;44826:9;44822:17;44815:47;44879:131;45005:4;44879:131;:::i;:::-;44871:139;;44598:419;;;:::o;45023:333::-;45122:4;45212:18;45204:6;45201:30;45198:56;;;45234:18;;:::i;:::-;45198:56;45284:4;45276:6;45272:17;45264:25;;45344:4;45338;45334:15;45326:23;;45023:333;;;:::o;45383:996::-;45512:5;45537:103;45553:86;45632:6;45553:86;:::i;:::-;45537:103;:::i;:::-;45528:112;;45660:5;45689:6;45682:5;45675:21;45723:4;45716:5;45712:16;45705:23;;45776:4;45768:6;45764:17;45756:6;45752:30;45805:3;45797:6;45794:15;45791:122;;;45824:79;;:::i;:::-;45791:122;45939:6;45922:451;45956:6;45951:3;45948:15;45922:451;;;46038:3;46032:10;46074:18;46061:11;46058:35;46055:122;;;46096:79;;:::i;:::-;46055:122;46220:11;46212:6;46208:24;46258:70;46324:3;46312:10;46258:70;:::i;:::-;46253:3;46246:83;46358:4;46353:3;46349:14;46342:21;;45998:375;;45982:4;45977:3;45973:14;45966:21;;45922:451;;;45926:21;45518:861;;45383:996;;;;;:::o;46406:429::-;46510:5;46559:3;46552:4;46544:6;46540:17;46536:27;46526:122;;46567:79;;:::i;:::-;46526:122;46677:6;46671:13;46702:127;46825:3;46817:6;46810:4;46802:6;46798:17;46702:127;:::i;:::-;46693:136;;46516:319;46406:429;;;;:::o;46841:598::-;46958:6;47007:2;46995:9;46986:7;46982:23;46978:32;46975:119;;;47013:79;;:::i;:::-;46975:119;47154:1;47143:9;47139:17;47133:24;47184:18;47176:6;47173:30;47170:117;;;47206:79;;:::i;:::-;47170:117;47311:111;47414:7;47405:6;47394:9;47390:22;47311:111;:::i;:::-;47301:121;;47104:328;46841:598;;;;:::o;47445:527::-;47611:4;47649:2;47638:9;47634:18;47626:26;;47662:71;47730:1;47719:9;47715:17;47706:6;47662:71;:::i;:::-;47780:9;47774:4;47770:20;47765:2;47754:9;47750:18;47743:48;47808:75;47878:4;47869:6;47808:75;:::i;:::-;47800:83;;47893:72;47961:2;47950:9;47946:18;47937:6;47893:72;:::i;:::-;47445:527;;;;;;:::o;47978:347::-;48046:6;48095:2;48083:9;48074:7;48070:23;48066:32;48063:119;;;48101:79;;:::i;:::-;48063:119;48221:1;48246:62;48300:7;48291:6;48280:9;48276:22;48246:62;:::i;:::-;48236:72;;48192:126;47978:347;;;;:::o;48331:336::-;48433:4;48523:18;48515:6;48512:30;48509:56;;;48545:18;;:::i;:::-;48509:56;48595:4;48587:6;48583:17;48575:25;;48655:4;48649;48645:15;48637:23;;48331:336;;;:::o;48673:118::-;48744:22;48760:5;48744:22;:::i;:::-;48737:5;48734:33;48724:61;;48781:1;48778;48771:12;48724:61;48673:118;:::o;48797:139::-;48852:5;48883:6;48877:13;48868:22;;48899:31;48924:5;48899:31;:::i;:::-;48797:139;;;;:::o;48964:948::-;49049:5;49093:4;49081:9;49076:3;49072:19;49068:30;49065:117;;;49101:79;;:::i;:::-;49065:117;49200:21;49216:4;49200:21;:::i;:::-;49191:30;;49302:1;49291:9;49287:17;49281:24;49332:18;49324:6;49321:30;49318:117;;;49354:79;;:::i;:::-;49318:117;49474:70;49540:3;49531:6;49520:9;49516:22;49474:70;:::i;:::-;49467:4;49460:5;49456:16;49449:96;49231:325;49617:2;49658:60;49714:3;49705:6;49694:9;49690:22;49658:60;:::i;:::-;49651:4;49644:5;49640:16;49633:86;49566:164;49794:2;49835:58;49889:3;49880:6;49869:9;49865:22;49835:58;:::i;:::-;49828:4;49821:5;49817:16;49810:84;49740:165;48964:948;;;;:::o;49942:1005::-;50074:5;50099:106;50115:89;50197:6;50115:89;:::i;:::-;50099:106;:::i;:::-;50090:115;;50225:5;50254:6;50247:5;50240:21;50288:4;50281:5;50277:16;50270:23;;50341:4;50333:6;50329:17;50321:6;50317:30;50370:3;50362:6;50359:15;50356:122;;;50389:79;;:::i;:::-;50356:122;50504:6;50487:454;50521:6;50516:3;50513:15;50487:454;;;50603:3;50597:10;50639:18;50626:11;50623:35;50620:122;;;50661:79;;:::i;:::-;50620:122;50785:11;50777:6;50773:24;50823:73;50892:3;50880:10;50823:73;:::i;:::-;50818:3;50811:86;50926:4;50921:3;50917:14;50910:21;;50563:378;;50547:4;50542:3;50538:14;50531:21;;50487:454;;;50491:21;50080:867;;49942:1005;;;;;:::o;50977:435::-;51084:5;51133:3;51126:4;51118:6;51114:17;51110:27;51100:122;;51141:79;;:::i;:::-;51100:122;51251:6;51245:13;51276:130;51402:3;51394:6;51387:4;51379:6;51375:17;51276:130;:::i;:::-;51267:139;;51090:322;50977:435;;;;:::o;51418:604::-;51538:6;51587:2;51575:9;51566:7;51562:23;51558:32;51555:119;;;51593:79;;:::i;:::-;51555:119;51734:1;51723:9;51719:17;51713:24;51764:18;51756:6;51753:30;51750:117;;;51786:79;;:::i;:::-;51750:117;51891:114;51997:7;51988:6;51977:9;51973:22;51891:114;:::i;:::-;51881:124;;51684:331;51418:604;;;;:::o;52028:118::-;52099:6;52133:5;52127:12;52117:22;;52028:118;;;:::o;52152:163::-;52223:4;52246:3;52238:11;;52269:3;52266:1;52259:14;52303:4;52300:1;52290:18;52282:26;;52152:163;;;:::o;52345:811::-;52420:3;52457:5;52451:12;52486:36;52512:9;52486:36;:::i;:::-;52538:61;52592:6;52587:3;52538:61;:::i;:::-;52531:68;;52630:1;52619:9;52615:17;52646:1;52641:164;;;;52819:1;52814:336;;;;52608:542;;52641:164;52725:4;52721:9;52710;52706:25;52701:3;52694:38;52785:6;52778:14;52771:22;52765:4;52761:33;52756:3;52752:43;52745:50;;52641:164;;52814:336;52881:38;52913:5;52881:38;:::i;:::-;52941:1;52955:154;52969:6;52966:1;52963:13;52955:154;;;53043:7;53037:14;53033:1;53028:3;53024:11;53017:35;53093:1;53084:7;53080:15;53069:26;;52991:4;52988:1;52984:12;52979:17;;52955:154;;;53138:1;53133:3;53129:11;53122:18;;52821:329;;52608:542;;52424:732;;52345:811;;;;:::o;53162:190::-;53248:10;53283:63;53342:3;53334:6;53283:63;:::i;:::-;53269:77;;53162:190;;;;:::o;53358:117::-;53432:4;53464;53459:3;53455:14;53447:22;;53358:117;;;:::o;53509:957::-;53642:3;53671:58;53723:5;53671:58;:::i;:::-;53745:96;53834:6;53829:3;53745:96;:::i;:::-;53738:103;;53867:3;53912:4;53904:6;53900:17;53895:3;53891:27;53942:60;53996:5;53942:60;:::i;:::-;54025:7;54056:1;54041:380;54066:6;54063:1;54060:13;54041:380;;;54137:9;54131:4;54127:20;54122:3;54115:33;54182:6;54209:81;54285:4;54270:13;54209:81;:::i;:::-;54201:89;;54313:64;54370:6;54313:64;:::i;:::-;54303:74;;54406:4;54401:3;54397:14;54390:21;;54101:320;54088:1;54085;54081:9;54076:14;;54041:380;;;54045:14;54437:4;54430:11;;54457:3;54450:10;;53647:819;;;;;53509:957;;;;:::o;54472:621::-;54685:4;54723:2;54712:9;54708:18;54700:26;;54736:71;54804:1;54793:9;54789:17;54780:6;54736:71;:::i;:::-;54817:72;54885:2;54874:9;54870:18;54861:6;54817:72;:::i;:::-;54936:9;54930:4;54926:20;54921:2;54910:9;54906:18;54899:48;54964:122;55081:4;55072:6;54964:122;:::i;:::-;54956:130;;54472:621;;;;;;:::o;55099:90::-;55133:7;55176:5;55169:13;55162:21;55151:32;;55099:90;;;:::o;55195:116::-;55265:21;55280:5;55265:21;:::i;:::-;55258:5;55255:32;55245:60;;55301:1;55298;55291:12;55245:60;55195:116;:::o;55317:137::-;55371:5;55402:6;55396:13;55387:22;;55418:30;55442:5;55418:30;:::i;:::-;55317:137;;;;:::o;55460:345::-;55527:6;55576:2;55564:9;55555:7;55551:23;55547:32;55544:119;;;55582:79;;:::i;:::-;55544:119;55702:1;55727:61;55780:7;55771:6;55760:9;55756:22;55727:61;:::i;:::-;55717:71;;55673:125;55460:345;;;;:::o;55811:172::-;55951:24;55947:1;55939:6;55935:14;55928:48;55811:172;:::o;55989:366::-;56131:3;56152:67;56216:2;56211:3;56152:67;:::i;:::-;56145:74;;56228:93;56317:3;56228:93;:::i;:::-;56346:2;56341:3;56337:12;56330:19;;55989:366;;;:::o;56361:419::-;56527:4;56565:2;56554:9;56550:18;56542:26;;56614:9;56608:4;56604:20;56600:1;56589:9;56585:17;56578:47;56642:131;56768:4;56642:131;:::i;:::-;56634:139;;56361:419;;;:::o;56786:511::-;56971:4;57009:2;56998:9;56994:18;56986:26;;57022:71;57090:1;57079:9;57075:17;57066:6;57022:71;:::i;:::-;57140:9;57134:4;57130:20;57125:2;57114:9;57110:18;57103:48;57168:122;57285:4;57276:6;57168:122;:::i;:::-;57160:130;;56786:511;;;;;:::o;57303:177::-;57443:29;57439:1;57431:6;57427:14;57420:53;57303:177;:::o;57486:366::-;57628:3;57649:67;57713:2;57708:3;57649:67;:::i;:::-;57642:74;;57725:93;57814:3;57725:93;:::i;:::-;57843:2;57838:3;57834:12;57827:19;;57486:366;;;:::o;57858:419::-;58024:4;58062:2;58051:9;58047:18;58039:26;;58111:9;58105:4;58101:20;58097:1;58086:9;58082:17;58075:47;58139:131;58265:4;58139:131;:::i;:::-;58131:139;;57858:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3950000","executionCost":"infinite","totalCost":"infinite"},"external":{"RedeemDelegetdMoney(uint256)":"infinite","_approveRequiredMsgs()":"infinite","_dao_ids()":"2540","_dao_uris(uint256)":"infinite","_goal_ids()":"2542","_goal_uris(uint256)":"infinite","_ideas_ids()":"2495","_ideas_uris(uint256)":"infinite","_ideas_vote_ids()":"2541","_message_ids()":"2585","_reply_ids()":"2562","_smart_contract_ids()":"2586","_smart_contracts_uris(uint256)":"infinite","add_donation(uint256,uint256)":"infinite","all_goal_ideas_votes(uint256)":"infinite","all_messages(uint256)":"infinite","all_replies(uint256)":"infinite","create_dao(string,string)":"infinite","create_goal(string,uint256)":"infinite","create_goal_ideas_vote(uint256,uint256,string)":"infinite","create_ideas(string,uint256,string[])":"infinite","dao_uri(uint256)":"infinite","donate(uint256,uint256)":"infinite","donated(uint256)":"infinite","getContractBalance()":"451","getContractRewards()":"infinite","getDelegation()":"infinite","getMsgIDs(uint256)":"infinite","getReplyIDs(uint256)":"infinite","getUnbondingDelegation()":"infinite","get_all_daos()":"infinite","get_all_goals()":"infinite","get_all_goals_by_dao_id(uint256)":"infinite","get_all_ideas()":"infinite","get_all_ideas_by_goal_id(uint256)":"infinite","get_goal_id_by_goal_uri(string)":"infinite","get_goal_id_from_ideas_uri(string)":"infinite","get_ideas_id_by_ideas_uri(string)":"infinite","get_ideas_votes_from_goal(uint256,uint256)":"infinite","goal_uri(uint256)":"infinite","ideas_uri(uint256)":"infinite","reset_all()":"infinite","sendMsg(uint256,string)":"infinite","sendReply(uint256,string)":"infinite","set_dao(uint256,string,string)":"infinite","set_goal(uint256,string)":"infinite","set_ideas(uint256,string)":"infinite","stake(uint256)":"infinite","unbondingDelegations(uint256)":"infinite","withdrawAllMoney()":"infinite","withdrawDonatedMoney(uint256)":"infinite"},"internal":{"create_ideas_smart_contract(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{"RedeemDelegetdMoney(uint256)":"90d756a7","_approveRequiredMsgs()":"b2947c71","_dao_ids()":"7bbd582d","_dao_uris(uint256)":"27a568b9","_goal_ids()":"13bf4cea","_goal_uris(uint256)":"7f2035d4","_ideas_ids()":"d3791b20","_ideas_uris(uint256)":"468d0c80","_ideas_vote_ids()":"4a797bd7","_message_ids()":"9077007d","_reply_ids()":"aa2bf5d3","_smart_contract_ids()":"1b592aeb","_smart_contracts_uris(uint256)":"ff4a37ef","add_donation(uint256,uint256)":"a2cdb3a9","all_goal_ideas_votes(uint256)":"1ba44c4c","all_messages(uint256)":"b527d45e","all_replies(uint256)":"3f87a2f4","create_dao(string,string)":"c4c2e364","create_goal(string,uint256)":"71085cab","create_goal_ideas_vote(uint256,uint256,string)":"82fcc732","create_ideas(string,uint256,string[])":"e3280c96","dao_uri(uint256)":"5d907da1","donate(uint256,uint256)":"0cdd53f6","donated(uint256)":"414d9a2b","getContractBalance()":"6f9fb98a","getContractRewards()":"ae429e47","getDelegation()":"53f68802","getMsgIDs(uint256)":"803f5b9f","getReplyIDs(uint256)":"812fae1f","getUnbondingDelegation()":"42c7652a","get_all_daos()":"c04fe978","get_all_goals()":"29b56f60","get_all_goals_by_dao_id(uint256)":"109ac970","get_all_ideas()":"97ee7606","get_all_ideas_by_goal_id(uint256)":"131d44f2","get_goal_id_by_goal_uri(string)":"1e9ac9f5","get_goal_id_from_ideas_uri(string)":"aa4cdf2a","get_ideas_id_by_ideas_uri(string)":"a1ca9178","get_ideas_votes_from_goal(uint256,uint256)":"4be7adb5","goal_uri(uint256)":"e32acc1a","ideas_uri(uint256)":"8d3d2595","reset_all()":"b16060a6","sendMsg(uint256,string)":"2d5bf5b0","sendReply(uint256,string)":"6af3304e","set_dao(uint256,string,string)":"881de858","set_goal(uint256,string)":"c29595c5","set_ideas(uint256,string)":"c04e7430","stake(uint256)":"a694fc3a","unbondingDelegations(uint256)":"7495f854","withdrawAllMoney()":"1b52b9de","withdrawDonatedMoney(uint256)":"9c6353e8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idea_id\",\"type\":\"uint256\"}],\"name\":\"RedeemDelegetdMoney\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_approveRequiredMsgs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_dao_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_dao_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"finished\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_goal_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_goal_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"goal_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ideas_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_vote_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_reply_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_smart_contract_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_smart_contracts_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"smart_contract_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"smart_contract_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_doantion\",\"type\":\"uint256\"}],\"name\":\"add_donation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_goal_ideas_votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_replies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reply_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"create_dao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"create_goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"}],\"name\":\"create_goal_ideas_vote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_smart_contracts\",\"type\":\"string[]\"}],\"name\":\"create_ideas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"dao_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idea_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"donated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDelegation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"}],\"name\":\"getMsgIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"}],\"name\":\"getReplyIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnbondingDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct UnbondingDelegationEntry[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_daos\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_goals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"get_all_goals_by_dao_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_ideas\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"get_all_ideas_by_goal_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_by_goal_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_from_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_ideas_id_by_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"get_ideas_votes_from_goal\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"goal_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset_all\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"sendMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reply\",\"type\":\"string\"}],\"name\":\"sendReply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"set_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"set_goal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"set_ideas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unbondingDelegations\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idea_id\",\"type\":\"uint256\"}],\"name\":\"withdrawDonatedMoney\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_approveRequiredMsgs()\":{\"details\":\"approves the staking and distribution contracts for donating\"}},\"stateVariables\":{\"donated\":{\"details\":\"map to keep track of user deposits to the contract.\"},\"stakingMethods\":{\"details\":\"the required authorizations for Staking and Distribution\"},\"unbondingDelegations\":{\"details\":\"map that keeps track of all currently unbonding delegations\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GreenDAO.sol\":\"GreenDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/GreenDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\r\\nimport \\\"./precompiles/stateful/Staking.sol\\\";\\r\\nimport \\\"./precompiles/stateful/Distribution.sol\\\";\\r\\ncontract GreenDAO  {\\r\\n    struct dao_uri_struct {\\r\\n        string dao_wallet;\\r\\n        string dao_uri;\\r\\n        string finished;\\r\\n    }\\r\\n    struct goal_uri_struct {\\r\\n        uint256 dao_id;\\r\\n        string goal_uri;\\r\\n    }\\r\\n\\r\\n    struct ideas_uri_struct {\\r\\n        uint256 goal_id;\\r\\n        string ideas_uri;\\r\\n        uint256 donation;\\r\\n    }\\r\\n    struct smart_contract_uri_struct {\\r\\n        uint256 smart_contract_id;\\r\\n        uint256 ideas_id;\\r\\n        string smart_contract_uri;\\r\\n    }\\r\\n    struct goal_ideas_votes_struct {\\r\\n        uint256 goal_id;\\r\\n        uint256 ideas_id;\\r\\n        string wallet;\\r\\n    }\\r\\n    struct message_struct {\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string message;\\r\\n    }\\r\\n    struct reply_struct {\\r\\n        uint256 reply_id;\\r\\n        uint256 message_id;\\r\\n        string message;\\r\\n    }\\r\\n\\r\\n    struct UnbondingRequest {\\r\\n        int64 completionTime;\\r\\n        uint256 amount;\\r\\n    }\\r\\n    /// @dev the required authorizations for Staking and Distribution\\r\\n    string[] private stakingMethods = [MSG_DELEGATE, MSG_UNDELEGATE, MSG_REDELEGATE];\\r\\n    string[] private distributionMethods = [MSG_WITHDRAW_DELEGATOR_REWARD];\\r\\n    /// @dev map to keep track of user deposits to the contract.\\r\\n    mapping(uint256 => uint256) public donated;                                // _ideas_ids       => (Ideas) donated amount\\r\\n    uint256 private _total_delegations;\\r\\n    string private _validatorAddr  = \\\"evmosvaloper158wwas4v6fgcu2x3plg70s6u0fm0lle237kltr\\\";\\r\\n    /// @dev map that keeps track of all currently unbonding delegations\\r\\n    mapping(uint256 => UnbondingRequest) public unbondingDelegations;           // _ideas_ids       => (Ideas) UnbondingRequest\\r\\n  \\r\\n\\r\\n    uint256 public _dao_ids;\\r\\n    uint256 public _goal_ids;\\r\\n    uint256 public _ideas_ids;\\r\\n    uint256 public _smart_contract_ids;\\r\\n    uint256 public _ideas_vote_ids;\\r\\n    uint256 public _message_ids;\\r\\n    uint256 public _reply_ids;\\r\\n    mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\\r\\n    mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\\r\\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\\r\\n    mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\\r\\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + Wallet\\r\\n\\r\\n    mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\\r\\n\\r\\n    mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\\r\\n\\r\\n    //Daos\\r\\n    function create_dao(\\r\\n        string memory _dao_wallet,\\r\\n        string memory _dao_uri\\r\\n    ) public returns (uint256) {\\r\\n        //Create Dao into _dao_uris\\r\\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, \\\"False\\\");\\r\\n        _dao_ids++;\\r\\n\\r\\n        return _dao_ids;\\r\\n    }\\r\\n\\r\\n    function set_dao(\\r\\n        uint256 _dao_id,\\r\\n        string memory _dao_wallet,\\r\\n        string memory _dao_uri\\r\\n    ) public {\\r\\n        //Set Dao of wallet and uri\\r\\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\\r\\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_daos() public view returns (string[] memory) {\\r\\n        //Getting all doas\\r\\n        string[] memory _StoreInfo = new string[](_dao_ids);\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) {\\r\\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\\r\\n        //Getting one dao URI\\r\\n        return _dao_uris[_dao_id].dao_uri;\\r\\n    }\\r\\n\\r\\n    //Goals\\r\\n    function create_goal(\\r\\n        string memory _goal_uri,\\r\\n        uint256 _dao_id\\r\\n    ) public returns (uint256) {\\r\\n        //Create goal into _goal_uris\\r\\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\\r\\n        _goal_ids++;\\r\\n\\r\\n        return _goal_ids;\\r\\n    }\\r\\n\\r\\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\\r\\n        //Set goal uri\\r\\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_goals() public view returns (string[] memory) {\\r\\n        //Getting all goals\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_goals_by_dao_id(\\r\\n        uint256 _dao_id\\r\\n    ) public view returns (string[] memory) {\\r\\n        //Getting all goals by dao id\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (_goal_uris[i].dao_id == _dao_id) {\\r\\n                _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\\r\\n                _store_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_by_goal_uri(\\r\\n        string memory _goal_uri\\r\\n    ) public view returns (uint256) {\\r\\n        //Getting goal id by uri\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(_goal_uris[i].goal_uri)) ==\\r\\n                keccak256(bytes(_goal_uri))\\r\\n            ) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\\r\\n        //Getting one goal URI\\r\\n        return _goal_uris[_goal_id].goal_uri;\\r\\n    }\\r\\n\\r\\n    //Ideas\\r\\n    function create_ideas(\\r\\n        string memory _ideas_uri,\\r\\n        uint256 _goal_id,\\r\\n        string[] memory _smart_contracts\\r\\n    ) public returns (uint256) {\\r\\n        //Create ideas into _ideas_uris\\r\\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\\r\\n        _ideas_ids++;\\r\\n\\r\\n        for (uint256 i = 0; i < _smart_contracts.length; i++) {\\r\\n            create_ideas_smart_contract(\\r\\n                _ideas_ids,\\r\\n                _smart_contract_ids,\\r\\n                _smart_contracts[i]\\r\\n            );\\r\\n            _smart_contract_ids++;\\r\\n        }\\r\\n\\r\\n        return _ideas_ids;\\r\\n    }\\r\\n\\r\\n    function create_ideas_smart_contract(\\r\\n        uint256 _ideas_id,\\r\\n        uint256 _smart_contract_id,\\r\\n        string memory _smart_contract\\r\\n    ) private {\\r\\n        _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(\\r\\n            _ideas_id,\\r\\n            _smart_contract_id,\\r\\n            _smart_contract\\r\\n        );\\r\\n        \\r\\n    }\\r\\n\\r\\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\\r\\n        //Set ideas uri\\r\\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\\r\\n    }\\r\\n\\r\\n    function add_donation(uint256 _ideas_id, uint256 _doantion) public {\\r\\n        //Set ideas uri\\r\\n        _ideas_uris[_ideas_id].donation += _doantion;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas() public view returns (string[] memory) {\\r\\n        //Getting all ideas\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas_by_goal_id(\\r\\n        uint256 _goal_id\\r\\n    ) public view returns (string[] memory) {\\r\\n        //Getting all ideas by goal id\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (_ideas_uris[i].goal_id == _goal_id)\\r\\n                _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\\r\\n            _store_id++;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_ideas_id_by_ideas_uri(\\r\\n        string memory _ideas_uri\\r\\n    ) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(_ideas_uris[i].ideas_uri)) ==\\r\\n                keccak256(bytes(_ideas_uri))\\r\\n            ) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_from_ideas_uri(\\r\\n        string memory _ideas_uri\\r\\n    ) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(_ideas_uris[i].ideas_uri)) ==\\r\\n                keccak256(bytes(_ideas_uri))\\r\\n            ) return _ideas_uris[i].goal_id;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\\r\\n        //Getting one ideas URI\\r\\n        return _ideas_uris[_ideas_id].ideas_uri;\\r\\n    }\\r\\n\\r\\n    //Votes\\r\\n    function create_goal_ideas_vote(\\r\\n        uint256 _goal_id,\\r\\n        uint256 _ideas_id,\\r\\n        string memory _wallet\\r\\n    ) public returns (uint256) {\\r\\n        //Create votes into all_goal_ideas_votes\\r\\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(\\r\\n            _goal_id,\\r\\n            _ideas_id,\\r\\n            _wallet\\r\\n        );\\r\\n        _ideas_vote_ids++;\\r\\n\\r\\n        return _ideas_vote_ids;\\r\\n    }\\r\\n\\r\\n    function get_ideas_votes_from_goal(\\r\\n        uint256 _goal_id,\\r\\n        uint256 _ideas_id\\r\\n    ) public view returns (string[] memory) {\\r\\n        //gets all ideas votes from goal\\r\\n        string[] memory _StoreInfo = new string[](_ideas_vote_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\\r\\n            if (\\r\\n                all_goal_ideas_votes[i].goal_id == _goal_id &&\\r\\n                all_goal_ideas_votes[i].ideas_id == _ideas_id\\r\\n            ) _StoreInfo[_store_id] = all_goal_ideas_votes[i].wallet;\\r\\n            _store_id++;\\r\\n        }\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n    \\r\\n    //Messages\\r\\n     function sendMsg(\\r\\n        uint256 _ideas_id,\\r\\n        string memory _message\\r\\n    ) public returns (uint256) {\\r\\n        //Create messsage into all_messages\\r\\n        all_messages[_message_ids] = message_struct(\\r\\n            _message_ids,\\r\\n            _ideas_id,\\r\\n            _message\\r\\n        );\\r\\n        _message_ids++;\\r\\n\\r\\n        return _message_ids;\\r\\n    }\\r\\n   \\r\\n\\r\\n    function getMsgIDs(\\r\\n        uint256 ideas_id\\r\\n    ) public view returns (uint256[] memory ) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\\r\\n        uint256 _msg_id;\\r\\n        for (uint256 i = 0; i < _message_ids; i++) {\\r\\n            if (all_messages[i].ideas_id == ideas_id) {\\r\\n                _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\\r\\n                _msg_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Ideas_Messages;\\r\\n    }\\r\\n    function sendReply(\\r\\n        uint256 _message_id,\\r\\n        string memory _reply\\r\\n    ) public returns (uint256) {\\r\\n        //Create reply into all_replies\\r\\n        all_replies[_reply_ids] = reply_struct(\\r\\n            _reply_ids,\\r\\n            _message_id,\\r\\n            _reply\\r\\n        );\\r\\n        _reply_ids++;\\r\\n\\r\\n        return _reply_ids;\\r\\n    }\\r\\n\\r\\n    function getReplyIDs(\\r\\n        uint256 message_id\\r\\n    ) public view returns (uint256[] memory ) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\\r\\n        uint256 _reply_id;\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) {\\r\\n            if (all_replies[i].message_id == message_id) {\\r\\n                _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\\r\\n                _reply_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Messages_Replys;\\r\\n    }\\r\\n\\r\\n\\r\\n    // Doante with a validator Address\\r\\n    function donate(uint256 _idea_id,uint256 _amount) public payable  {\\r\\n        _approveRequiredMsgs();\\r\\n        donated[_idea_id] += _amount;\\r\\n    }\\r\\n\\r\\n    function stake(uint256 _amount) public {\\r\\n        STAKING_CONTRACT.delegate(address(this), _validatorAddr, _amount);\\r\\n\\r\\n    }\\r\\n\\r\\n    function withdrawDonatedMoney(uint256 _idea_id) public returns (int64) {      \\r\\n        _approveRequiredMsgs();\\r\\n        //Sotring Rewards to smart contract\\r\\n        Coin[] memory newRewards = DISTRIBUTION_CONTRACT.withdrawDelegatorRewards(address(this), _validatorAddr);\\r\\n     \\r\\n        //Withdrawing just unbounding\\r\\n        uint256 _amount = donated[_idea_id];\\r\\n        int64 completionTime = STAKING_CONTRACT.undelegate(address(this), _validatorAddr, _amount);\\r\\n        //Saving undelegated amount into struct by idea_id\\r\\n        unbondingDelegations[_idea_id] = UnbondingRequest(completionTime, unbondingDelegations[_idea_id].amount + _amount);\\r\\n\\r\\n        //Just withdrawing rewards now\\r\\n        uint256 _rewards_amount = newRewards[0].amount;\\r\\n        (bool sent,) = payable(msg.sender).call{value: _rewards_amount}(\\\"\\\");     \\r\\n        donated[_idea_id] = 0;\\r\\n        return  completionTime;\\r\\n    }\\r\\n\\r\\n\\r\\n    function RedeemDelegetdMoney(uint256 _idea_id) public returns (string memory) {      \\r\\n        _approveRequiredMsgs();\\r\\n\\r\\n         uint256 ts = uint256(int256(unbondingDelegations[_idea_id].completionTime));\\r\\n        require(block.timestamp >= ts, \\\"The time has not passed yet\\\");\\r\\n\\r\\n        uint256 _amount = unbondingDelegations[_idea_id].amount;\\r\\n        (bool sent,) = payable(msg.sender).call{value: _amount}(\\\"\\\");\\r\\n\\r\\n        return  \\\"Money has been sent to Idea Owner\\\";\\r\\n    }\\r\\n\\r\\n    function withdrawAllMoney() public  {\\r\\n        uint256 _amount = address(this).balance;\\r\\n        (bool sent,) = payable(msg.sender).call{value: _amount}(\\\"\\\");     \\r\\n    }\\r\\n    function getContractBalance() public view returns (uint) {\\r\\n     return address(this).balance;\\r\\n    }\\r\\n    \\r\\n    function getContractRewards() public view returns (DecCoin[] memory) {\\r\\n        return DISTRIBUTION_CONTRACT.delegationRewards(address(this), _validatorAddr);\\r\\n    }\\r\\n\\r\\n    function getDelegation() public view returns (uint256) {\\r\\n        (uint256 denom , Coin memory coin ) =  STAKING_CONTRACT.delegation(address(this), _validatorAddr);\\r\\n        return coin.amount;\\r\\n    }\\r\\n\\r\\n    function getUnbondingDelegation() public view returns (UnbondingDelegationEntry[] memory) {\\r\\n        return STAKING_CONTRACT.unbondingDelegation(address(this), _validatorAddr);\\r\\n    }\\r\\n\\r\\n\\r\\n    function reset_all() public {\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\\r\\n        for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++)delete all_goal_ideas_votes[i];\\r\\n        _dao_ids = 0;\\r\\n        _goal_ids = 0;\\r\\n        _ideas_ids = 0;\\r\\n        _message_ids = 0;\\r\\n        _reply_ids = 0;        \\r\\n        _ideas_vote_ids = 0;\\r\\n    }\\r\\n    /// @dev approves the staking and distribution contracts for donating\\r\\n    function _approveRequiredMsgs() public {\\r\\n        bool successStk = STAKING_CONTRACT.approve(tx.origin,   type(uint256).max, stakingMethods);\\r\\n        require(successStk, \\\"Staking Approve failed\\\");\\r\\n        bool successDist = DISTRIBUTION_CONTRACT.approve(tx.origin, distributionMethods);\\r\\n        require(successDist, \\\"Distribution Approve failed\\\");\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xcc4ab8981f99f4ce3f026fcb38348a60aa16f61fcaa03abb69d0b3c05ec1968d\",\"license\":\"MIT\"},\"contracts/precompiles/common/Authorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface AuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function increaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n\\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend\\n    /// on behalf of the owner through IBC transfer methods or staking. This is zero by default.\\n    /// @param owner The address of the account owning tokens.\\n    /// @param spender The address of the account able to transfer the tokens.\\n    /// @param method The message type URL of the methods for which the approval should be queried.\\n    /// @return remaining The remaining number of tokens available to be spent.\\n    function allowance(\\n        address owner,\\n        address spender,\\n        string calldata method\\n    ) external view returns (uint256 remaining);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param value The amount of tokens approved to be spent.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256 value\\n    );\\n\\n    /// @dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\\n    /// allowance method. The values field specifies the new allowances and the methods field holds the\\n    /// information for which methods the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param values The amounts of tokens approved to be spent.\\n    event AllowanceChange(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256[] values\\n    );\\n}\\n\",\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/common/GenericAuthorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface GenericAuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Revokes a list of Cosmos transactions.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to revoke.\\n    /// @return revoked Boolean value to indicate if the revocation was successful.\\n    function revoke(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool revoked);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n\\n    /// @dev This event is emitted when an owner revokes a spender's allowance.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Revocation(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n}\\n\",\"keccak256\":\"0x5560defd75b84c2d333dc68120a9d425423ff7cd0c443fcd50209f9d0e0dff88\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/common/Types.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nstruct Dec {\\n    uint256 value;\\n    uint8 precision;\\n}\\n\\n/// @dev Coin is a struct that represents a token with a denomination and an amount.\\nstruct Coin {\\n    string denom;\\n    uint256 amount;\\n}\\n\\n/// @dev DecCoin is a struct that represents a token with a denomination, an amount and a precision.\\nstruct DecCoin {\\n    string denom;\\n    uint256 amount;\\n    uint8 precision;\\n}\\n\\n/// @dev PageResponse is a struct that represents a page response.\\nstruct PageResponse {\\n    bytes nextKey;\\n    uint64 total;\\n}\\n\",\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/stateful/Distribution.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nimport \\\"../common/GenericAuthorization.sol\\\" as genericAuth;\\nimport \\\"../common/Types.sol\\\";\\n\\n/// @dev The DistributionI contract's address.\\naddress constant DISTRIBUTION_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000801;\\n\\n/// @dev Define all the available distribution methods.\\nstring constant MSG_SET_WITHDRAWER_ADDRESS = \\\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\\\";\\nstring constant MSG_WITHDRAW_DELEGATOR_REWARD = \\\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\\\";\\nstring constant MSG_WITHDRAW_VALIDATOR_COMMISSION = \\\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\\\";\\n\\n/// @dev The DistributionI contract's instance.\\nDistributionI constant DISTRIBUTION_CONTRACT = DistributionI(DISTRIBUTION_PRECOMPILE_ADDRESS);\\n\\nstruct ValidatorSlashEvent {\\n    uint64 validatorPeriod;\\n    Dec fraction;\\n}\\n\\nstruct ValidatorDistributionInfo {\\n    string operatorAddress;\\n    DecCoin[] selfBondRewards;\\n    DecCoin[] commission;\\n}\\n\\nstruct DelegationDelegatorReward {\\n    string validatorAddress;\\n    DecCoin[] reward;\\n}\\n\\n/// @author Evmos Team\\n/// @title Distribution Precompile Contract\\n/// @dev The interface through which solidity contracts will interact with Distribution\\n/// @custom:address 0x0000000000000000000000000000000000000801\\ninterface DistributionI is genericAuth.GenericAuthorizationI {\\n    /// TRANSACTIONS\\n    /// @dev Change the address, that can withdraw the rewards of a delegator.\\n    /// Note that this address cannot be a module account.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param withdrawerAddress The address that will be capable of withdrawing rewards for\\n    /// the given delegator address\\n    function setWithdrawAddress(\\n        address delegatorAddress,\\n        string memory withdrawerAddress\\n    ) external returns (bool success);\\n\\n    /// @dev Withdraw the rewards of a delegator from a validator\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @return amount The amount of Coin withdrawn\\n    function withdrawDelegatorRewards(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    )\\n    external\\n    returns (\\n        Coin[] calldata amount\\n    );\\n\\n    /// @dev Withdraws the rewards commission of a validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return amount The amount of Coin withdrawn\\n    function withdrawValidatorCommission(\\n        string memory validatorAddress\\n    )\\n    external\\n    returns (\\n        Coin[] calldata amount\\n    );\\n\\n    /// QUERIES\\n    /// @dev Queries validator commission and self-delegation rewards for validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return distributionInfo The validator's distribution info\\n    function validatorDistributionInfo(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        ValidatorDistributionInfo[] calldata distributionInfo // FIXME: remove unnecessary slice\\n    );\\n\\n    /// @dev Queries the outstanding rewards of a validator address.\\n    /// @param validatorAddress The address of the validator\\n    /// @return rewards The validator's outstanding rewards\\n    function validatorOutstandingRewards(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata rewards\\n    );\\n\\n    /// @dev Queries the accumulated commission for a validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return commission The validator's commission\\n    function validatorCommission(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata commission\\n    );\\n\\n    /// @dev Queries the slashing events for a validator in a given height interval\\n    /// defined by the starting and ending height.\\n    /// @param validatorAddress The address of the validator\\n    /// @param startingHeight The starting height\\n    /// @param endingHeight The ending height\\n    /// @return slashes The validator's slash events\\n    /// @return pageResponse The pagination response for the query\\n    function validatorSlashes(\\n        string memory validatorAddress,\\n        uint64 startingHeight,\\n        uint64 endingHeight\\n    )\\n    external\\n    view\\n    returns (\\n        ValidatorSlashEvent[] calldata slashes,\\n        PageResponse calldata pageResponse\\n    );\\n\\n    /// @dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @return rewards The total rewards accrued by a delegation.\\n    function delegationRewards(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata rewards\\n    );\\n\\n    /// @dev Queries the total rewards accrued by each validator, that a given\\n    /// address has delegated to.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return rewards The total rewards accrued by each validator for a delegator.\\n    /// @return total The total rewards accrued by a delegator.\\n    function delegationTotalRewards(\\n        address delegatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DelegationDelegatorReward[] calldata rewards,\\n        DecCoin[] calldata total\\n    );\\n\\n    /// @dev Queries all validators, that a given address has delegated to.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return validators The addresses of all validators, that were delegated to by the given address.\\n    function delegatorValidators(\\n        address delegatorAddress\\n    ) external view returns (string[] calldata validators);\\n\\n    /// @dev Queries the address capable of withdrawing rewards for a given delegator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return withdrawAddress The address capable of withdrawing rewards for the delegator.\\n    function delegatorWithdrawAddress(\\n        address delegatorAddress\\n    ) external view returns (string memory withdrawAddress);\\n\\n    /// @dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\\n    /// @param caller the caller of the transaction\\n    /// @param withdrawerAddress the newly set withdrawer address\\n    event SetWithdrawerAddress(\\n        address indexed caller,\\n        string withdrawerAddress\\n    );\\n\\n    /// @dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\\n    /// @param delegatorAddress the address of the delegator\\n    /// @param validatorAddress the address of the validator\\n    /// @param amount the amount being withdrawn from the delegation\\n    event WithdrawDelegatorRewards(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount\\n    );\\n\\n    /// @dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\\n    /// @param validatorAddress is the address of the validator\\n    /// @param commission is the total commission earned by the validator\\n    event WithdrawValidatorCommission(\\n        string indexed validatorAddress,\\n        uint256 commission\\n    );\\n}\\n\",\"keccak256\":\"0x6815efb027a2ce3fc4d43073ac9e1dc117b156a74951c17b19f3f531483dc9e1\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/stateful/Staking.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nimport \\\"../common/Authorization.sol\\\" as authorization;\\nimport \\\"../common/Types.sol\\\";\\n\\n/// @dev The StakingI contract's address.\\naddress constant STAKING_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000800;\\n\\n/// @dev The StakingI contract's instance.\\nStakingI constant STAKING_CONTRACT = StakingI(STAKING_PRECOMPILE_ADDRESS);\\n\\n/// @dev Define all the available staking methods.\\nstring constant MSG_DELEGATE = \\\"/cosmos.staking.v1beta1.MsgDelegate\\\";\\nstring constant MSG_UNDELEGATE = \\\"/cosmos.staking.v1beta1.MsgUndelegate\\\";\\nstring constant MSG_REDELEGATE = \\\"/cosmos.staking.v1beta1.MsgBeginRedelegate\\\";\\nstring constant MSG_CANCEL_UNDELEGATION = \\\"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\\\";\\n\\n/// @dev Defines the initial commission rates to be used for creating\\n/// a validator.\\nstruct CommissionRates {\\n    uint256 rate;\\n    uint256 maxRate;\\n    uint256 maxChangeRate;\\n}\\n\\n/// @dev Defines commission parameters for a given validator.\\nstruct Commission {\\n    CommissionRates commissionRates;\\n    uint256 updateTime;\\n}\\n\\n\\n/// @dev Represents a validator in the staking module.\\nstruct Validator {\\n    string operatorAddress;\\n    string consensusPubkey;\\n    bool jailed;\\n    BondStatus status;\\n    uint256 tokens;\\n    uint256 delegatorShares;\\n    string description;\\n    int64 unbondingHeight;\\n    int64 unbondingTime;\\n    uint256 commission;\\n    uint256 minSelfDelegation;\\n}\\n\\nstruct RedelegationResponse {\\n    Redelegation redelegation;\\n    RedelegationEntryResponse[] entries;\\n}\\n\\nstruct Redelegation {\\n    RedelegationEntry[] entries;\\n}\\n\\nstruct RedelegationEntryResponse {\\n    RedelegationEntry redelegationEntry;\\n    uint256 balance;\\n}\\n\\nstruct RedelegationEntry {\\n    int64 creationHeight;\\n    int64 completionTime;\\n    uint256 initialBalance;\\n    uint256 sharesDst;\\n}\\n\\nstruct UnbondingDelegationEntry {\\n    int64 creationHeight;\\n    int64 completionTime;\\n    uint256 initialBalance;\\n    uint256 balance;\\n}\\n\\nstruct PageRequest {\\n    bytes key;\\n    uint64 offset;\\n    uint64 limit;\\n    bool countTotal;\\n    bool reverse;\\n}\\n\\n/// @dev The status of the validator.\\nenum BondStatus {\\n    Unspecified,\\n    Unbonded,\\n    Unbonding,\\n    Bonded\\n}\\n\\n/// @author Evmos Team\\n/// @title Staking Precompiled Contract\\n/// @dev The interface through which solidity contracts will interact with staking.\\n/// We follow this same interface including four-byte function selectors, in the precompile that\\n/// wraps the pallet.\\n/// @custom:address 0x0000000000000000000000000000000000000800\\ninterface StakingI is authorization.AuthorizationI {\\n    /// @dev Defines a method for performing a delegation of coins from a delegator to a validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of the Coin to be delegated to the validator\\n    function delegate(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Defines a method for performing an undelegation from a delegate and a validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount to be undelegated from the validator\\n    /// @return completionTime The time when the undelegation is completed\\n    function undelegate(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Defines a method for performing a redelegation\\n    /// of coins from a delegator and source validator to a destination validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorSrcAddress The validator from which the redelegation is initiated\\n    /// @param validatorDstAddress The validator to which the redelegation is destined\\n    /// @param amount The amount to be redelegated to the validator\\n    /// @return completionTime The time when the redelegation is completed\\n    function redelegate(\\n        address delegatorAddress,\\n        string memory validatorSrcAddress,\\n        string memory validatorDstAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Allows delegators to cancel the unbondingDelegation entry\\n    /// and to delegate back to a previous validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of the Coin\\n    /// @param creationHeight The height at which the unbonding took place\\n    /// @return completionTime The time when the cancellation of the unbonding delegation is completed\\n    function cancelUnbondingDelegation(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount,\\n        uint256 creationHeight\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Queries the given amount of the bond denomination to a validator.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return shares The amount of shares, that the delegator has received.\\n    /// @return balance The amount in Coin, that the delegator has delegated to the given validator.\\n    function delegation(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    ) external view returns (uint256 shares, Coin calldata balance);\\n\\n    /// @dev Returns the delegation shares and coins, that are currently\\n    /// unbonding for a given delegator and validator pair.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return entries The delegations that are currently unbonding.\\n    function unbondingDelegation(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    ) external view returns (UnbondingDelegationEntry[] calldata entries);\\n\\n    /// @dev Queries validator info for a given validator address.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return validators The validator info for the given validator address.\\n    function validator(\\n        string memory validatorAddress\\n    )\\n    external view returns (\\n        Validator[] calldata validators\\n    );\\n\\n    /// @dev Queries all validators that match the given status.\\n    /// @param status Enables to query for validators matching a given status.\\n    /// @param pageRequest Defines an optional pagination for the request.\\n    function validators(\\n        string memory status,\\n        PageRequest calldata pageRequest\\n    ) external view returns (\\n        Validator[] calldata validators,\\n        PageResponse calldata pageResponse\\n    );\\n\\n    /// @dev Queries all redelegations from a source to a destination validator for a given delegator.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\\n    /// @return entries The active redelegations for the given delegator, source and destination validator combination.\\n    function redelegation(\\n        address delegatorAddress,\\n        string memory srcValidatorAddress,\\n        string memory dstValidatorAddress\\n    ) external view returns (RedelegationEntry[] calldata entries);\\n\\n    /// @dev Queries all redelegations from a source to to a destination validator\\n    /// for a given delegator in a specified pagination manner.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\\n    /// @param pageRequest Defines an optional pagination for the request.\\n    /// @return response Holds the redelegations for the given delegator, source and destination validator combination.\\n    function redelegations(\\n        address delegatorAddress,\\n        string memory srcValidatorAddress,\\n        string memory dstValidatorAddress,\\n        PageRequest calldata pageRequest\\n    ) external view returns (RedelegationResponse calldata response);\\n\\n    /// @dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\\n    /// delegator address to the validator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin being delegated\\n    /// @param newShares The new delegation shares being held\\n    event Delegate(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 newShares\\n    );\\n\\n    /// @dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\\n    /// validator address to the delegator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin being unbonded\\n    /// @param completionTime The time at which the unbonding is completed\\n    event Unbond(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 completionTime\\n    );\\n\\n    /// @dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\\n    /// the source validator address to the destination validator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorSrcAddress The address of the validator from which the delegation is retracted\\n    /// @param validatorDstAddress The address of the validator to which the delegation is directed\\n    /// @param amount The amount of Coin being redelegated\\n    /// @param completionTime The time at which the redelegation is completed\\n    event Redelegate(\\n        address indexed delegatorAddress,\\n        string indexed validatorSrcAddress,\\n        string indexed validatorDstAddress,\\n        uint256 amount,\\n        uint256 completionTime\\n    );\\n\\n    /// @dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\\n    /// that are in the process of unbonding from the validator address are bonded again.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin that was in the unbonding process which is to be cancelled\\n    /// @param creationHeight The block height at which the unbonding of a delegation was initiated\\n    event CancelUnbondingDelegation(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 creationHeight\\n    );\\n}\\n\",\"keccak256\":\"0x774d4bf7a848893697fa75fa11a2ec288e6df6f010f9bdd8b3c6010ef007ac67\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1264,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"stakingMethods","offset":0,"slot":"0","type":"t_array(t_string_storage)dyn_storage"},{"astId":1269,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"distributionMethods","offset":0,"slot":"1","type":"t_array(t_string_storage)dyn_storage"},{"astId":1274,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"donated","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1276,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_total_delegations","offset":0,"slot":"3","type":"t_uint256"},{"astId":1279,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_validatorAddr","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1285,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"unbondingDelegations","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(UnbondingRequest)1256_storage)"},{"astId":1287,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_dao_ids","offset":0,"slot":"6","type":"t_uint256"},{"astId":1289,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_goal_ids","offset":0,"slot":"7","type":"t_uint256"},{"astId":1291,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_ideas_ids","offset":0,"slot":"8","type":"t_uint256"},{"astId":1293,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_smart_contract_ids","offset":0,"slot":"9","type":"t_uint256"},{"astId":1295,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_ideas_vote_ids","offset":0,"slot":"10","type":"t_uint256"},{"astId":1297,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_message_ids","offset":0,"slot":"11","type":"t_uint256"},{"astId":1299,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_reply_ids","offset":0,"slot":"12","type":"t_uint256"},{"astId":1304,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_dao_uris","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(dao_uri_struct)1211_storage)"},{"astId":1309,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_goal_uris","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(goal_uri_struct)1216_storage)"},{"astId":1314,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_ideas_uris","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_struct(ideas_uri_struct)1223_storage)"},{"astId":1319,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_smart_contracts_uris","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1230_storage)"},{"astId":1324,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"all_goal_ideas_votes","offset":0,"slot":"17","type":"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1237_storage)"},{"astId":1329,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"all_messages","offset":0,"slot":"18","type":"t_mapping(t_uint256,t_struct(message_struct)1244_storage)"},{"astId":1334,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"all_replies","offset":0,"slot":"19","type":"t_mapping(t_uint256,t_struct(reply_struct)1251_storage)"}],"types":{"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_int64":{"encoding":"inplace","label":"int64","numberOfBytes":"8"},"t_mapping(t_uint256,t_struct(UnbondingRequest)1256_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.UnbondingRequest)","numberOfBytes":"32","value":"t_struct(UnbondingRequest)1256_storage"},"t_mapping(t_uint256,t_struct(dao_uri_struct)1211_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.dao_uri_struct)","numberOfBytes":"32","value":"t_struct(dao_uri_struct)1211_storage"},"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1237_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct)","numberOfBytes":"32","value":"t_struct(goal_ideas_votes_struct)1237_storage"},"t_mapping(t_uint256,t_struct(goal_uri_struct)1216_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.goal_uri_struct)","numberOfBytes":"32","value":"t_struct(goal_uri_struct)1216_storage"},"t_mapping(t_uint256,t_struct(ideas_uri_struct)1223_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.ideas_uri_struct)","numberOfBytes":"32","value":"t_struct(ideas_uri_struct)1223_storage"},"t_mapping(t_uint256,t_struct(message_struct)1244_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.message_struct)","numberOfBytes":"32","value":"t_struct(message_struct)1244_storage"},"t_mapping(t_uint256,t_struct(reply_struct)1251_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.reply_struct)","numberOfBytes":"32","value":"t_struct(reply_struct)1251_storage"},"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1230_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.smart_contract_uri_struct)","numberOfBytes":"32","value":"t_struct(smart_contract_uri_struct)1230_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(UnbondingRequest)1256_storage":{"encoding":"inplace","label":"struct GreenDAO.UnbondingRequest","members":[{"astId":1253,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"completionTime","offset":0,"slot":"0","type":"t_int64"},{"astId":1255,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"amount","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(dao_uri_struct)1211_storage":{"encoding":"inplace","label":"struct GreenDAO.dao_uri_struct","members":[{"astId":1206,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"dao_wallet","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1208,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"dao_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1210,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"finished","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(goal_ideas_votes_struct)1237_storage":{"encoding":"inplace","label":"struct GreenDAO.goal_ideas_votes_struct","members":[{"astId":1232,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1234,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1236,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"wallet","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(goal_uri_struct)1216_storage":{"encoding":"inplace","label":"struct GreenDAO.goal_uri_struct","members":[{"astId":1213,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"dao_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1215,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"goal_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_struct(ideas_uri_struct)1223_storage":{"encoding":"inplace","label":"struct GreenDAO.ideas_uri_struct","members":[{"astId":1218,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1220,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"ideas_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1222,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(message_struct)1244_storage":{"encoding":"inplace","label":"struct GreenDAO.message_struct","members":[{"astId":1239,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1241,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1243,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"message","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(reply_struct)1251_storage":{"encoding":"inplace","label":"struct GreenDAO.reply_struct","members":[{"astId":1246,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"reply_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1248,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"message_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1250,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"message","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(smart_contract_uri_struct)1230_storage":{"encoding":"inplace","label":"struct GreenDAO.smart_contract_uri_struct","members":[{"astId":1225,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"smart_contract_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1227,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1229,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"smart_contract_uri","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/common/Authorization.sol":{"AuthorizationI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"AllowanceChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"string","name":"method","type":"string"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"approve","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Evmos Team","details":"The interface through which solidity contracts will interact with smart contract approvals.","events":{"AllowanceChange(address,address,string[],uint256[])":{"details":"This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.","params":{"methods":"The message type URLs of the methods for which the approval is set.","owner":"The owner of the tokens.","spender":"The address which will spend the funds.","values":"The amounts of tokens approved to be spent."}},"Approval(address,address,string[],uint256)":{"details":"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.","params":{"methods":"The message type URLs of the methods for which the approval is set.","owner":"The owner of the tokens.","spender":"The address which will spend the funds.","value":"The amount of tokens approved to be spent."}}},"kind":"dev","methods":{"allowance(address,address,string)":{"details":"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.","params":{"method":"The message type URL of the methods for which the approval should be queried.","owner":"The address of the account owning tokens.","spender":"The address of the account able to transfer the tokens."},"returns":{"remaining":"The remaining number of tokens available to be spent."}},"approve(address,uint256,string[])":{"details":"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"decreaseAllowance(address,uint256,string[])":{"details":"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"increaseAllowance(address,uint256,string[])":{"details":"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}}},"title":"Authorization Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address,string)":"fc08930c","approve(address,uint256,string[])":"b6039895","decreaseAllowance(address,uint256,string[])":"f007d286","increaseAllowance(address,uint256,string[])":"a386a63c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"AllowanceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"details\":\"The interface through which solidity contracts will interact with smart contract approvals.\",\"events\":{\"AllowanceChange(address,address,string[],uint256[])\":{\"details\":\"This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"values\":\"The amounts of tokens approved to be spent.\"}},\"Approval(address,address,string[],uint256)\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens approved to be spent.\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,string)\":{\"details\":\"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.\",\"params\":{\"method\":\"The message type URL of the methods for which the approval should be queried.\",\"owner\":\"The address of the account owning tokens.\",\"spender\":\"The address of the account able to transfer the tokens.\"},\"returns\":{\"remaining\":\"The remaining number of tokens available to be spent.\"}},\"approve(address,uint256,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"decreaseAllowance(address,uint256,string[])\":{\"details\":\"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"increaseAllowance(address,uint256,string[])\":{\"details\":\"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}}},\"title\":\"Authorization Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/common/Authorization.sol\":\"AuthorizationI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/common/Authorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface AuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function increaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n\\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend\\n    /// on behalf of the owner through IBC transfer methods or staking. This is zero by default.\\n    /// @param owner The address of the account owning tokens.\\n    /// @param spender The address of the account able to transfer the tokens.\\n    /// @param method The message type URL of the methods for which the approval should be queried.\\n    /// @return remaining The remaining number of tokens available to be spent.\\n    function allowance(\\n        address owner,\\n        address spender,\\n        string calldata method\\n    ) external view returns (uint256 remaining);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param value The amount of tokens approved to be spent.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256 value\\n    );\\n\\n    /// @dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\\n    /// allowance method. The values field specifies the new allowances and the methods field holds the\\n    /// information for which methods the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param values The amounts of tokens approved to be spent.\\n    event AllowanceChange(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256[] values\\n    );\\n}\\n\",\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/common/GenericAuthorization.sol":{"GenericAuthorizationI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"}],"name":"Revocation","type":"event"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"approve","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"revoke","outputs":[{"internalType":"bool","name":"revoked","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Evmos Team","details":"The interface through which solidity contracts will interact with smart contract approvals.","events":{"Approval(address,address,string[])":{"details":"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.","params":{"methods":"The message type URLs of the methods for which the approval is set.","owner":"The owner of the tokens.","spender":"The address which will spend the funds."}},"Revocation(address,address,string[])":{"details":"This event is emitted when an owner revokes a spender's allowance.","params":{"methods":"The message type URLs of the methods for which the approval is set.","owner":"The owner of the tokens.","spender":"The address which will spend the funds."}}},"kind":"dev","methods":{"approve(address,string[])":{"details":"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.","params":{"methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"revoke(address,string[])":{"details":"Revokes a list of Cosmos transactions.","params":{"methods":"The message type URLs of the methods to revoke.","spender":"The address which will spend the funds."},"returns":{"revoked":"Boolean value to indicate if the revocation was successful."}}},"title":"Authorization Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,string[])":"7a9841ed","revoke(address,string[])":"61dc5c3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Revocation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"details\":\"The interface through which solidity contracts will interact with smart contract approvals.\",\"events\":{\"Approval(address,address,string[])\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\"}},\"Revocation(address,address,string[])\":{\"details\":\"This event is emitted when an owner revokes a spender's allowance.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"revoke(address,string[])\":{\"details\":\"Revokes a list of Cosmos transactions.\",\"params\":{\"methods\":\"The message type URLs of the methods to revoke.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"revoked\":\"Boolean value to indicate if the revocation was successful.\"}}},\"title\":\"Authorization Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/common/GenericAuthorization.sol\":\"GenericAuthorizationI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/common/GenericAuthorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface GenericAuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Revokes a list of Cosmos transactions.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to revoke.\\n    /// @return revoked Boolean value to indicate if the revocation was successful.\\n    function revoke(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool revoked);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n\\n    /// @dev This event is emitted when an owner revokes a spender's allowance.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Revocation(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n}\\n\",\"keccak256\":\"0x5560defd75b84c2d333dc68120a9d425423ff7cd0c443fcd50209f9d0e0dff88\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/stateful/Distribution.sol":{"DistributionI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"}],"name":"Revocation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"string","name":"withdrawerAddress","type":"string"}],"name":"SetWithdrawerAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegatorAddress","type":"address"},{"indexed":true,"internalType":"string","name":"validatorAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WithdrawDelegatorRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"validatorAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"commission","type":"uint256"}],"name":"WithdrawValidatorCommission","type":"event"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"approve","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"delegationRewards","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"rewards","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"}],"name":"delegationTotalRewards","outputs":[{"components":[{"internalType":"string","name":"validatorAddress","type":"string"},{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"reward","type":"tuple[]"}],"internalType":"struct DelegationDelegatorReward[]","name":"rewards","type":"tuple[]"},{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"total","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"}],"name":"delegatorValidators","outputs":[{"internalType":"string[]","name":"validators","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"}],"name":"delegatorWithdrawAddress","outputs":[{"internalType":"string","name":"withdrawAddress","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"revoke","outputs":[{"internalType":"bool","name":"revoked","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"withdrawerAddress","type":"string"}],"name":"setWithdrawAddress","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"validatorCommission","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"commission","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"validatorDistributionInfo","outputs":[{"components":[{"internalType":"string","name":"operatorAddress","type":"string"},{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"selfBondRewards","type":"tuple[]"},{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"commission","type":"tuple[]"}],"internalType":"struct ValidatorDistributionInfo[]","name":"distributionInfo","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"validatorOutstandingRewards","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"rewards","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"},{"internalType":"uint64","name":"startingHeight","type":"uint64"},{"internalType":"uint64","name":"endingHeight","type":"uint64"}],"name":"validatorSlashes","outputs":[{"components":[{"internalType":"uint64","name":"validatorPeriod","type":"uint64"},{"components":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct Dec","name":"fraction","type":"tuple"}],"internalType":"struct ValidatorSlashEvent[]","name":"slashes","type":"tuple[]"},{"components":[{"internalType":"bytes","name":"nextKey","type":"bytes"},{"internalType":"uint64","name":"total","type":"uint64"}],"internalType":"struct PageResponse","name":"pageResponse","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"withdrawDelegatorRewards","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Coin[]","name":"amount","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"withdrawValidatorCommission","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Coin[]","name":"amount","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Evmos Team","custom:address":"0x0000000000000000000000000000000000000801","details":"The interface through which solidity contracts will interact with Distribution","events":{"SetWithdrawerAddress(address,string)":{"details":"SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set","params":{"caller":"the caller of the transaction","withdrawerAddress":"the newly set withdrawer address"}},"WithdrawDelegatorRewards(address,string,uint256)":{"details":"WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn","params":{"amount":"the amount being withdrawn from the delegation","delegatorAddress":"the address of the delegator","validatorAddress":"the address of the validator"}},"WithdrawValidatorCommission(string,uint256)":{"details":"WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn","params":{"commission":"is the total commission earned by the validator","validatorAddress":"is the address of the validator"}}},"kind":"dev","methods":{"approve(address,string[])":{"details":"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.","params":{"methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"delegationRewards(address,string)":{"details":"Queries the total rewards accrued by a delegation from a specific address to a given validator.","params":{"delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"},"returns":{"rewards":"The total rewards accrued by a delegation."}},"delegationTotalRewards(address)":{"details":"Queries the total rewards accrued by each validator, that a given address has delegated to.","params":{"delegatorAddress":"The address of the delegator"},"returns":{"rewards":"The total rewards accrued by each validator for a delegator.","total":"The total rewards accrued by a delegator."}},"delegatorValidators(address)":{"details":"Queries all validators, that a given address has delegated to.","params":{"delegatorAddress":"The address of the delegator"},"returns":{"validators":"The addresses of all validators, that were delegated to by the given address."}},"delegatorWithdrawAddress(address)":{"details":"Queries the address capable of withdrawing rewards for a given delegator.","params":{"delegatorAddress":"The address of the delegator"},"returns":{"withdrawAddress":"The address capable of withdrawing rewards for the delegator."}},"revoke(address,string[])":{"details":"Revokes a list of Cosmos transactions.","params":{"methods":"The message type URLs of the methods to revoke.","spender":"The address which will spend the funds."},"returns":{"revoked":"Boolean value to indicate if the revocation was successful."}},"setWithdrawAddress(address,string)":{"details":"Change the address, that can withdraw the rewards of a delegator. Note that this address cannot be a module account.","params":{"delegatorAddress":"The address of the delegator","withdrawerAddress":"The address that will be capable of withdrawing rewards for the given delegator address"}},"validatorCommission(string)":{"details":"Queries the accumulated commission for a validator.","params":{"validatorAddress":"The address of the validator"},"returns":{"commission":"The validator's commission"}},"validatorDistributionInfo(string)":{"details":"Queries validator commission and self-delegation rewards for validator.","params":{"validatorAddress":"The address of the validator"},"returns":{"distributionInfo":"The validator's distribution info"}},"validatorOutstandingRewards(string)":{"details":"Queries the outstanding rewards of a validator address.","params":{"validatorAddress":"The address of the validator"},"returns":{"rewards":"The validator's outstanding rewards"}},"validatorSlashes(string,uint64,uint64)":{"details":"Queries the slashing events for a validator in a given height interval defined by the starting and ending height.","params":{"endingHeight":"The ending height","startingHeight":"The starting height","validatorAddress":"The address of the validator"},"returns":{"pageResponse":"The pagination response for the query","slashes":"The validator's slash events"}},"withdrawDelegatorRewards(address,string)":{"details":"Withdraw the rewards of a delegator from a validator","params":{"delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"},"returns":{"amount":"The amount of Coin withdrawn"}},"withdrawValidatorCommission(string)":{"details":"Withdraws the rewards commission of a validator.","params":{"validatorAddress":"The address of the validator"},"returns":{"amount":"The amount of Coin withdrawn"}}},"title":"Distribution Precompile Contract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,string[])":"7a9841ed","delegationRewards(address,string)":"9ad563b4","delegationTotalRewards(address)":"54be1a28","delegatorValidators(address)":"a66cb605","delegatorWithdrawAddress(address)":"5431f450","revoke(address,string[])":"61dc5c3b","setWithdrawAddress(address,string)":"5a9d9a96","validatorCommission(string)":"3dd40f78","validatorDistributionInfo(string)":"54212a89","validatorOutstandingRewards(string)":"85b2d2da","validatorSlashes(string,uint64,uint64)":"a75395a5","withdrawDelegatorRewards(address,string)":"b46a8d61","withdrawValidatorCommission(string)":"3ce4e3be"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Revocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"withdrawerAddress\",\"type\":\"string\"}],\"name\":\"SetWithdrawerAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawDelegatorRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"}],\"name\":\"WithdrawValidatorCommission\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"delegationRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegationTotalRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"reward\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DelegationDelegatorReward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"total\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegatorValidators\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"validators\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegatorWithdrawAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"withdrawAddress\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"withdrawerAddress\",\"type\":\"string\"}],\"name\":\"setWithdrawAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorCommission\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"commission\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorDistributionInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"selfBondRewards\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"commission\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ValidatorDistributionInfo[]\",\"name\":\"distributionInfo\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorOutstandingRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"startingHeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endingHeight\",\"type\":\"uint64\"}],\"name\":\"validatorSlashes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"validatorPeriod\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct Dec\",\"name\":\"fraction\",\"type\":\"tuple\"}],\"internalType\":\"struct ValidatorSlashEvent[]\",\"name\":\"slashes\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nextKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"total\",\"type\":\"uint64\"}],\"internalType\":\"struct PageResponse\",\"name\":\"pageResponse\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"withdrawDelegatorRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin[]\",\"name\":\"amount\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"withdrawValidatorCommission\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin[]\",\"name\":\"amount\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"custom:address\":\"0x0000000000000000000000000000000000000801\",\"details\":\"The interface through which solidity contracts will interact with Distribution\",\"events\":{\"SetWithdrawerAddress(address,string)\":{\"details\":\"SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\",\"params\":{\"caller\":\"the caller of the transaction\",\"withdrawerAddress\":\"the newly set withdrawer address\"}},\"WithdrawDelegatorRewards(address,string,uint256)\":{\"details\":\"WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\",\"params\":{\"amount\":\"the amount being withdrawn from the delegation\",\"delegatorAddress\":\"the address of the delegator\",\"validatorAddress\":\"the address of the validator\"}},\"WithdrawValidatorCommission(string,uint256)\":{\"details\":\"WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\",\"params\":{\"commission\":\"is the total commission earned by the validator\",\"validatorAddress\":\"is the address of the validator\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"delegationRewards(address,string)\":{\"details\":\"Queries the total rewards accrued by a delegation from a specific address to a given validator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"rewards\":\"The total rewards accrued by a delegation.\"}},\"delegationTotalRewards(address)\":{\"details\":\"Queries the total rewards accrued by each validator, that a given address has delegated to.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"rewards\":\"The total rewards accrued by each validator for a delegator.\",\"total\":\"The total rewards accrued by a delegator.\"}},\"delegatorValidators(address)\":{\"details\":\"Queries all validators, that a given address has delegated to.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"validators\":\"The addresses of all validators, that were delegated to by the given address.\"}},\"delegatorWithdrawAddress(address)\":{\"details\":\"Queries the address capable of withdrawing rewards for a given delegator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"withdrawAddress\":\"The address capable of withdrawing rewards for the delegator.\"}},\"revoke(address,string[])\":{\"details\":\"Revokes a list of Cosmos transactions.\",\"params\":{\"methods\":\"The message type URLs of the methods to revoke.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"revoked\":\"Boolean value to indicate if the revocation was successful.\"}},\"setWithdrawAddress(address,string)\":{\"details\":\"Change the address, that can withdraw the rewards of a delegator. Note that this address cannot be a module account.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"withdrawerAddress\":\"The address that will be capable of withdrawing rewards for the given delegator address\"}},\"validatorCommission(string)\":{\"details\":\"Queries the accumulated commission for a validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"commission\":\"The validator's commission\"}},\"validatorDistributionInfo(string)\":{\"details\":\"Queries validator commission and self-delegation rewards for validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"distributionInfo\":\"The validator's distribution info\"}},\"validatorOutstandingRewards(string)\":{\"details\":\"Queries the outstanding rewards of a validator address.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"rewards\":\"The validator's outstanding rewards\"}},\"validatorSlashes(string,uint64,uint64)\":{\"details\":\"Queries the slashing events for a validator in a given height interval defined by the starting and ending height.\",\"params\":{\"endingHeight\":\"The ending height\",\"startingHeight\":\"The starting height\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"pageResponse\":\"The pagination response for the query\",\"slashes\":\"The validator's slash events\"}},\"withdrawDelegatorRewards(address,string)\":{\"details\":\"Withdraw the rewards of a delegator from a validator\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"amount\":\"The amount of Coin withdrawn\"}},\"withdrawValidatorCommission(string)\":{\"details\":\"Withdraws the rewards commission of a validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"amount\":\"The amount of Coin withdrawn\"}}},\"title\":\"Distribution Precompile Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setWithdrawAddress(address,string)\":{\"notice\":\"TRANSACTIONS\"},\"validatorDistributionInfo(string)\":{\"notice\":\"QUERIES\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/stateful/Distribution.sol\":\"DistributionI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/common/GenericAuthorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface GenericAuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Revokes a list of Cosmos transactions.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to revoke.\\n    /// @return revoked Boolean value to indicate if the revocation was successful.\\n    function revoke(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool revoked);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n\\n    /// @dev This event is emitted when an owner revokes a spender's allowance.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Revocation(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n}\\n\",\"keccak256\":\"0x5560defd75b84c2d333dc68120a9d425423ff7cd0c443fcd50209f9d0e0dff88\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/common/Types.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nstruct Dec {\\n    uint256 value;\\n    uint8 precision;\\n}\\n\\n/// @dev Coin is a struct that represents a token with a denomination and an amount.\\nstruct Coin {\\n    string denom;\\n    uint256 amount;\\n}\\n\\n/// @dev DecCoin is a struct that represents a token with a denomination, an amount and a precision.\\nstruct DecCoin {\\n    string denom;\\n    uint256 amount;\\n    uint8 precision;\\n}\\n\\n/// @dev PageResponse is a struct that represents a page response.\\nstruct PageResponse {\\n    bytes nextKey;\\n    uint64 total;\\n}\\n\",\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/stateful/Distribution.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nimport \\\"../common/GenericAuthorization.sol\\\" as genericAuth;\\nimport \\\"../common/Types.sol\\\";\\n\\n/// @dev The DistributionI contract's address.\\naddress constant DISTRIBUTION_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000801;\\n\\n/// @dev Define all the available distribution methods.\\nstring constant MSG_SET_WITHDRAWER_ADDRESS = \\\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\\\";\\nstring constant MSG_WITHDRAW_DELEGATOR_REWARD = \\\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\\\";\\nstring constant MSG_WITHDRAW_VALIDATOR_COMMISSION = \\\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\\\";\\n\\n/// @dev The DistributionI contract's instance.\\nDistributionI constant DISTRIBUTION_CONTRACT = DistributionI(DISTRIBUTION_PRECOMPILE_ADDRESS);\\n\\nstruct ValidatorSlashEvent {\\n    uint64 validatorPeriod;\\n    Dec fraction;\\n}\\n\\nstruct ValidatorDistributionInfo {\\n    string operatorAddress;\\n    DecCoin[] selfBondRewards;\\n    DecCoin[] commission;\\n}\\n\\nstruct DelegationDelegatorReward {\\n    string validatorAddress;\\n    DecCoin[] reward;\\n}\\n\\n/// @author Evmos Team\\n/// @title Distribution Precompile Contract\\n/// @dev The interface through which solidity contracts will interact with Distribution\\n/// @custom:address 0x0000000000000000000000000000000000000801\\ninterface DistributionI is genericAuth.GenericAuthorizationI {\\n    /// TRANSACTIONS\\n    /// @dev Change the address, that can withdraw the rewards of a delegator.\\n    /// Note that this address cannot be a module account.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param withdrawerAddress The address that will be capable of withdrawing rewards for\\n    /// the given delegator address\\n    function setWithdrawAddress(\\n        address delegatorAddress,\\n        string memory withdrawerAddress\\n    ) external returns (bool success);\\n\\n    /// @dev Withdraw the rewards of a delegator from a validator\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @return amount The amount of Coin withdrawn\\n    function withdrawDelegatorRewards(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    )\\n    external\\n    returns (\\n        Coin[] calldata amount\\n    );\\n\\n    /// @dev Withdraws the rewards commission of a validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return amount The amount of Coin withdrawn\\n    function withdrawValidatorCommission(\\n        string memory validatorAddress\\n    )\\n    external\\n    returns (\\n        Coin[] calldata amount\\n    );\\n\\n    /// QUERIES\\n    /// @dev Queries validator commission and self-delegation rewards for validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return distributionInfo The validator's distribution info\\n    function validatorDistributionInfo(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        ValidatorDistributionInfo[] calldata distributionInfo // FIXME: remove unnecessary slice\\n    );\\n\\n    /// @dev Queries the outstanding rewards of a validator address.\\n    /// @param validatorAddress The address of the validator\\n    /// @return rewards The validator's outstanding rewards\\n    function validatorOutstandingRewards(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata rewards\\n    );\\n\\n    /// @dev Queries the accumulated commission for a validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return commission The validator's commission\\n    function validatorCommission(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata commission\\n    );\\n\\n    /// @dev Queries the slashing events for a validator in a given height interval\\n    /// defined by the starting and ending height.\\n    /// @param validatorAddress The address of the validator\\n    /// @param startingHeight The starting height\\n    /// @param endingHeight The ending height\\n    /// @return slashes The validator's slash events\\n    /// @return pageResponse The pagination response for the query\\n    function validatorSlashes(\\n        string memory validatorAddress,\\n        uint64 startingHeight,\\n        uint64 endingHeight\\n    )\\n    external\\n    view\\n    returns (\\n        ValidatorSlashEvent[] calldata slashes,\\n        PageResponse calldata pageResponse\\n    );\\n\\n    /// @dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @return rewards The total rewards accrued by a delegation.\\n    function delegationRewards(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata rewards\\n    );\\n\\n    /// @dev Queries the total rewards accrued by each validator, that a given\\n    /// address has delegated to.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return rewards The total rewards accrued by each validator for a delegator.\\n    /// @return total The total rewards accrued by a delegator.\\n    function delegationTotalRewards(\\n        address delegatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DelegationDelegatorReward[] calldata rewards,\\n        DecCoin[] calldata total\\n    );\\n\\n    /// @dev Queries all validators, that a given address has delegated to.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return validators The addresses of all validators, that were delegated to by the given address.\\n    function delegatorValidators(\\n        address delegatorAddress\\n    ) external view returns (string[] calldata validators);\\n\\n    /// @dev Queries the address capable of withdrawing rewards for a given delegator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return withdrawAddress The address capable of withdrawing rewards for the delegator.\\n    function delegatorWithdrawAddress(\\n        address delegatorAddress\\n    ) external view returns (string memory withdrawAddress);\\n\\n    /// @dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\\n    /// @param caller the caller of the transaction\\n    /// @param withdrawerAddress the newly set withdrawer address\\n    event SetWithdrawerAddress(\\n        address indexed caller,\\n        string withdrawerAddress\\n    );\\n\\n    /// @dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\\n    /// @param delegatorAddress the address of the delegator\\n    /// @param validatorAddress the address of the validator\\n    /// @param amount the amount being withdrawn from the delegation\\n    event WithdrawDelegatorRewards(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount\\n    );\\n\\n    /// @dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\\n    /// @param validatorAddress is the address of the validator\\n    /// @param commission is the total commission earned by the validator\\n    event WithdrawValidatorCommission(\\n        string indexed validatorAddress,\\n        uint256 commission\\n    );\\n}\\n\",\"keccak256\":\"0x6815efb027a2ce3fc4d43073ac9e1dc117b156a74951c17b19f3f531483dc9e1\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setWithdrawAddress(address,string)":{"notice":"TRANSACTIONS"},"validatorDistributionInfo(string)":{"notice":"QUERIES"}},"version":1}}},"contracts/precompiles/stateful/Staking.sol":{"StakingI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"AllowanceChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegatorAddress","type":"address"},{"indexed":true,"internalType":"string","name":"validatorAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"creationHeight","type":"uint256"}],"name":"CancelUnbondingDelegation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegatorAddress","type":"address"},{"indexed":true,"internalType":"string","name":"validatorAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newShares","type":"uint256"}],"name":"Delegate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegatorAddress","type":"address"},{"indexed":true,"internalType":"string","name":"validatorSrcAddress","type":"string"},{"indexed":true,"internalType":"string","name":"validatorDstAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"completionTime","type":"uint256"}],"name":"Redelegate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegatorAddress","type":"address"},{"indexed":true,"internalType":"string","name":"validatorAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"completionTime","type":"uint256"}],"name":"Unbond","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"string","name":"method","type":"string"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"approve","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"creationHeight","type":"uint256"}],"name":"cancelUnbondingDelegation","outputs":[{"internalType":"int64","name":"completionTime","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"delegate","outputs":[{"internalType":"int64","name":"completionTime","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"delegation","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Coin","name":"balance","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorSrcAddress","type":"string"},{"internalType":"string","name":"validatorDstAddress","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"redelegate","outputs":[{"internalType":"int64","name":"completionTime","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"srcValidatorAddress","type":"string"},{"internalType":"string","name":"dstValidatorAddress","type":"string"}],"name":"redelegation","outputs":[{"components":[{"internalType":"int64","name":"creationHeight","type":"int64"},{"internalType":"int64","name":"completionTime","type":"int64"},{"internalType":"uint256","name":"initialBalance","type":"uint256"},{"internalType":"uint256","name":"sharesDst","type":"uint256"}],"internalType":"struct RedelegationEntry[]","name":"entries","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"srcValidatorAddress","type":"string"},{"internalType":"string","name":"dstValidatorAddress","type":"string"},{"components":[{"internalType":"bytes","name":"key","type":"bytes"},{"internalType":"uint64","name":"offset","type":"uint64"},{"internalType":"uint64","name":"limit","type":"uint64"},{"internalType":"bool","name":"countTotal","type":"bool"},{"internalType":"bool","name":"reverse","type":"bool"}],"internalType":"struct PageRequest","name":"pageRequest","type":"tuple"}],"name":"redelegations","outputs":[{"components":[{"components":[{"components":[{"internalType":"int64","name":"creationHeight","type":"int64"},{"internalType":"int64","name":"completionTime","type":"int64"},{"internalType":"uint256","name":"initialBalance","type":"uint256"},{"internalType":"uint256","name":"sharesDst","type":"uint256"}],"internalType":"struct RedelegationEntry[]","name":"entries","type":"tuple[]"}],"internalType":"struct Redelegation","name":"redelegation","type":"tuple"},{"components":[{"components":[{"internalType":"int64","name":"creationHeight","type":"int64"},{"internalType":"int64","name":"completionTime","type":"int64"},{"internalType":"uint256","name":"initialBalance","type":"uint256"},{"internalType":"uint256","name":"sharesDst","type":"uint256"}],"internalType":"struct RedelegationEntry","name":"redelegationEntry","type":"tuple"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct RedelegationEntryResponse[]","name":"entries","type":"tuple[]"}],"internalType":"struct RedelegationResponse","name":"response","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"unbondingDelegation","outputs":[{"components":[{"internalType":"int64","name":"creationHeight","type":"int64"},{"internalType":"int64","name":"completionTime","type":"int64"},{"internalType":"uint256","name":"initialBalance","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct UnbondingDelegationEntry[]","name":"entries","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"undelegate","outputs":[{"internalType":"int64","name":"completionTime","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"validator","outputs":[{"components":[{"internalType":"string","name":"operatorAddress","type":"string"},{"internalType":"string","name":"consensusPubkey","type":"string"},{"internalType":"bool","name":"jailed","type":"bool"},{"internalType":"enum BondStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"tokens","type":"uint256"},{"internalType":"uint256","name":"delegatorShares","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"int64","name":"unbondingHeight","type":"int64"},{"internalType":"int64","name":"unbondingTime","type":"int64"},{"internalType":"uint256","name":"commission","type":"uint256"},{"internalType":"uint256","name":"minSelfDelegation","type":"uint256"}],"internalType":"struct Validator[]","name":"validators","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"status","type":"string"},{"components":[{"internalType":"bytes","name":"key","type":"bytes"},{"internalType":"uint64","name":"offset","type":"uint64"},{"internalType":"uint64","name":"limit","type":"uint64"},{"internalType":"bool","name":"countTotal","type":"bool"},{"internalType":"bool","name":"reverse","type":"bool"}],"internalType":"struct PageRequest","name":"pageRequest","type":"tuple"}],"name":"validators","outputs":[{"components":[{"internalType":"string","name":"operatorAddress","type":"string"},{"internalType":"string","name":"consensusPubkey","type":"string"},{"internalType":"bool","name":"jailed","type":"bool"},{"internalType":"enum BondStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"tokens","type":"uint256"},{"internalType":"uint256","name":"delegatorShares","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"int64","name":"unbondingHeight","type":"int64"},{"internalType":"int64","name":"unbondingTime","type":"int64"},{"internalType":"uint256","name":"commission","type":"uint256"},{"internalType":"uint256","name":"minSelfDelegation","type":"uint256"}],"internalType":"struct Validator[]","name":"validators","type":"tuple[]"},{"components":[{"internalType":"bytes","name":"nextKey","type":"bytes"},{"internalType":"uint64","name":"total","type":"uint64"}],"internalType":"struct PageResponse","name":"pageResponse","type":"tuple"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Evmos Team","custom:address":"0x0000000000000000000000000000000000000800","details":"The interface through which solidity contracts will interact with staking. We follow this same interface including four-byte function selectors, in the precompile that wraps the pallet.","events":{"CancelUnbondingDelegation(address,string,uint256,uint256)":{"details":"CancelUnbondingDelegation defines an Event emitted when a given amount of tokens that are in the process of unbonding from the validator address are bonded again.","params":{"amount":"The amount of Coin that was in the unbonding process which is to be cancelled","creationHeight":"The block height at which the unbonding of a delegation was initiated","delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"}},"Delegate(address,string,uint256,uint256)":{"details":"Delegate defines an Event emitted when a given amount of tokens are delegated from the delegator address to the validator address.","params":{"amount":"The amount of Coin being delegated","delegatorAddress":"The address of the delegator","newShares":"The new delegation shares being held","validatorAddress":"The address of the validator"}},"Redelegate(address,string,string,uint256,uint256)":{"details":"Redelegate defines an Event emitted when a given amount of tokens are redelegated from the source validator address to the destination validator address.","params":{"amount":"The amount of Coin being redelegated","completionTime":"The time at which the redelegation is completed","delegatorAddress":"The address of the delegator","validatorDstAddress":"The address of the validator to which the delegation is directed","validatorSrcAddress":"The address of the validator from which the delegation is retracted"}},"Unbond(address,string,uint256,uint256)":{"details":"Unbond defines an Event emitted when a given amount of tokens are unbonded from the validator address to the delegator address.","params":{"amount":"The amount of Coin being unbonded","completionTime":"The time at which the unbonding is completed","delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"}}},"kind":"dev","methods":{"allowance(address,address,string)":{"details":"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.","params":{"method":"The message type URL of the methods for which the approval should be queried.","owner":"The address of the account owning tokens.","spender":"The address of the account able to transfer the tokens."},"returns":{"remaining":"The remaining number of tokens available to be spent."}},"approve(address,uint256,string[])":{"details":"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"cancelUnbondingDelegation(address,string,uint256,uint256)":{"details":"Allows delegators to cancel the unbondingDelegation entry and to delegate back to a previous validator.","params":{"amount":"The amount of the Coin","creationHeight":"The height at which the unbonding took place","delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"},"returns":{"completionTime":"The time when the cancellation of the unbonding delegation is completed"}},"decreaseAllowance(address,uint256,string[])":{"details":"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"delegate(address,string,uint256)":{"details":"Defines a method for performing a delegation of coins from a delegator to a validator.","params":{"amount":"The amount of the Coin to be delegated to the validator","delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"}},"delegation(address,string)":{"details":"Queries the given amount of the bond denomination to a validator.","params":{"delegatorAddress":"The address of the delegator.","validatorAddress":"The address of the validator."},"returns":{"balance":"The amount in Coin, that the delegator has delegated to the given validator.","shares":"The amount of shares, that the delegator has received."}},"increaseAllowance(address,uint256,string[])":{"details":"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"redelegate(address,string,string,uint256)":{"details":"Defines a method for performing a redelegation of coins from a delegator and source validator to a destination validator.","params":{"amount":"The amount to be redelegated to the validator","delegatorAddress":"The address of the delegator","validatorDstAddress":"The validator to which the redelegation is destined","validatorSrcAddress":"The validator from which the redelegation is initiated"},"returns":{"completionTime":"The time when the redelegation is completed"}},"redelegation(address,string,string)":{"details":"Queries all redelegations from a source to a destination validator for a given delegator.","params":{"delegatorAddress":"The address of the delegator.","dstValidatorAddress":"Defines the validator address to redelegate to.","srcValidatorAddress":"Defines the validator address to redelegate from."},"returns":{"entries":"The active redelegations for the given delegator, source and destination validator combination."}},"redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))":{"details":"Queries all redelegations from a source to to a destination validator for a given delegator in a specified pagination manner.","params":{"delegatorAddress":"The address of the delegator.","dstValidatorAddress":"Defines the validator address to redelegate to.","pageRequest":"Defines an optional pagination for the request.","srcValidatorAddress":"Defines the validator address to redelegate from."},"returns":{"response":"Holds the redelegations for the given delegator, source and destination validator combination."}},"unbondingDelegation(address,string)":{"details":"Returns the delegation shares and coins, that are currently unbonding for a given delegator and validator pair.","params":{"delegatorAddress":"The address of the delegator.","validatorAddress":"The address of the validator."},"returns":{"entries":"The delegations that are currently unbonding."}},"undelegate(address,string,uint256)":{"details":"Defines a method for performing an undelegation from a delegate and a validator.","params":{"amount":"The amount to be undelegated from the validator","delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"},"returns":{"completionTime":"The time when the undelegation is completed"}},"validator(string)":{"details":"Queries validator info for a given validator address.","params":{"validatorAddress":"The address of the validator."},"returns":{"validators":"The validator info for the given validator address."}},"validators(string,(bytes,uint64,uint64,bool,bool))":{"details":"Queries all validators that match the given status.","params":{"pageRequest":"Defines an optional pagination for the request.","status":"Enables to query for validators matching a given status."}}},"title":"Staking Precompiled Contract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address,string)":"fc08930c","approve(address,uint256,string[])":"b6039895","cancelUnbondingDelegation(address,string,uint256,uint256)":"12d58dfe","decreaseAllowance(address,uint256,string[])":"f007d286","delegate(address,string,uint256)":"53266bbb","delegation(address,string)":"241774e6","increaseAllowance(address,uint256,string[])":"a386a63c","redelegate(address,string,string,uint256)":"54b826f5","redelegation(address,string,string)":"7d9f939c","redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))":"10a2851c","unbondingDelegation(address,string)":"a03ffee1","undelegate(address,string,uint256)":"3edab33c","validator(string)":"0bc82a17","validators(string,(bytes,uint64,uint64,bool,bool))":"186b2167"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"AllowanceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creationHeight\",\"type\":\"uint256\"}],\"name\":\"CancelUnbondingDelegation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"name\":\"Delegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorSrcAddress\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorDstAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"completionTime\",\"type\":\"uint256\"}],\"name\":\"Redelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"completionTime\",\"type\":\"uint256\"}],\"name\":\"Unbond\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationHeight\",\"type\":\"uint256\"}],\"name\":\"cancelUnbondingDelegation\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin\",\"name\":\"balance\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorSrcAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"validatorDstAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redelegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"srcValidatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstValidatorAddress\",\"type\":\"string\"}],\"name\":\"redelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"srcValidatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstValidatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"limit\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"countTotal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"internalType\":\"struct PageRequest\",\"name\":\"pageRequest\",\"type\":\"tuple\"}],\"name\":\"redelegations\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Redelegation\",\"name\":\"redelegation\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry\",\"name\":\"redelegationEntry\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntryResponse[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"internalType\":\"struct RedelegationResponse\",\"name\":\"response\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"unbondingDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct UnbondingDelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validator\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consensusPubkey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"jailed\",\"type\":\"bool\"},{\"internalType\":\"enum BondStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatorShares\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"unbondingHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"unbondingTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSelfDelegation\",\"type\":\"uint256\"}],\"internalType\":\"struct Validator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"limit\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"countTotal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"internalType\":\"struct PageRequest\",\"name\":\"pageRequest\",\"type\":\"tuple\"}],\"name\":\"validators\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consensusPubkey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"jailed\",\"type\":\"bool\"},{\"internalType\":\"enum BondStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatorShares\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"unbondingHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"unbondingTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSelfDelegation\",\"type\":\"uint256\"}],\"internalType\":\"struct Validator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nextKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"total\",\"type\":\"uint64\"}],\"internalType\":\"struct PageResponse\",\"name\":\"pageResponse\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"custom:address\":\"0x0000000000000000000000000000000000000800\",\"details\":\"The interface through which solidity contracts will interact with staking. We follow this same interface including four-byte function selectors, in the precompile that wraps the pallet.\",\"events\":{\"CancelUnbondingDelegation(address,string,uint256,uint256)\":{\"details\":\"CancelUnbondingDelegation defines an Event emitted when a given amount of tokens that are in the process of unbonding from the validator address are bonded again.\",\"params\":{\"amount\":\"The amount of Coin that was in the unbonding process which is to be cancelled\",\"creationHeight\":\"The block height at which the unbonding of a delegation was initiated\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}},\"Delegate(address,string,uint256,uint256)\":{\"details\":\"Delegate defines an Event emitted when a given amount of tokens are delegated from the delegator address to the validator address.\",\"params\":{\"amount\":\"The amount of Coin being delegated\",\"delegatorAddress\":\"The address of the delegator\",\"newShares\":\"The new delegation shares being held\",\"validatorAddress\":\"The address of the validator\"}},\"Redelegate(address,string,string,uint256,uint256)\":{\"details\":\"Redelegate defines an Event emitted when a given amount of tokens are redelegated from the source validator address to the destination validator address.\",\"params\":{\"amount\":\"The amount of Coin being redelegated\",\"completionTime\":\"The time at which the redelegation is completed\",\"delegatorAddress\":\"The address of the delegator\",\"validatorDstAddress\":\"The address of the validator to which the delegation is directed\",\"validatorSrcAddress\":\"The address of the validator from which the delegation is retracted\"}},\"Unbond(address,string,uint256,uint256)\":{\"details\":\"Unbond defines an Event emitted when a given amount of tokens are unbonded from the validator address to the delegator address.\",\"params\":{\"amount\":\"The amount of Coin being unbonded\",\"completionTime\":\"The time at which the unbonding is completed\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,string)\":{\"details\":\"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.\",\"params\":{\"method\":\"The message type URL of the methods for which the approval should be queried.\",\"owner\":\"The address of the account owning tokens.\",\"spender\":\"The address of the account able to transfer the tokens.\"},\"returns\":{\"remaining\":\"The remaining number of tokens available to be spent.\"}},\"approve(address,uint256,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"cancelUnbondingDelegation(address,string,uint256,uint256)\":{\"details\":\"Allows delegators to cancel the unbondingDelegation entry and to delegate back to a previous validator.\",\"params\":{\"amount\":\"The amount of the Coin\",\"creationHeight\":\"The height at which the unbonding took place\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"completionTime\":\"The time when the cancellation of the unbonding delegation is completed\"}},\"decreaseAllowance(address,uint256,string[])\":{\"details\":\"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"delegate(address,string,uint256)\":{\"details\":\"Defines a method for performing a delegation of coins from a delegator to a validator.\",\"params\":{\"amount\":\"The amount of the Coin to be delegated to the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}},\"delegation(address,string)\":{\"details\":\"Queries the given amount of the bond denomination to a validator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"balance\":\"The amount in Coin, that the delegator has delegated to the given validator.\",\"shares\":\"The amount of shares, that the delegator has received.\"}},\"increaseAllowance(address,uint256,string[])\":{\"details\":\"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"redelegate(address,string,string,uint256)\":{\"details\":\"Defines a method for performing a redelegation of coins from a delegator and source validator to a destination validator.\",\"params\":{\"amount\":\"The amount to be redelegated to the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorDstAddress\":\"The validator to which the redelegation is destined\",\"validatorSrcAddress\":\"The validator from which the redelegation is initiated\"},\"returns\":{\"completionTime\":\"The time when the redelegation is completed\"}},\"redelegation(address,string,string)\":{\"details\":\"Queries all redelegations from a source to a destination validator for a given delegator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"dstValidatorAddress\":\"Defines the validator address to redelegate to.\",\"srcValidatorAddress\":\"Defines the validator address to redelegate from.\"},\"returns\":{\"entries\":\"The active redelegations for the given delegator, source and destination validator combination.\"}},\"redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))\":{\"details\":\"Queries all redelegations from a source to to a destination validator for a given delegator in a specified pagination manner.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"dstValidatorAddress\":\"Defines the validator address to redelegate to.\",\"pageRequest\":\"Defines an optional pagination for the request.\",\"srcValidatorAddress\":\"Defines the validator address to redelegate from.\"},\"returns\":{\"response\":\"Holds the redelegations for the given delegator, source and destination validator combination.\"}},\"unbondingDelegation(address,string)\":{\"details\":\"Returns the delegation shares and coins, that are currently unbonding for a given delegator and validator pair.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"entries\":\"The delegations that are currently unbonding.\"}},\"undelegate(address,string,uint256)\":{\"details\":\"Defines a method for performing an undelegation from a delegate and a validator.\",\"params\":{\"amount\":\"The amount to be undelegated from the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"completionTime\":\"The time when the undelegation is completed\"}},\"validator(string)\":{\"details\":\"Queries validator info for a given validator address.\",\"params\":{\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"validators\":\"The validator info for the given validator address.\"}},\"validators(string,(bytes,uint64,uint64,bool,bool))\":{\"details\":\"Queries all validators that match the given status.\",\"params\":{\"pageRequest\":\"Defines an optional pagination for the request.\",\"status\":\"Enables to query for validators matching a given status.\"}}},\"title\":\"Staking Precompiled Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/stateful/Staking.sol\":\"StakingI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/common/Authorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface AuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function increaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n\\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend\\n    /// on behalf of the owner through IBC transfer methods or staking. This is zero by default.\\n    /// @param owner The address of the account owning tokens.\\n    /// @param spender The address of the account able to transfer the tokens.\\n    /// @param method The message type URL of the methods for which the approval should be queried.\\n    /// @return remaining The remaining number of tokens available to be spent.\\n    function allowance(\\n        address owner,\\n        address spender,\\n        string calldata method\\n    ) external view returns (uint256 remaining);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param value The amount of tokens approved to be spent.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256 value\\n    );\\n\\n    /// @dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\\n    /// allowance method. The values field specifies the new allowances and the methods field holds the\\n    /// information for which methods the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param values The amounts of tokens approved to be spent.\\n    event AllowanceChange(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256[] values\\n    );\\n}\\n\",\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/common/Types.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nstruct Dec {\\n    uint256 value;\\n    uint8 precision;\\n}\\n\\n/// @dev Coin is a struct that represents a token with a denomination and an amount.\\nstruct Coin {\\n    string denom;\\n    uint256 amount;\\n}\\n\\n/// @dev DecCoin is a struct that represents a token with a denomination, an amount and a precision.\\nstruct DecCoin {\\n    string denom;\\n    uint256 amount;\\n    uint8 precision;\\n}\\n\\n/// @dev PageResponse is a struct that represents a page response.\\nstruct PageResponse {\\n    bytes nextKey;\\n    uint64 total;\\n}\\n\",\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/stateful/Staking.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nimport \\\"../common/Authorization.sol\\\" as authorization;\\nimport \\\"../common/Types.sol\\\";\\n\\n/// @dev The StakingI contract's address.\\naddress constant STAKING_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000800;\\n\\n/// @dev The StakingI contract's instance.\\nStakingI constant STAKING_CONTRACT = StakingI(STAKING_PRECOMPILE_ADDRESS);\\n\\n/// @dev Define all the available staking methods.\\nstring constant MSG_DELEGATE = \\\"/cosmos.staking.v1beta1.MsgDelegate\\\";\\nstring constant MSG_UNDELEGATE = \\\"/cosmos.staking.v1beta1.MsgUndelegate\\\";\\nstring constant MSG_REDELEGATE = \\\"/cosmos.staking.v1beta1.MsgBeginRedelegate\\\";\\nstring constant MSG_CANCEL_UNDELEGATION = \\\"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\\\";\\n\\n/// @dev Defines the initial commission rates to be used for creating\\n/// a validator.\\nstruct CommissionRates {\\n    uint256 rate;\\n    uint256 maxRate;\\n    uint256 maxChangeRate;\\n}\\n\\n/// @dev Defines commission parameters for a given validator.\\nstruct Commission {\\n    CommissionRates commissionRates;\\n    uint256 updateTime;\\n}\\n\\n\\n/// @dev Represents a validator in the staking module.\\nstruct Validator {\\n    string operatorAddress;\\n    string consensusPubkey;\\n    bool jailed;\\n    BondStatus status;\\n    uint256 tokens;\\n    uint256 delegatorShares;\\n    string description;\\n    int64 unbondingHeight;\\n    int64 unbondingTime;\\n    uint256 commission;\\n    uint256 minSelfDelegation;\\n}\\n\\nstruct RedelegationResponse {\\n    Redelegation redelegation;\\n    RedelegationEntryResponse[] entries;\\n}\\n\\nstruct Redelegation {\\n    RedelegationEntry[] entries;\\n}\\n\\nstruct RedelegationEntryResponse {\\n    RedelegationEntry redelegationEntry;\\n    uint256 balance;\\n}\\n\\nstruct RedelegationEntry {\\n    int64 creationHeight;\\n    int64 completionTime;\\n    uint256 initialBalance;\\n    uint256 sharesDst;\\n}\\n\\nstruct UnbondingDelegationEntry {\\n    int64 creationHeight;\\n    int64 completionTime;\\n    uint256 initialBalance;\\n    uint256 balance;\\n}\\n\\nstruct PageRequest {\\n    bytes key;\\n    uint64 offset;\\n    uint64 limit;\\n    bool countTotal;\\n    bool reverse;\\n}\\n\\n/// @dev The status of the validator.\\nenum BondStatus {\\n    Unspecified,\\n    Unbonded,\\n    Unbonding,\\n    Bonded\\n}\\n\\n/// @author Evmos Team\\n/// @title Staking Precompiled Contract\\n/// @dev The interface through which solidity contracts will interact with staking.\\n/// We follow this same interface including four-byte function selectors, in the precompile that\\n/// wraps the pallet.\\n/// @custom:address 0x0000000000000000000000000000000000000800\\ninterface StakingI is authorization.AuthorizationI {\\n    /// @dev Defines a method for performing a delegation of coins from a delegator to a validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of the Coin to be delegated to the validator\\n    function delegate(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Defines a method for performing an undelegation from a delegate and a validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount to be undelegated from the validator\\n    /// @return completionTime The time when the undelegation is completed\\n    function undelegate(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Defines a method for performing a redelegation\\n    /// of coins from a delegator and source validator to a destination validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorSrcAddress The validator from which the redelegation is initiated\\n    /// @param validatorDstAddress The validator to which the redelegation is destined\\n    /// @param amount The amount to be redelegated to the validator\\n    /// @return completionTime The time when the redelegation is completed\\n    function redelegate(\\n        address delegatorAddress,\\n        string memory validatorSrcAddress,\\n        string memory validatorDstAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Allows delegators to cancel the unbondingDelegation entry\\n    /// and to delegate back to a previous validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of the Coin\\n    /// @param creationHeight The height at which the unbonding took place\\n    /// @return completionTime The time when the cancellation of the unbonding delegation is completed\\n    function cancelUnbondingDelegation(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount,\\n        uint256 creationHeight\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Queries the given amount of the bond denomination to a validator.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return shares The amount of shares, that the delegator has received.\\n    /// @return balance The amount in Coin, that the delegator has delegated to the given validator.\\n    function delegation(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    ) external view returns (uint256 shares, Coin calldata balance);\\n\\n    /// @dev Returns the delegation shares and coins, that are currently\\n    /// unbonding for a given delegator and validator pair.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return entries The delegations that are currently unbonding.\\n    function unbondingDelegation(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    ) external view returns (UnbondingDelegationEntry[] calldata entries);\\n\\n    /// @dev Queries validator info for a given validator address.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return validators The validator info for the given validator address.\\n    function validator(\\n        string memory validatorAddress\\n    )\\n    external view returns (\\n        Validator[] calldata validators\\n    );\\n\\n    /// @dev Queries all validators that match the given status.\\n    /// @param status Enables to query for validators matching a given status.\\n    /// @param pageRequest Defines an optional pagination for the request.\\n    function validators(\\n        string memory status,\\n        PageRequest calldata pageRequest\\n    ) external view returns (\\n        Validator[] calldata validators,\\n        PageResponse calldata pageResponse\\n    );\\n\\n    /// @dev Queries all redelegations from a source to a destination validator for a given delegator.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\\n    /// @return entries The active redelegations for the given delegator, source and destination validator combination.\\n    function redelegation(\\n        address delegatorAddress,\\n        string memory srcValidatorAddress,\\n        string memory dstValidatorAddress\\n    ) external view returns (RedelegationEntry[] calldata entries);\\n\\n    /// @dev Queries all redelegations from a source to to a destination validator\\n    /// for a given delegator in a specified pagination manner.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\\n    /// @param pageRequest Defines an optional pagination for the request.\\n    /// @return response Holds the redelegations for the given delegator, source and destination validator combination.\\n    function redelegations(\\n        address delegatorAddress,\\n        string memory srcValidatorAddress,\\n        string memory dstValidatorAddress,\\n        PageRequest calldata pageRequest\\n    ) external view returns (RedelegationResponse calldata response);\\n\\n    /// @dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\\n    /// delegator address to the validator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin being delegated\\n    /// @param newShares The new delegation shares being held\\n    event Delegate(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 newShares\\n    );\\n\\n    /// @dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\\n    /// validator address to the delegator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin being unbonded\\n    /// @param completionTime The time at which the unbonding is completed\\n    event Unbond(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 completionTime\\n    );\\n\\n    /// @dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\\n    /// the source validator address to the destination validator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorSrcAddress The address of the validator from which the delegation is retracted\\n    /// @param validatorDstAddress The address of the validator to which the delegation is directed\\n    /// @param amount The amount of Coin being redelegated\\n    /// @param completionTime The time at which the redelegation is completed\\n    event Redelegate(\\n        address indexed delegatorAddress,\\n        string indexed validatorSrcAddress,\\n        string indexed validatorDstAddress,\\n        uint256 amount,\\n        uint256 completionTime\\n    );\\n\\n    /// @dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\\n    /// that are in the process of unbonding from the validator address are bonded again.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin that was in the unbonding process which is to be cancelled\\n    /// @param creationHeight The block height at which the unbonding of a delegation was initiated\\n    event CancelUnbondingDelegation(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 creationHeight\\n    );\\n}\\n\",\"keccak256\":\"0x774d4bf7a848893697fa75fa11a2ec288e6df6f010f9bdd8b3c6010ef007ac67\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}