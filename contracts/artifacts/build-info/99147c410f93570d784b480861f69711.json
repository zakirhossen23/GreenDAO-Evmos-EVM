{"id":"99147c410f93570d784b480861f69711","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/GreenDAO.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"./precompiles/stateful/Staking.sol\";\r\nimport \"./precompiles/stateful/Distribution.sol\";\r\ncontract GreenDAO  {\r\n    struct dao_uri_struct {\r\n        string dao_wallet;\r\n        string dao_uri;\r\n        string finished;\r\n    }\r\n    struct goal_uri_struct {\r\n        uint256 dao_id;\r\n        string goal_uri;\r\n    }\r\n\r\n    struct ideas_uri_struct {\r\n        uint256 goal_id;\r\n        string ideas_uri;\r\n        uint256 donation;\r\n    }\r\n    struct smart_contract_uri_struct {\r\n        uint256 smart_contract_id;\r\n        uint256 ideas_id;\r\n        string smart_contract_uri;\r\n    }\r\n    struct goal_ideas_votes_struct {\r\n        uint256 goal_id;\r\n        uint256 ideas_id;\r\n        string wallet;\r\n    }\r\n    struct message_struct {\r\n        uint256 message_id;\r\n        uint256 ideas_id;\r\n        string message;\r\n    }\r\n    struct reply_struct {\r\n        uint256 reply_id;\r\n        uint256 message_id;\r\n        string message;\r\n    }\r\n    /// @dev the required authorizations for Staking and Distribution\r\n    string[] private stakingMethods = [MSG_DELEGATE, MSG_UNDELEGATE, MSG_REDELEGATE];\r\n    string[] private distributionMethods = [MSG_WITHDRAW_DELEGATOR_REWARD];\r\n    /// @dev map to keep track of user deposits to the contract.\r\n    mapping(uint256 => uint256) public donated;                                // _ideas_ids       => (Ideas) donated amount\r\n    uint256 private _total_delegations;\r\n    string private _validatorAddr  = \"evmosvaloper158wwas4v6fgcu2x3plg70s6u0fm0lle237kltr\";\r\n\r\n\r\n    uint256 public _dao_ids;\r\n    uint256 public _goal_ids;\r\n    uint256 public _ideas_ids;\r\n    uint256 public _smart_contract_ids;\r\n    uint256 public _ideas_vote_ids;\r\n    uint256 public _message_ids;\r\n    uint256 public _reply_ids;\r\n    mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\r\n    mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\r\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\r\n    mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\r\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + Wallet\r\n\r\n    mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\r\n\r\n    mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\r\n\r\n    //Daos\r\n    function create_dao(\r\n        string memory _dao_wallet,\r\n        string memory _dao_uri\r\n    ) public returns (uint256) {\r\n        //Create Dao into _dao_uris\r\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, \"False\");\r\n        _dao_ids++;\r\n\r\n        return _dao_ids;\r\n    }\r\n\r\n    function set_dao(\r\n        uint256 _dao_id,\r\n        string memory _dao_wallet,\r\n        string memory _dao_uri\r\n    ) public {\r\n        //Set Dao of wallet and uri\r\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\r\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\r\n    }\r\n\r\n    function get_all_daos() public view returns (string[] memory) {\r\n        //Getting all doas\r\n        string[] memory _StoreInfo = new string[](_dao_ids);\r\n        for (uint256 i = 0; i < _dao_ids; i++) {\r\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\r\n        //Getting one dao URI\r\n        return _dao_uris[_dao_id].dao_uri;\r\n    }\r\n\r\n    //Goals\r\n    function create_goal(\r\n        string memory _goal_uri,\r\n        uint256 _dao_id\r\n    ) public returns (uint256) {\r\n        //Create goal into _goal_uris\r\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\r\n        _goal_ids++;\r\n\r\n        return _goal_ids;\r\n    }\r\n\r\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\r\n        //Set goal uri\r\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\r\n    }\r\n\r\n    function get_all_goals() public view returns (string[] memory) {\r\n        //Getting all goals\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_goals_by_dao_id(\r\n        uint256 _dao_id\r\n    ) public view returns (string[] memory) {\r\n        //Getting all goals by dao id\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            if (_goal_uris[i].dao_id == _dao_id) {\r\n                _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\r\n                _store_id++;\r\n            }\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_goal_id_by_goal_uri(\r\n        string memory _goal_uri\r\n    ) public view returns (uint256) {\r\n        //Getting goal id by uri\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            if (\r\n                keccak256(bytes(_goal_uris[i].goal_uri)) ==\r\n                keccak256(bytes(_goal_uri))\r\n            ) return i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\r\n        //Getting one goal URI\r\n        return _goal_uris[_goal_id].goal_uri;\r\n    }\r\n\r\n    //Ideas\r\n    function create_ideas(\r\n        string memory _ideas_uri,\r\n        uint256 _goal_id,\r\n        string[] memory _smart_contracts\r\n    ) public returns (uint256) {\r\n        //Create ideas into _ideas_uris\r\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\r\n        _ideas_ids++;\r\n\r\n        for (uint256 i = 0; i < _smart_contracts.length; i++) {\r\n            create_ideas_smart_contract(\r\n                _ideas_ids,\r\n                _smart_contract_ids,\r\n                _smart_contracts[i]\r\n            );\r\n            _smart_contract_ids++;\r\n        }\r\n\r\n        return _ideas_ids;\r\n    }\r\n\r\n    function create_ideas_smart_contract(\r\n        uint256 _ideas_id,\r\n        uint256 _smart_contract_id,\r\n        string memory _smart_contract\r\n    ) private {\r\n        _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(\r\n            _ideas_id,\r\n            _smart_contract_id,\r\n            _smart_contract\r\n        );\r\n        \r\n    }\r\n\r\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\r\n        //Set ideas uri\r\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\r\n    }\r\n\r\n    function add_donation(uint256 _ideas_id, uint256 _doantion) public {\r\n        //Set ideas uri\r\n        _ideas_uris[_ideas_id].donation += _doantion;\r\n    }\r\n\r\n    function get_all_ideas() public view returns (string[] memory) {\r\n        //Getting all ideas\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_ideas_by_goal_id(\r\n        uint256 _goal_id\r\n    ) public view returns (string[] memory) {\r\n        //Getting all ideas by goal id\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (_ideas_uris[i].goal_id == _goal_id)\r\n                _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\r\n            _store_id++;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_ideas_id_by_ideas_uri(\r\n        string memory _ideas_uri\r\n    ) public view returns (uint256) {\r\n        //Getting ideas id by uri\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (\r\n                keccak256(bytes(_ideas_uris[i].ideas_uri)) ==\r\n                keccak256(bytes(_ideas_uri))\r\n            ) return i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function get_goal_id_from_ideas_uri(\r\n        string memory _ideas_uri\r\n    ) public view returns (uint256) {\r\n        //Getting ideas id by uri\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (\r\n                keccak256(bytes(_ideas_uris[i].ideas_uri)) ==\r\n                keccak256(bytes(_ideas_uri))\r\n            ) return _ideas_uris[i].goal_id;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\r\n        //Getting one ideas URI\r\n        return _ideas_uris[_ideas_id].ideas_uri;\r\n    }\r\n\r\n    //Votes\r\n    function create_goal_ideas_vote(\r\n        uint256 _goal_id,\r\n        uint256 _ideas_id,\r\n        string memory _wallet\r\n    ) public returns (uint256) {\r\n        //Create votes into all_goal_ideas_votes\r\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(\r\n            _goal_id,\r\n            _ideas_id,\r\n            _wallet\r\n        );\r\n        _ideas_vote_ids++;\r\n\r\n        return _ideas_vote_ids;\r\n    }\r\n\r\n    function get_ideas_votes_from_goal(\r\n        uint256 _goal_id,\r\n        uint256 _ideas_id\r\n    ) public view returns (string[] memory) {\r\n        //gets all ideas votes from goal\r\n        string[] memory _StoreInfo = new string[](_ideas_vote_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\r\n            if (\r\n                all_goal_ideas_votes[i].goal_id == _goal_id &&\r\n                all_goal_ideas_votes[i].ideas_id == _ideas_id\r\n            ) _StoreInfo[_store_id] = all_goal_ideas_votes[i].wallet;\r\n            _store_id++;\r\n        }\r\n        return _StoreInfo;\r\n    }\r\n    \r\n    //Messages\r\n     function sendMsg(\r\n        uint256 _ideas_id,\r\n        string memory _message\r\n    ) public returns (uint256) {\r\n        //Create messsage into all_messages\r\n        all_messages[_message_ids] = message_struct(\r\n            _message_ids,\r\n            _ideas_id,\r\n            _message\r\n        );\r\n        _message_ids++;\r\n\r\n        return _message_ids;\r\n    }\r\n   \r\n\r\n    function getMsgIDs(\r\n        uint256 ideas_id\r\n    ) public view returns (uint256[] memory ) {\r\n        //Getting all messages ids by idea id\r\n        uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\r\n        uint256 _msg_id;\r\n        for (uint256 i = 0; i < _message_ids; i++) {\r\n            if (all_messages[i].ideas_id == ideas_id) {\r\n                _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\r\n                _msg_id++;\r\n            }\r\n        }\r\n\r\n        return _All_Ideas_Messages;\r\n    }\r\n    function sendReply(\r\n        uint256 _message_id,\r\n        string memory _reply\r\n    ) public returns (uint256) {\r\n        //Create reply into all_replies\r\n        all_replies[_reply_ids] = reply_struct(\r\n            _reply_ids,\r\n            _message_id,\r\n            _reply\r\n        );\r\n        _reply_ids++;\r\n\r\n        return _reply_ids;\r\n    }\r\n\r\n    function getReplyIDs(\r\n        uint256 message_id\r\n    ) public view returns (uint256[] memory ) {\r\n        //Getting all messages ids by idea id\r\n        uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\r\n        uint256 _reply_id;\r\n        for (uint256 i = 0; i < _reply_ids; i++) {\r\n            if (all_replies[i].message_id == message_id) {\r\n                _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\r\n                _reply_id++;\r\n            }\r\n        }\r\n\r\n        return _All_Messages_Replys;\r\n    }\r\n\r\n\r\n    // Doante with a validator Address\r\n    function donate(uint256 _idea_id,uint256 _amount) public payable  {\r\n        _approveRequiredMsgs();\r\n        donated[_idea_id] += _amount;\r\n    }\r\n\r\n    function stake(uint256 _amount) public {\r\n        STAKING_CONTRACT.delegate(address(this), _validatorAddr, _amount);\r\n\r\n    }\r\n\r\n    function redeemDonatedMoney(uint256 _idea_id) public returns (string memory) {      \r\n        _approveRequiredMsgs();\r\n        //Sotring Rewards to smart contract\r\n        Coin[] memory newRewards = DISTRIBUTION_CONTRACT.withdrawDelegatorRewards(address(this), _validatorAddr);\r\n        _total_delegations +=  newRewards[0].amount;\r\n\r\n        //Withdrawing donated amount with rewards\r\n        uint256 _amount = donated[_idea_id];\r\n        STAKING_CONTRACT.undelegate(address(this), _validatorAddr, _amount);\r\n        uint256 _donated_amount = _amount + newRewards[0].amount;\r\n        (bool sent,) = payable(msg.sender).call{value: _donated_amount}(\"\");     \r\n        donated[_idea_id] = 0;\r\n        return  \"Sent Money to idea owner\";\r\n    }\r\n    function withdrawAllMoney() public  {\r\n        uint256 _amount = address(this).balance;\r\n        (bool sent,) = payable(msg.sender).call{value: _amount}(\"\");     \r\n    }\r\n    function getContractBalance() public view returns (uint) {\r\n     return address(this).balance;\r\n    }\r\n    \r\n    function getContractRewards() public view returns (DecCoin[] memory) {\r\n        return DISTRIBUTION_CONTRACT.delegationRewards(address(this), _validatorAddr);\r\n    }\r\n\r\n    function getDelegation() public view returns (uint256) {\r\n        (uint256 denom , Coin memory coin ) =  STAKING_CONTRACT.delegation(address(this), _validatorAddr);\r\n        return coin.amount;\r\n    }\r\n\r\n    function getUnbondingDelegation() public view returns (UnbondingDelegationEntry[] memory) {\r\n        return STAKING_CONTRACT.unbondingDelegation(address(this), _validatorAddr);\r\n    }\r\n\r\n\r\n    function reset_all() public {\r\n        for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\r\n        for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\r\n        for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\r\n        for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\r\n        for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\r\n        for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\r\n        for (uint256 i = 0; i < _ideas_vote_ids; i++)delete all_goal_ideas_votes[i];\r\n        _dao_ids = 0;\r\n        _goal_ids = 0;\r\n        _ideas_ids = 0;\r\n        _message_ids = 0;\r\n        _reply_ids = 0;        \r\n        _ideas_vote_ids = 0;\r\n    }\r\n    /// @dev approves the staking and distribution contracts for donating\r\n    function _approveRequiredMsgs() public {\r\n        bool successStk = STAKING_CONTRACT.approve(tx.origin,   type(uint256).max, stakingMethods);\r\n        require(successStk, \"Staking Approve failed\");\r\n        bool successDist = DISTRIBUTION_CONTRACT.approve(tx.origin, distributionMethods);\r\n        require(successDist, \"Distribution Approve failed\");\r\n    }\r\n}\r\n"},"contracts/precompiles/common/Authorization.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\n/// @author Evmos Team\n/// @title Authorization Interface\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\ninterface AuthorizationI {\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function approve(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC\n    /// transfer methods or staking.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function increaseAllowance(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\n    /// transfer methods or staking.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function decreaseAllowance(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend\n    /// on behalf of the owner through IBC transfer methods or staking. This is zero by default.\n    /// @param owner The address of the account owning tokens.\n    /// @param spender The address of the account able to transfer the tokens.\n    /// @param method The message type URL of the methods for which the approval should be queried.\n    /// @return remaining The remaining number of tokens available to be spent.\n    function allowance(\n        address owner,\n        address spender,\n        string calldata method\n    ) external view returns (uint256 remaining);\n\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\n    /// the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    /// @param value The amount of tokens approved to be spent.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        string[] methods,\n        uint256 value\n    );\n\n    /// @dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\n    /// allowance method. The values field specifies the new allowances and the methods field holds the\n    /// information for which methods the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    /// @param values The amounts of tokens approved to be spent.\n    event AllowanceChange(\n        address indexed owner,\n        address indexed spender,\n        string[] methods,\n        uint256[] values\n    );\n}\n"},"contracts/precompiles/common/GenericAuthorization.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\n/// @author Evmos Team\n/// @title Authorization Interface\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\ninterface GenericAuthorizationI {\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function approve(\n        address spender,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev Revokes a list of Cosmos transactions.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods to revoke.\n    /// @return revoked Boolean value to indicate if the revocation was successful.\n    function revoke(\n        address spender,\n        string[] calldata methods\n    ) external returns (bool revoked);\n\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\n    /// the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        string[] methods\n    );\n\n    /// @dev This event is emitted when an owner revokes a spender's allowance.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    event Revocation(\n        address indexed owner,\n        address indexed spender,\n        string[] methods\n    );\n}\n"},"contracts/precompiles/common/Types.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\nstruct Dec {\n    uint256 value;\n    uint8 precision;\n}\n\n/// @dev Coin is a struct that represents a token with a denomination and an amount.\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n\n/// @dev DecCoin is a struct that represents a token with a denomination, an amount and a precision.\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n\n/// @dev PageResponse is a struct that represents a page response.\nstruct PageResponse {\n    bytes nextKey;\n    uint64 total;\n}\n"},"contracts/precompiles/stateful/Distribution.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\nimport \"../common/GenericAuthorization.sol\" as genericAuth;\nimport \"../common/Types.sol\";\n\n/// @dev The DistributionI contract's address.\naddress constant DISTRIBUTION_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000801;\n\n/// @dev Define all the available distribution methods.\nstring constant MSG_SET_WITHDRAWER_ADDRESS = \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\";\nstring constant MSG_WITHDRAW_DELEGATOR_REWARD = \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\";\nstring constant MSG_WITHDRAW_VALIDATOR_COMMISSION = \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\";\n\n/// @dev The DistributionI contract's instance.\nDistributionI constant DISTRIBUTION_CONTRACT = DistributionI(DISTRIBUTION_PRECOMPILE_ADDRESS);\n\nstruct ValidatorSlashEvent {\n    uint64 validatorPeriod;\n    Dec fraction;\n}\n\nstruct ValidatorDistributionInfo {\n    string operatorAddress;\n    DecCoin[] selfBondRewards;\n    DecCoin[] commission;\n}\n\nstruct DelegationDelegatorReward {\n    string validatorAddress;\n    DecCoin[] reward;\n}\n\n/// @author Evmos Team\n/// @title Distribution Precompile Contract\n/// @dev The interface through which solidity contracts will interact with Distribution\n/// @custom:address 0x0000000000000000000000000000000000000801\ninterface DistributionI is genericAuth.GenericAuthorizationI {\n    /// TRANSACTIONS\n    /// @dev Change the address, that can withdraw the rewards of a delegator.\n    /// Note that this address cannot be a module account.\n    /// @param delegatorAddress The address of the delegator\n    /// @param withdrawerAddress The address that will be capable of withdrawing rewards for\n    /// the given delegator address\n    function setWithdrawAddress(\n        address delegatorAddress,\n        string memory withdrawerAddress\n    ) external returns (bool success);\n\n    /// @dev Withdraw the rewards of a delegator from a validator\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @return amount The amount of Coin withdrawn\n    function withdrawDelegatorRewards(\n        address delegatorAddress,\n        string memory validatorAddress\n    )\n    external\n    returns (\n        Coin[] calldata amount\n    );\n\n    /// @dev Withdraws the rewards commission of a validator.\n    /// @param validatorAddress The address of the validator\n    /// @return amount The amount of Coin withdrawn\n    function withdrawValidatorCommission(\n        string memory validatorAddress\n    )\n    external\n    returns (\n        Coin[] calldata amount\n    );\n\n    /// QUERIES\n    /// @dev Queries validator commission and self-delegation rewards for validator.\n    /// @param validatorAddress The address of the validator\n    /// @return distributionInfo The validator's distribution info\n    function validatorDistributionInfo(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        ValidatorDistributionInfo[] calldata distributionInfo // FIXME: remove unnecessary slice\n    );\n\n    /// @dev Queries the outstanding rewards of a validator address.\n    /// @param validatorAddress The address of the validator\n    /// @return rewards The validator's outstanding rewards\n    function validatorOutstandingRewards(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata rewards\n    );\n\n    /// @dev Queries the accumulated commission for a validator.\n    /// @param validatorAddress The address of the validator\n    /// @return commission The validator's commission\n    function validatorCommission(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata commission\n    );\n\n    /// @dev Queries the slashing events for a validator in a given height interval\n    /// defined by the starting and ending height.\n    /// @param validatorAddress The address of the validator\n    /// @param startingHeight The starting height\n    /// @param endingHeight The ending height\n    /// @return slashes The validator's slash events\n    /// @return pageResponse The pagination response for the query\n    function validatorSlashes(\n        string memory validatorAddress,\n        uint64 startingHeight,\n        uint64 endingHeight\n    )\n    external\n    view\n    returns (\n        ValidatorSlashEvent[] calldata slashes,\n        PageResponse calldata pageResponse\n    );\n\n    /// @dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @return rewards The total rewards accrued by a delegation.\n    function delegationRewards(\n        address delegatorAddress,\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata rewards\n    );\n\n    /// @dev Queries the total rewards accrued by each validator, that a given\n    /// address has delegated to.\n    /// @param delegatorAddress The address of the delegator\n    /// @return rewards The total rewards accrued by each validator for a delegator.\n    /// @return total The total rewards accrued by a delegator.\n    function delegationTotalRewards(\n        address delegatorAddress\n    )\n    external\n    view\n    returns (\n        DelegationDelegatorReward[] calldata rewards,\n        DecCoin[] calldata total\n    );\n\n    /// @dev Queries all validators, that a given address has delegated to.\n    /// @param delegatorAddress The address of the delegator\n    /// @return validators The addresses of all validators, that were delegated to by the given address.\n    function delegatorValidators(\n        address delegatorAddress\n    ) external view returns (string[] calldata validators);\n\n    /// @dev Queries the address capable of withdrawing rewards for a given delegator.\n    /// @param delegatorAddress The address of the delegator\n    /// @return withdrawAddress The address capable of withdrawing rewards for the delegator.\n    function delegatorWithdrawAddress(\n        address delegatorAddress\n    ) external view returns (string memory withdrawAddress);\n\n    /// @dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\n    /// @param caller the caller of the transaction\n    /// @param withdrawerAddress the newly set withdrawer address\n    event SetWithdrawerAddress(\n        address indexed caller,\n        string withdrawerAddress\n    );\n\n    /// @dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\n    /// @param delegatorAddress the address of the delegator\n    /// @param validatorAddress the address of the validator\n    /// @param amount the amount being withdrawn from the delegation\n    event WithdrawDelegatorRewards(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount\n    );\n\n    /// @dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\n    /// @param validatorAddress is the address of the validator\n    /// @param commission is the total commission earned by the validator\n    event WithdrawValidatorCommission(\n        string indexed validatorAddress,\n        uint256 commission\n    );\n}\n"},"contracts/precompiles/stateful/IBCTransfer.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\n/// @dev The ICS20I contract's address.\naddress constant IBC_TRANSFER_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000802;\n\n/// @dev The ICS20 contract's instance.\nIBCTransferI constant IBC_TRANSFER_CONTRACT = IBCTransferI(IBC_TRANSFER_PRECOMPILE_ADDRESS);\n\n// Height is a monotonically increasing data type\n// that can be compared against another Height for the purposes of updating and\n// freezing clients\n//\n// Normally the RevisionHeight is incremented at each height while keeping\n// RevisionNumber the same. However some consensus algorithms may choose to\n// reset the height in certain conditions e.g. hard forks, state-machine\n// breaking changes In these cases, the RevisionNumber is incremented so that\n// height continues to be monotonically increasing even as the RevisionHeight\n// gets reset\nstruct Height {\n  // the revision that the client is currently on\n  uint64 revisionNumber;\n  // the height within the given revision\n  uint64 revisionHeight;\n}\n\n// DenomTrace contains the base denomination for ICS20 fungible tokens and the\n// source tracing information path.\nstruct DenomTrace {\n  // path defines the chain of port/channel identifiers used for tracing the\n\t// source of the fungible token.\n  string path;\n  // base denomination of the relayed fungible token.\n  string baseDenom;\n}\n\n/// @author Evmos Team\n/// @title ICS20 Transfer Precompiled Contract\n/// @dev The interface through which solidity contracts will interact with IBC Transfer (ICS20)\n/// FIXME: update address\n/// @custom:address 0x0000000000000000000000000000000000000802\ninterface IBCTransferI {\n    /// @dev Transfer defines a method for performing an IBC transfer.\n    /// @param sourcePort the address of the validator\n    /// @param sourceChannel the address of the validator\n    /// @param denom the denomination of the Coin to be transferred to the receiver\n    /// @param amount the amount of the Coin to be transferred to the receiver\n    /// @param sender the hex address of the sender\n    /// @param receiver the bech32 address of the receiver\n    /// @param timeoutHeight the bech32 address of the receiver\n    /// @param timeoutTimestamp the bech32 address of the receiver\n    /// @param memo the bech32 address of the receiver\n    function transfer(\n      string memory sourcePort,\n      string memory sourceChannel,\n      string memory denom,\n      uint256 amount,\n      address sender,\n      string memory receiver,\n      Height memory timeoutHeight,\n      uint64 timeoutTimestamp,\n      string memory memo\n    ) external returns (uint64 nextSequence);\n\n    /// @dev DenomTraces defines a method for returning all denom traces.\n    function denomTraces(\n    ) external returns (DenomTrace[] memory denomTraces);\n\n    /// @dev DenomTrace defines a method for returning a denom trace.\n    function denomTrace(\n      string memory hash\n    ) external returns (DenomTrace memory denomTrace);\n\n    /// @dev DenomHash defines a method for returning a hash of the denomination trace info.\n    function denomHash(\n      string memory trace\n    ) external returns (string memory hash);\n\n    /// @dev Approves IBC transfer with a specific amount of tokens.\n    /// @param spender spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    function approve(\n        address spender,\n        uint256 amount\n    ) external returns (bool approved);\n\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through\n    /// IBC transfers. This is zero by default.\n    /// @param owner The address of the account owning tokens.\n    /// @param spender The address of the account able to transfer the tokens.\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256 remaining);\n\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    function increaseAllowance(\n        address spender,\n        uint256 amount\n    ) external returns (bool approved);\n\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for for IBC transfer methods.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    function decreaseAllowance(\n        address spender,\n        uint256 amount\n    ) external returns (bool approved);\n\n\n    /// @dev Emitted when a transfer is executed.\n    /// @param sender The address of the sender.\n    /// @param receiver The address of the receiver.\n    /// @param denom The denomination of the tokens transferred.\n    /// @param amount The amount of tokens transferred.\n    event IBCTransfer(\n        address indexed sender,\n        address indexed receiver,\n        string denom,\n        uint256 amount\n    );\n\n    /// @dev Emitted when an approval is executed.\n    /// @param owner The address of the owner.\n    /// @param spender The address of the spender.\n    /// @param value The amount of tokens approved.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n"},"contracts/precompiles/stateful/Staking.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\nimport \"../common/Authorization.sol\" as authorization;\nimport \"../common/Types.sol\";\n\n/// @dev The StakingI contract's address.\naddress constant STAKING_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000800;\n\n/// @dev The StakingI contract's instance.\nStakingI constant STAKING_CONTRACT = StakingI(STAKING_PRECOMPILE_ADDRESS);\n\n/// @dev Define all the available staking methods.\nstring constant MSG_DELEGATE = \"/cosmos.staking.v1beta1.MsgDelegate\";\nstring constant MSG_UNDELEGATE = \"/cosmos.staking.v1beta1.MsgUndelegate\";\nstring constant MSG_REDELEGATE = \"/cosmos.staking.v1beta1.MsgBeginRedelegate\";\nstring constant MSG_CANCEL_UNDELEGATION = \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\";\n\n/// @dev Defines the initial commission rates to be used for creating\n/// a validator.\nstruct CommissionRates {\n    uint256 rate;\n    uint256 maxRate;\n    uint256 maxChangeRate;\n}\n\n/// @dev Defines commission parameters for a given validator.\nstruct Commission {\n    CommissionRates commissionRates;\n    uint256 updateTime;\n}\n\n\n/// @dev Represents a validator in the staking module.\nstruct Validator {\n    string operatorAddress;\n    string consensusPubkey;\n    bool jailed;\n    BondStatus status;\n    uint256 tokens;\n    uint256 delegatorShares;\n    string description;\n    int64 unbondingHeight;\n    int64 unbondingTime;\n    uint256 commission;\n    uint256 minSelfDelegation;\n}\n\nstruct RedelegationResponse {\n    Redelegation redelegation;\n    RedelegationEntryResponse[] entries;\n}\n\nstruct Redelegation {\n    RedelegationEntry[] entries;\n}\n\nstruct RedelegationEntryResponse {\n    RedelegationEntry redelegationEntry;\n    uint256 balance;\n}\n\nstruct RedelegationEntry {\n    int64 creationHeight;\n    int64 completionTime;\n    uint256 initialBalance;\n    uint256 sharesDst;\n}\n\nstruct UnbondingDelegationEntry {\n    int64 creationHeight;\n    int64 completionTime;\n    uint256 initialBalance;\n    uint256 balance;\n}\n\nstruct PageRequest {\n    bytes key;\n    uint64 offset;\n    uint64 limit;\n    bool countTotal;\n    bool reverse;\n}\n\n/// @dev The status of the validator.\nenum BondStatus {\n    Unspecified,\n    Unbonded,\n    Unbonding,\n    Bonded\n}\n\n/// @author Evmos Team\n/// @title Staking Precompiled Contract\n/// @dev The interface through which solidity contracts will interact with staking.\n/// We follow this same interface including four-byte function selectors, in the precompile that\n/// wraps the pallet.\n/// @custom:address 0x0000000000000000000000000000000000000800\ninterface StakingI is authorization.AuthorizationI {\n    /// @dev Defines a method for performing a delegation of coins from a delegator to a validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of the Coin to be delegated to the validator\n    function delegate(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Defines a method for performing an undelegation from a delegate and a validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount to be undelegated from the validator\n    /// @return completionTime The time when the undelegation is completed\n    function undelegate(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Defines a method for performing a redelegation\n    /// of coins from a delegator and source validator to a destination validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorSrcAddress The validator from which the redelegation is initiated\n    /// @param validatorDstAddress The validator to which the redelegation is destined\n    /// @param amount The amount to be redelegated to the validator\n    /// @return completionTime The time when the redelegation is completed\n    function redelegate(\n        address delegatorAddress,\n        string memory validatorSrcAddress,\n        string memory validatorDstAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Allows delegators to cancel the unbondingDelegation entry\n    /// and to delegate back to a previous validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of the Coin\n    /// @param creationHeight The height at which the unbonding took place\n    /// @return completionTime The time when the cancellation of the unbonding delegation is completed\n    function cancelUnbondingDelegation(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount,\n        uint256 creationHeight\n    ) external returns (int64 completionTime);\n\n    /// @dev Queries the given amount of the bond denomination to a validator.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param validatorAddress The address of the validator.\n    /// @return shares The amount of shares, that the delegator has received.\n    /// @return balance The amount in Coin, that the delegator has delegated to the given validator.\n    function delegation(\n        address delegatorAddress,\n        string memory validatorAddress\n    ) external view returns (uint256 shares, Coin calldata balance);\n\n    /// @dev Returns the delegation shares and coins, that are currently\n    /// unbonding for a given delegator and validator pair.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param validatorAddress The address of the validator.\n    /// @return entries The delegations that are currently unbonding.\n    function unbondingDelegation(\n        address delegatorAddress,\n        string memory validatorAddress\n    ) external view returns (UnbondingDelegationEntry[] calldata entries);\n\n    /// @dev Queries validator info for a given validator address.\n    /// @param validatorAddress The address of the validator.\n    /// @return validators The validator info for the given validator address.\n    function validator(\n        string memory validatorAddress\n    )\n    external view returns (\n        Validator[] calldata validators\n    );\n\n    /// @dev Queries all validators that match the given status.\n    /// @param status Enables to query for validators matching a given status.\n    /// @param pageRequest Defines an optional pagination for the request.\n    function validators(\n        string memory status,\n        PageRequest calldata pageRequest\n    ) external view returns (\n        Validator[] calldata validators,\n        PageResponse calldata pageResponse\n    );\n\n    /// @dev Queries all redelegations from a source to a destination validator for a given delegator.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\n    /// @return entries The active redelegations for the given delegator, source and destination validator combination.\n    function redelegation(\n        address delegatorAddress,\n        string memory srcValidatorAddress,\n        string memory dstValidatorAddress\n    ) external view returns (RedelegationEntry[] calldata entries);\n\n    /// @dev Queries all redelegations from a source to to a destination validator\n    /// for a given delegator in a specified pagination manner.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\n    /// @param pageRequest Defines an optional pagination for the request.\n    /// @return response Holds the redelegations for the given delegator, source and destination validator combination.\n    function redelegations(\n        address delegatorAddress,\n        string memory srcValidatorAddress,\n        string memory dstValidatorAddress,\n        PageRequest calldata pageRequest\n    ) external view returns (RedelegationResponse calldata response);\n\n    /// @dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\n    /// delegator address to the validator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin being delegated\n    /// @param newShares The new delegation shares being held\n    event Delegate(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 newShares\n    );\n\n    /// @dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\n    /// validator address to the delegator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin being unbonded\n    /// @param completionTime The time at which the unbonding is completed\n    event Unbond(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 completionTime\n    );\n\n    /// @dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\n    /// the source validator address to the destination validator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorSrcAddress The address of the validator from which the delegation is retracted\n    /// @param validatorDstAddress The address of the validator to which the delegation is directed\n    /// @param amount The amount of Coin being redelegated\n    /// @param completionTime The time at which the redelegation is completed\n    event Redelegate(\n        address indexed delegatorAddress,\n        string indexed validatorSrcAddress,\n        string indexed validatorDstAddress,\n        uint256 amount,\n        uint256 completionTime\n    );\n\n    /// @dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\n    /// that are in the process of unbonding from the validator address are bonded again.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin that was in the unbonding process which is to be cancelled\n    /// @param creationHeight The block height at which the unbonding of a delegation was initiated\n    event CancelUnbondingDelegation(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 creationHeight\n    );\n}\n"},"contracts/precompiles/stateless/Bech32.sol":{"content":"// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\n/// @dev The Bech32I contract's address.\naddress constant Bech32_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000400;\n\n/// @author Evmos Team\n/// @title Bech32 Precompiled Contract\n/// @dev The interface through which solidity contracts can convert addresses from\n/// hex to bech32 and vice versa.\n/// @custom:address 0x0000000000000000000000000000000000000010\ninterface Bech32I {\n    /// @dev Defines a method for converting a hex formatted address to bech32.\n    /// @param addr The hex address to be converted.\n    /// @param prefix The human readable prefix (HRP) of the bech32 address.\n    /// @return bech32Address The address in bech32 format.\n    function hexToBech32(\n        address addr,\n        string memory prefix\n    ) external returns (string memory bech32Address);\n\n    /// @dev Defines a method for converting a bech32 formatted address to hex.\n    /// @param bech32Address The bech32 address to be converted.\n    /// @return addr The address in hex format.\n    function bech32ToHex(\n        string memory bech32Address\n    ) external returns (address addr);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/GreenDAO.sol:389:10:\n    |\n389 |         (bool sent,) = payable(msg.sender).call{value: _donated_amount}(\"\");     \n    |          ^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":12667,"file":"contracts/GreenDAO.sol","start":12658},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/GreenDAO.sol:395:10:\n    |\n395 |         (bool sent,) = payable(msg.sender).call{value: _amount}(\"\");     \n    |          ^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":12927,"file":"contracts/GreenDAO.sol","start":12918},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/GreenDAO.sol:406:10:\n    |\n406 |         (uint256 denom , Coin memory coin ) =  STAKING_CONTRACT.delegation(address(this), _validatorAddr);\n    |          ^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":13361,"file":"contracts/GreenDAO.sol","start":13348},"type":"Warning"}],"sources":{"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1094],"SignedMath":[1199],"Strings":[228]},"id":229,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":229,"sourceUnit":1095,"src":"126:25:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":229,"sourceUnit":1200,"src":"152:31:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"185:34:0","text":" @dev String operations."},"fullyImplemented":true,"id":228,"linearizedBaseContracts":[228],"name":"Strings","nameLocation":"228:7:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":7,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:0","nodeType":"VariableDeclaration","scope":228,"src":"242:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":5,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":6,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":10,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:0","nodeType":"VariableDeclaration","scope":228,"src":"302:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":9,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":57,"nodeType":"Block","src":"518:625:0","statements":[{"id":56,"nodeType":"UncheckedBlock","src":"528:609:0","statements":[{"assignments":[19],"declarations":[{"constant":false,"id":19,"mutability":"mutable","name":"length","nameLocation":"560:6:0","nodeType":"VariableDeclaration","scope":56,"src":"552:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":26,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":25,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":22,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"580:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":20,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"569:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1094_$","typeString":"type(library Math)"}},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:0","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":931,"src":"569:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":24,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:0"},{"assignments":[28],"declarations":[{"constant":false,"id":28,"mutability":"mutable","name":"buffer","nameLocation":"618:6:0","nodeType":"VariableDeclaration","scope":56,"src":"604:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":27,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":33,"initialValue":{"arguments":[{"id":31,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"638:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":30,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:0"},{"assignments":[35],"declarations":[{"constant":false,"id":35,"mutability":"mutable","name":"ptr","nameLocation":"667:3:0","nodeType":"VariableDeclaration","scope":56,"src":"659:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":36,"nodeType":"VariableDeclarationStatement","src":"659:11:0"},{"AST":{"nodeType":"YulBlock","src":"740:67:0","statements":[{"nodeType":"YulAssignment","src":"758:35:0","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:0","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:0"},"nodeType":"YulFunctionCall","src":"777:15:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:0"},"nodeType":"YulFunctionCall","src":"765:28:0"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":28,"isOffset":false,"isSlot":false,"src":"769:6:0","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":false,"src":"785:6:0","valueSize":1},{"declaration":35,"isOffset":false,"isSlot":false,"src":"758:3:0","valueSize":1}],"id":37,"nodeType":"InlineAssembly","src":"731:76:0"},{"body":{"id":52,"nodeType":"Block","src":"833:267:0","statements":[{"expression":{"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:0","subExpression":{"id":39,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"851:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41,"nodeType":"ExpressionStatement","src":"851:5:0"},{"AST":{"nodeType":"YulBlock","src":"934:84:0","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:0"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:0"},"nodeType":"YulFunctionCall","src":"974:14:0"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:0"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:0"},"nodeType":"YulFunctionCall","src":"969:30:0"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:0"},"nodeType":"YulFunctionCall","src":"956:44:0"},"nodeType":"YulExpressionStatement","src":"956:44:0"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":7,"isOffset":false,"isSlot":false,"src":"990:8:0","valueSize":1},{"declaration":35,"isOffset":false,"isSlot":false,"src":"964:3:0","valueSize":1},{"declaration":13,"isOffset":false,"isSlot":false,"src":"978:5:0","valueSize":1}],"id":42,"nodeType":"InlineAssembly","src":"925:93:0"},{"expression":{"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1035:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":44,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":46,"nodeType":"ExpressionStatement","src":"1035:11:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1068:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":51,"nodeType":"IfStatement","src":"1064:21:0","trueBody":{"id":50,"nodeType":"Break","src":"1080:5:0"}}]},"condition":{"hexValue":"74727565","id":38,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":53,"nodeType":"WhileStatement","src":"820:280:0"},{"expression":{"id":54,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1120:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":17,"id":55,"nodeType":"Return","src":"1113:13:0"}]}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"352:90:0","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":58,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:0","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"value","nameLocation":"473:5:0","nodeType":"VariableDeclaration","scope":58,"src":"465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:0"},"returnParameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"503:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:0"},"scope":228,"src":"447:696:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":85,"nodeType":"Block","src":"1313:103:0","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":70,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1354:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":74,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:0","trueExpression":{"hexValue":"2d","id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":79,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1400:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":77,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1385:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1199_$","typeString":"type(library SignedMath)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:0","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1198,"src":"1385:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":76,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[58,86],"referencedDeclaration":58,"src":"1376:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":68,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":67,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":66,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:0","typeDescriptions":{}}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":65,"id":84,"nodeType":"Return","src":"1323:86:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1149:89:0","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":86,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:0","nodeType":"FunctionDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"value","nameLocation":"1268:5:0","nodeType":"VariableDeclaration","scope":86,"src":"1261:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":60,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:0"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":86,"src":"1298:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":63,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:0"},"scope":228,"src":"1243:173:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":105,"nodeType":"Block","src":"1595:100:0","statements":[{"id":104,"nodeType":"UncheckedBlock","src":"1605:84:0","statements":[{"expression":{"arguments":[{"id":95,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"1648:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":98,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"1667:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":96,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"1655:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1094_$","typeString":"type(library Math)"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:0","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1054,"src":"1655:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":94,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[106,182,202],"referencedDeclaration":182,"src":"1636:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":93,"id":103,"nodeType":"Return","src":"1629:49:0"}]}]},"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"1422:94:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":106,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:0","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"value","nameLocation":"1550:5:0","nodeType":"VariableDeclaration","scope":106,"src":"1542:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:0"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":106,"src":"1580:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":91,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:0"},"scope":228,"src":"1521:174:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"1908:347:0","statements":[{"assignments":[117],"declarations":[{"constant":false,"id":117,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:0","nodeType":"VariableDeclaration","scope":181,"src":"1918:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":116,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":126,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":121,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1954:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":118,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:0"},{"expression":{"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":127,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1975:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":129,"indexExpression":{"hexValue":"30","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":132,"nodeType":"ExpressionStatement","src":"1975:15:0"},{"expression":{"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":133,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2000:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":135,"indexExpression":{"hexValue":"31","id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":138,"nodeType":"ExpressionStatement","src":"2000:15:0"},{"body":{"id":167,"nodeType":"Block","src":"2070:83:0","statements":[{"expression":{"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":153,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2084:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":155,"indexExpression":{"id":154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2091:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":156,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2096:8:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":160,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2105:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:0","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":162,"nodeType":"ExpressionStatement","src":"2084:33:0"},{"expression":{"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2131:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":166,"nodeType":"ExpressionStatement","src":"2131:11:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2058:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":168,"initializationExpression":{"assignments":[140],"declarations":[{"constant":false,"id":140,"mutability":"mutable","name":"i","nameLocation":"2038:1:0","nodeType":"VariableDeclaration","scope":168,"src":"2030:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":146,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":142,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2046:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:0"},"loopExpression":{"expression":{"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:0","subExpression":{"id":150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2067:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":152,"nodeType":"ExpressionStatement","src":"2065:3:0"},"nodeType":"ForStatement","src":"2025:128:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2170:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":175,"nodeType":"ExpressionStatement","src":"2162:55:0"},{"expression":{"arguments":[{"id":178,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2241:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":176,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:0","typeDescriptions":{}}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":115,"id":180,"nodeType":"Return","src":"2227:21:0"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"1701:112:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:0","nodeType":"FunctionDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"value","nameLocation":"1847:5:0","nodeType":"VariableDeclaration","scope":182,"src":"1839:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"length","nameLocation":"1862:6:0","nodeType":"VariableDeclaration","scope":182,"src":"1854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:0"},"returnParameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"1893:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":113,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:0"},"scope":228,"src":"1818:437:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":201,"nodeType":"Block","src":"2480:76:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":195,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2525:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":193,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:0","typeDescriptions":{}}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:0","typeDescriptions":{}}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":198,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2533:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":190,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[106,182,202],"referencedDeclaration":182,"src":"2497:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":189,"id":200,"nodeType":"Return","src":"2490:59:0"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"2261:141:0","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":202,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:0","nodeType":"FunctionDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"addr","nameLocation":"2436:4:0","nodeType":"VariableDeclaration","scope":202,"src":"2428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:0"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"2465:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":187,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:0"},"scope":228,"src":"2407:149:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":226,"nodeType":"Block","src":"2711:66:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2744:1:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":213,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:0","typeDescriptions":{}}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":212,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":221,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"2767:1:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":219,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:0","typeDescriptions":{}}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":218,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":211,"id":225,"nodeType":"Return","src":"2721:49:0"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"2562:66:0","text":" @dev Returns true if the two strings are equal."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:0","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"a","nameLocation":"2662:1:0","nodeType":"VariableDeclaration","scope":227,"src":"2648:15:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":204,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"b","nameLocation":"2679:1:0","nodeType":"VariableDeclaration","scope":227,"src":"2665:15:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":206,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:0"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"2705:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":209,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:0"},"scope":228,"src":"2633:144:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":229,"src":"220:2559:0","usedErrors":[]}],"src":"101:2679:0"},"id":0},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1094]},"id":1095,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":230,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"128:73:1","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1094,"linearizedBaseContracts":[1094],"name":"Math","nameLocation":"210:4:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":235,"members":[{"id":232,"name":"Down","nameLocation":"245:4:1","nodeType":"EnumValue","src":"245:4:1"},{"id":233,"name":"Up","nameLocation":"287:2:1","nodeType":"EnumValue","src":"287:2:1"},{"id":234,"name":"Zero","nameLocation":"318:4:1","nodeType":"EnumValue","src":"318:4:1"}],"name":"Rounding","nameLocation":"226:8:1","nodeType":"EnumDefinition","src":"221:122:1"},{"body":{"id":252,"nodeType":"Block","src":"480:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"497:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"501:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":249,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"509:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:1","trueExpression":{"id":248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"505:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":244,"id":251,"nodeType":"Return","src":"490:20:1"}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"349:59:1","text":" @dev Returns the largest of two numbers."},"id":253,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:1","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"a","nameLocation":"434:1:1","nodeType":"VariableDeclaration","scope":253,"src":"426:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"b","nameLocation":"445:1:1","nodeType":"VariableDeclaration","scope":253,"src":"437:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:1"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":253,"src":"471:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:1"},"scope":1094,"src":"413:104:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":270,"nodeType":"Block","src":"655:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"672:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"676:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":267,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"684:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:1","trueExpression":{"id":266,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"680:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":262,"id":269,"nodeType":"Return","src":"665:20:1"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"523:60:1","text":" @dev Returns the smallest of two numbers."},"id":271,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:1","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"a","nameLocation":"609:1:1","nodeType":"VariableDeclaration","scope":271,"src":"601:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"b","nameLocation":"620:1:1","nodeType":"VariableDeclaration","scope":271,"src":"612:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:1"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":271,"src":"646:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:1"},"scope":1094,"src":"588:104:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"876:82:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"931:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"935:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"941:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"945:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":280,"id":292,"nodeType":"Return","src":"923:28:1"}]},"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"698:102:1","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:1","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"a","nameLocation":"830:1:1","nodeType":"VariableDeclaration","scope":294,"src":"822:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"b","nameLocation":"841:1:1","nodeType":"VariableDeclaration","scope":294,"src":"833:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:1"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"867:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:1"},"scope":1094,"src":"805:153:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":318,"nodeType":"Block","src":"1228:123:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1316:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1330:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":312,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"1339:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:1","trueExpression":{"hexValue":"30","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":303,"id":317,"nodeType":"Return","src":"1309:35:1"}]},"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"964:188:1","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":319,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:1","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"a","nameLocation":"1182:1:1","nodeType":"VariableDeclaration","scope":319,"src":"1174:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"b","nameLocation":"1193:1:1","nodeType":"VariableDeclaration","scope":319,"src":"1185:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:1"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"1219:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:1"},"scope":1094,"src":"1157:194:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"1765:4115:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"1775:4099:1","statements":[{"assignments":[332],"declarations":[{"constant":false,"id":332,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:1","nodeType":"VariableDeclaration","scope":440,"src":"2096:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":333,"nodeType":"VariableDeclarationStatement","src":"2096:13:1"},{"assignments":[335],"declarations":[{"constant":false,"id":335,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:1","nodeType":"VariableDeclaration","scope":440,"src":"2168:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":336,"nodeType":"VariableDeclarationStatement","src":"2168:13:1"},{"AST":{"nodeType":"YulBlock","src":"2248:157:1","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:1","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:1"},"nodeType":"YulFunctionCall","src":"2289:6:1"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:1"},"nodeType":"YulFunctionCall","src":"2276:20:1"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:1","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:1"},"nodeType":"YulFunctionCall","src":"2322:9:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:1"}]},{"nodeType":"YulAssignment","src":"2348:43:1","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:1"},"nodeType":"YulFunctionCall","src":"2361:14:1"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:1"},"nodeType":"YulFunctionCall","src":"2377:13:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:1"},"nodeType":"YulFunctionCall","src":"2357:34:1"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":332,"isOffset":false,"isSlot":false,"src":"2313:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"2369:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"2384:5:1","valueSize":1},{"declaration":335,"isOffset":false,"isSlot":false,"src":"2348:5:1","valueSize":1},{"declaration":322,"isOffset":false,"isSlot":false,"src":"2283:1:1","valueSize":1},{"declaration":322,"isOffset":false,"isSlot":false,"src":"2326:1:1","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"2286:1:1","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"2329:1:1","valueSize":1}],"id":337,"nodeType":"InlineAssembly","src":"2239:166:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":338,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2486:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":346,"nodeType":"IfStatement","src":"2482:368:1","trueBody":{"id":345,"nodeType":"Block","src":"2498:352:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":341,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"2816:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":342,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2824:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":330,"id":344,"nodeType":"Return","src":"2809:26:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2960:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":349,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2974:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"ExpressionStatement","src":"2952:53:1"},{"assignments":[355],"declarations":[{"constant":false,"id":355,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:1","nodeType":"VariableDeclaration","scope":440,"src":"3261:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":356,"nodeType":"VariableDeclarationStatement","src":"3261:17:1"},{"AST":{"nodeType":"YulBlock","src":"3301:291:1","statements":[{"nodeType":"YulAssignment","src":"3370:38:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:1"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:1"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:1"},"nodeType":"YulFunctionCall","src":"3383:25:1"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:1"}]},{"nodeType":"YulAssignment","src":"3490:41:1","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:1"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:1"},"nodeType":"YulFunctionCall","src":"3510:20:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:1"},"nodeType":"YulFunctionCall","src":"3499:32:1"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:1"}]},{"nodeType":"YulAssignment","src":"3548:30:1","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:1"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:1"},"nodeType":"YulFunctionCall","src":"3557:21:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":326,"isOffset":false,"isSlot":false,"src":"3396:11:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"3524:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"3548:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"3561:5:1","valueSize":1},{"declaration":335,"isOffset":false,"isSlot":false,"src":"3490:5:1","valueSize":1},{"declaration":335,"isOffset":false,"isSlot":false,"src":"3503:5:1","valueSize":1},{"declaration":355,"isOffset":false,"isSlot":false,"src":"3370:9:1","valueSize":1},{"declaration":355,"isOffset":false,"isSlot":false,"src":"3513:9:1","valueSize":1},{"declaration":355,"isOffset":false,"isSlot":false,"src":"3568:9:1","valueSize":1},{"declaration":322,"isOffset":false,"isSlot":false,"src":"3390:1:1","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"3393:1:1","valueSize":1}],"id":357,"nodeType":"InlineAssembly","src":"3292:300:1"},{"assignments":[359],"declarations":[{"constant":false,"id":359,"mutability":"mutable","name":"twos","nameLocation":"3907:4:1","nodeType":"VariableDeclaration","scope":440,"src":"3899:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":367,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":360,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"3914:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:1","subExpression":{"id":361,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"3930:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:1"},{"AST":{"nodeType":"YulBlock","src":"3969:362:1","statements":[{"nodeType":"YulAssignment","src":"4034:37:1","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:1"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:1"},"nodeType":"YulFunctionCall","src":"4049:22:1"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:1"}]},{"nodeType":"YulAssignment","src":"4138:25:1","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:1"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:1"},"nodeType":"YulFunctionCall","src":"4147:16:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:1"}]},{"nodeType":"YulAssignment","src":"4278:39:1","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:1","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:1"},"nodeType":"YulFunctionCall","src":"4294:12:1"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:1"},"nodeType":"YulFunctionCall","src":"4290:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:1"},"nodeType":"YulFunctionCall","src":"4286:31:1"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":326,"isOffset":false,"isSlot":false,"src":"4034:11:1","valueSize":1},{"declaration":326,"isOffset":false,"isSlot":false,"src":"4053:11:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"4138:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"4151:5:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4066:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4158:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4278:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4301:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4308:4:1","valueSize":1}],"id":368,"nodeType":"InlineAssembly","src":"3960:371:1"},{"expression":{"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":369,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"4397:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":370,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":371,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"4414:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":374,"nodeType":"ExpressionStatement","src":"4397:21:1"},{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:1","nodeType":"VariableDeclaration","scope":440,"src":"4736:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":383,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":378,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4759:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:1"},{"expression":{"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":384,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4992:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":386,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5007:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":387,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5021:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":391,"nodeType":"ExpressionStatement","src":"4992:36:1"},{"expression":{"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":392,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5061:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":394,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5076:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":395,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5090:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":399,"nodeType":"ExpressionStatement","src":"5061:36:1"},{"expression":{"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":400,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5131:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":402,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5146:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":403,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5160:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":407,"nodeType":"ExpressionStatement","src":"5131:36:1"},{"expression":{"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":408,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5201:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5216:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":411,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5230:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":415,"nodeType":"ExpressionStatement","src":"5201:36:1"},{"expression":{"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":416,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5271:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":418,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5286:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":419,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5300:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":423,"nodeType":"ExpressionStatement","src":"5271:36:1"},{"expression":{"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":424,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5342:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":426,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5357:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":427,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5371:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":431,"nodeType":"ExpressionStatement","src":"5342:36:1"},{"expression":{"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5812:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"5821:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":434,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5829:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ExpressionStatement","src":"5812:24:1"},{"expression":{"id":438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5857:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":330,"id":439,"nodeType":"Return","src":"5850:13:1"}]}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1357:305:1","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:1","nodeType":"FunctionDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"x","nameLocation":"1691:1:1","nodeType":"VariableDeclaration","scope":442,"src":"1683:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"y","nameLocation":"1702:1:1","nodeType":"VariableDeclaration","scope":442,"src":"1694:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:1","nodeType":"VariableDeclaration","scope":442,"src":"1705:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:1"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"result","nameLocation":"1757:6:1","nodeType":"VariableDeclaration","scope":442,"src":"1749:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:1"},"scope":1094,"src":"1667:4213:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":485,"nodeType":"Block","src":"6122:189:1","statements":[{"assignments":[458],"declarations":[{"constant":false,"id":458,"mutability":"mutable","name":"result","nameLocation":"6140:6:1","nodeType":"VariableDeclaration","scope":485,"src":"6132:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":464,"initialValue":{"arguments":[{"id":460,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6156:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":461,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6159:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":462,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6162:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":459,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[442,486],"referencedDeclaration":442,"src":"6149:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":465,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6188:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":466,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6200:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"6200:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"6188:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":470,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6222:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":471,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6225:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":472,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6228:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":469,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:1","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":482,"nodeType":"IfStatement","src":"6184:98:1","trueBody":{"id":481,"nodeType":"Block","src":"6246:36:1","statements":[{"expression":{"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"6260:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":480,"nodeType":"ExpressionStatement","src":"6260:11:1"}]}},{"expression":{"id":483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"6298:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":456,"id":484,"nodeType":"Return","src":"6291:13:1"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"5886:121:1","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":486,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:1","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"x","nameLocation":"6036:1:1","nodeType":"VariableDeclaration","scope":486,"src":"6028:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"y","nameLocation":"6047:1:1","nodeType":"VariableDeclaration","scope":486,"src":"6039:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:1","nodeType":"VariableDeclaration","scope":486,"src":"6050:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:1","nodeType":"VariableDeclaration","scope":486,"src":"6071:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"Rounding","nameLocations":["6071:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"6071:8:1"},"referencedDeclaration":235,"src":"6071:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:1"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":486,"src":"6113:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:1"},"scope":1094,"src":"6012:299:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":597,"nodeType":"Block","src":"6587:1585:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":494,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"6601:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":500,"nodeType":"IfStatement","src":"6597:45:1","trueBody":{"id":499,"nodeType":"Block","src":"6609:33:1","statements":[{"expression":{"hexValue":"30","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":493,"id":498,"nodeType":"Return","src":"6623:8:1"}]}},{"assignments":[502],"declarations":[{"constant":false,"id":502,"mutability":"mutable","name":"result","nameLocation":"7329:6:1","nodeType":"VariableDeclaration","scope":597,"src":"7321:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":511,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7349:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":504,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[766,802],"referencedDeclaration":766,"src":"7344:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:1"},{"id":596,"nodeType":"UncheckedBlock","src":"7758:408:1","statements":[{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7782:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7792:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7801:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7805:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ExpressionStatement","src":"7782:35:1"},{"expression":{"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7831:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7841:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7850:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7854:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":533,"nodeType":"ExpressionStatement","src":"7831:35:1"},{"expression":{"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7880:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7890:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7899:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7903:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":544,"nodeType":"ExpressionStatement","src":"7880:35:1"},{"expression":{"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7929:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7939:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7948:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7952:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":555,"nodeType":"ExpressionStatement","src":"7929:35:1"},{"expression":{"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7978:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7988:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7997:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8001:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":566,"nodeType":"ExpressionStatement","src":"7978:35:1"},{"expression":{"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8027:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8037:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8046:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8050:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":577,"nodeType":"ExpressionStatement","src":"8027:35:1"},{"expression":{"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8076:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8086:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8095:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8099:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":588,"nodeType":"ExpressionStatement","src":"8076:35:1"},{"expression":{"arguments":[{"id":590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8136:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8144:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8148:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":589,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8132:3:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":493,"id":595,"nodeType":"Return","src":"8125:30:1"}]}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"6317:208:1","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":598,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:1","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"a","nameLocation":"6552:1:1","nodeType":"VariableDeclaration","scope":598,"src":"6544:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:1"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":598,"src":"6578:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":491,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:1"},"scope":1094,"src":"6530:1642:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":633,"nodeType":"Block","src":"8348:161:1","statements":[{"id":632,"nodeType":"UncheckedBlock","src":"8358:145:1","statements":[{"assignments":[610],"declarations":[{"constant":false,"id":610,"mutability":"mutable","name":"result","nameLocation":"8390:6:1","nodeType":"VariableDeclaration","scope":632,"src":"8382:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":614,"initialValue":{"arguments":[{"id":612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"8404:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":611,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[598,634],"referencedDeclaration":598,"src":"8399:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8427:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"8437:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":617,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"8449:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"8449:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"8437:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8464:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8473:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"8482:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:1","trueExpression":{"hexValue":"31","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":608,"id":631,"nodeType":"Return","src":"8420:72:1"}]}]},"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"8178:89:1","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:1","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"a","nameLocation":"8294:1:1","nodeType":"VariableDeclaration","scope":634,"src":"8286:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:1","nodeType":"VariableDeclaration","scope":634,"src":"8297:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":603,"nodeType":"UserDefinedTypeName","pathNode":{"id":602,"name":"Rounding","nameLocations":["8297:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"8297:8:1"},"referencedDeclaration":235,"src":"8297:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:1"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":634,"src":"8339:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:1"},"scope":1094,"src":"8272:237:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":765,"nodeType":"Block","src":"8694:922:1","statements":[{"assignments":[643],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"result","nameLocation":"8712:6:1","nodeType":"VariableDeclaration","scope":765,"src":"8704:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":645,"initialValue":{"hexValue":"30","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:1"},{"id":762,"nodeType":"UncheckedBlock","src":"8732:855:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8760:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":660,"nodeType":"IfStatement","src":"8756:99:1","trueBody":{"id":659,"nodeType":"Block","src":"8778:77:1","statements":[{"expression":{"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8796:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":654,"nodeType":"ExpressionStatement","src":"8796:13:1"},{"expression":{"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"8827:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":658,"nodeType":"ExpressionStatement","src":"8827:13:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8872:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":675,"nodeType":"IfStatement","src":"8868:96:1","trueBody":{"id":674,"nodeType":"Block","src":"8889:75:1","statements":[{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8907:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":669,"nodeType":"ExpressionStatement","src":"8907:12:1"},{"expression":{"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"8937:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":673,"nodeType":"ExpressionStatement","src":"8937:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8981:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":690,"nodeType":"IfStatement","src":"8977:96:1","trueBody":{"id":689,"nodeType":"Block","src":"8998:75:1","statements":[{"expression":{"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9016:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":684,"nodeType":"ExpressionStatement","src":"9016:12:1"},{"expression":{"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9046:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":688,"nodeType":"ExpressionStatement","src":"9046:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9090:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":705,"nodeType":"IfStatement","src":"9086:96:1","trueBody":{"id":704,"nodeType":"Block","src":"9107:75:1","statements":[{"expression":{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9125:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":699,"nodeType":"ExpressionStatement","src":"9125:12:1"},{"expression":{"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9155:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":703,"nodeType":"ExpressionStatement","src":"9155:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9199:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":720,"nodeType":"IfStatement","src":"9195:93:1","trueBody":{"id":719,"nodeType":"Block","src":"9215:73:1","statements":[{"expression":{"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9233:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":714,"nodeType":"ExpressionStatement","src":"9233:11:1"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9262:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":718,"nodeType":"ExpressionStatement","src":"9262:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9305:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"IfStatement","src":"9301:93:1","trueBody":{"id":734,"nodeType":"Block","src":"9321:73:1","statements":[{"expression":{"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9339:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":729,"nodeType":"ExpressionStatement","src":"9339:11:1"},{"expression":{"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9368:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":733,"nodeType":"ExpressionStatement","src":"9368:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9411:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":750,"nodeType":"IfStatement","src":"9407:93:1","trueBody":{"id":749,"nodeType":"Block","src":"9427:73:1","statements":[{"expression":{"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9445:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":744,"nodeType":"ExpressionStatement","src":"9445:11:1"},{"expression":{"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9474:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":748,"nodeType":"ExpressionStatement","src":"9474:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9517:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":761,"nodeType":"IfStatement","src":"9513:64:1","trueBody":{"id":760,"nodeType":"Block","src":"9533:44:1","statements":[{"expression":{"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9551:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":759,"nodeType":"ExpressionStatement","src":"9551:11:1"}]}}]},{"expression":{"id":763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9603:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":641,"id":764,"nodeType":"Return","src":"9596:13:1"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"8515:113:1","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:1","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"value","nameLocation":"8655:5:1","nodeType":"VariableDeclaration","scope":766,"src":"8647:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:1"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"8685:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:1"},"scope":1094,"src":"8633:983:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":801,"nodeType":"Block","src":"9849:165:1","statements":[{"id":800,"nodeType":"UncheckedBlock","src":"9859:149:1","statements":[{"assignments":[778],"declarations":[{"constant":false,"id":778,"mutability":"mutable","name":"result","nameLocation":"9891:6:1","nodeType":"VariableDeclaration","scope":800,"src":"9883:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":782,"initialValue":{"arguments":[{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9905:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":779,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[766,802],"referencedDeclaration":766,"src":"9900:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"9932:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9942:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":785,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"9954:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"9954:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"9942:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"9974:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9983:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:1","trueExpression":{"hexValue":"31","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":776,"id":799,"nodeType":"Return","src":"9925:72:1"}]}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"9622:142:1","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":802,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:1","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"value","nameLocation":"9791:5:1","nodeType":"VariableDeclaration","scope":802,"src":"9783:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:1","nodeType":"VariableDeclaration","scope":802,"src":"9798:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":771,"nodeType":"UserDefinedTypeName","pathNode":{"id":770,"name":"Rounding","nameLocations":["9798:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"9798:8:1"},"referencedDeclaration":235,"src":"9798:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:1"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":802,"src":"9840:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:1"},"scope":1094,"src":"9769:245:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":930,"nodeType":"Block","src":"10201:854:1","statements":[{"assignments":[811],"declarations":[{"constant":false,"id":811,"mutability":"mutable","name":"result","nameLocation":"10219:6:1","nodeType":"VariableDeclaration","scope":930,"src":"10211:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":813,"initialValue":{"hexValue":"30","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:1"},{"id":927,"nodeType":"UncheckedBlock","src":"10239:787:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10267:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":830,"nodeType":"IfStatement","src":"10263:103:1","trueBody":{"id":829,"nodeType":"Block","src":"10286:80:1","statements":[{"expression":{"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10304:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":824,"nodeType":"ExpressionStatement","src":"10304:17:1"},{"expression":{"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10339:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":828,"nodeType":"ExpressionStatement","src":"10339:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10383:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":847,"nodeType":"IfStatement","src":"10379:103:1","trueBody":{"id":846,"nodeType":"Block","src":"10402:80:1","statements":[{"expression":{"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10420:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ExpressionStatement","src":"10420:17:1"},{"expression":{"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":842,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10455:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":845,"nodeType":"ExpressionStatement","src":"10455:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10499:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":864,"nodeType":"IfStatement","src":"10495:103:1","trueBody":{"id":863,"nodeType":"Block","src":"10518:80:1","statements":[{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10536:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"10536:17:1"},{"expression":{"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":859,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10571:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":862,"nodeType":"ExpressionStatement","src":"10571:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10615:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":881,"nodeType":"IfStatement","src":"10611:100:1","trueBody":{"id":880,"nodeType":"Block","src":"10633:78:1","statements":[{"expression":{"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10651:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":875,"nodeType":"ExpressionStatement","src":"10651:16:1"},{"expression":{"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10685:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":879,"nodeType":"ExpressionStatement","src":"10685:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10728:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":898,"nodeType":"IfStatement","src":"10724:100:1","trueBody":{"id":897,"nodeType":"Block","src":"10746:78:1","statements":[{"expression":{"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10764:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":892,"nodeType":"ExpressionStatement","src":"10764:16:1"},{"expression":{"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10798:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":896,"nodeType":"ExpressionStatement","src":"10798:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10841:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":915,"nodeType":"IfStatement","src":"10837:100:1","trueBody":{"id":914,"nodeType":"Block","src":"10859:78:1","statements":[{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10877:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":909,"nodeType":"ExpressionStatement","src":"10877:16:1"},{"expression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10911:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":913,"nodeType":"ExpressionStatement","src":"10911:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10954:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"10950:66:1","trueBody":{"id":925,"nodeType":"Block","src":"10972:44:1","statements":[{"expression":{"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":921,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10990:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":924,"nodeType":"ExpressionStatement","src":"10990:11:1"}]}}]},{"expression":{"id":928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"11042:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":809,"id":929,"nodeType":"Return","src":"11035:13:1"}]},"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"10020:114:1","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":931,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:1","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"value","nameLocation":"10162:5:1","nodeType":"VariableDeclaration","scope":931,"src":"10154:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:1"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":931,"src":"10192:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:1"},"scope":1094,"src":"10139:916:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"11290:167:1","statements":[{"id":965,"nodeType":"UncheckedBlock","src":"11300:151:1","statements":[{"assignments":[943],"declarations":[{"constant":false,"id":943,"mutability":"mutable","name":"result","nameLocation":"11332:6:1","nodeType":"VariableDeclaration","scope":965,"src":"11324:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":947,"initialValue":{"arguments":[{"id":945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"11347:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":944,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[931,967],"referencedDeclaration":931,"src":"11341:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"11374:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":949,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"11384:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":950,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"11396:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"11396:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"11384:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"11417:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"11426:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:1","trueExpression":{"hexValue":"31","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":941,"id":964,"nodeType":"Return","src":"11367:73:1"}]}]},"documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"11061:143:1","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:1","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"value","nameLocation":"11232:5:1","nodeType":"VariableDeclaration","scope":967,"src":"11224:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:1","nodeType":"VariableDeclaration","scope":967,"src":"11239:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":936,"nodeType":"UserDefinedTypeName","pathNode":{"id":935,"name":"Rounding","nameLocations":["11239:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"11239:8:1"},"referencedDeclaration":235,"src":"11239:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:1"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"11281:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:1"},"scope":1094,"src":"11209:248:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"11771:600:1","statements":[{"assignments":[976],"declarations":[{"constant":false,"id":976,"mutability":"mutable","name":"result","nameLocation":"11789:6:1","nodeType":"VariableDeclaration","scope":1053,"src":"11781:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":978,"initialValue":{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:1"},{"id":1050,"nodeType":"UncheckedBlock","src":"11809:533:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11837:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":993,"nodeType":"IfStatement","src":"11833:98:1","trueBody":{"id":992,"nodeType":"Block","src":"11855:76:1","statements":[{"expression":{"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11873:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":987,"nodeType":"ExpressionStatement","src":"11873:13:1"},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"11904:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ExpressionStatement","src":"11904:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11948:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1008,"nodeType":"IfStatement","src":"11944:95:1","trueBody":{"id":1007,"nodeType":"Block","src":"11965:74:1","statements":[{"expression":{"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11983:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1002,"nodeType":"ExpressionStatement","src":"11983:12:1"},{"expression":{"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12013:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1006,"nodeType":"ExpressionStatement","src":"12013:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12056:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1023,"nodeType":"IfStatement","src":"12052:95:1","trueBody":{"id":1022,"nodeType":"Block","src":"12073:74:1","statements":[{"expression":{"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12091:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"nodeType":"ExpressionStatement","src":"12091:12:1"},{"expression":{"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12121:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1021,"nodeType":"ExpressionStatement","src":"12121:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12164:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1038,"nodeType":"IfStatement","src":"12160:95:1","trueBody":{"id":1037,"nodeType":"Block","src":"12181:74:1","statements":[{"expression":{"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12199:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1032,"nodeType":"ExpressionStatement","src":"12199:12:1"},{"expression":{"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12229:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"nodeType":"ExpressionStatement","src":"12229:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12272:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1049,"nodeType":"IfStatement","src":"12268:64:1","trueBody":{"id":1048,"nodeType":"Block","src":"12288:44:1","statements":[{"expression":{"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12306:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1047,"nodeType":"ExpressionStatement","src":"12306:11:1"}]}}]},{"expression":{"id":1051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12358:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":974,"id":1052,"nodeType":"Return","src":"12351:13:1"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"11463:240:1","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:1","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"value","nameLocation":"11732:5:1","nodeType":"VariableDeclaration","scope":1054,"src":"11724:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:1"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"11762:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:1"},"scope":1094,"src":"11708:663:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1092,"nodeType":"Block","src":"12608:174:1","statements":[{"id":1091,"nodeType":"UncheckedBlock","src":"12618:158:1","statements":[{"assignments":[1066],"declarations":[{"constant":false,"id":1066,"mutability":"mutable","name":"result","nameLocation":"12650:6:1","nodeType":"VariableDeclaration","scope":1091,"src":"12642:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1070,"initialValue":{"arguments":[{"id":1068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12666:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1067,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1054,1093],"referencedDeclaration":1054,"src":"12659:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12693:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1072,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12703:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1073,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"12715:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"12715:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"12703:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12736:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12751:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:1","trueExpression":{"hexValue":"31","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1064,"id":1090,"nodeType":"Return","src":"12686:79:1"}]}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"12377:144:1","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1093,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:1","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"value","nameLocation":"12550:5:1","nodeType":"VariableDeclaration","scope":1093,"src":"12542:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:1","nodeType":"VariableDeclaration","scope":1093,"src":"12557:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":1059,"nodeType":"UserDefinedTypeName","pathNode":{"id":1058,"name":"Rounding","nameLocations":["12557:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"12557:8:1"},"referencedDeclaration":235,"src":"12557:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:1"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1093,"src":"12599:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:1"},"scope":1094,"src":"12526:256:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1095,"src":"202:12582:1","usedErrors":[]}],"src":"103:12682:1"},"id":1},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1199]},"id":1200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1096,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"134:80:2","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1199,"linearizedBaseContracts":[1199],"name":"SignedMath","nameLocation":"223:10:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":1114,"nodeType":"Block","src":"375:37:2","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"392:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1108,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"396:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"404:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:2","trueExpression":{"id":1110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"400:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1106,"id":1113,"nodeType":"Return","src":"385:20:2"}]},"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"240:66:2","text":" @dev Returns the largest of two signed numbers."},"id":1115,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:2","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"a","nameLocation":"331:1:2","nodeType":"VariableDeclaration","scope":1115,"src":"324:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1099,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"b","nameLocation":"341:1:2","nodeType":"VariableDeclaration","scope":1115,"src":"334:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1101,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:2"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"367:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1104,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:2"},"scope":1199,"src":"311:101:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1132,"nodeType":"Block","src":"554:37:2","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"571:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"575:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1129,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"583:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:2","trueExpression":{"id":1128,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"579:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1124,"id":1131,"nodeType":"Return","src":"564:20:2"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"418:67:2","text":" @dev Returns the smallest of two signed numbers."},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:2","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"a","nameLocation":"510:1:2","nodeType":"VariableDeclaration","scope":1133,"src":"503:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1117,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"b","nameLocation":"520:1:2","nodeType":"VariableDeclaration","scope":1133,"src":"513:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1119,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:2"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"546:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1122,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:2"},"scope":1199,"src":"490:101:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1176,"nodeType":"Block","src":"796:162:2","statements":[{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"x","nameLocation":"865:1:2","nodeType":"VariableDeclaration","scope":1176,"src":"858:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1143,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1157,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"870:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"874:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"881:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1150,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"885:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:2"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1158,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"910:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1163,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"930:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:2","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:2","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1159,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:2","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"944:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"948:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1142,"id":1175,"nodeType":"Return","src":"903:48:2"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"597:126:2","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1177,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:2","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"a","nameLocation":"752:1:2","nodeType":"VariableDeclaration","scope":1177,"src":"745:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1135,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"b","nameLocation":"762:1:2","nodeType":"VariableDeclaration","scope":1177,"src":"755:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1137,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:2"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"788:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1140,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:2"},"scope":1199,"src":"728:230:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"1102:158:2","statements":[{"id":1196,"nodeType":"UncheckedBlock","src":"1112:142:2","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1227:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:2","subExpression":{"id":1191,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1241:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:2","trueExpression":{"id":1190,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1236:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:2","typeDescriptions":{}}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1184,"id":1195,"nodeType":"Return","src":"1212:31:2"}]}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"964:78:2","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:2","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"n","nameLocation":"1067:1:2","nodeType":"VariableDeclaration","scope":1198,"src":"1060:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1179,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:2"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1198,"src":"1093:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:2"},"scope":1199,"src":"1047:213:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1200,"src":"215:1047:2","usedErrors":[]}],"src":"109:1154:2"},"id":2},"contracts/GreenDAO.sol":{"ast":{"absolutePath":"contracts/GreenDAO.sol","exportedSymbols":{"BondStatus":[3157],"Coin":[2694],"Commission":[3080],"CommissionRates":[3074],"DISTRIBUTION_CONTRACT":[2731],"DISTRIBUTION_PRECOMPILE_ADDRESS":[2714],"Dec":[2689],"DecCoin":[2701],"DelegationDelegatorReward":[2755],"DistributionI":[2904],"GreenDAO":[2556],"MSG_CANCEL_UNDELEGATION":[3067],"MSG_DELEGATE":[3058],"MSG_REDELEGATE":[3064],"MSG_SET_WITHDRAWER_ADDRESS":[2718],"MSG_UNDELEGATE":[3061],"MSG_WITHDRAW_DELEGATOR_REWARD":[2721],"MSG_WITHDRAW_VALIDATOR_COMMISSION":[2724],"Math":[1094],"PageRequest":[3152],"PageResponse":[2706],"Redelegation":[3117],"RedelegationEntry":[3132],"RedelegationEntryResponse":[3123],"RedelegationResponse":[3112],"STAKING_CONTRACT":[3054],"STAKING_PRECOMPILE_ADDRESS":[3047],"SignedMath":[1199],"StakingI":[3340],"Strings":[228],"UnbondingDelegationEntry":[3141],"Validator":[3104],"ValidatorDistributionInfo":[2748],"ValidatorSlashEvent":[2737],"authorization":[3042],"genericAuth":[2709]},"id":2557,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1201,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2557,"sourceUnit":229,"src":"58:51:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/precompiles/stateful/Staking.sol","file":"./precompiles/stateful/Staking.sol","id":1203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2557,"sourceUnit":3341,"src":"111:44:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/precompiles/stateful/Distribution.sol","file":"./precompiles/stateful/Distribution.sol","id":1204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2557,"sourceUnit":2905,"src":"157:49:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"GreenDAO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2556,"linearizedBaseContracts":[2556],"name":"GreenDAO","nameLocation":"217:8:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GreenDAO.dao_uri_struct","id":1211,"members":[{"constant":false,"id":1206,"mutability":"mutable","name":"dao_wallet","nameLocation":"274:10:3","nodeType":"VariableDeclaration","scope":1211,"src":"267:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1205,"name":"string","nodeType":"ElementaryTypeName","src":"267:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"dao_uri","nameLocation":"302:7:3","nodeType":"VariableDeclaration","scope":1211,"src":"295:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1207,"name":"string","nodeType":"ElementaryTypeName","src":"295:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"finished","nameLocation":"327:8:3","nodeType":"VariableDeclaration","scope":1211,"src":"320:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1209,"name":"string","nodeType":"ElementaryTypeName","src":"320:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"dao_uri_struct","nameLocation":"241:14:3","nodeType":"StructDefinition","scope":2556,"src":"234:109:3","visibility":"public"},{"canonicalName":"GreenDAO.goal_uri_struct","id":1216,"members":[{"constant":false,"id":1213,"mutability":"mutable","name":"dao_id","nameLocation":"391:6:3","nodeType":"VariableDeclaration","scope":1216,"src":"383:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"383:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"goal_uri","nameLocation":"415:8:3","nodeType":"VariableDeclaration","scope":1216,"src":"408:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1214,"name":"string","nodeType":"ElementaryTypeName","src":"408:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_uri_struct","nameLocation":"356:15:3","nodeType":"StructDefinition","scope":2556,"src":"349:82:3","visibility":"public"},{"canonicalName":"GreenDAO.ideas_uri_struct","id":1223,"members":[{"constant":false,"id":1218,"mutability":"mutable","name":"goal_id","nameLocation":"482:7:3","nodeType":"VariableDeclaration","scope":1223,"src":"474:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"ideas_uri","nameLocation":"507:9:3","nodeType":"VariableDeclaration","scope":1223,"src":"500:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1219,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"donation","nameLocation":"535:8:3","nodeType":"VariableDeclaration","scope":1223,"src":"527:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ideas_uri_struct","nameLocation":"446:16:3","nodeType":"StructDefinition","scope":2556,"src":"439:112:3","visibility":"public"},{"canonicalName":"GreenDAO.smart_contract_uri_struct","id":1230,"members":[{"constant":false,"id":1225,"mutability":"mutable","name":"smart_contract_id","nameLocation":"609:17:3","nodeType":"VariableDeclaration","scope":1230,"src":"601:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"ideas_id","nameLocation":"645:8:3","nodeType":"VariableDeclaration","scope":1230,"src":"637:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"637:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"smart_contract_uri","nameLocation":"671:18:3","nodeType":"VariableDeclaration","scope":1230,"src":"664:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1228,"name":"string","nodeType":"ElementaryTypeName","src":"664:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"smart_contract_uri_struct","nameLocation":"564:25:3","nodeType":"StructDefinition","scope":2556,"src":"557:140:3","visibility":"public"},{"canonicalName":"GreenDAO.goal_ideas_votes_struct","id":1237,"members":[{"constant":false,"id":1232,"mutability":"mutable","name":"goal_id","nameLocation":"753:7:3","nodeType":"VariableDeclaration","scope":1237,"src":"745:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"ideas_id","nameLocation":"779:8:3","nodeType":"VariableDeclaration","scope":1237,"src":"771:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"771:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"wallet","nameLocation":"805:6:3","nodeType":"VariableDeclaration","scope":1237,"src":"798:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1235,"name":"string","nodeType":"ElementaryTypeName","src":"798:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_ideas_votes_struct","nameLocation":"710:23:3","nodeType":"StructDefinition","scope":2556,"src":"703:116:3","visibility":"public"},{"canonicalName":"GreenDAO.message_struct","id":1244,"members":[{"constant":false,"id":1239,"mutability":"mutable","name":"message_id","nameLocation":"866:10:3","nodeType":"VariableDeclaration","scope":1244,"src":"858:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"ideas_id","nameLocation":"895:8:3","nodeType":"VariableDeclaration","scope":1244,"src":"887:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"message","nameLocation":"921:7:3","nodeType":"VariableDeclaration","scope":1244,"src":"914:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1242,"name":"string","nodeType":"ElementaryTypeName","src":"914:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_struct","nameLocation":"832:14:3","nodeType":"StructDefinition","scope":2556,"src":"825:111:3","visibility":"public"},{"canonicalName":"GreenDAO.reply_struct","id":1251,"members":[{"constant":false,"id":1246,"mutability":"mutable","name":"reply_id","nameLocation":"981:8:3","nodeType":"VariableDeclaration","scope":1251,"src":"973:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"973:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"message_id","nameLocation":"1008:10:3","nodeType":"VariableDeclaration","scope":1251,"src":"1000:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"message","nameLocation":"1036:7:3","nodeType":"VariableDeclaration","scope":1251,"src":"1029:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1249,"name":"string","nodeType":"ElementaryTypeName","src":"1029:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"reply_struct","nameLocation":"949:12:3","nodeType":"StructDefinition","scope":2556,"src":"942:109:3","visibility":"public"},{"constant":false,"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"1057:65:3","text":"@dev the required authorizations for Staking and Distribution"},"id":1259,"mutability":"mutable","name":"stakingMethods","nameLocation":"1145:14:3","nodeType":"VariableDeclaration","scope":2556,"src":"1128:80:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":1253,"name":"string","nodeType":"ElementaryTypeName","src":"1128:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1254,"nodeType":"ArrayTypeName","src":"1128:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":{"components":[{"id":1255,"name":"MSG_DELEGATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"1163:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1256,"name":"MSG_UNDELEGATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"1177:14:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1257,"name":"MSG_REDELEGATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"1193:14:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1258,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1162:46:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string memory[3] memory"}},"visibility":"private"},{"constant":false,"id":1264,"mutability":"mutable","name":"distributionMethods","nameLocation":"1232:19:3","nodeType":"VariableDeclaration","scope":2556,"src":"1215:70:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":1260,"name":"string","nodeType":"ElementaryTypeName","src":"1215:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1261,"nodeType":"ArrayTypeName","src":"1215:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"value":{"components":[{"id":1262,"name":"MSG_WITHDRAW_DELEGATOR_REWARD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1255:29:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1263,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1254:31:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$1_memory_ptr","typeString":"string memory[1] memory"}},"visibility":"private"},{"constant":false,"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"1292:60:3","text":"@dev map to keep track of user deposits to the contract."},"functionSelector":"414d9a2b","id":1269,"mutability":"mutable","name":"donated","nameLocation":"1393:7:3","nodeType":"VariableDeclaration","scope":2556,"src":"1358:42:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1268,"keyType":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1358:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":1271,"mutability":"mutable","name":"_total_delegations","nameLocation":"1500:18:3","nodeType":"VariableDeclaration","scope":2556,"src":"1484:34:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1484:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1274,"mutability":"mutable","name":"_validatorAddr","nameLocation":"1540:14:3","nodeType":"VariableDeclaration","scope":2556,"src":"1525:86:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1272,"name":"string","nodeType":"ElementaryTypeName","src":"1525:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"65766d6f7376616c6f7065723135387777617334763666676375327833706c67373073367530666d306c6c653233376b6c7472","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1558:53:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_54e976b69801170b6287142772613669e64b6e19b5654f391949127efe396998","typeString":"literal_string \"evmosvaloper158wwas4v6fgcu2x3plg70s6u0fm0lle237kltr\""},"value":"evmosvaloper158wwas4v6fgcu2x3plg70s6u0fm0lle237kltr"},"visibility":"private"},{"constant":false,"functionSelector":"7bbd582d","id":1276,"mutability":"mutable","name":"_dao_ids","nameLocation":"1637:8:3","nodeType":"VariableDeclaration","scope":2556,"src":"1622:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"13bf4cea","id":1278,"mutability":"mutable","name":"_goal_ids","nameLocation":"1667:9:3","nodeType":"VariableDeclaration","scope":2556,"src":"1652:24:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"1652:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d3791b20","id":1280,"mutability":"mutable","name":"_ideas_ids","nameLocation":"1698:10:3","nodeType":"VariableDeclaration","scope":2556,"src":"1683:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1b592aeb","id":1282,"mutability":"mutable","name":"_smart_contract_ids","nameLocation":"1730:19:3","nodeType":"VariableDeclaration","scope":2556,"src":"1715:34:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4a797bd7","id":1284,"mutability":"mutable","name":"_ideas_vote_ids","nameLocation":"1771:15:3","nodeType":"VariableDeclaration","scope":2556,"src":"1756:30:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9077007d","id":1286,"mutability":"mutable","name":"_message_ids","nameLocation":"1808:12:3","nodeType":"VariableDeclaration","scope":2556,"src":"1793:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1793:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"aa2bf5d3","id":1288,"mutability":"mutable","name":"_reply_ids","nameLocation":"1842:10:3","nodeType":"VariableDeclaration","scope":2556,"src":"1827:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"27a568b9","id":1293,"mutability":"mutable","name":"_dao_uris","nameLocation":"1901:9:3","nodeType":"VariableDeclaration","scope":2556,"src":"1859:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct)"},"typeName":{"id":1292,"keyType":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1867:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1859:34:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct)"},"valueType":{"id":1291,"nodeType":"UserDefinedTypeName","pathNode":{"id":1290,"name":"dao_uri_struct","nameLocations":["1878:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1211,"src":"1878:14:3"},"referencedDeclaration":1211,"src":"1878:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage_ptr","typeString":"struct GreenDAO.dao_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7f2035d4","id":1298,"mutability":"mutable","name":"_goal_uris","nameLocation":"2046:10:3","nodeType":"VariableDeclaration","scope":2556,"src":"2003:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct)"},"typeName":{"id":1297,"keyType":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2003:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct)"},"valueType":{"id":1296,"nodeType":"UserDefinedTypeName","pathNode":{"id":1295,"name":"goal_uri_struct","nameLocations":["2022:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"2022:15:3"},"referencedDeclaration":1216,"src":"2022:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage_ptr","typeString":"struct GreenDAO.goal_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"468d0c80","id":1303,"mutability":"mutable","name":"_ideas_uris","nameLocation":"2177:11:3","nodeType":"VariableDeclaration","scope":2556,"src":"2133:55:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct)"},"typeName":{"id":1302,"keyType":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2141:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2133:36:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct)"},"valueType":{"id":1301,"nodeType":"UserDefinedTypeName","pathNode":{"id":1300,"name":"ideas_uri_struct","nameLocations":["2152:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":1223,"src":"2152:16:3"},"referencedDeclaration":1223,"src":"2152:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage_ptr","typeString":"struct GreenDAO.ideas_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"ff4a37ef","id":1308,"mutability":"mutable","name":"_smart_contracts_uris","nameLocation":"2320:21:3","nodeType":"VariableDeclaration","scope":2556,"src":"2267:74:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1230_storage_$","typeString":"mapping(uint256 => struct GreenDAO.smart_contract_uri_struct)"},"typeName":{"id":1307,"keyType":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2275:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2267:45:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1230_storage_$","typeString":"mapping(uint256 => struct GreenDAO.smart_contract_uri_struct)"},"valueType":{"id":1306,"nodeType":"UserDefinedTypeName","pathNode":{"id":1305,"name":"smart_contract_uri_struct","nameLocations":["2286:25:3"],"nodeType":"IdentifierPath","referencedDeclaration":1230,"src":"2286:25:3"},"referencedDeclaration":1230,"src":"2286:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1230_storage_ptr","typeString":"struct GreenDAO.smart_contract_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"1ba44c4c","id":1313,"mutability":"mutable","name":"all_goal_ideas_votes","nameLocation":"2471:20:3","nodeType":"VariableDeclaration","scope":2556,"src":"2420:71:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct)"},"typeName":{"id":1312,"keyType":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2428:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2420:43:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct)"},"valueType":{"id":1311,"nodeType":"UserDefinedTypeName","pathNode":{"id":1310,"name":"goal_ideas_votes_struct","nameLocations":["2439:23:3"],"nodeType":"IdentifierPath","referencedDeclaration":1237,"src":"2439:23:3"},"referencedDeclaration":1237,"src":"2439:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage_ptr","typeString":"struct GreenDAO.goal_ideas_votes_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"b527d45e","id":1318,"mutability":"mutable","name":"all_messages","nameLocation":"2622:12:3","nodeType":"VariableDeclaration","scope":2556,"src":"2580:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct)"},"typeName":{"id":1317,"keyType":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2588:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2580:34:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct)"},"valueType":{"id":1316,"nodeType":"UserDefinedTypeName","pathNode":{"id":1315,"name":"message_struct","nameLocations":["2599:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1244,"src":"2599:14:3"},"referencedDeclaration":1244,"src":"2599:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage_ptr","typeString":"struct GreenDAO.message_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"3f87a2f4","id":1323,"mutability":"mutable","name":"all_replies","nameLocation":"2739:11:3","nodeType":"VariableDeclaration","scope":2556,"src":"2699:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct)"},"typeName":{"id":1322,"keyType":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"2707:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2699:32:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct)"},"valueType":{"id":1321,"nodeType":"UserDefinedTypeName","pathNode":{"id":1320,"name":"reply_struct","nameLocations":["2718:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1251,"src":"2718:12:3"},"referencedDeclaration":1251,"src":"2718:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage_ptr","typeString":"struct GreenDAO.reply_struct"}}},"visibility":"public"},{"body":{"id":1347,"nodeType":"Block","src":"2944:173:3","statements":[{"expression":{"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1332,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"2992:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1334,"indexExpression":{"id":1333,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3002:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2992:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1336,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"3029:11:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1337,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"3042:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"46616c7365","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3052:7:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""},"value":"False"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""}],"id":1335,"name":"dao_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3014:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_dao_uri_struct_$1211_storage_ptr_$","typeString":"type(struct GreenDAO.dao_uri_struct storage pointer)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_memory_ptr","typeString":"struct GreenDAO.dao_uri_struct memory"}},"src":"2992:68:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1341,"nodeType":"ExpressionStatement","src":"2992:68:3"},{"expression":{"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3071:10:3","subExpression":{"id":1342,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3071:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1344,"nodeType":"ExpressionStatement","src":"3071:10:3"},{"expression":{"id":1345,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3101:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1331,"id":1346,"nodeType":"Return","src":"3094:15:3"}]},"functionSelector":"c4c2e364","id":1348,"implemented":true,"kind":"function","modifiers":[],"name":"create_dao","nameLocation":"2832:10:3","nodeType":"FunctionDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"_dao_wallet","nameLocation":"2867:11:3","nodeType":"VariableDeclaration","scope":1348,"src":"2853:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1324,"name":"string","nodeType":"ElementaryTypeName","src":"2853:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"_dao_uri","nameLocation":"2903:8:3","nodeType":"VariableDeclaration","scope":1348,"src":"2889:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1326,"name":"string","nodeType":"ElementaryTypeName","src":"2889:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2842:76:3"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1348,"src":"2935:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2935:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2934:9:3"},"scope":2556,"src":"2823:294:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1371,"nodeType":"Block","src":"3251:147:3","statements":[{"expression":{"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1357,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"3299:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1359,"indexExpression":{"id":1358,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"3309:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3299:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3318:10:3","memberName":"dao_wallet","nodeType":"MemberAccess","referencedDeclaration":1206,"src":"3299:29:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1361,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"3331:11:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3299:43:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1363,"nodeType":"ExpressionStatement","src":"3299:43:3"},{"expression":{"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1364,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"3353:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1366,"indexExpression":{"id":1365,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"3363:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3353:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3372:7:3","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"3353:26:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1368,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"3382:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3353:37:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1370,"nodeType":"ExpressionStatement","src":"3353:37:3"}]},"functionSelector":"881de858","id":1372,"implemented":true,"kind":"function","modifiers":[],"name":"set_dao","nameLocation":"3134:7:3","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"_dao_id","nameLocation":"3160:7:3","nodeType":"VariableDeclaration","scope":1372,"src":"3152:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"3152:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"_dao_wallet","nameLocation":"3192:11:3","nodeType":"VariableDeclaration","scope":1372,"src":"3178:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1351,"name":"string","nodeType":"ElementaryTypeName","src":"3178:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"_dao_uri","nameLocation":"3228:8:3","nodeType":"VariableDeclaration","scope":1372,"src":"3214:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1353,"name":"string","nodeType":"ElementaryTypeName","src":"3214:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3141:102:3"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[],"src":"3251:0:3"},"scope":2556,"src":"3125:273:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1412,"nodeType":"Block","src":"3468:240:3","statements":[{"assignments":[1382],"declarations":[{"constant":false,"id":1382,"mutability":"mutable","name":"_StoreInfo","nameLocation":"3523:10:3","nodeType":"VariableDeclaration","scope":1412,"src":"3507:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1380,"name":"string","nodeType":"ElementaryTypeName","src":"3507:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1381,"nodeType":"ArrayTypeName","src":"3507:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1388,"initialValue":{"arguments":[{"id":1386,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3549:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3536:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1383,"name":"string","nodeType":"ElementaryTypeName","src":"3540:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1384,"nodeType":"ArrayTypeName","src":"3540:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3536:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3507:51:3"},{"body":{"id":1408,"nodeType":"Block","src":"3608:63:3","statements":[{"expression":{"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1399,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"3623:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1401,"indexExpression":{"id":1400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"3634:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3623:13:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1402,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"3639:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1404,"indexExpression":{"id":1403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"3649:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3639:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3652:7:3","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"3639:20:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"3623:36:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1407,"nodeType":"ExpressionStatement","src":"3623:36:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1393,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"3589:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1394,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3593:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3589:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1409,"initializationExpression":{"assignments":[1390],"declarations":[{"constant":false,"id":1390,"mutability":"mutable","name":"i","nameLocation":"3582:1:3","nodeType":"VariableDeclaration","scope":1409,"src":"3574:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3574:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1392,"initialValue":{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3586:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3574:13:3"},"loopExpression":{"expression":{"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3603:3:3","subExpression":{"id":1396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"3603:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1398,"nodeType":"ExpressionStatement","src":"3603:3:3"},"nodeType":"ForStatement","src":"3569:102:3"},{"expression":{"id":1410,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"3690:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1377,"id":1411,"nodeType":"Return","src":"3683:17:3"}]},"functionSelector":"c04fe978","id":1413,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_daos","nameLocation":"3415:12:3","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[],"src":"3427:2:3"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1413,"src":"3451:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1374,"name":"string","nodeType":"ElementaryTypeName","src":"3451:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1375,"nodeType":"ArrayTypeName","src":"3451:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3450:17:3"},"scope":2556,"src":"3406:302:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1425,"nodeType":"Block","src":"3786:83:3","statements":[{"expression":{"expression":{"baseExpression":{"id":1420,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"3835:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1422,"indexExpression":{"id":1421,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"3845:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3835:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3854:7:3","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"3835:26:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1419,"id":1424,"nodeType":"Return","src":"3828:33:3"}]},"functionSelector":"5d907da1","id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"dao_uri","nameLocation":"3725:7:3","nodeType":"FunctionDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"_dao_id","nameLocation":"3741:7:3","nodeType":"VariableDeclaration","scope":1426,"src":"3733:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3733:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3732:17:3"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"3771:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1417,"name":"string","nodeType":"ElementaryTypeName","src":"3771:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3770:15:3"},"scope":2556,"src":"3716:153:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1449,"nodeType":"Block","src":"4003:168:3","statements":[{"expression":{"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1435,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"4053:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1437,"indexExpression":{"id":1436,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4064:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4053:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1439,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"4093:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1440,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"4102:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1438,"name":"goal_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"4077:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_uri_struct_$1216_storage_ptr_$","typeString":"type(struct GreenDAO.goal_uri_struct storage pointer)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4077:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_memory_ptr","typeString":"struct GreenDAO.goal_uri_struct memory"}},"src":"4053:59:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1443,"nodeType":"ExpressionStatement","src":"4053:59:3"},{"expression":{"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4123:11:3","subExpression":{"id":1444,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4123:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1446,"nodeType":"ExpressionStatement","src":"4123:11:3"},{"expression":{"id":1447,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4154:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1434,"id":1448,"nodeType":"Return","src":"4147:16:3"}]},"functionSelector":"71085cab","id":1450,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal","nameLocation":"3899:11:3","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"_goal_uri","nameLocation":"3935:9:3","nodeType":"VariableDeclaration","scope":1450,"src":"3921:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1427,"name":"string","nodeType":"ElementaryTypeName","src":"3921:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"_dao_id","nameLocation":"3963:7:3","nodeType":"VariableDeclaration","scope":1450,"src":"3955:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"3955:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3910:67:3"},"returnParameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1450,"src":"3994:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3994:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3993:9:3"},"scope":2556,"src":"3890:281:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1464,"nodeType":"Block","src":"4247:84:3","statements":[{"expression":{"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1457,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"4282:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1459,"indexExpression":{"id":1458,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"4293:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4282:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4303:8:3","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"4282:29:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1461,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"4314:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4282:41:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1463,"nodeType":"ExpressionStatement","src":"4282:41:3"}]},"functionSelector":"c29595c5","id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"set_goal","nameLocation":"4188:8:3","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"_goal_id","nameLocation":"4205:8:3","nodeType":"VariableDeclaration","scope":1465,"src":"4197:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1451,"name":"uint256","nodeType":"ElementaryTypeName","src":"4197:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"_goal_uri","nameLocation":"4229:9:3","nodeType":"VariableDeclaration","scope":1465,"src":"4215:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1453,"name":"string","nodeType":"ElementaryTypeName","src":"4215:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4196:43:3"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"4247:0:3"},"scope":2556,"src":"4179:152:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1505,"nodeType":"Block","src":"4402:245:3","statements":[{"assignments":[1475],"declarations":[{"constant":false,"id":1475,"mutability":"mutable","name":"_StoreInfo","nameLocation":"4458:10:3","nodeType":"VariableDeclaration","scope":1505,"src":"4442:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1473,"name":"string","nodeType":"ElementaryTypeName","src":"4442:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1474,"nodeType":"ArrayTypeName","src":"4442:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1481,"initialValue":{"arguments":[{"id":1479,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4484:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4471:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1476,"name":"string","nodeType":"ElementaryTypeName","src":"4475:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1477,"nodeType":"ArrayTypeName","src":"4475:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4471:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4442:52:3"},{"body":{"id":1501,"nodeType":"Block","src":"4545:65:3","statements":[{"expression":{"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1492,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"4560:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1494,"indexExpression":{"id":1493,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"4571:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4560:13:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1495,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"4576:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1497,"indexExpression":{"id":1496,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"4587:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4576:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4590:8:3","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"4576:22:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"4560:38:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1500,"nodeType":"ExpressionStatement","src":"4560:38:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"4525:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1487,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4529:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4525:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1502,"initializationExpression":{"assignments":[1483],"declarations":[{"constant":false,"id":1483,"mutability":"mutable","name":"i","nameLocation":"4518:1:3","nodeType":"VariableDeclaration","scope":1502,"src":"4510:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1485,"initialValue":{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4522:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4510:13:3"},"loopExpression":{"expression":{"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4540:3:3","subExpression":{"id":1489,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"4540:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1491,"nodeType":"ExpressionStatement","src":"4540:3:3"},"nodeType":"ForStatement","src":"4505:105:3"},{"expression":{"id":1503,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"4629:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1470,"id":1504,"nodeType":"Return","src":"4622:17:3"}]},"functionSelector":"29b56f60","id":1506,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals","nameLocation":"4348:13:3","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[],"src":"4361:2:3"},"returnParameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1506,"src":"4385:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1467,"name":"string","nodeType":"ElementaryTypeName","src":"4385:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1468,"nodeType":"ArrayTypeName","src":"4385:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4384:17:3"},"scope":2556,"src":"4339:308:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1562,"nodeType":"Block","src":"4759:392:3","statements":[{"assignments":[1518],"declarations":[{"constant":false,"id":1518,"mutability":"mutable","name":"_StoreInfo","nameLocation":"4825:10:3","nodeType":"VariableDeclaration","scope":1562,"src":"4809:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1516,"name":"string","nodeType":"ElementaryTypeName","src":"4809:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1517,"nodeType":"ArrayTypeName","src":"4809:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1524,"initialValue":{"arguments":[{"id":1522,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4851:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4838:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1519,"name":"string","nodeType":"ElementaryTypeName","src":"4842:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1520,"nodeType":"ArrayTypeName","src":"4842:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4838:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4809:52:3"},{"assignments":[1526],"declarations":[{"constant":false,"id":1526,"mutability":"mutable","name":"_store_id","nameLocation":"4880:9:3","nodeType":"VariableDeclaration","scope":1562,"src":"4872:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"4872:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1527,"nodeType":"VariableDeclarationStatement","src":"4872:17:3"},{"body":{"id":1558,"nodeType":"Block","src":"4940:174:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1538,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"4959:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1540,"indexExpression":{"id":1539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"4970:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4959:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4973:6:3","memberName":"dao_id","nodeType":"MemberAccess","referencedDeclaration":1213,"src":"4959:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1542,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"4983:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4959:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1557,"nodeType":"IfStatement","src":"4955:148:3","trueBody":{"id":1556,"nodeType":"Block","src":"4992:111:3","statements":[{"expression":{"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1544,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"5011:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1546,"indexExpression":{"id":1545,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"5022:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5011:21:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1547,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"5035:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1549,"indexExpression":{"id":1548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"5046:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5035:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5049:8:3","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"5035:22:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"5011:46:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1552,"nodeType":"ExpressionStatement","src":"5011:46:3"},{"expression":{"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5076:11:3","subExpression":{"id":1553,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"5076:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1555,"nodeType":"ExpressionStatement","src":"5076:11:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"4920:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1533,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4924:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4920:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1559,"initializationExpression":{"assignments":[1529],"declarations":[{"constant":false,"id":1529,"mutability":"mutable","name":"i","nameLocation":"4913:1:3","nodeType":"VariableDeclaration","scope":1559,"src":"4905:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"4905:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1531,"initialValue":{"hexValue":"30","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4917:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4905:13:3"},"loopExpression":{"expression":{"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4935:3:3","subExpression":{"id":1535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"4935:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1537,"nodeType":"ExpressionStatement","src":"4935:3:3"},"nodeType":"ForStatement","src":"4900:214:3"},{"expression":{"id":1560,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"5133:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1513,"id":1561,"nodeType":"Return","src":"5126:17:3"}]},"functionSelector":"109ac970","id":1563,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals_by_dao_id","nameLocation":"4664:23:3","nodeType":"FunctionDefinition","parameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"_dao_id","nameLocation":"4706:7:3","nodeType":"VariableDeclaration","scope":1563,"src":"4698:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"4698:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4687:33:3"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1563,"src":"4742:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1510,"name":"string","nodeType":"ElementaryTypeName","src":"4742:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1511,"nodeType":"ArrayTypeName","src":"4742:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4741:17:3"},"scope":2556,"src":"4655:496:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1603,"nodeType":"Block","src":"5263:274:3","statements":[{"body":{"id":1599,"nodeType":"Block","src":"5348:161:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1583,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"5401:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1585,"indexExpression":{"id":1584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5412:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5401:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5415:8:3","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"5401:22:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5395:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"5395:5:3","typeDescriptions":{}}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5395:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1580,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5385:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5385:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1592,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"5462:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5456:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1590,"name":"bytes","nodeType":"ElementaryTypeName","src":"5456:5:3","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5456:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1589,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5446:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5446:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5385:88:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1598,"nodeType":"IfStatement","src":"5363:134:3","trueBody":{"expression":{"id":1596,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5496:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1569,"id":1597,"nodeType":"Return","src":"5489:8:3"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5328:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1575,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"5332:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5328:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"initializationExpression":{"assignments":[1571],"declarations":[{"constant":false,"id":1571,"mutability":"mutable","name":"i","nameLocation":"5321:1:3","nodeType":"VariableDeclaration","scope":1600,"src":"5313:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5313:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1573,"initialValue":{"hexValue":"30","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5325:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5313:13:3"},"loopExpression":{"expression":{"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5343:3:3","subExpression":{"id":1577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5343:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1579,"nodeType":"ExpressionStatement","src":"5343:3:3"},"nodeType":"ForStatement","src":"5308:201:3"},{"expression":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5528:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1569,"id":1602,"nodeType":"Return","src":"5521:8:3"}]},"functionSelector":"1e9ac9f5","id":1604,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_by_goal_uri","nameLocation":"5168:23:3","nodeType":"FunctionDefinition","parameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"_goal_uri","nameLocation":"5216:9:3","nodeType":"VariableDeclaration","scope":1604,"src":"5202:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1564,"name":"string","nodeType":"ElementaryTypeName","src":"5202:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5191:41:3"},"returnParameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1604,"src":"5254:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"5254:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5253:9:3"},"scope":2556,"src":"5159:378:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1616,"nodeType":"Block","src":"5617:87:3","statements":[{"expression":{"expression":{"baseExpression":{"id":1611,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"5667:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1613,"indexExpression":{"id":1612,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"5678:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5667:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5688:8:3","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1215,"src":"5667:29:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1610,"id":1615,"nodeType":"Return","src":"5660:36:3"}]},"functionSelector":"e32acc1a","id":1617,"implemented":true,"kind":"function","modifiers":[],"name":"goal_uri","nameLocation":"5554:8:3","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"_goal_id","nameLocation":"5571:8:3","nodeType":"VariableDeclaration","scope":1617,"src":"5563:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"5563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5562:18:3"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1617,"src":"5602:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1608,"name":"string","nodeType":"ElementaryTypeName","src":"5602:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5601:15:3"},"scope":2556,"src":"5545:159:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1668,"nodeType":"Block","src":"5884:456:3","statements":[{"expression":{"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1629,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"5936:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1631,"indexExpression":{"id":1630,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"5948:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5936:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1633,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"5979:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1634,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"5989:10:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6001:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1632,"name":"ideas_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"5962:16:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ideas_uri_struct_$1223_storage_ptr_$","typeString":"type(struct GreenDAO.ideas_uri_struct storage pointer)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5962:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_memory_ptr","typeString":"struct GreenDAO.ideas_uri_struct memory"}},"src":"5936:67:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1638,"nodeType":"ExpressionStatement","src":"5936:67:3"},{"expression":{"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6014:12:3","subExpression":{"id":1639,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"6014:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1641,"nodeType":"ExpressionStatement","src":"6014:12:3"},{"body":{"id":1664,"nodeType":"Block","src":"6093:210:3","statements":[{"expression":{"arguments":[{"id":1654,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"6154:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1655,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"6183:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1656,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"6221:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1658,"indexExpression":{"id":1657,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"6238:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6221:19:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1653,"name":"create_ideas_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"6108:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6108:147:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"6108:147:3"},{"expression":{"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6270:21:3","subExpression":{"id":1661,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"6270:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1663,"nodeType":"ExpressionStatement","src":"6270:21:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"6059:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1647,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"6063:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6080:6:3","memberName":"length","nodeType":"MemberAccess","src":"6063:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6059:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1665,"initializationExpression":{"assignments":[1643],"declarations":[{"constant":false,"id":1643,"mutability":"mutable","name":"i","nameLocation":"6052:1:3","nodeType":"VariableDeclaration","scope":1665,"src":"6044:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"6044:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1645,"initialValue":{"hexValue":"30","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6056:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6044:13:3"},"loopExpression":{"expression":{"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6088:3:3","subExpression":{"id":1650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"6088:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1652,"nodeType":"ExpressionStatement","src":"6088:3:3"},"nodeType":"ForStatement","src":"6039:264:3"},{"expression":{"id":1666,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"6322:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1628,"id":1667,"nodeType":"Return","src":"6315:17:3"}]},"functionSelector":"e3280c96","id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas","nameLocation":"5734:12:3","nodeType":"FunctionDefinition","parameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"_ideas_uri","nameLocation":"5771:10:3","nodeType":"VariableDeclaration","scope":1669,"src":"5757:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1618,"name":"string","nodeType":"ElementaryTypeName","src":"5757:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"_goal_id","nameLocation":"5800:8:3","nodeType":"VariableDeclaration","scope":1669,"src":"5792:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"5792:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"_smart_contracts","nameLocation":"5835:16:3","nodeType":"VariableDeclaration","scope":1669,"src":"5819:32:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1622,"name":"string","nodeType":"ElementaryTypeName","src":"5819:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1623,"nodeType":"ArrayTypeName","src":"5819:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5746:112:3"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"5875:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"5875:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5874:9:3"},"scope":2556,"src":"5725:615:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1688,"nodeType":"Block","src":"6505:196:3","statements":[{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1678,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"6516:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1230_storage_$","typeString":"mapping(uint256 => struct GreenDAO.smart_contract_uri_struct storage ref)"}},"id":1680,"indexExpression":{"id":1679,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"6538:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6516:41:3","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1230_storage","typeString":"struct GreenDAO.smart_contract_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1682,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"6600:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1683,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"6624:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1684,"name":"_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"6657:15:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1681,"name":"smart_contract_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"6560:25:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_smart_contract_uri_struct_$1230_storage_ptr_$","typeString":"type(struct GreenDAO.smart_contract_uri_struct storage pointer)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6560:123:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1230_memory_ptr","typeString":"struct GreenDAO.smart_contract_uri_struct memory"}},"src":"6516:167:3","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1230_storage","typeString":"struct GreenDAO.smart_contract_uri_struct storage ref"}},"id":1687,"nodeType":"ExpressionStatement","src":"6516:167:3"}]},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas_smart_contract","nameLocation":"6357:27:3","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"_ideas_id","nameLocation":"6403:9:3","nodeType":"VariableDeclaration","scope":1689,"src":"6395:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6395:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"_smart_contract_id","nameLocation":"6431:18:3","nodeType":"VariableDeclaration","scope":1689,"src":"6423:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"6423:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"_smart_contract","nameLocation":"6474:15:3","nodeType":"VariableDeclaration","scope":1689,"src":"6460:29:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1674,"name":"string","nodeType":"ElementaryTypeName","src":"6460:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6384:112:3"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"6505:0:3"},"scope":2556,"src":"6348:353:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1703,"nodeType":"Block","src":"6780:89:3","statements":[{"expression":{"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1696,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"6816:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1698,"indexExpression":{"id":1697,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"6828:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6816:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6839:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"6816:32:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1700,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"6851:10:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6816:45:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1702,"nodeType":"ExpressionStatement","src":"6816:45:3"}]},"functionSelector":"c04e7430","id":1704,"implemented":true,"kind":"function","modifiers":[],"name":"set_ideas","nameLocation":"6718:9:3","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"_ideas_id","nameLocation":"6736:9:3","nodeType":"VariableDeclaration","scope":1704,"src":"6728:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"6728:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"_ideas_uri","nameLocation":"6761:10:3","nodeType":"VariableDeclaration","scope":1704,"src":"6747:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1692,"name":"string","nodeType":"ElementaryTypeName","src":"6747:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6727:45:3"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[],"src":"6780:0:3"},"scope":2556,"src":"6709:160:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1718,"nodeType":"Block","src":"6944:88:3","statements":[{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1711,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"6980:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1713,"indexExpression":{"id":1712,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"6992:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6980:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7003:8:3","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":1222,"src":"6980:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1715,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"7015:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6980:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1717,"nodeType":"ExpressionStatement","src":"6980:44:3"}]},"functionSelector":"a2cdb3a9","id":1719,"implemented":true,"kind":"function","modifiers":[],"name":"add_donation","nameLocation":"6886:12:3","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"_ideas_id","nameLocation":"6907:9:3","nodeType":"VariableDeclaration","scope":1719,"src":"6899:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"6899:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"_doantion","nameLocation":"6926:9:3","nodeType":"VariableDeclaration","scope":1719,"src":"6918:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"6918:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6898:38:3"},"returnParameters":{"id":1710,"nodeType":"ParameterList","parameters":[],"src":"6944:0:3"},"scope":2556,"src":"6877:155:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1759,"nodeType":"Block","src":"7103:249:3","statements":[{"assignments":[1729],"declarations":[{"constant":false,"id":1729,"mutability":"mutable","name":"_StoreInfo","nameLocation":"7159:10:3","nodeType":"VariableDeclaration","scope":1759,"src":"7143:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1727,"name":"string","nodeType":"ElementaryTypeName","src":"7143:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1728,"nodeType":"ArrayTypeName","src":"7143:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1735,"initialValue":{"arguments":[{"id":1733,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"7185:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7172:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1730,"name":"string","nodeType":"ElementaryTypeName","src":"7176:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1731,"nodeType":"ArrayTypeName","src":"7176:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7172:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7143:53:3"},{"body":{"id":1755,"nodeType":"Block","src":"7248:67:3","statements":[{"expression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1746,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7263:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1748,"indexExpression":{"id":1747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"7274:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7263:13:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1749,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"7279:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1751,"indexExpression":{"id":1750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"7291:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7279:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7294:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"7279:24:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"7263:40:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1754,"nodeType":"ExpressionStatement","src":"7263:40:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1740,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"7227:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1741,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"7231:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7227:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1756,"initializationExpression":{"assignments":[1737],"declarations":[{"constant":false,"id":1737,"mutability":"mutable","name":"i","nameLocation":"7220:1:3","nodeType":"VariableDeclaration","scope":1756,"src":"7212:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"7212:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1739,"initialValue":{"hexValue":"30","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7224:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7212:13:3"},"loopExpression":{"expression":{"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7243:3:3","subExpression":{"id":1743,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"7243:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1745,"nodeType":"ExpressionStatement","src":"7243:3:3"},"nodeType":"ForStatement","src":"7207:108:3"},{"expression":{"id":1757,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7334:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1724,"id":1758,"nodeType":"Return","src":"7327:17:3"}]},"functionSelector":"97ee7606","id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas","nameLocation":"7049:13:3","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[],"src":"7062:2:3"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1760,"src":"7086:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1721,"name":"string","nodeType":"ElementaryTypeName","src":"7086:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1722,"nodeType":"ArrayTypeName","src":"7086:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"7085:17:3"},"scope":2556,"src":"7040:312:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1815,"nodeType":"Block","src":"7466:379:3","statements":[{"assignments":[1772],"declarations":[{"constant":false,"id":1772,"mutability":"mutable","name":"_StoreInfo","nameLocation":"7533:10:3","nodeType":"VariableDeclaration","scope":1815,"src":"7517:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1770,"name":"string","nodeType":"ElementaryTypeName","src":"7517:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1771,"nodeType":"ArrayTypeName","src":"7517:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1778,"initialValue":{"arguments":[{"id":1776,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"7559:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7546:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1773,"name":"string","nodeType":"ElementaryTypeName","src":"7550:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1774,"nodeType":"ArrayTypeName","src":"7550:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7546:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7517:53:3"},{"assignments":[1780],"declarations":[{"constant":false,"id":1780,"mutability":"mutable","name":"_store_id","nameLocation":"7589:9:3","nodeType":"VariableDeclaration","scope":1815,"src":"7581:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"7581:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1781,"nodeType":"VariableDeclarationStatement","src":"7581:17:3"},{"body":{"id":1811,"nodeType":"Block","src":"7650:158:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1792,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"7669:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1794,"indexExpression":{"id":1793,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7681:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7669:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7684:7:3","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"7669:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1796,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7695:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7669:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1807,"nodeType":"IfStatement","src":"7665:105:3","trueBody":{"expression":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1798,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"7722:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1800,"indexExpression":{"id":1799,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"7733:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7722:21:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1801,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"7746:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1803,"indexExpression":{"id":1802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7758:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7746:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7761:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"7746:24:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"7722:48:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1806,"nodeType":"ExpressionStatement","src":"7722:48:3"}},{"expression":{"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7785:11:3","subExpression":{"id":1808,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"7785:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1810,"nodeType":"ExpressionStatement","src":"7785:11:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1786,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7629:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1787,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"7633:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7629:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1812,"initializationExpression":{"assignments":[1783],"declarations":[{"constant":false,"id":1783,"mutability":"mutable","name":"i","nameLocation":"7622:1:3","nodeType":"VariableDeclaration","scope":1812,"src":"7614:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"7614:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1785,"initialValue":{"hexValue":"30","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7626:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7614:13:3"},"loopExpression":{"expression":{"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7645:3:3","subExpression":{"id":1789,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7645:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1791,"nodeType":"ExpressionStatement","src":"7645:3:3"},"nodeType":"ForStatement","src":"7609:199:3"},{"expression":{"id":1813,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"7827:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1767,"id":1814,"nodeType":"Return","src":"7820:17:3"}]},"functionSelector":"131d44f2","id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas_by_goal_id","nameLocation":"7369:24:3","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"_goal_id","nameLocation":"7412:8:3","nodeType":"VariableDeclaration","scope":1816,"src":"7404:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"7404:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7393:34:3"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"7449:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1764,"name":"string","nodeType":"ElementaryTypeName","src":"7449:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1765,"nodeType":"ArrayTypeName","src":"7449:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"7448:17:3"},"scope":2556,"src":"7360:485:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1856,"nodeType":"Block","src":"7960:279:3","statements":[{"body":{"id":1852,"nodeType":"Block","src":"8047:164:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1836,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"8100:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1838,"indexExpression":{"id":1837,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"8112:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8100:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8115:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"8100:24:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8094:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1834,"name":"bytes","nodeType":"ElementaryTypeName","src":"8094:5:3","typeDescriptions":{}}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8094:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1833,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8084:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8084:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1845,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"8163:10:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8157:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1843,"name":"bytes","nodeType":"ElementaryTypeName","src":"8157:5:3","typeDescriptions":{}}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8157:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1842,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8147:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8147:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8084:91:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1851,"nodeType":"IfStatement","src":"8062:137:3","trueBody":{"expression":{"id":1849,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"8198:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1822,"id":1850,"nodeType":"Return","src":"8191:8:3"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"8026:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1828,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"8030:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8026:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1853,"initializationExpression":{"assignments":[1824],"declarations":[{"constant":false,"id":1824,"mutability":"mutable","name":"i","nameLocation":"8019:1:3","nodeType":"VariableDeclaration","scope":1853,"src":"8011:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1823,"name":"uint256","nodeType":"ElementaryTypeName","src":"8011:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1826,"initialValue":{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8023:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8011:13:3"},"loopExpression":{"expression":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8042:3:3","subExpression":{"id":1830,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"8042:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1832,"nodeType":"ExpressionStatement","src":"8042:3:3"},"nodeType":"ForStatement","src":"8006:205:3"},{"expression":{"hexValue":"30","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8230:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1822,"id":1855,"nodeType":"Return","src":"8223:8:3"}]},"functionSelector":"a1ca9178","id":1857,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_id_by_ideas_uri","nameLocation":"7862:25:3","nodeType":"FunctionDefinition","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"_ideas_uri","nameLocation":"7912:10:3","nodeType":"VariableDeclaration","scope":1857,"src":"7898:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1817,"name":"string","nodeType":"ElementaryTypeName","src":"7898:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7887:42:3"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1857,"src":"7951:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1820,"name":"uint256","nodeType":"ElementaryTypeName","src":"7951:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7950:9:3"},"scope":2556,"src":"7853:386:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1900,"nodeType":"Block","src":"8355:300:3","statements":[{"body":{"id":1896,"nodeType":"Block","src":"8442:185:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1877,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"8495:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1879,"indexExpression":{"id":1878,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"8507:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8495:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8510:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"8495:24:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8489:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1875,"name":"bytes","nodeType":"ElementaryTypeName","src":"8489:5:3","typeDescriptions":{}}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8489:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1874,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8479:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8479:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1886,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"8558:10:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8552:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1884,"name":"bytes","nodeType":"ElementaryTypeName","src":"8552:5:3","typeDescriptions":{}}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8552:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1883,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8542:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8542:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8479:91:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1895,"nodeType":"IfStatement","src":"8457:158:3","trueBody":{"expression":{"expression":{"baseExpression":{"id":1890,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"8593:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1892,"indexExpression":{"id":1891,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"8605:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8593:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8608:7:3","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"8593:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1863,"id":1894,"nodeType":"Return","src":"8586:29:3"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"8421:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1869,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"8425:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8421:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1897,"initializationExpression":{"assignments":[1865],"declarations":[{"constant":false,"id":1865,"mutability":"mutable","name":"i","nameLocation":"8414:1:3","nodeType":"VariableDeclaration","scope":1897,"src":"8406:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"8406:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1867,"initialValue":{"hexValue":"30","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8418:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8406:13:3"},"loopExpression":{"expression":{"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8437:3:3","subExpression":{"id":1871,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"8437:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1873,"nodeType":"ExpressionStatement","src":"8437:3:3"},"nodeType":"ForStatement","src":"8401:226:3"},{"expression":{"hexValue":"30","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8646:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1863,"id":1899,"nodeType":"Return","src":"8639:8:3"}]},"functionSelector":"aa4cdf2a","id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_from_ideas_uri","nameLocation":"8256:26:3","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"mutability":"mutable","name":"_ideas_uri","nameLocation":"8307:10:3","nodeType":"VariableDeclaration","scope":1901,"src":"8293:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1858,"name":"string","nodeType":"ElementaryTypeName","src":"8293:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8282:42:3"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"8346:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"8346:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8345:9:3"},"scope":2556,"src":"8247:408:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1913,"nodeType":"Block","src":"8737:91:3","statements":[{"expression":{"expression":{"baseExpression":{"id":1908,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"8788:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1910,"indexExpression":{"id":1909,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"8800:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8788:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8811:9:3","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1220,"src":"8788:32:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1907,"id":1912,"nodeType":"Return","src":"8781:39:3"}]},"functionSelector":"8d3d2595","id":1914,"implemented":true,"kind":"function","modifiers":[],"name":"ideas_uri","nameLocation":"8672:9:3","nodeType":"FunctionDefinition","parameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"_ideas_id","nameLocation":"8690:9:3","nodeType":"VariableDeclaration","scope":1914,"src":"8682:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"8682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8681:19:3"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1914,"src":"8722:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1905,"name":"string","nodeType":"ElementaryTypeName","src":"8722:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8721:15:3"},"scope":2556,"src":"8663:165:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1940,"nodeType":"Block","src":"9000:275:3","statements":[{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1925,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"9061:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1927,"indexExpression":{"id":1926,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9082:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9061:37:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1929,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"9139:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1930,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"9162:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1931,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"9186:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1928,"name":"goal_ideas_votes_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"9101:23:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_ideas_votes_struct_$1237_storage_ptr_$","typeString":"type(struct GreenDAO.goal_ideas_votes_struct storage pointer)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9101:103:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_memory_ptr","typeString":"struct GreenDAO.goal_ideas_votes_struct memory"}},"src":"9061:143:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":1934,"nodeType":"ExpressionStatement","src":"9061:143:3"},{"expression":{"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9215:17:3","subExpression":{"id":1935,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9215:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1937,"nodeType":"ExpressionStatement","src":"9215:17:3"},{"expression":{"id":1938,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9252:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1924,"id":1939,"nodeType":"Return","src":"9245:22:3"}]},"functionSelector":"82fcc732","id":1941,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal_ideas_vote","nameLocation":"8858:22:3","nodeType":"FunctionDefinition","parameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"_goal_id","nameLocation":"8899:8:3","nodeType":"VariableDeclaration","scope":1941,"src":"8891:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"8891:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"_ideas_id","nameLocation":"8926:9:3","nodeType":"VariableDeclaration","scope":1941,"src":"8918:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"8918:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"_wallet","nameLocation":"8960:7:3","nodeType":"VariableDeclaration","scope":1941,"src":"8946:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1919,"name":"string","nodeType":"ElementaryTypeName","src":"8946:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8880:94:3"},"returnParameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1941,"src":"8991:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"8991:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8990:9:3"},"scope":2556,"src":"8849:426:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2005,"nodeType":"Block","src":"9418:485:3","statements":[{"assignments":[1955],"declarations":[{"constant":false,"id":1955,"mutability":"mutable","name":"_StoreInfo","nameLocation":"9487:10:3","nodeType":"VariableDeclaration","scope":2005,"src":"9471:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1953,"name":"string","nodeType":"ElementaryTypeName","src":"9471:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1954,"nodeType":"ArrayTypeName","src":"9471:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1961,"initialValue":{"arguments":[{"id":1959,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9513:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9500:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1956,"name":"string","nodeType":"ElementaryTypeName","src":"9504:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1957,"nodeType":"ArrayTypeName","src":"9504:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9500:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9471:58:3"},{"assignments":[1963],"declarations":[{"constant":false,"id":1963,"mutability":"mutable","name":"_store_id","nameLocation":"9548:9:3","nodeType":"VariableDeclaration","scope":2005,"src":"9540:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"9540:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1964,"nodeType":"VariableDeclarationStatement","src":"9540:17:3"},{"body":{"id":2001,"nodeType":"Block","src":"9614:254:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1975,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"9651:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1977,"indexExpression":{"id":1976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"9672:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9651:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":1978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9675:7:3","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1232,"src":"9651:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1979,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"9686:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9651:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1981,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"9715:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1983,"indexExpression":{"id":1982,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"9736:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9715:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":1984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9739:8:3","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1234,"src":"9715:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1985,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"9751:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9715:45:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9651:109:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1997,"nodeType":"IfStatement","src":"9629:201:3","trueBody":{"expression":{"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1988,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"9776:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1990,"indexExpression":{"id":1989,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"9787:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9776:21:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1991,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"9800:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1993,"indexExpression":{"id":1992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"9821:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9800:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":1994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9824:6:3","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":1236,"src":"9800:30:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"9776:54:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1996,"nodeType":"ExpressionStatement","src":"9776:54:3"}},{"expression":{"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9845:11:3","subExpression":{"id":1998,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"9845:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2000,"nodeType":"ExpressionStatement","src":"9845:11:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"9588:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1970,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9592:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9588:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2002,"initializationExpression":{"assignments":[1966],"declarations":[{"constant":false,"id":1966,"mutability":"mutable","name":"i","nameLocation":"9581:1:3","nodeType":"VariableDeclaration","scope":2002,"src":"9573:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"9573:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1968,"initialValue":{"hexValue":"30","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9585:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9573:13:3"},"loopExpression":{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9609:3:3","subExpression":{"id":1972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"9609:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"9609:3:3"},"nodeType":"ForStatement","src":"9568:300:3"},{"expression":{"id":2003,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"9885:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1950,"id":2004,"nodeType":"Return","src":"9878:17:3"}]},"functionSelector":"4be7adb5","id":2006,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_votes_from_goal","nameLocation":"9292:25:3","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"_goal_id","nameLocation":"9336:8:3","nodeType":"VariableDeclaration","scope":2006,"src":"9328:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"9328:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"_ideas_id","nameLocation":"9363:9:3","nodeType":"VariableDeclaration","scope":2006,"src":"9355:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"9355:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9317:62:3"},"returnParameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2006,"src":"9401:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1947,"name":"string","nodeType":"ElementaryTypeName","src":"9401:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1948,"nodeType":"ArrayTypeName","src":"9401:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"9400:17:3"},"scope":2556,"src":"9283:620:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2030,"nodeType":"Block","src":"10042:249:3","statements":[{"expression":{"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2015,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"10098:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct storage ref)"}},"id":2017,"indexExpression":{"id":2016,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10111:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10098:26:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage","typeString":"struct GreenDAO.message_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2019,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10156:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2020,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"10183:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2021,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"10207:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2018,"name":"message_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"10127:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_struct_$1244_storage_ptr_$","typeString":"type(struct GreenDAO.message_struct storage pointer)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10127:99:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_memory_ptr","typeString":"struct GreenDAO.message_struct memory"}},"src":"10098:128:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage","typeString":"struct GreenDAO.message_struct storage ref"}},"id":2024,"nodeType":"ExpressionStatement","src":"10098:128:3"},{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10237:14:3","subExpression":{"id":2025,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10237:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2027,"nodeType":"ExpressionStatement","src":"10237:14:3"},{"expression":{"id":2028,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10271:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2014,"id":2029,"nodeType":"Return","src":"10264:19:3"}]},"functionSelector":"2d5bf5b0","id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"sendMsg","nameLocation":"9941:7:3","nodeType":"FunctionDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"_ideas_id","nameLocation":"9967:9:3","nodeType":"VariableDeclaration","scope":2031,"src":"9959:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"9959:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"_message","nameLocation":"10001:8:3","nodeType":"VariableDeclaration","scope":2031,"src":"9987:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2009,"name":"string","nodeType":"ElementaryTypeName","src":"9987:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9948:68:3"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2031,"src":"10033:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"10033:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10032:9:3"},"scope":2556,"src":"9932:359:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2087,"nodeType":"Block","src":"10397:438:3","statements":[{"assignments":[2043],"declarations":[{"constant":false,"id":2043,"mutability":"mutable","name":"_All_Ideas_Messages","nameLocation":"10472:19:3","nodeType":"VariableDeclaration","scope":2087,"src":"10455:36:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"10455:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2042,"nodeType":"ArrayTypeName","src":"10455:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2049,"initialValue":{"arguments":[{"id":2047,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10508:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10494:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"10498:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2045,"nodeType":"ArrayTypeName","src":"10498:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10455:66:3"},{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"_msg_id","nameLocation":"10540:7:3","nodeType":"VariableDeclaration","scope":2087,"src":"10532:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"10532:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2052,"nodeType":"VariableDeclarationStatement","src":"10532:15:3"},{"body":{"id":2083,"nodeType":"Block","src":"10601:188:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2063,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"10620:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct storage ref)"}},"id":2065,"indexExpression":{"id":2064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"10633:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10620:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage","typeString":"struct GreenDAO.message_struct storage ref"}},"id":2066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10636:8:3","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1241,"src":"10620:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2067,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10648:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10620:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2082,"nodeType":"IfStatement","src":"10616:162:3","trueBody":{"id":2081,"nodeType":"Block","src":"10658:120:3","statements":[{"expression":{"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2069,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"10677:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2071,"indexExpression":{"id":2070,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"10697:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10677:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2072,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"10708:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct storage ref)"}},"id":2074,"indexExpression":{"id":2073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"10721:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10708:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage","typeString":"struct GreenDAO.message_struct storage ref"}},"id":2075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10724:10:3","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1239,"src":"10708:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10677:57:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2077,"nodeType":"ExpressionStatement","src":"10677:57:3"},{"expression":{"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10753:9:3","subExpression":{"id":2078,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"10753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2080,"nodeType":"ExpressionStatement","src":"10753:9:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"10578:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2058,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10582:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10578:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2084,"initializationExpression":{"assignments":[2054],"declarations":[{"constant":false,"id":2054,"mutability":"mutable","name":"i","nameLocation":"10571:1:3","nodeType":"VariableDeclaration","scope":2084,"src":"10563:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"10563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2056,"initialValue":{"hexValue":"30","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10563:13:3"},"loopExpression":{"expression":{"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10596:3:3","subExpression":{"id":2060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"10596:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2062,"nodeType":"ExpressionStatement","src":"10596:3:3"},"nodeType":"ForStatement","src":"10558:231:3"},{"expression":{"id":2085,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"10808:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2038,"id":2086,"nodeType":"Return","src":"10801:26:3"}]},"functionSelector":"803f5b9f","id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"getMsgIDs","nameLocation":"10313:9:3","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"ideas_id","nameLocation":"10341:8:3","nodeType":"VariableDeclaration","scope":2088,"src":"10333:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10322:34:3"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2088,"src":"10378:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"10378:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2036,"nodeType":"ArrayTypeName","src":"10378:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10377:19:3"},"scope":2556,"src":"10304:531:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2112,"nodeType":"Block","src":"10953:234:3","statements":[{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2097,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11005:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct storage ref)"}},"id":2099,"indexExpression":{"id":2098,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"11017:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11005:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage","typeString":"struct GreenDAO.reply_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2101,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"11058:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2102,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"11083:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2103,"name":"_reply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"11109:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2100,"name":"reply_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"11031:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_reply_struct_$1251_storage_ptr_$","typeString":"type(struct GreenDAO.reply_struct storage pointer)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11031:95:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_memory_ptr","typeString":"struct GreenDAO.reply_struct memory"}},"src":"11005:121:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage","typeString":"struct GreenDAO.reply_struct storage ref"}},"id":2106,"nodeType":"ExpressionStatement","src":"11005:121:3"},{"expression":{"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11137:12:3","subExpression":{"id":2107,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"11137:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2109,"nodeType":"ExpressionStatement","src":"11137:12:3"},{"expression":{"id":2110,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"11169:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2096,"id":2111,"nodeType":"Return","src":"11162:17:3"}]},"functionSelector":"6af3304e","id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"sendReply","nameLocation":"10850:9:3","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"_message_id","nameLocation":"10878:11:3","nodeType":"VariableDeclaration","scope":2113,"src":"10870:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"10870:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"_reply","nameLocation":"10914:6:3","nodeType":"VariableDeclaration","scope":2113,"src":"10900:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2091,"name":"string","nodeType":"ElementaryTypeName","src":"10900:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10859:68:3"},"returnParameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"10944:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10943:9:3"},"scope":2556,"src":"10841:346:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2169,"nodeType":"Block","src":"11292:443:3","statements":[{"assignments":[2125],"declarations":[{"constant":false,"id":2125,"mutability":"mutable","name":"_All_Messages_Replys","nameLocation":"11367:20:3","nodeType":"VariableDeclaration","scope":2169,"src":"11350:37:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"11350:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2124,"nodeType":"ArrayTypeName","src":"11350:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2131,"initialValue":{"arguments":[{"id":2129,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"11404:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11390:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"11394:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2127,"nodeType":"ArrayTypeName","src":"11394:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11390:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11350:65:3"},{"assignments":[2133],"declarations":[{"constant":false,"id":2133,"mutability":"mutable","name":"_reply_id","nameLocation":"11434:9:3","nodeType":"VariableDeclaration","scope":2169,"src":"11426:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"11426:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2134,"nodeType":"VariableDeclarationStatement","src":"11426:17:3"},{"body":{"id":2165,"nodeType":"Block","src":"11495:193:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2145,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11514:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct storage ref)"}},"id":2147,"indexExpression":{"id":2146,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"11526:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11514:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage","typeString":"struct GreenDAO.reply_struct storage ref"}},"id":2148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11529:10:3","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1248,"src":"11514:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2149,"name":"message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"11543:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11514:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2164,"nodeType":"IfStatement","src":"11510:167:3","trueBody":{"id":2163,"nodeType":"Block","src":"11555:122:3","statements":[{"expression":{"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2151,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"11574:20:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2153,"indexExpression":{"id":2152,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"11595:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11574:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2154,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11608:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct storage ref)"}},"id":2156,"indexExpression":{"id":2155,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"11620:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11608:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage","typeString":"struct GreenDAO.reply_struct storage ref"}},"id":2157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11623:8:3","memberName":"reply_id","nodeType":"MemberAccess","referencedDeclaration":1246,"src":"11608:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11574:57:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2159,"nodeType":"ExpressionStatement","src":"11574:57:3"},{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11650:11:3","subExpression":{"id":2160,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"11650:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ExpressionStatement","src":"11650:11:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"11474:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2140,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"11478:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11474:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2166,"initializationExpression":{"assignments":[2136],"declarations":[{"constant":false,"id":2136,"mutability":"mutable","name":"i","nameLocation":"11467:1:3","nodeType":"VariableDeclaration","scope":2166,"src":"11459:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"11459:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2138,"initialValue":{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11471:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11459:13:3"},"loopExpression":{"expression":{"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11490:3:3","subExpression":{"id":2142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"11490:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2144,"nodeType":"ExpressionStatement","src":"11490:3:3"},"nodeType":"ForStatement","src":"11454:234:3"},{"expression":{"id":2167,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"11707:20:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2120,"id":2168,"nodeType":"Return","src":"11700:27:3"}]},"functionSelector":"812fae1f","id":2170,"implemented":true,"kind":"function","modifiers":[],"name":"getReplyIDs","nameLocation":"11204:11:3","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"message_id","nameLocation":"11234:10:3","nodeType":"VariableDeclaration","scope":2170,"src":"11226:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"11226:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11215:36:3"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2170,"src":"11273:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2118,"nodeType":"ArrayTypeName","src":"11273:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11272:19:3"},"scope":2556,"src":"11195:540:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2186,"nodeType":"Block","src":"11851:80:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2177,"name":"_approveRequiredMsgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"11862:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2179,"nodeType":"ExpressionStatement","src":"11862:22:3"},{"expression":{"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2180,"name":"donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"11895:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2182,"indexExpression":{"id":2181,"name":"_idea_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"11903:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11895:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2183,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"11916:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11895:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2185,"nodeType":"ExpressionStatement","src":"11895:28:3"}]},"functionSelector":"0cdd53f6","id":2187,"implemented":true,"kind":"function","modifiers":[],"name":"donate","nameLocation":"11794:6:3","nodeType":"FunctionDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"_idea_id","nameLocation":"11809:8:3","nodeType":"VariableDeclaration","scope":2187,"src":"11801:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"11801:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"_amount","nameLocation":"11826:7:3","nodeType":"VariableDeclaration","scope":2187,"src":"11818:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"11818:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11800:34:3"},"returnParameters":{"id":2176,"nodeType":"ParameterList","parameters":[],"src":"11851:0:3"},"scope":2556,"src":"11785:146:3","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2203,"nodeType":"Block","src":"11978:86:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":2197,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12023:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}],"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12015:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"12015:7:3","typeDescriptions":{}}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12015:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2199,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"12030:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":2200,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"12046:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2192,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"11989:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3340","typeString":"contract StakingI"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12006:8:3","memberName":"delegate","nodeType":"MemberAccess","referencedDeclaration":3172,"src":"11989:25:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$_t_int64_$","typeString":"function (address,string memory,uint256) external returns (int64)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":2202,"nodeType":"ExpressionStatement","src":"11989:65:3"}]},"functionSelector":"a694fc3a","id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"stake","nameLocation":"11948:5:3","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"_amount","nameLocation":"11962:7:3","nodeType":"VariableDeclaration","scope":2204,"src":"11954:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:17:3"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[],"src":"11978:0:3"},"scope":2556,"src":"11939:125:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2282,"nodeType":"Block","src":"12149:665:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2211,"name":"_approveRequiredMsgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"12166:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12166:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2213,"nodeType":"ExpressionStatement","src":"12166:22:3"},{"assignments":[2218],"declarations":[{"constant":false,"id":2218,"mutability":"mutable","name":"newRewards","nameLocation":"12258:10:3","nodeType":"VariableDeclaration","scope":2282,"src":"12244:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr","typeString":"struct Coin[]"},"typeName":{"baseType":{"id":2216,"nodeType":"UserDefinedTypeName","pathNode":{"id":2215,"name":"Coin","nameLocations":["12244:4:3"],"nodeType":"IdentifierPath","referencedDeclaration":2694,"src":"12244:4:3"},"referencedDeclaration":2694,"src":"12244:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2694_storage_ptr","typeString":"struct Coin"}},"id":2217,"nodeType":"ArrayTypeName","src":"12244:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2694_storage_$dyn_storage_ptr","typeString":"struct Coin[]"}},"visibility":"internal"}],"id":2227,"initialValue":{"arguments":[{"arguments":[{"id":2223,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12326:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}],"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12318:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2221,"name":"address","nodeType":"ElementaryTypeName","src":"12318:7:3","typeDescriptions":{}}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12318:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2225,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"12333:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2219,"name":"DISTRIBUTION_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"12271:21:3","typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2904","typeString":"contract DistributionI"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12293:24:3","memberName":"withdrawDelegatorRewards","nodeType":"MemberAccess","referencedDeclaration":2780,"src":"12271:46:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address,string memory) external returns (struct Coin memory[] memory)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12271:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr","typeString":"struct Coin memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12244:104:3"},{"expression":{"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2228,"name":"_total_delegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"12359:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":2229,"name":"newRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"12382:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr","typeString":"struct Coin memory[] memory"}},"id":2231,"indexExpression":{"hexValue":"30","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12393:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12382:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2694_memory_ptr","typeString":"struct Coin memory"}},"id":2232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12396:6:3","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"12382:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12359:43:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2234,"nodeType":"ExpressionStatement","src":"12359:43:3"},{"assignments":[2236],"declarations":[{"constant":false,"id":2236,"mutability":"mutable","name":"_amount","nameLocation":"12474:7:3","nodeType":"VariableDeclaration","scope":2282,"src":"12466:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"12466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2240,"initialValue":{"baseExpression":{"id":2237,"name":"donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"12484:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2239,"indexExpression":{"id":2238,"name":"_idea_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"12492:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12484:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12466:35:3"},{"expression":{"arguments":[{"arguments":[{"id":2246,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12548:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}],"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12540:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"12540:7:3","typeDescriptions":{}}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12540:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2248,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"12555:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":2249,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"12571:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2241,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"12512:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3340","typeString":"contract StakingI"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12529:10:3","memberName":"undelegate","nodeType":"MemberAccess","referencedDeclaration":3184,"src":"12512:27:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$_t_int64_$","typeString":"function (address,string memory,uint256) external returns (int64)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12512:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":2251,"nodeType":"ExpressionStatement","src":"12512:67:3"},{"assignments":[2253],"declarations":[{"constant":false,"id":2253,"mutability":"mutable","name":"_donated_amount","nameLocation":"12598:15:3","nodeType":"VariableDeclaration","scope":2282,"src":"12590:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"12590:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2260,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2254,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"12616:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"id":2255,"name":"newRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"12626:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr","typeString":"struct Coin memory[] memory"}},"id":2257,"indexExpression":{"hexValue":"30","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12637:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12626:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2694_memory_ptr","typeString":"struct Coin memory"}},"id":2258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12640:6:3","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"12626:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12616:30:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12590:56:3"},{"assignments":[2262,null],"declarations":[{"constant":false,"id":2262,"mutability":"mutable","name":"sent","nameLocation":"12663:4:3","nodeType":"VariableDeclaration","scope":2282,"src":"12658:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2261,"name":"bool","nodeType":"ElementaryTypeName","src":"12658:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2273,"initialValue":{"arguments":[{"hexValue":"","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12721:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":2265,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12680:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12684:6:3","memberName":"sender","nodeType":"MemberAccess","src":"12680:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12672:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"12672:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12672:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12692:4:3","memberName":"call","nodeType":"MemberAccess","src":"12672:24:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2269,"name":"_donated_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"12704:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12672:48:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12672:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12657:67:3"},{"expression":{"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2274,"name":"donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"12740:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2276,"indexExpression":{"id":2275,"name":"_idea_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"12748:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12740:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12760:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12740:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2279,"nodeType":"ExpressionStatement","src":"12740:21:3"},{"expression":{"hexValue":"53656e74204d6f6e657920746f2069646561206f776e6572","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12780:26:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_090f757a7643bf9ba66a31eb3e792c84f6b77e8465766bb70805ea8bbd064b6f","typeString":"literal_string \"Sent Money to idea owner\""},"value":"Sent Money to idea owner"},"functionReturnParameters":2210,"id":2281,"nodeType":"Return","src":"12772:34:3"}]},"functionSelector":"7e22cd11","id":2283,"implemented":true,"kind":"function","modifiers":[],"name":"redeemDonatedMoney","nameLocation":"12081:18:3","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"_idea_id","nameLocation":"12108:8:3","nodeType":"VariableDeclaration","scope":2283,"src":"12100:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"12100:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12099:18:3"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2283,"src":"12134:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2208,"name":"string","nodeType":"ElementaryTypeName","src":"12134:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12133:15:3"},"scope":2556,"src":"12072:742:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2307,"nodeType":"Block","src":"12856:133:3","statements":[{"assignments":[2287],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"_amount","nameLocation":"12875:7:3","nodeType":"VariableDeclaration","scope":2307,"src":"12867:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"12867:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2293,"initialValue":{"expression":{"arguments":[{"id":2290,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12893:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}],"id":2289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2288,"name":"address","nodeType":"ElementaryTypeName","src":"12885:7:3","typeDescriptions":{}}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12899:7:3","memberName":"balance","nodeType":"MemberAccess","src":"12885:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12867:39:3"},{"assignments":[2295,null],"declarations":[{"constant":false,"id":2295,"mutability":"mutable","name":"sent","nameLocation":"12923:4:3","nodeType":"VariableDeclaration","scope":2307,"src":"12918:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2294,"name":"bool","nodeType":"ElementaryTypeName","src":"12918:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2306,"initialValue":{"arguments":[{"hexValue":"","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12973:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":2298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12940:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12944:6:3","memberName":"sender","nodeType":"MemberAccess","src":"12940:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12932:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"12932:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12932:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12952:4:3","memberName":"call","nodeType":"MemberAccess","src":"12932:24:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2302,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"12964:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12932:40:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12932:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12917:59:3"}]},"functionSelector":"1b52b9de","id":2308,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawAllMoney","nameLocation":"12829:16:3","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[],"src":"12845:2:3"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[],"src":"12856:0:3"},"scope":2556,"src":"12820:169:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2319,"nodeType":"Block","src":"13052:44:3","statements":[{"expression":{"expression":{"arguments":[{"id":2315,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13075:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}],"id":2314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13067:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"13067:7:3","typeDescriptions":{}}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13067:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13081:7:3","memberName":"balance","nodeType":"MemberAccess","src":"13067:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2312,"id":2318,"nodeType":"Return","src":"13060:28:3"}]},"functionSelector":"6f9fb98a","id":2320,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"13004:18:3","nodeType":"FunctionDefinition","parameters":{"id":2309,"nodeType":"ParameterList","parameters":[],"src":"13022:2:3"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2320,"src":"13046:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint","nodeType":"ElementaryTypeName","src":"13046:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13045:6:3"},"scope":2556,"src":"12995:101:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2336,"nodeType":"Block","src":"13177:96:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":2331,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13243:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}],"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13235:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"13235:7:3","typeDescriptions":{}}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13235:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2333,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"13250:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2327,"name":"DISTRIBUTION_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"13195:21:3","typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2904","typeString":"contract DistributionI"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13217:17:3","memberName":"delegationRewards","nodeType":"MemberAccess","referencedDeclaration":2849,"src":"13195:39:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_string_memory_ptr_$returns$_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address,string memory) view external returns (struct DecCoin memory[] memory)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13195:70:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr","typeString":"struct DecCoin memory[] memory"}},"functionReturnParameters":2326,"id":2335,"nodeType":"Return","src":"13188:77:3"}]},"functionSelector":"ae429e47","id":2337,"implemented":true,"kind":"function","modifiers":[],"name":"getContractRewards","nameLocation":"13117:18:3","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[],"src":"13135:2:3"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2337,"src":"13159:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2323,"nodeType":"UserDefinedTypeName","pathNode":{"id":2322,"name":"DecCoin","nameLocations":["13159:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"13159:7:3"},"referencedDeclaration":2701,"src":"13159:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2701_storage_ptr","typeString":"struct DecCoin"}},"id":2324,"nodeType":"ArrayTypeName","src":"13159:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"src":"13158:18:3"},"scope":2556,"src":"13108:165:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2359,"nodeType":"Block","src":"13336:145:3","statements":[{"assignments":[2343,2346],"declarations":[{"constant":false,"id":2343,"mutability":"mutable","name":"denom","nameLocation":"13356:5:3","nodeType":"VariableDeclaration","scope":2359,"src":"13348:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"13348:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"coin","nameLocation":"13376:4:3","nodeType":"VariableDeclaration","scope":2359,"src":"13364:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2694_memory_ptr","typeString":"struct Coin"},"typeName":{"id":2345,"nodeType":"UserDefinedTypeName","pathNode":{"id":2344,"name":"Coin","nameLocations":["13364:4:3"],"nodeType":"IdentifierPath","referencedDeclaration":2694,"src":"13364:4:3"},"referencedDeclaration":2694,"src":"13364:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2694_storage_ptr","typeString":"struct Coin"}},"visibility":"internal"}],"id":2355,"initialValue":{"arguments":[{"arguments":[{"id":2351,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13422:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}],"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13414:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2349,"name":"address","nodeType":"ElementaryTypeName","src":"13414:7:3","typeDescriptions":{}}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13414:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2353,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"13429:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2347,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"13386:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3340","typeString":"contract StakingI"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13403:10:3","memberName":"delegation","nodeType":"MemberAccess","referencedDeclaration":3225,"src":"13386:27:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$_t_struct$_Coin_$2694_memory_ptr_$","typeString":"function (address,string memory) view external returns (uint256,struct Coin memory)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13386:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_struct$_Coin_$2694_memory_ptr_$","typeString":"tuple(uint256,struct Coin memory)"}},"nodeType":"VariableDeclarationStatement","src":"13347:97:3"},{"expression":{"expression":{"id":2356,"name":"coin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"13462:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2694_memory_ptr","typeString":"struct Coin memory"}},"id":2357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13467:6:3","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"13462:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2341,"id":2358,"nodeType":"Return","src":"13455:18:3"}]},"functionSelector":"53f68802","id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"getDelegation","nameLocation":"13290:13:3","nodeType":"FunctionDefinition","parameters":{"id":2338,"nodeType":"ParameterList","parameters":[],"src":"13303:2:3"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"13327:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2339,"name":"uint256","nodeType":"ElementaryTypeName","src":"13327:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13326:9:3"},"scope":2556,"src":"13281:200:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2376,"nodeType":"Block","src":"13579:93:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":2371,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13642:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GreenDAO_$2556","typeString":"contract GreenDAO"}],"id":2370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13634:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"13634:7:3","typeDescriptions":{}}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13634:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2373,"name":"_validatorAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"13649:14:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2367,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"13597:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3340","typeString":"contract StakingI"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13614:19:3","memberName":"unbondingDelegation","nodeType":"MemberAccess","referencedDeclaration":3237,"src":"13597:36:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_string_memory_ptr_$returns$_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address,string memory) view external returns (struct UnbondingDelegationEntry memory[] memory)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13597:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr","typeString":"struct UnbondingDelegationEntry memory[] memory"}},"functionReturnParameters":2366,"id":2375,"nodeType":"Return","src":"13590:74:3"}]},"functionSelector":"42c7652a","id":2377,"implemented":true,"kind":"function","modifiers":[],"name":"getUnbondingDelegation","nameLocation":"13498:22:3","nodeType":"FunctionDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[],"src":"13520:2:3"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2377,"src":"13544:33:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr","typeString":"struct UnbondingDelegationEntry[]"},"typeName":{"baseType":{"id":2363,"nodeType":"UserDefinedTypeName","pathNode":{"id":2362,"name":"UnbondingDelegationEntry","nameLocations":["13544:24:3"],"nodeType":"IdentifierPath","referencedDeclaration":3141,"src":"13544:24:3"},"referencedDeclaration":3141,"src":"13544:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_UnbondingDelegationEntry_$3141_storage_ptr","typeString":"struct UnbondingDelegationEntry"}},"id":2364,"nodeType":"ArrayTypeName","src":"13544:26:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnbondingDelegationEntry_$3141_storage_$dyn_storage_ptr","typeString":"struct UnbondingDelegationEntry[]"}},"visibility":"internal"}],"src":"13543:35:3"},"scope":2556,"src":"13489:183:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2516,"nodeType":"Block","src":"13710:700:3","statements":[{"body":{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"13760:19:3","subExpression":{"baseExpression":{"id":2390,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"13767:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1211_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":2392,"indexExpression":{"id":2391,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"13777:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13767:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1211_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2394,"nodeType":"ExpressionStatement","src":"13760:19:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"13741:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2385,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"13745:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13741:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2395,"initializationExpression":{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"i","nameLocation":"13734:1:3","nodeType":"VariableDeclaration","scope":2395,"src":"13726:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"13726:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2383,"initialValue":{"hexValue":"30","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13738:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13726:13:3"},"loopExpression":{"expression":{"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13755:3:3","subExpression":{"id":2387,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"13755:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2389,"nodeType":"ExpressionStatement","src":"13755:3:3"},"nodeType":"ForStatement","src":"13721:58:3"},{"body":{"expression":{"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"13830:20:3","subExpression":{"baseExpression":{"id":2406,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"13837:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1216_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":2408,"indexExpression":{"id":2407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"13848:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13837:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1216_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2410,"nodeType":"ExpressionStatement","src":"13830:20:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"13810:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2401,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"13814:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13810:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2411,"initializationExpression":{"assignments":[2397],"declarations":[{"constant":false,"id":2397,"mutability":"mutable","name":"i","nameLocation":"13803:1:3","nodeType":"VariableDeclaration","scope":2411,"src":"13795:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"13795:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2399,"initialValue":{"hexValue":"30","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13807:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13795:13:3"},"loopExpression":{"expression":{"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13825:3:3","subExpression":{"id":2403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"13825:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2405,"nodeType":"ExpressionStatement","src":"13825:3:3"},"nodeType":"ForStatement","src":"13790:60:3"},{"body":{"expression":{"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"13902:21:3","subExpression":{"baseExpression":{"id":2422,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"13909:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1223_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":2424,"indexExpression":{"id":2423,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"13921:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13909:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1223_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2426,"nodeType":"ExpressionStatement","src":"13902:21:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"13881:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2417,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"13885:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13881:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2427,"initializationExpression":{"assignments":[2413],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"i","nameLocation":"13874:1:3","nodeType":"VariableDeclaration","scope":2427,"src":"13866:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"13866:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2415,"initialValue":{"hexValue":"30","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13878:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13866:13:3"},"loopExpression":{"expression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13897:3:3","subExpression":{"id":2419,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"13897:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ExpressionStatement","src":"13897:3:3"},"nodeType":"ForStatement","src":"13861:62:3"},{"body":{"expression":{"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"13974:31:3","subExpression":{"baseExpression":{"id":2438,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"13981:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1230_storage_$","typeString":"mapping(uint256 => struct GreenDAO.smart_contract_uri_struct storage ref)"}},"id":2440,"indexExpression":{"id":2439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"14003:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13981:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1230_storage","typeString":"struct GreenDAO.smart_contract_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2442,"nodeType":"ExpressionStatement","src":"13974:31:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"13954:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2433,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"13958:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13954:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2443,"initializationExpression":{"assignments":[2429],"declarations":[{"constant":false,"id":2429,"mutability":"mutable","name":"i","nameLocation":"13947:1:3","nodeType":"VariableDeclaration","scope":2443,"src":"13939:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"13939:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2431,"initialValue":{"hexValue":"30","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13951:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13939:13:3"},"loopExpression":{"expression":{"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13969:3:3","subExpression":{"id":2435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"13969:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2437,"nodeType":"ExpressionStatement","src":"13969:3:3"},"nodeType":"ForStatement","src":"13934:71:3"},{"body":{"expression":{"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14059:22:3","subExpression":{"baseExpression":{"id":2454,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"14066:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1244_storage_$","typeString":"mapping(uint256 => struct GreenDAO.message_struct storage ref)"}},"id":2456,"indexExpression":{"id":2455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"14079:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14066:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1244_storage","typeString":"struct GreenDAO.message_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2458,"nodeType":"ExpressionStatement","src":"14059:22:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"14036:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2449,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"14040:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14036:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2459,"initializationExpression":{"assignments":[2445],"declarations":[{"constant":false,"id":2445,"mutability":"mutable","name":"i","nameLocation":"14029:1:3","nodeType":"VariableDeclaration","scope":2459,"src":"14021:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"14021:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2447,"initialValue":{"hexValue":"30","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14033:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14021:13:3"},"loopExpression":{"expression":{"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14054:3:3","subExpression":{"id":2451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"14054:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2453,"nodeType":"ExpressionStatement","src":"14054:3:3"},"nodeType":"ForStatement","src":"14016:65:3"},{"body":{"expression":{"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14133:21:3","subExpression":{"baseExpression":{"id":2470,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"14140:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1251_storage_$","typeString":"mapping(uint256 => struct GreenDAO.reply_struct storage ref)"}},"id":2472,"indexExpression":{"id":2471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"14152:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14140:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1251_storage","typeString":"struct GreenDAO.reply_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2474,"nodeType":"ExpressionStatement","src":"14133:21:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"14112:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2465,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"14116:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14112:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"initializationExpression":{"assignments":[2461],"declarations":[{"constant":false,"id":2461,"mutability":"mutable","name":"i","nameLocation":"14105:1:3","nodeType":"VariableDeclaration","scope":2475,"src":"14097:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"14097:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2463,"initialValue":{"hexValue":"30","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14109:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14097:13:3"},"loopExpression":{"expression":{"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14128:3:3","subExpression":{"id":2467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"14128:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2469,"nodeType":"ExpressionStatement","src":"14128:3:3"},"nodeType":"ForStatement","src":"14092:62:3"},{"body":{"expression":{"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14210:30:3","subExpression":{"baseExpression":{"id":2486,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"14217:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1237_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":2488,"indexExpression":{"id":2487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"14238:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14217:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1237_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2490,"nodeType":"ExpressionStatement","src":"14210:30:3"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"14185:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2481,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"14189:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14185:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2491,"initializationExpression":{"assignments":[2477],"declarations":[{"constant":false,"id":2477,"mutability":"mutable","name":"i","nameLocation":"14178:1:3","nodeType":"VariableDeclaration","scope":2491,"src":"14170:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"14170:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2479,"initialValue":{"hexValue":"30","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14182:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14170:13:3"},"loopExpression":{"expression":{"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14206:3:3","subExpression":{"id":2483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"14206:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2485,"nodeType":"ExpressionStatement","src":"14206:3:3"},"nodeType":"ForStatement","src":"14165:75:3"},{"expression":{"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2492,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"14251:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14251:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2495,"nodeType":"ExpressionStatement","src":"14251:12:3"},{"expression":{"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2496,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"14274:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14286:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14274:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2499,"nodeType":"ExpressionStatement","src":"14274:13:3"},{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2500,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"14298:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14311:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14298:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2503,"nodeType":"ExpressionStatement","src":"14298:14:3"},{"expression":{"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2504,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"14323:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14338:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14323:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2507,"nodeType":"ExpressionStatement","src":"14323:16:3"},{"expression":{"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2508,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"14350:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14363:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14350:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2511,"nodeType":"ExpressionStatement","src":"14350:14:3"},{"expression":{"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2512,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"14383:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14401:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14383:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2515,"nodeType":"ExpressionStatement","src":"14383:19:3"}]},"functionSelector":"b16060a6","id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"reset_all","nameLocation":"13691:9:3","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[],"src":"13700:2:3"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[],"src":"13710:0:3"},"scope":2556,"src":"13682:728:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2554,"nodeType":"Block","src":"14530:318:3","statements":[{"assignments":[2522],"declarations":[{"constant":false,"id":2522,"mutability":"mutable","name":"successStk","nameLocation":"14546:10:3","nodeType":"VariableDeclaration","scope":2554,"src":"14541:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2521,"name":"bool","nodeType":"ElementaryTypeName","src":"14541:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2534,"initialValue":{"arguments":[{"expression":{"id":2525,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"14584:2:3","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14587:6:3","memberName":"origin","nodeType":"MemberAccess","src":"14584:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14602:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2528,"name":"uint256","nodeType":"ElementaryTypeName","src":"14602:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2527,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14597:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14597:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14611:3:3","memberName":"max","nodeType":"MemberAccess","src":"14597:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2532,"name":"stakingMethods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"14616:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}],"expression":{"id":2523,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"14559:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3340","typeString":"contract StakingI"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14576:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2572,"src":"14559:24:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,string memory[] memory) external returns (bool)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14559:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"14541:90:3"},{"expression":{"arguments":[{"id":2536,"name":"successStk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"14650:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e6720417070726f7665206661696c6564","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14662:24:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3","typeString":"literal_string \"Staking Approve failed\""},"value":"Staking Approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3","typeString":"literal_string \"Staking Approve failed\""}],"id":2535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14642:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14642:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2539,"nodeType":"ExpressionStatement","src":"14642:45:3"},{"assignments":[2541],"declarations":[{"constant":false,"id":2541,"mutability":"mutable","name":"successDist","nameLocation":"14703:11:3","nodeType":"VariableDeclaration","scope":2554,"src":"14698:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2540,"name":"bool","nodeType":"ElementaryTypeName","src":"14698:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2548,"initialValue":{"arguments":[{"expression":{"id":2544,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"14747:2:3","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14750:6:3","memberName":"origin","nodeType":"MemberAccess","src":"14747:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2546,"name":"distributionMethods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"14758:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}],"expression":{"id":2542,"name":"DISTRIBUTION_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"14717:21:3","typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2904","typeString":"contract DistributionI"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14739:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"14717:29:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (address,string memory[] memory) external returns (bool)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14717:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"14698:80:3"},{"expression":{"arguments":[{"id":2550,"name":"successDist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"14797:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446973747269627574696f6e20417070726f7665206661696c6564","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14810:29:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974","typeString":"literal_string \"Distribution Approve failed\""},"value":"Distribution Approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974","typeString":"literal_string \"Distribution Approve failed\""}],"id":2549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14789:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14789:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2553,"nodeType":"ExpressionStatement","src":"14789:51:3"}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"14416:69:3","text":"@dev approves the staking and distribution contracts for donating"},"functionSelector":"b2947c71","id":2555,"implemented":true,"kind":"function","modifiers":[],"name":"_approveRequiredMsgs","nameLocation":"14500:20:3","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[],"src":"14520:2:3"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[],"src":"14530:0:3"},"scope":2556,"src":"14491:357:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2557,"src":"208:14643:3","usedErrors":[]}],"src":"33:14820:3"},"id":3},"contracts/precompiles/common/Authorization.sol":{"ast":{"absolutePath":"contracts/precompiles/common/Authorization.sol","exportedSymbols":{"AuthorizationI":[2636]},"id":2637,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":2558,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:4"},{"abstract":false,"baseContracts":[],"canonicalName":"AuthorizationI","contractDependencies":[],"contractKind":"interface","documentation":{"id":2559,"nodeType":"StructuredDocumentation","src":"63:159:4","text":"@author Evmos Team\n @title Authorization Interface\n @dev The interface through which solidity contracts will interact with smart contract approvals."},"fullyImplemented":false,"id":2636,"linearizedBaseContracts":[2636],"name":"AuthorizationI","nameLocation":"232:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2560,"nodeType":"StructuredDocumentation","src":"253:362:4","text":"@dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."},"functionSelector":"b6039895","id":2572,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"629:7:4","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"spender","nameLocation":"654:7:4","nodeType":"VariableDeclaration","scope":2572,"src":"646:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"646:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2564,"mutability":"mutable","name":"amount","nameLocation":"679:6:4","nodeType":"VariableDeclaration","scope":2572,"src":"671:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"671:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"methods","nameLocation":"713:7:4","nodeType":"VariableDeclaration","scope":2572,"src":"695:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2565,"name":"string","nodeType":"ElementaryTypeName","src":"695:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2566,"nodeType":"ArrayTypeName","src":"695:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"636:90:4"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"approved","nameLocation":"750:8:4","nodeType":"VariableDeclaration","scope":2572,"src":"745:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2569,"name":"bool","nodeType":"ElementaryTypeName","src":"745:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"744:15:4"},"scope":2636,"src":"620:140:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2573,"nodeType":"StructuredDocumentation","src":"766:400:4","text":"@dev Increase the allowance of a given spender by a specific amount of tokens for IBC\n transfer methods or staking.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."},"functionSelector":"a386a63c","id":2585,"implemented":false,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"1180:17:4","nodeType":"FunctionDefinition","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"spender","nameLocation":"1215:7:4","nodeType":"VariableDeclaration","scope":2585,"src":"1207:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"amount","nameLocation":"1240:6:4","nodeType":"VariableDeclaration","scope":2585,"src":"1232:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"methods","nameLocation":"1274:7:4","nodeType":"VariableDeclaration","scope":2585,"src":"1256:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2578,"name":"string","nodeType":"ElementaryTypeName","src":"1256:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2579,"nodeType":"ArrayTypeName","src":"1256:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"1197:90:4"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"approved","nameLocation":"1311:8:4","nodeType":"VariableDeclaration","scope":2585,"src":"1306:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2582,"name":"bool","nodeType":"ElementaryTypeName","src":"1306:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1305:15:4"},"scope":2636,"src":"1171:150:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"1327:401:4","text":"@dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\n transfer methods or staking.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."},"functionSelector":"f007d286","id":2598,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"1742:17:4","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"spender","nameLocation":"1777:7:4","nodeType":"VariableDeclaration","scope":2598,"src":"1769:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2587,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"amount","nameLocation":"1802:6:4","nodeType":"VariableDeclaration","scope":2598,"src":"1794:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2593,"mutability":"mutable","name":"methods","nameLocation":"1836:7:4","nodeType":"VariableDeclaration","scope":2598,"src":"1818:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2591,"name":"string","nodeType":"ElementaryTypeName","src":"1818:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2592,"nodeType":"ArrayTypeName","src":"1818:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"1759:90:4"},"returnParameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"approved","nameLocation":"1873:8:4","nodeType":"VariableDeclaration","scope":2598,"src":"1868:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2595,"name":"bool","nodeType":"ElementaryTypeName","src":"1868:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1867:15:4"},"scope":2636,"src":"1733:150:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2599,"nodeType":"StructuredDocumentation","src":"1890:504:4","text":"@dev Returns the remaining number of tokens that spender will be allowed to spend\n on behalf of the owner through IBC transfer methods or staking. This is zero by default.\n @param owner The address of the account owning tokens.\n @param spender The address of the account able to transfer the tokens.\n @param method The message type URL of the methods for which the approval should be queried.\n @return remaining The remaining number of tokens available to be spent."},"functionSelector":"fc08930c","id":2610,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"2408:9:4","nodeType":"FunctionDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"owner","nameLocation":"2435:5:4","nodeType":"VariableDeclaration","scope":2610,"src":"2427:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2600,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2603,"mutability":"mutable","name":"spender","nameLocation":"2458:7:4","nodeType":"VariableDeclaration","scope":2610,"src":"2450:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"2450:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2605,"mutability":"mutable","name":"method","nameLocation":"2491:6:4","nodeType":"VariableDeclaration","scope":2610,"src":"2475:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2604,"name":"string","nodeType":"ElementaryTypeName","src":"2475:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2417:86:4"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"remaining","nameLocation":"2535:9:4","nodeType":"VariableDeclaration","scope":2610,"src":"2527:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2527:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2526:19:4"},"scope":2636,"src":"2399:147:4","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":2611,"nodeType":"StructuredDocumentation","src":"2552:510:4","text":"@dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n The value field specifies the new allowance and the methods field holds the information for which methods\n the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set.\n @param value The amount of tokens approved to be spent."},"eventSelector":"f2638649a77447a76543b3e27c31ee0febe7de7fb20e2b6a781d08207bc7cb8d","id":2622,"name":"Approval","nameLocation":"3073:8:4","nodeType":"EventDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3107:5:4","nodeType":"VariableDeclaration","scope":2622,"src":"3091:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"3091:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2615,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"3138:7:4","nodeType":"VariableDeclaration","scope":2622,"src":"3122:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2614,"name":"address","nodeType":"ElementaryTypeName","src":"3122:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2618,"indexed":false,"mutability":"mutable","name":"methods","nameLocation":"3164:7:4","nodeType":"VariableDeclaration","scope":2622,"src":"3155:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2616,"name":"string","nodeType":"ElementaryTypeName","src":"3155:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2617,"nodeType":"ArrayTypeName","src":"3155:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2620,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3189:5:4","nodeType":"VariableDeclaration","scope":2622,"src":"3181:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3081:119:4"},"src":"3067:134:4"},{"anonymous":false,"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"3207:541:4","text":"@dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\n allowance method. The values field specifies the new allowances and the methods field holds the\n information for which methods the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set.\n @param values The amounts of tokens approved to be spent."},"eventSelector":"5a22c7e8af595d94a6d652de8e346a8ecdfe49fc2e0e976f33c9fc9358390ea4","id":2635,"name":"AllowanceChange","nameLocation":"3759:15:4","nodeType":"EventDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3800:5:4","nodeType":"VariableDeclaration","scope":2635,"src":"3784:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2624,"name":"address","nodeType":"ElementaryTypeName","src":"3784:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2627,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"3831:7:4","nodeType":"VariableDeclaration","scope":2635,"src":"3815:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2630,"indexed":false,"mutability":"mutable","name":"methods","nameLocation":"3857:7:4","nodeType":"VariableDeclaration","scope":2635,"src":"3848:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2628,"name":"string","nodeType":"ElementaryTypeName","src":"3848:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2629,"nodeType":"ArrayTypeName","src":"3848:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2633,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"3884:6:4","nodeType":"VariableDeclaration","scope":2635,"src":"3874:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2632,"nodeType":"ArrayTypeName","src":"3874:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3774:122:4"},"src":"3753:144:4"}],"scope":2637,"src":"222:3677:4","usedErrors":[]}],"src":"36:3864:4"},"id":4},"contracts/precompiles/common/GenericAuthorization.sol":{"ast":{"absolutePath":"contracts/precompiles/common/GenericAuthorization.sol","exportedSymbols":{"GenericAuthorizationI":[2682]},"id":2683,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":2638,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:5"},{"abstract":false,"baseContracts":[],"canonicalName":"GenericAuthorizationI","contractDependencies":[],"contractKind":"interface","documentation":{"id":2639,"nodeType":"StructuredDocumentation","src":"63:159:5","text":"@author Evmos Team\n @title Authorization Interface\n @dev The interface through which solidity contracts will interact with smart contract approvals."},"fullyImplemented":false,"id":2682,"linearizedBaseContracts":[2682],"name":"GenericAuthorizationI","nameLocation":"232:21:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2640,"nodeType":"StructuredDocumentation","src":"260:306:5","text":"@dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."},"functionSelector":"7a9841ed","id":2650,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"580:7:5","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"spender","nameLocation":"605:7:5","nodeType":"VariableDeclaration","scope":2650,"src":"597:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2645,"mutability":"mutable","name":"methods","nameLocation":"640:7:5","nodeType":"VariableDeclaration","scope":2650,"src":"622:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2643,"name":"string","nodeType":"ElementaryTypeName","src":"622:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2644,"nodeType":"ArrayTypeName","src":"622:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"587:66:5"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"approved","nameLocation":"677:8:5","nodeType":"VariableDeclaration","scope":2650,"src":"672:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2647,"name":"bool","nodeType":"ElementaryTypeName","src":"672:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"671:15:5"},"scope":2682,"src":"571:116:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2651,"nodeType":"StructuredDocumentation","src":"693:265:5","text":"@dev Revokes a list of Cosmos transactions.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods to revoke.\n @return revoked Boolean value to indicate if the revocation was successful."},"functionSelector":"61dc5c3b","id":2661,"implemented":false,"kind":"function","modifiers":[],"name":"revoke","nameLocation":"972:6:5","nodeType":"FunctionDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"spender","nameLocation":"996:7:5","nodeType":"VariableDeclaration","scope":2661,"src":"988:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"methods","nameLocation":"1031:7:5","nodeType":"VariableDeclaration","scope":2661,"src":"1013:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2654,"name":"string","nodeType":"ElementaryTypeName","src":"1013:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2655,"nodeType":"ArrayTypeName","src":"1013:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"978:66:5"},"returnParameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"revoked","nameLocation":"1068:7:5","nodeType":"VariableDeclaration","scope":2661,"src":"1063:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2658,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1062:14:5"},"scope":2682,"src":"963:114:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"1083:446:5","text":"@dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n The value field specifies the new allowance and the methods field holds the information for which methods\n the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set."},"eventSelector":"e2d9366a7f75ef8fcafbe7902248eb78d4b2dae87d48522003814979d166ae86","id":2671,"name":"Approval","nameLocation":"1540:8:5","nodeType":"EventDefinition","parameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1574:5:5","nodeType":"VariableDeclaration","scope":2671,"src":"1558:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2663,"name":"address","nodeType":"ElementaryTypeName","src":"1558:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2666,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"1605:7:5","nodeType":"VariableDeclaration","scope":2671,"src":"1589:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2669,"indexed":false,"mutability":"mutable","name":"methods","nameLocation":"1631:7:5","nodeType":"VariableDeclaration","scope":2671,"src":"1622:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2667,"name":"string","nodeType":"ElementaryTypeName","src":"1622:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2668,"nodeType":"ArrayTypeName","src":"1622:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"1548:96:5"},"src":"1534:111:5"},{"anonymous":false,"documentation":{"id":2672,"nodeType":"StructuredDocumentation","src":"1651:275:5","text":"@dev This event is emitted when an owner revokes a spender's allowance.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set."},"eventSelector":"b0901d422521d0496e60bfbd8023b219d603a6cb950b43b2fe95043676cb353e","id":2681,"name":"Revocation","nameLocation":"1937:10:5","nodeType":"EventDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1973:5:5","nodeType":"VariableDeclaration","scope":2681,"src":"1957:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2673,"name":"address","nodeType":"ElementaryTypeName","src":"1957:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2676,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2004:7:5","nodeType":"VariableDeclaration","scope":2681,"src":"1988:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"1988:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2679,"indexed":false,"mutability":"mutable","name":"methods","nameLocation":"2030:7:5","nodeType":"VariableDeclaration","scope":2681,"src":"2021:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2677,"name":"string","nodeType":"ElementaryTypeName","src":"2021:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2678,"nodeType":"ArrayTypeName","src":"2021:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"1947:96:5"},"src":"1931:113:5"}],"scope":2683,"src":"222:1824:5","usedErrors":[]}],"src":"36:2011:5"},"id":5},"contracts/precompiles/common/Types.sol":{"ast":{"absolutePath":"contracts/precompiles/common/Types.sol","exportedSymbols":{"Coin":[2694],"Dec":[2689],"DecCoin":[2701],"PageResponse":[2706]},"id":2707,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":2684,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:6"},{"canonicalName":"Dec","id":2689,"members":[{"constant":false,"id":2686,"mutability":"mutable","name":"value","nameLocation":"88:5:6","nodeType":"VariableDeclaration","scope":2689,"src":"80:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"80:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"precision","nameLocation":"105:9:6","nodeType":"VariableDeclaration","scope":2689,"src":"99:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2687,"name":"uint8","nodeType":"ElementaryTypeName","src":"99:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"Dec","nameLocation":"70:3:6","nodeType":"StructDefinition","scope":2707,"src":"63:54:6","visibility":"public"},{"canonicalName":"Coin","id":2694,"members":[{"constant":false,"id":2691,"mutability":"mutable","name":"denom","nameLocation":"229:5:6","nodeType":"VariableDeclaration","scope":2694,"src":"222:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2690,"name":"string","nodeType":"ElementaryTypeName","src":"222:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2693,"mutability":"mutable","name":"amount","nameLocation":"248:6:6","nodeType":"VariableDeclaration","scope":2694,"src":"240:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"240:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Coin","nameLocation":"211:4:6","nodeType":"StructDefinition","scope":2707,"src":"204:53:6","visibility":"public"},{"canonicalName":"DecCoin","id":2701,"members":[{"constant":false,"id":2696,"mutability":"mutable","name":"denom","nameLocation":"388:5:6","nodeType":"VariableDeclaration","scope":2701,"src":"381:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2695,"name":"string","nodeType":"ElementaryTypeName","src":"381:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"amount","nameLocation":"407:6:6","nodeType":"VariableDeclaration","scope":2701,"src":"399:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"399:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"precision","nameLocation":"425:9:6","nodeType":"VariableDeclaration","scope":2701,"src":"419:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2699,"name":"uint8","nodeType":"ElementaryTypeName","src":"419:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"DecCoin","nameLocation":"367:7:6","nodeType":"StructDefinition","scope":2707,"src":"360:77:6","visibility":"public"},{"canonicalName":"PageResponse","id":2706,"members":[{"constant":false,"id":2703,"mutability":"mutable","name":"nextKey","nameLocation":"538:7:6","nodeType":"VariableDeclaration","scope":2706,"src":"532:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2702,"name":"bytes","nodeType":"ElementaryTypeName","src":"532:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"total","nameLocation":"558:5:6","nodeType":"VariableDeclaration","scope":2706,"src":"551:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2704,"name":"uint64","nodeType":"ElementaryTypeName","src":"551:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"PageResponse","nameLocation":"513:12:6","nodeType":"StructDefinition","scope":2707,"src":"506:60:6","visibility":"public"}],"src":"36:531:6"},"id":6},"contracts/precompiles/stateful/Distribution.sol":{"ast":{"absolutePath":"contracts/precompiles/stateful/Distribution.sol","exportedSymbols":{"Coin":[2694],"DISTRIBUTION_CONTRACT":[2731],"DISTRIBUTION_PRECOMPILE_ADDRESS":[2714],"Dec":[2689],"DecCoin":[2701],"DelegationDelegatorReward":[2755],"DistributionI":[2904],"MSG_SET_WITHDRAWER_ADDRESS":[2718],"MSG_WITHDRAW_DELEGATOR_REWARD":[2721],"MSG_WITHDRAW_VALIDATOR_COMMISSION":[2724],"PageResponse":[2706],"ValidatorDistributionInfo":[2748],"ValidatorSlashEvent":[2737],"genericAuth":[2709]},"id":2905,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":2708,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:7"},{"absolutePath":"contracts/precompiles/common/GenericAuthorization.sol","file":"../common/GenericAuthorization.sol","id":2709,"nameLocation":"110:11:7","nodeType":"ImportDirective","scope":2905,"sourceUnit":2683,"src":"63:59:7","symbolAliases":[],"unitAlias":"genericAuth"},{"absolutePath":"contracts/precompiles/common/Types.sol","file":"../common/Types.sol","id":2710,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2905,"sourceUnit":2707,"src":"123:29:7","symbolAliases":[],"unitAlias":""},{"constant":true,"id":2714,"mutability":"constant","name":"DISTRIBUTION_PRECOMPILE_ADDRESS","nameLocation":"218:31:7","nodeType":"VariableDeclaration","scope":2905,"src":"201:93:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2712,"name":"address","nodeType":"ElementaryTypeName","src":"201:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030383031","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"252:42:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000801"},"visibility":"internal"},{"constant":true,"id":2718,"mutability":"constant","name":"MSG_SET_WITHDRAWER_ADDRESS","nameLocation":"369:26:7","nodeType":"VariableDeclaration","scope":2905,"src":"353:97:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2716,"name":"string","nodeType":"ElementaryTypeName","src":"353:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367536574576974686472617741646472657373","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"398:52:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_676444a09bae852212733c06aa01b4fb509c69e94cfae86e091c82c9b8092262","typeString":"literal_string \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\""},"value":"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress"},"visibility":"internal"},{"constant":true,"id":2721,"mutability":"constant","name":"MSG_WITHDRAW_DELEGATOR_REWARD","nameLocation":"468:29:7","nodeType":"VariableDeclaration","scope":2905,"src":"452:105:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2719,"name":"string","nodeType":"ElementaryTypeName","src":"452:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367576974686472617744656c656761746f72526577617264","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"500:57:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a80ac1de3135a636726973fe89306b48710e1e16488d89fb49580776524185b3","typeString":"literal_string \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\""},"value":"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"},"visibility":"internal"},{"constant":true,"id":2724,"mutability":"constant","name":"MSG_WITHDRAW_VALIDATOR_COMMISSION","nameLocation":"575:33:7","nodeType":"VariableDeclaration","scope":2905,"src":"559:113:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2722,"name":"string","nodeType":"ElementaryTypeName","src":"559:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367576974686472617756616c696461746f72436f6d6d697373696f6e","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"611:61:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffe1bf93f0fe502fb0f961db98fe854ee1fd6d2519e43ee67a536717ae34be1b","typeString":"literal_string \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\""},"value":"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"},"visibility":"internal"},{"constant":true,"id":2731,"mutability":"constant","name":"DISTRIBUTION_CONTRACT","nameLocation":"746:21:7","nodeType":"VariableDeclaration","scope":2905,"src":"723:93:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2904","typeString":"contract DistributionI"},"typeName":{"id":2727,"nodeType":"UserDefinedTypeName","pathNode":{"id":2726,"name":"DistributionI","nameLocations":["723:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":2904,"src":"723:13:7"},"referencedDeclaration":2904,"src":"723:13:7","typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2904","typeString":"contract DistributionI"}},"value":{"arguments":[{"id":2729,"name":"DISTRIBUTION_PRECOMPILE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"784:31:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2728,"name":"DistributionI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"770:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DistributionI_$2904_$","typeString":"type(contract DistributionI)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"770:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DistributionI_$2904","typeString":"contract DistributionI"}},"visibility":"internal"},{"canonicalName":"ValidatorSlashEvent","id":2737,"members":[{"constant":false,"id":2733,"mutability":"mutable","name":"validatorPeriod","nameLocation":"859:15:7","nodeType":"VariableDeclaration","scope":2737,"src":"852:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2732,"name":"uint64","nodeType":"ElementaryTypeName","src":"852:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"fraction","nameLocation":"884:8:7","nodeType":"VariableDeclaration","scope":2737,"src":"880:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Dec_$2689_storage_ptr","typeString":"struct Dec"},"typeName":{"id":2735,"nodeType":"UserDefinedTypeName","pathNode":{"id":2734,"name":"Dec","nameLocations":["880:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":2689,"src":"880:3:7"},"referencedDeclaration":2689,"src":"880:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Dec_$2689_storage_ptr","typeString":"struct Dec"}},"visibility":"internal"}],"name":"ValidatorSlashEvent","nameLocation":"826:19:7","nodeType":"StructDefinition","scope":2905,"src":"819:76:7","visibility":"public"},{"canonicalName":"ValidatorDistributionInfo","id":2748,"members":[{"constant":false,"id":2739,"mutability":"mutable","name":"operatorAddress","nameLocation":"943:15:7","nodeType":"VariableDeclaration","scope":2748,"src":"936:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2738,"name":"string","nodeType":"ElementaryTypeName","src":"936:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"selfBondRewards","nameLocation":"974:15:7","nodeType":"VariableDeclaration","scope":2748,"src":"964:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2741,"nodeType":"UserDefinedTypeName","pathNode":{"id":2740,"name":"DecCoin","nameLocations":["964:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"964:7:7"},"referencedDeclaration":2701,"src":"964:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2701_storage_ptr","typeString":"struct DecCoin"}},"id":2742,"nodeType":"ArrayTypeName","src":"964:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"commission","nameLocation":"1005:10:7","nodeType":"VariableDeclaration","scope":2748,"src":"995:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2745,"nodeType":"UserDefinedTypeName","pathNode":{"id":2744,"name":"DecCoin","nameLocations":["995:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"995:7:7"},"referencedDeclaration":2701,"src":"995:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2701_storage_ptr","typeString":"struct DecCoin"}},"id":2746,"nodeType":"ArrayTypeName","src":"995:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"name":"ValidatorDistributionInfo","nameLocation":"904:25:7","nodeType":"StructDefinition","scope":2905,"src":"897:121:7","visibility":"public"},{"canonicalName":"DelegationDelegatorReward","id":2755,"members":[{"constant":false,"id":2750,"mutability":"mutable","name":"validatorAddress","nameLocation":"1066:16:7","nodeType":"VariableDeclaration","scope":2755,"src":"1059:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2749,"name":"string","nodeType":"ElementaryTypeName","src":"1059:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2754,"mutability":"mutable","name":"reward","nameLocation":"1098:6:7","nodeType":"VariableDeclaration","scope":2755,"src":"1088:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2752,"nodeType":"UserDefinedTypeName","pathNode":{"id":2751,"name":"DecCoin","nameLocations":["1088:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"1088:7:7"},"referencedDeclaration":2701,"src":"1088:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2701_storage_ptr","typeString":"struct DecCoin"}},"id":2753,"nodeType":"ArrayTypeName","src":"1088:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"name":"DelegationDelegatorReward","nameLocation":"1027:25:7","nodeType":"StructDefinition","scope":2905,"src":"1020:87:7","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":2757,"name":"genericAuth.GenericAuthorizationI","nameLocations":["1354:11:7","1366:21:7"],"nodeType":"IdentifierPath","referencedDeclaration":2682,"src":"1354:33:7"},"id":2758,"nodeType":"InheritanceSpecifier","src":"1354:33:7"}],"canonicalName":"DistributionI","contractDependencies":[],"contractKind":"interface","documentation":{"id":2756,"nodeType":"StructuredDocumentation","src":"1109:218:7","text":"@author Evmos Team\n @title Distribution Precompile Contract\n @dev The interface through which solidity contracts will interact with Distribution\n @custom:address 0x0000000000000000000000000000000000000801"},"fullyImplemented":false,"id":2904,"linearizedBaseContracts":[2904,2682],"name":"DistributionI","nameLocation":"1337:13:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"1394:344:7","text":"TRANSACTIONS\n @dev Change the address, that can withdraw the rewards of a delegator.\n Note that this address cannot be a module account.\n @param delegatorAddress The address of the delegator\n @param withdrawerAddress The address that will be capable of withdrawing rewards for\n the given delegator address"},"functionSelector":"5a9d9a96","id":2768,"implemented":false,"kind":"function","modifiers":[],"name":"setWithdrawAddress","nameLocation":"1752:18:7","nodeType":"FunctionDefinition","parameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"delegatorAddress","nameLocation":"1788:16:7","nodeType":"VariableDeclaration","scope":2768,"src":"1780:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"withdrawerAddress","nameLocation":"1828:17:7","nodeType":"VariableDeclaration","scope":2768,"src":"1814:31:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2762,"name":"string","nodeType":"ElementaryTypeName","src":"1814:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1770:81:7"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"success","nameLocation":"1875:7:7","nodeType":"VariableDeclaration","scope":2768,"src":"1870:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2765,"name":"bool","nodeType":"ElementaryTypeName","src":"1870:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1869:14:7"},"scope":2904,"src":"1743:141:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2769,"nodeType":"StructuredDocumentation","src":"1890:235:7","text":"@dev Withdraw the rewards of a delegator from a validator\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @return amount The amount of Coin withdrawn"},"functionSelector":"b46a8d61","id":2780,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawDelegatorRewards","nameLocation":"2139:24:7","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"delegatorAddress","nameLocation":"2181:16:7","nodeType":"VariableDeclaration","scope":2780,"src":"2173:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2770,"name":"address","nodeType":"ElementaryTypeName","src":"2173:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"validatorAddress","nameLocation":"2221:16:7","nodeType":"VariableDeclaration","scope":2780,"src":"2207:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2772,"name":"string","nodeType":"ElementaryTypeName","src":"2207:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2163:80:7"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"amount","nameLocation":"2295:6:7","nodeType":"VariableDeclaration","scope":2780,"src":"2279:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2694_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Coin[]"},"typeName":{"baseType":{"id":2776,"nodeType":"UserDefinedTypeName","pathNode":{"id":2775,"name":"Coin","nameLocations":["2279:4:7"],"nodeType":"IdentifierPath","referencedDeclaration":2694,"src":"2279:4:7"},"referencedDeclaration":2694,"src":"2279:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2694_storage_ptr","typeString":"struct Coin"}},"id":2777,"nodeType":"ArrayTypeName","src":"2279:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2694_storage_$dyn_storage_ptr","typeString":"struct Coin[]"}},"visibility":"internal"}],"src":"2269:38:7"},"scope":2904,"src":"2130:178:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"2314:170:7","text":"@dev Withdraws the rewards commission of a validator.\n @param validatorAddress The address of the validator\n @return amount The amount of Coin withdrawn"},"functionSelector":"3ce4e3be","id":2790,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawValidatorCommission","nameLocation":"2498:27:7","nodeType":"FunctionDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"validatorAddress","nameLocation":"2549:16:7","nodeType":"VariableDeclaration","scope":2790,"src":"2535:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2782,"name":"string","nodeType":"ElementaryTypeName","src":"2535:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2525:46:7"},"returnParameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"amount","nameLocation":"2623:6:7","nodeType":"VariableDeclaration","scope":2790,"src":"2607:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2694_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Coin[]"},"typeName":{"baseType":{"id":2786,"nodeType":"UserDefinedTypeName","pathNode":{"id":2785,"name":"Coin","nameLocations":["2607:4:7"],"nodeType":"IdentifierPath","referencedDeclaration":2694,"src":"2607:4:7"},"referencedDeclaration":2694,"src":"2607:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2694_storage_ptr","typeString":"struct Coin"}},"id":2787,"nodeType":"ArrayTypeName","src":"2607:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Coin_$2694_storage_$dyn_storage_ptr","typeString":"struct Coin[]"}},"visibility":"internal"}],"src":"2597:38:7"},"scope":2904,"src":"2489:147:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"2642:224:7","text":"QUERIES\n @dev Queries validator commission and self-delegation rewards for validator.\n @param validatorAddress The address of the validator\n @return distributionInfo The validator's distribution info"},"functionSelector":"54212a89","id":2800,"implemented":false,"kind":"function","modifiers":[],"name":"validatorDistributionInfo","nameLocation":"2880:25:7","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"validatorAddress","nameLocation":"2929:16:7","nodeType":"VariableDeclaration","scope":2800,"src":"2915:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2792,"name":"string","nodeType":"ElementaryTypeName","src":"2915:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2905:46:7"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"distributionInfo","nameLocation":"3033:16:7","nodeType":"VariableDeclaration","scope":2800,"src":"2996:53:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ValidatorDistributionInfo_$2748_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ValidatorDistributionInfo[]"},"typeName":{"baseType":{"id":2796,"nodeType":"UserDefinedTypeName","pathNode":{"id":2795,"name":"ValidatorDistributionInfo","nameLocations":["2996:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":2748,"src":"2996:25:7"},"referencedDeclaration":2748,"src":"2996:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorDistributionInfo_$2748_storage_ptr","typeString":"struct ValidatorDistributionInfo"}},"id":2797,"nodeType":"ArrayTypeName","src":"2996:27:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ValidatorDistributionInfo_$2748_storage_$dyn_storage_ptr","typeString":"struct ValidatorDistributionInfo[]"}},"visibility":"internal"}],"src":"2986:104:7"},"scope":2904,"src":"2871:220:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2801,"nodeType":"StructuredDocumentation","src":"3097:185:7","text":"@dev Queries the outstanding rewards of a validator address.\n @param validatorAddress The address of the validator\n @return rewards The validator's outstanding rewards"},"functionSelector":"85b2d2da","id":2810,"implemented":false,"kind":"function","modifiers":[],"name":"validatorOutstandingRewards","nameLocation":"3296:27:7","nodeType":"FunctionDefinition","parameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"validatorAddress","nameLocation":"3347:16:7","nodeType":"VariableDeclaration","scope":2810,"src":"3333:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2802,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3323:46:7"},"returnParameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"rewards","nameLocation":"3433:7:7","nodeType":"VariableDeclaration","scope":2810,"src":"3414:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2806,"nodeType":"UserDefinedTypeName","pathNode":{"id":2805,"name":"DecCoin","nameLocations":["3414:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"3414:7:7"},"referencedDeclaration":2701,"src":"3414:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2701_storage_ptr","typeString":"struct DecCoin"}},"id":2807,"nodeType":"ArrayTypeName","src":"3414:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"src":"3404:42:7"},"scope":2904,"src":"3287:160:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"3453:175:7","text":"@dev Queries the accumulated commission for a validator.\n @param validatorAddress The address of the validator\n @return commission The validator's commission"},"functionSelector":"3dd40f78","id":2820,"implemented":false,"kind":"function","modifiers":[],"name":"validatorCommission","nameLocation":"3642:19:7","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"validatorAddress","nameLocation":"3685:16:7","nodeType":"VariableDeclaration","scope":2820,"src":"3671:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2812,"name":"string","nodeType":"ElementaryTypeName","src":"3671:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3661:46:7"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"commission","nameLocation":"3771:10:7","nodeType":"VariableDeclaration","scope":2820,"src":"3752:29:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2816,"nodeType":"UserDefinedTypeName","pathNode":{"id":2815,"name":"DecCoin","nameLocations":["3752:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"3752:7:7"},"referencedDeclaration":2701,"src":"3752:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2701_storage_ptr","typeString":"struct DecCoin"}},"id":2817,"nodeType":"ArrayTypeName","src":"3752:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"src":"3742:45:7"},"scope":2904,"src":"3633:155:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"3794:407:7","text":"@dev Queries the slashing events for a validator in a given height interval\n defined by the starting and ending height.\n @param validatorAddress The address of the validator\n @param startingHeight The starting height\n @param endingHeight The ending height\n @return slashes The validator's slash events\n @return pageResponse The pagination response for the query"},"functionSelector":"a75395a5","id":2837,"implemented":false,"kind":"function","modifiers":[],"name":"validatorSlashes","nameLocation":"4215:16:7","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"validatorAddress","nameLocation":"4255:16:7","nodeType":"VariableDeclaration","scope":2837,"src":"4241:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2822,"name":"string","nodeType":"ElementaryTypeName","src":"4241:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"startingHeight","nameLocation":"4288:14:7","nodeType":"VariableDeclaration","scope":2837,"src":"4281:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2824,"name":"uint64","nodeType":"ElementaryTypeName","src":"4281:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"endingHeight","nameLocation":"4319:12:7","nodeType":"VariableDeclaration","scope":2837,"src":"4312:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2826,"name":"uint64","nodeType":"ElementaryTypeName","src":"4312:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4231:106:7"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"slashes","nameLocation":"4413:7:7","nodeType":"VariableDeclaration","scope":2837,"src":"4382:38:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ValidatorSlashEvent_$2737_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ValidatorSlashEvent[]"},"typeName":{"baseType":{"id":2830,"nodeType":"UserDefinedTypeName","pathNode":{"id":2829,"name":"ValidatorSlashEvent","nameLocations":["4382:19:7"],"nodeType":"IdentifierPath","referencedDeclaration":2737,"src":"4382:19:7"},"referencedDeclaration":2737,"src":"4382:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorSlashEvent_$2737_storage_ptr","typeString":"struct ValidatorSlashEvent"}},"id":2831,"nodeType":"ArrayTypeName","src":"4382:21:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ValidatorSlashEvent_$2737_storage_$dyn_storage_ptr","typeString":"struct ValidatorSlashEvent[]"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"pageResponse","nameLocation":"4452:12:7","nodeType":"VariableDeclaration","scope":2837,"src":"4430:34:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PageResponse_$2706_calldata_ptr","typeString":"struct PageResponse"},"typeName":{"id":2834,"nodeType":"UserDefinedTypeName","pathNode":{"id":2833,"name":"PageResponse","nameLocations":["4430:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":2706,"src":"4430:12:7"},"referencedDeclaration":2706,"src":"4430:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_PageResponse_$2706_storage_ptr","typeString":"struct PageResponse"}},"visibility":"internal"}],"src":"4372:98:7"},"scope":2904,"src":"4206:265:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2838,"nodeType":"StructuredDocumentation","src":"4477:293:7","text":"@dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @return rewards The total rewards accrued by a delegation."},"functionSelector":"9ad563b4","id":2849,"implemented":false,"kind":"function","modifiers":[],"name":"delegationRewards","nameLocation":"4784:17:7","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"delegatorAddress","nameLocation":"4819:16:7","nodeType":"VariableDeclaration","scope":2849,"src":"4811:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2839,"name":"address","nodeType":"ElementaryTypeName","src":"4811:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"validatorAddress","nameLocation":"4859:16:7","nodeType":"VariableDeclaration","scope":2849,"src":"4845:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2841,"name":"string","nodeType":"ElementaryTypeName","src":"4845:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4801:80:7"},"returnParameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"rewards","nameLocation":"4945:7:7","nodeType":"VariableDeclaration","scope":2849,"src":"4926:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2845,"nodeType":"UserDefinedTypeName","pathNode":{"id":2844,"name":"DecCoin","nameLocations":["4926:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"4926:7:7"},"referencedDeclaration":2701,"src":"4926:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2701_storage_ptr","typeString":"struct DecCoin"}},"id":2846,"nodeType":"ArrayTypeName","src":"4926:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"src":"4916:42:7"},"scope":2904,"src":"4775:184:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"4965:318:7","text":"@dev Queries the total rewards accrued by each validator, that a given\n address has delegated to.\n @param delegatorAddress The address of the delegator\n @return rewards The total rewards accrued by each validator for a delegator.\n @return total The total rewards accrued by a delegator."},"functionSelector":"54be1a28","id":2863,"implemented":false,"kind":"function","modifiers":[],"name":"delegationTotalRewards","nameLocation":"5297:22:7","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"delegatorAddress","nameLocation":"5337:16:7","nodeType":"VariableDeclaration","scope":2863,"src":"5329:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2851,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5319:40:7"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"rewards","nameLocation":"5441:7:7","nodeType":"VariableDeclaration","scope":2863,"src":"5404:44:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DelegationDelegatorReward_$2755_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DelegationDelegatorReward[]"},"typeName":{"baseType":{"id":2855,"nodeType":"UserDefinedTypeName","pathNode":{"id":2854,"name":"DelegationDelegatorReward","nameLocations":["5404:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":2755,"src":"5404:25:7"},"referencedDeclaration":2755,"src":"5404:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_DelegationDelegatorReward_$2755_storage_ptr","typeString":"struct DelegationDelegatorReward"}},"id":2856,"nodeType":"ArrayTypeName","src":"5404:27:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DelegationDelegatorReward_$2755_storage_$dyn_storage_ptr","typeString":"struct DelegationDelegatorReward[]"}},"visibility":"internal"},{"constant":false,"id":2861,"mutability":"mutable","name":"total","nameLocation":"5477:5:7","nodeType":"VariableDeclaration","scope":2863,"src":"5458:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DecCoin[]"},"typeName":{"baseType":{"id":2859,"nodeType":"UserDefinedTypeName","pathNode":{"id":2858,"name":"DecCoin","nameLocations":["5458:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"5458:7:7"},"referencedDeclaration":2701,"src":"5458:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_DecCoin_$2701_storage_ptr","typeString":"struct DecCoin"}},"id":2860,"nodeType":"ArrayTypeName","src":"5458:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DecCoin_$2701_storage_$dyn_storage_ptr","typeString":"struct DecCoin[]"}},"visibility":"internal"}],"src":"5394:94:7"},"scope":2904,"src":"5288:201:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2864,"nodeType":"StructuredDocumentation","src":"5495:237:7","text":"@dev Queries all validators, that a given address has delegated to.\n @param delegatorAddress The address of the delegator\n @return validators The addresses of all validators, that were delegated to by the given address."},"functionSelector":"a66cb605","id":2872,"implemented":false,"kind":"function","modifiers":[],"name":"delegatorValidators","nameLocation":"5746:19:7","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"delegatorAddress","nameLocation":"5783:16:7","nodeType":"VariableDeclaration","scope":2872,"src":"5775:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2865,"name":"address","nodeType":"ElementaryTypeName","src":"5775:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5765:40:7"},"returnParameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"validators","nameLocation":"5847:10:7","nodeType":"VariableDeclaration","scope":2872,"src":"5829:28:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2868,"name":"string","nodeType":"ElementaryTypeName","src":"5829:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2869,"nodeType":"ArrayTypeName","src":"5829:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5828:30:7"},"scope":2904,"src":"5737:122:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"5865:237:7","text":"@dev Queries the address capable of withdrawing rewards for a given delegator.\n @param delegatorAddress The address of the delegator\n @return withdrawAddress The address capable of withdrawing rewards for the delegator."},"functionSelector":"5431f450","id":2880,"implemented":false,"kind":"function","modifiers":[],"name":"delegatorWithdrawAddress","nameLocation":"6116:24:7","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"delegatorAddress","nameLocation":"6158:16:7","nodeType":"VariableDeclaration","scope":2880,"src":"6150:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2874,"name":"address","nodeType":"ElementaryTypeName","src":"6150:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6140:40:7"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"withdrawAddress","nameLocation":"6218:15:7","nodeType":"VariableDeclaration","scope":2880,"src":"6204:29:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2877,"name":"string","nodeType":"ElementaryTypeName","src":"6204:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6203:31:7"},"scope":2904,"src":"6107:128:7","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"6241:215:7","text":"@dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\n @param caller the caller of the transaction\n @param withdrawerAddress the newly set withdrawer address"},"eventSelector":"b55d29542a844fa64e70cbc06556201957fa0253fe7b54677830b586e2288e1e","id":2887,"name":"SetWithdrawerAddress","nameLocation":"6467:20:7","nodeType":"EventDefinition","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"6513:6:7","nodeType":"VariableDeclaration","scope":2887,"src":"6497:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2882,"name":"address","nodeType":"ElementaryTypeName","src":"6497:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2885,"indexed":false,"mutability":"mutable","name":"withdrawerAddress","nameLocation":"6536:17:7","nodeType":"VariableDeclaration","scope":2887,"src":"6529:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2884,"name":"string","nodeType":"ElementaryTypeName","src":"6529:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6487:72:7"},"src":"6461:99:7"},{"anonymous":false,"documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"6566:294:7","text":"@dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\n @param delegatorAddress the address of the delegator\n @param validatorAddress the address of the validator\n @param amount the amount being withdrawn from the delegation"},"eventSelector":"8d0912e7f8b09f64d001b73731ae9eecce7fe900e91a92ee9499659777450112","id":2896,"name":"WithdrawDelegatorRewards","nameLocation":"6871:24:7","nodeType":"EventDefinition","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"indexed":true,"mutability":"mutable","name":"delegatorAddress","nameLocation":"6921:16:7","nodeType":"VariableDeclaration","scope":2896,"src":"6905:32:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"6905:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2892,"indexed":true,"mutability":"mutable","name":"validatorAddress","nameLocation":"6962:16:7","nodeType":"VariableDeclaration","scope":2896,"src":"6947:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2891,"name":"string","nodeType":"ElementaryTypeName","src":"6947:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2894,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6996:6:7","nodeType":"VariableDeclaration","scope":2896,"src":"6988:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"6988:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6895:113:7"},"src":"6865:144:7"},{"anonymous":false,"documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"7015:246:7","text":"@dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\n @param validatorAddress is the address of the validator\n @param commission is the total commission earned by the validator"},"eventSelector":"27596802346c7411d593e471243e3f9570666fade155d35f26150d851fdaf587","id":2903,"name":"WithdrawValidatorCommission","nameLocation":"7272:27:7","nodeType":"EventDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"indexed":true,"mutability":"mutable","name":"validatorAddress","nameLocation":"7324:16:7","nodeType":"VariableDeclaration","scope":2903,"src":"7309:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2898,"name":"string","nodeType":"ElementaryTypeName","src":"7309:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2901,"indexed":false,"mutability":"mutable","name":"commission","nameLocation":"7358:10:7","nodeType":"VariableDeclaration","scope":2903,"src":"7350:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"7350:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7299:75:7"},"src":"7266:109:7"}],"scope":2905,"src":"1327:6050:7","usedErrors":[]}],"src":"36:7342:7"},"id":7},"contracts/precompiles/stateful/IBCTransfer.sol":{"ast":{"absolutePath":"contracts/precompiles/stateful/IBCTransfer.sol","exportedSymbols":{"DenomTrace":[2927],"Height":[2922],"IBCTransferI":[3039],"IBC_TRANSFER_CONTRACT":[2917],"IBC_TRANSFER_PRECOMPILE_ADDRESS":[2910]},"id":3040,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":2906,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:8"},{"constant":true,"id":2910,"mutability":"constant","name":"IBC_TRANSFER_PRECOMPILE_ADDRESS","nameLocation":"120:31:8","nodeType":"VariableDeclaration","scope":3040,"src":"103:93:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030383032","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"154:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000802"},"visibility":"internal"},{"constant":true,"id":2917,"mutability":"constant","name":"IBC_TRANSFER_CONTRACT","nameLocation":"261:21:8","nodeType":"VariableDeclaration","scope":3040,"src":"239:91:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBCTransferI_$3039","typeString":"contract IBCTransferI"},"typeName":{"id":2913,"nodeType":"UserDefinedTypeName","pathNode":{"id":2912,"name":"IBCTransferI","nameLocations":["239:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"239:12:8"},"referencedDeclaration":3039,"src":"239:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBCTransferI_$3039","typeString":"contract IBCTransferI"}},"value":{"arguments":[{"id":2915,"name":"IBC_TRANSFER_PRECOMPILE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"298:31:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2914,"name":"IBCTransferI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"285:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBCTransferI_$3039_$","typeString":"type(contract IBCTransferI)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"285:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBCTransferI_$3039","typeString":"contract IBCTransferI"}},"visibility":"internal"},{"canonicalName":"Height","id":2922,"members":[{"constant":false,"id":2919,"mutability":"mutable","name":"revisionNumber","nameLocation":"955:14:8","nodeType":"VariableDeclaration","scope":2922,"src":"948:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2918,"name":"uint64","nodeType":"ElementaryTypeName","src":"948:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2921,"mutability":"mutable","name":"revisionHeight","nameLocation":"1022:14:8","nodeType":"VariableDeclaration","scope":2922,"src":"1015:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2920,"name":"uint64","nodeType":"ElementaryTypeName","src":"1015:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Height","nameLocation":"887:6:8","nodeType":"StructDefinition","scope":3040,"src":"880:159:8","visibility":"public"},{"canonicalName":"DenomTrace","id":2927,"members":[{"constant":false,"id":2924,"mutability":"mutable","name":"path","nameLocation":"1296:4:8","nodeType":"VariableDeclaration","scope":2927,"src":"1289:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2923,"name":"string","nodeType":"ElementaryTypeName","src":"1289:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2926,"mutability":"mutable","name":"baseDenom","nameLocation":"1365:9:8","nodeType":"VariableDeclaration","scope":2927,"src":"1358:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2925,"name":"string","nodeType":"ElementaryTypeName","src":"1358:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"DenomTrace","nameLocation":"1163:10:8","nodeType":"StructDefinition","scope":3040,"src":"1156:221:8","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IBCTransferI","contractDependencies":[],"contractKind":"interface","documentation":{"id":2928,"nodeType":"StructuredDocumentation","src":"1379:255:8","text":"@author Evmos Team\n @title ICS20 Transfer Precompiled Contract\n @dev The interface through which solidity contracts will interact with IBC Transfer (ICS20)\n FIXME: update address\n @custom:address 0x0000000000000000000000000000000000000802"},"fullyImplemented":false,"id":3039,"linearizedBaseContracts":[3039],"name":"IBCTransferI","nameLocation":"1644:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"1663:639:8","text":"@dev Transfer defines a method for performing an IBC transfer.\n @param sourcePort the address of the validator\n @param sourceChannel the address of the validator\n @param denom the denomination of the Coin to be transferred to the receiver\n @param amount the amount of the Coin to be transferred to the receiver\n @param sender the hex address of the sender\n @param receiver the bech32 address of the receiver\n @param timeoutHeight the bech32 address of the receiver\n @param timeoutTimestamp the bech32 address of the receiver\n @param memo the bech32 address of the receiver"},"functionSelector":"632535b9","id":2953,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2316:8:8","nodeType":"FunctionDefinition","parameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"sourcePort","nameLocation":"2346:10:8","nodeType":"VariableDeclaration","scope":2953,"src":"2332:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2930,"name":"string","nodeType":"ElementaryTypeName","src":"2332:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2933,"mutability":"mutable","name":"sourceChannel","nameLocation":"2378:13:8","nodeType":"VariableDeclaration","scope":2953,"src":"2364:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2932,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"denom","nameLocation":"2413:5:8","nodeType":"VariableDeclaration","scope":2953,"src":"2399:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2934,"name":"string","nodeType":"ElementaryTypeName","src":"2399:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"amount","nameLocation":"2434:6:8","nodeType":"VariableDeclaration","scope":2953,"src":"2426:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"2426:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"sender","nameLocation":"2456:6:8","nodeType":"VariableDeclaration","scope":2953,"src":"2448:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2938,"name":"address","nodeType":"ElementaryTypeName","src":"2448:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"receiver","nameLocation":"2484:8:8","nodeType":"VariableDeclaration","scope":2953,"src":"2470:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2940,"name":"string","nodeType":"ElementaryTypeName","src":"2470:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"timeoutHeight","nameLocation":"2514:13:8","nodeType":"VariableDeclaration","scope":2953,"src":"2500:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Height_$2922_memory_ptr","typeString":"struct Height"},"typeName":{"id":2943,"nodeType":"UserDefinedTypeName","pathNode":{"id":2942,"name":"Height","nameLocations":["2500:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":2922,"src":"2500:6:8"},"referencedDeclaration":2922,"src":"2500:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Height_$2922_storage_ptr","typeString":"struct Height"}},"visibility":"internal"},{"constant":false,"id":2946,"mutability":"mutable","name":"timeoutTimestamp","nameLocation":"2542:16:8","nodeType":"VariableDeclaration","scope":2953,"src":"2535:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2945,"name":"uint64","nodeType":"ElementaryTypeName","src":"2535:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"memo","nameLocation":"2580:4:8","nodeType":"VariableDeclaration","scope":2953,"src":"2566:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2947,"name":"string","nodeType":"ElementaryTypeName","src":"2566:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2324:266:8"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"nextSequence","nameLocation":"2616:12:8","nodeType":"VariableDeclaration","scope":2953,"src":"2609:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2950,"name":"uint64","nodeType":"ElementaryTypeName","src":"2609:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2608:21:8"},"scope":3039,"src":"2307:323:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"2636:69:8","text":"@dev DenomTraces defines a method for returning all denom traces."},"functionSelector":"65e7fff6","id":2961,"implemented":false,"kind":"function","modifiers":[],"name":"denomTraces","nameLocation":"2719:11:8","nodeType":"FunctionDefinition","parameters":{"id":2955,"nodeType":"ParameterList","parameters":[],"src":"2730:7:8"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"denomTraces","nameLocation":"2776:11:8","nodeType":"VariableDeclaration","scope":2961,"src":"2756:31:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DenomTrace_$2927_memory_ptr_$dyn_memory_ptr","typeString":"struct DenomTrace[]"},"typeName":{"baseType":{"id":2957,"nodeType":"UserDefinedTypeName","pathNode":{"id":2956,"name":"DenomTrace","nameLocations":["2756:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":2927,"src":"2756:10:8"},"referencedDeclaration":2927,"src":"2756:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_DenomTrace_$2927_storage_ptr","typeString":"struct DenomTrace"}},"id":2958,"nodeType":"ArrayTypeName","src":"2756:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DenomTrace_$2927_storage_$dyn_storage_ptr","typeString":"struct DenomTrace[]"}},"visibility":"internal"}],"src":"2755:33:8"},"scope":3039,"src":"2710:79:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"2795:65:8","text":"@dev DenomTrace defines a method for returning a denom trace."},"functionSelector":"a815cdd9","id":2970,"implemented":false,"kind":"function","modifiers":[],"name":"denomTrace","nameLocation":"2874:10:8","nodeType":"FunctionDefinition","parameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"hash","nameLocation":"2906:4:8","nodeType":"VariableDeclaration","scope":2970,"src":"2892:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2963,"name":"string","nodeType":"ElementaryTypeName","src":"2892:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2884:32:8"},"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"denomTrace","nameLocation":"2953:10:8","nodeType":"VariableDeclaration","scope":2970,"src":"2935:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DenomTrace_$2927_memory_ptr","typeString":"struct DenomTrace"},"typeName":{"id":2967,"nodeType":"UserDefinedTypeName","pathNode":{"id":2966,"name":"DenomTrace","nameLocations":["2935:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":2927,"src":"2935:10:8"},"referencedDeclaration":2927,"src":"2935:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_DenomTrace_$2927_storage_ptr","typeString":"struct DenomTrace"}},"visibility":"internal"}],"src":"2934:30:8"},"scope":3039,"src":"2865:100:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2971,"nodeType":"StructuredDocumentation","src":"2971:88:8","text":"@dev DenomHash defines a method for returning a hash of the denomination trace info."},"functionSelector":"b5cb6e7d","id":2978,"implemented":false,"kind":"function","modifiers":[],"name":"denomHash","nameLocation":"3073:9:8","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"trace","nameLocation":"3104:5:8","nodeType":"VariableDeclaration","scope":2978,"src":"3090:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2972,"name":"string","nodeType":"ElementaryTypeName","src":"3090:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3082:33:8"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"hash","nameLocation":"3148:4:8","nodeType":"VariableDeclaration","scope":2978,"src":"3134:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2975,"name":"string","nodeType":"ElementaryTypeName","src":"3134:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3133:20:8"},"scope":3039,"src":"3064:90:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"3160:191:8","text":"@dev Approves IBC transfer with a specific amount of tokens.\n @param spender spender The address which will spend the funds.\n @param amount The amount of tokens to be spent."},"functionSelector":"095ea7b3","id":2988,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3365:7:8","nodeType":"FunctionDefinition","parameters":{"id":2984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"spender","nameLocation":"3390:7:8","nodeType":"VariableDeclaration","scope":2988,"src":"3382:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2980,"name":"address","nodeType":"ElementaryTypeName","src":"3382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2983,"mutability":"mutable","name":"amount","nameLocation":"3415:6:8","nodeType":"VariableDeclaration","scope":2988,"src":"3407:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3407:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3372:55:8"},"returnParameters":{"id":2987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2986,"mutability":"mutable","name":"approved","nameLocation":"3451:8:8","nodeType":"VariableDeclaration","scope":2988,"src":"3446:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2985,"name":"bool","nodeType":"ElementaryTypeName","src":"3446:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3445:15:8"},"scope":3039,"src":"3356:105:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"3467:302:8","text":"@dev Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through\n IBC transfers. This is zero by default.\n @param owner The address of the account owning tokens.\n @param spender The address of the account able to transfer the tokens."},"functionSelector":"dd62ed3e","id":2998,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3783:9:8","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"owner","nameLocation":"3810:5:8","nodeType":"VariableDeclaration","scope":2998,"src":"3802:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"spender","nameLocation":"3833:7:8","nodeType":"VariableDeclaration","scope":2998,"src":"3825:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"3825:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3792:54:8"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"remaining","nameLocation":"3878:9:8","nodeType":"VariableDeclaration","scope":2998,"src":"3870:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint256","nodeType":"ElementaryTypeName","src":"3870:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3869:19:8"},"scope":3039,"src":"3774:115:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"3895:226:8","text":"@dev Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent."},"functionSelector":"39509351","id":3008,"implemented":false,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"4135:17:8","nodeType":"FunctionDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"spender","nameLocation":"4170:7:8","nodeType":"VariableDeclaration","scope":3008,"src":"4162:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3000,"name":"address","nodeType":"ElementaryTypeName","src":"4162:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"amount","nameLocation":"4195:6:8","nodeType":"VariableDeclaration","scope":3008,"src":"4187:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"4187:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4152:55:8"},"returnParameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"approved","nameLocation":"4231:8:8","nodeType":"VariableDeclaration","scope":3008,"src":"4226:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3005,"name":"bool","nodeType":"ElementaryTypeName","src":"4226:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4225:15:8"},"scope":3039,"src":"4126:115:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3009,"nodeType":"StructuredDocumentation","src":"4247:231:8","text":"@dev Decreases the allowance of a given spender by a specific amount of tokens for for IBC transfer methods.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent."},"functionSelector":"a457c2d7","id":3018,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"4492:17:8","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"spender","nameLocation":"4527:7:8","nodeType":"VariableDeclaration","scope":3018,"src":"4519:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3010,"name":"address","nodeType":"ElementaryTypeName","src":"4519:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"amount","nameLocation":"4552:6:8","nodeType":"VariableDeclaration","scope":3018,"src":"4544:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"4544:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:55:8"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"approved","nameLocation":"4588:8:8","nodeType":"VariableDeclaration","scope":3018,"src":"4583:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3015,"name":"bool","nodeType":"ElementaryTypeName","src":"4583:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4582:15:8"},"scope":3039,"src":"4483:115:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":3019,"nodeType":"StructuredDocumentation","src":"4605:268:8","text":"@dev Emitted when a transfer is executed.\n @param sender The address of the sender.\n @param receiver The address of the receiver.\n @param denom The denomination of the tokens transferred.\n @param amount The amount of tokens transferred."},"eventSelector":"adcb3a7269091711ece2e4c2af40be71ed53809cc17d50eda13ebd98a7fdfddc","id":3029,"name":"IBCTransfer","nameLocation":"4884:11:8","nodeType":"EventDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"4921:6:8","nodeType":"VariableDeclaration","scope":3029,"src":"4905:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"4905:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3023,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"4953:8:8","nodeType":"VariableDeclaration","scope":3029,"src":"4937:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3022,"name":"address","nodeType":"ElementaryTypeName","src":"4937:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3025,"indexed":false,"mutability":"mutable","name":"denom","nameLocation":"4978:5:8","nodeType":"VariableDeclaration","scope":3029,"src":"4971:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3024,"name":"string","nodeType":"ElementaryTypeName","src":"4971:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3027,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"5001:6:8","nodeType":"VariableDeclaration","scope":3029,"src":"4993:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4895:118:8"},"src":"4878:136:8"},{"anonymous":false,"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"5020:196:8","text":"@dev Emitted when an approval is executed.\n @param owner The address of the owner.\n @param spender The address of the spender.\n @param value The amount of tokens approved."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3038,"name":"Approval","nameLocation":"5227:8:8","nodeType":"EventDefinition","parameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"5261:5:8","nodeType":"VariableDeclaration","scope":3038,"src":"5245:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"5245:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3034,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"5292:7:8","nodeType":"VariableDeclaration","scope":3038,"src":"5276:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"5276:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3036,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"5317:5:8","nodeType":"VariableDeclaration","scope":3038,"src":"5309:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"5309:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5235:93:8"},"src":"5221:108:8"}],"scope":3040,"src":"1634:3697:8","usedErrors":[]}],"src":"36:5296:8"},"id":8},"contracts/precompiles/stateful/Staking.sol":{"ast":{"absolutePath":"contracts/precompiles/stateful/Staking.sol","exportedSymbols":{"BondStatus":[3157],"Coin":[2694],"Commission":[3080],"CommissionRates":[3074],"Dec":[2689],"DecCoin":[2701],"MSG_CANCEL_UNDELEGATION":[3067],"MSG_DELEGATE":[3058],"MSG_REDELEGATE":[3064],"MSG_UNDELEGATE":[3061],"PageRequest":[3152],"PageResponse":[2706],"Redelegation":[3117],"RedelegationEntry":[3132],"RedelegationEntryResponse":[3123],"RedelegationResponse":[3112],"STAKING_CONTRACT":[3054],"STAKING_PRECOMPILE_ADDRESS":[3047],"StakingI":[3340],"UnbondingDelegationEntry":[3141],"Validator":[3104],"authorization":[3042]},"id":3341,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":3041,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:9"},{"absolutePath":"contracts/precompiles/common/Authorization.sol","file":"../common/Authorization.sol","id":3042,"nameLocation":"103:13:9","nodeType":"ImportDirective","scope":3341,"sourceUnit":2637,"src":"63:54:9","symbolAliases":[],"unitAlias":"authorization"},{"absolutePath":"contracts/precompiles/common/Types.sol","file":"../common/Types.sol","id":3043,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3341,"sourceUnit":2707,"src":"118:29:9","symbolAliases":[],"unitAlias":""},{"constant":true,"id":3047,"mutability":"constant","name":"STAKING_PRECOMPILE_ADDRESS","nameLocation":"208:26:9","nodeType":"VariableDeclaration","scope":3341,"src":"191:88:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"191:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030383030","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"237:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000800"},"visibility":"internal"},{"constant":true,"id":3054,"mutability":"constant","name":"STAKING_CONTRACT","nameLocation":"343:16:9","nodeType":"VariableDeclaration","scope":3341,"src":"325:73:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3340","typeString":"contract StakingI"},"typeName":{"id":3050,"nodeType":"UserDefinedTypeName","pathNode":{"id":3049,"name":"StakingI","nameLocations":["325:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":3340,"src":"325:8:9"},"referencedDeclaration":3340,"src":"325:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3340","typeString":"contract StakingI"}},"value":{"arguments":[{"id":3052,"name":"STAKING_PRECOMPILE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"371:26:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3051,"name":"StakingI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"362:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StakingI_$3340_$","typeString":"type(contract StakingI)"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"362:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_StakingI_$3340","typeString":"contract StakingI"}},"visibility":"internal"},{"constant":true,"id":3058,"mutability":"constant","name":"MSG_DELEGATE","nameLocation":"468:12:9","nodeType":"VariableDeclaration","scope":3341,"src":"452:68:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3056,"name":"string","nodeType":"ElementaryTypeName","src":"452:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e7374616b696e672e763162657461312e4d736744656c6567617465","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"483:37:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf6973116593306cc0951019eb89d8793e3ad1184c238374870ee84cdf3b48f2","typeString":"literal_string \"/cosmos.staking.v1beta1.MsgDelegate\""},"value":"/cosmos.staking.v1beta1.MsgDelegate"},"visibility":"internal"},{"constant":true,"id":3061,"mutability":"constant","name":"MSG_UNDELEGATE","nameLocation":"538:14:9","nodeType":"VariableDeclaration","scope":3341,"src":"522:72:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3059,"name":"string","nodeType":"ElementaryTypeName","src":"522:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e7374616b696e672e763162657461312e4d7367556e64656c6567617465","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"555:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7bec820b0e77f69a2a4cef6889125fb33e19db973c1ca85e0dd86c66e2473513","typeString":"literal_string \"/cosmos.staking.v1beta1.MsgUndelegate\""},"value":"/cosmos.staking.v1beta1.MsgUndelegate"},"visibility":"internal"},{"constant":true,"id":3064,"mutability":"constant","name":"MSG_REDELEGATE","nameLocation":"612:14:9","nodeType":"VariableDeclaration","scope":3341,"src":"596:77:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3062,"name":"string","nodeType":"ElementaryTypeName","src":"596:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c6567617465","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"629:44:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_017e571b15ba8f3567be32b8c9b4c10b5aee7936471accdc36d1737426796a31","typeString":"literal_string \"/cosmos.staking.v1beta1.MsgBeginRedelegate\""},"value":"/cosmos.staking.v1beta1.MsgBeginRedelegate"},"visibility":"internal"},{"constant":true,"id":3067,"mutability":"constant","name":"MSG_CANCEL_UNDELEGATION","nameLocation":"691:23:9","nodeType":"VariableDeclaration","scope":3341,"src":"675:96:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3065,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"2f636f736d6f732e7374616b696e672e763162657461312e4d736743616e63656c556e626f6e64696e6744656c65676174696f6e","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"717:54:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1cece22c3c2e8266c4849b858697c9d8fe37da1e4be1a557d17c5ce6597822d","typeString":"literal_string \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\""},"value":"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation"},"visibility":"internal"},{"canonicalName":"CommissionRates","id":3074,"members":[{"constant":false,"id":3069,"mutability":"mutable","name":"rate","nameLocation":"898:4:9","nodeType":"VariableDeclaration","scope":3074,"src":"890:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3071,"mutability":"mutable","name":"maxRate","nameLocation":"916:7:9","nodeType":"VariableDeclaration","scope":3074,"src":"908:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3070,"name":"uint256","nodeType":"ElementaryTypeName","src":"908:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3073,"mutability":"mutable","name":"maxChangeRate","nameLocation":"937:13:9","nodeType":"VariableDeclaration","scope":3074,"src":"929:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CommissionRates","nameLocation":"868:15:9","nodeType":"StructDefinition","scope":3341,"src":"861:92:9","visibility":"public"},{"canonicalName":"Commission","id":3080,"members":[{"constant":false,"id":3077,"mutability":"mutable","name":"commissionRates","nameLocation":"1057:15:9","nodeType":"VariableDeclaration","scope":3080,"src":"1041:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_CommissionRates_$3074_storage_ptr","typeString":"struct CommissionRates"},"typeName":{"id":3076,"nodeType":"UserDefinedTypeName","pathNode":{"id":3075,"name":"CommissionRates","nameLocations":["1041:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":3074,"src":"1041:15:9"},"referencedDeclaration":3074,"src":"1041:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_CommissionRates_$3074_storage_ptr","typeString":"struct CommissionRates"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"updateTime","nameLocation":"1086:10:9","nodeType":"VariableDeclaration","scope":3080,"src":"1078:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1078:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Commission","nameLocation":"1024:10:9","nodeType":"StructDefinition","scope":3341,"src":"1017:82:9","visibility":"public"},{"canonicalName":"Validator","id":3104,"members":[{"constant":false,"id":3082,"mutability":"mutable","name":"operatorAddress","nameLocation":"1187:15:9","nodeType":"VariableDeclaration","scope":3104,"src":"1180:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3081,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"consensusPubkey","nameLocation":"1215:15:9","nodeType":"VariableDeclaration","scope":3104,"src":"1208:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3083,"name":"string","nodeType":"ElementaryTypeName","src":"1208:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"jailed","nameLocation":"1241:6:9","nodeType":"VariableDeclaration","scope":3104,"src":"1236:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3085,"name":"bool","nodeType":"ElementaryTypeName","src":"1236:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3089,"mutability":"mutable","name":"status","nameLocation":"1264:6:9","nodeType":"VariableDeclaration","scope":3104,"src":"1253:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BondStatus_$3157","typeString":"enum BondStatus"},"typeName":{"id":3088,"nodeType":"UserDefinedTypeName","pathNode":{"id":3087,"name":"BondStatus","nameLocations":["1253:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":3157,"src":"1253:10:9"},"referencedDeclaration":3157,"src":"1253:10:9","typeDescriptions":{"typeIdentifier":"t_enum$_BondStatus_$3157","typeString":"enum BondStatus"}},"visibility":"internal"},{"constant":false,"id":3091,"mutability":"mutable","name":"tokens","nameLocation":"1284:6:9","nodeType":"VariableDeclaration","scope":3104,"src":"1276:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1276:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"delegatorShares","nameLocation":"1304:15:9","nodeType":"VariableDeclaration","scope":3104,"src":"1296:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1296:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3095,"mutability":"mutable","name":"description","nameLocation":"1332:11:9","nodeType":"VariableDeclaration","scope":3104,"src":"1325:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3094,"name":"string","nodeType":"ElementaryTypeName","src":"1325:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"unbondingHeight","nameLocation":"1355:15:9","nodeType":"VariableDeclaration","scope":3104,"src":"1349:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3096,"name":"int64","nodeType":"ElementaryTypeName","src":"1349:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"unbondingTime","nameLocation":"1382:13:9","nodeType":"VariableDeclaration","scope":3104,"src":"1376:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3098,"name":"int64","nodeType":"ElementaryTypeName","src":"1376:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"commission","nameLocation":"1409:10:9","nodeType":"VariableDeclaration","scope":3104,"src":"1401:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1401:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3103,"mutability":"mutable","name":"minSelfDelegation","nameLocation":"1433:17:9","nodeType":"VariableDeclaration","scope":3104,"src":"1425:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1425:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Validator","nameLocation":"1164:9:9","nodeType":"StructDefinition","scope":3341,"src":"1157:296:9","visibility":"public"},{"canonicalName":"RedelegationResponse","id":3112,"members":[{"constant":false,"id":3107,"mutability":"mutable","name":"redelegation","nameLocation":"1502:12:9","nodeType":"VariableDeclaration","scope":3112,"src":"1489:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Redelegation_$3117_storage_ptr","typeString":"struct Redelegation"},"typeName":{"id":3106,"nodeType":"UserDefinedTypeName","pathNode":{"id":3105,"name":"Redelegation","nameLocations":["1489:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":3117,"src":"1489:12:9"},"referencedDeclaration":3117,"src":"1489:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Redelegation_$3117_storage_ptr","typeString":"struct Redelegation"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"entries","nameLocation":"1548:7:9","nodeType":"VariableDeclaration","scope":3112,"src":"1520:35:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntryResponse_$3123_storage_$dyn_storage_ptr","typeString":"struct RedelegationEntryResponse[]"},"typeName":{"baseType":{"id":3109,"nodeType":"UserDefinedTypeName","pathNode":{"id":3108,"name":"RedelegationEntryResponse","nameLocations":["1520:25:9"],"nodeType":"IdentifierPath","referencedDeclaration":3123,"src":"1520:25:9"},"referencedDeclaration":3123,"src":"1520:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationEntryResponse_$3123_storage_ptr","typeString":"struct RedelegationEntryResponse"}},"id":3110,"nodeType":"ArrayTypeName","src":"1520:27:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntryResponse_$3123_storage_$dyn_storage_ptr","typeString":"struct RedelegationEntryResponse[]"}},"visibility":"internal"}],"name":"RedelegationResponse","nameLocation":"1462:20:9","nodeType":"StructDefinition","scope":3341,"src":"1455:103:9","visibility":"public"},{"canonicalName":"Redelegation","id":3117,"members":[{"constant":false,"id":3116,"mutability":"mutable","name":"entries","nameLocation":"1606:7:9","nodeType":"VariableDeclaration","scope":3117,"src":"1586:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntry_$3132_storage_$dyn_storage_ptr","typeString":"struct RedelegationEntry[]"},"typeName":{"baseType":{"id":3114,"nodeType":"UserDefinedTypeName","pathNode":{"id":3113,"name":"RedelegationEntry","nameLocations":["1586:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":3132,"src":"1586:17:9"},"referencedDeclaration":3132,"src":"1586:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationEntry_$3132_storage_ptr","typeString":"struct RedelegationEntry"}},"id":3115,"nodeType":"ArrayTypeName","src":"1586:19:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntry_$3132_storage_$dyn_storage_ptr","typeString":"struct RedelegationEntry[]"}},"visibility":"internal"}],"name":"Redelegation","nameLocation":"1567:12:9","nodeType":"StructDefinition","scope":3341,"src":"1560:56:9","visibility":"public"},{"canonicalName":"RedelegationEntryResponse","id":3123,"members":[{"constant":false,"id":3120,"mutability":"mutable","name":"redelegationEntry","nameLocation":"1675:17:9","nodeType":"VariableDeclaration","scope":3123,"src":"1657:35:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationEntry_$3132_storage_ptr","typeString":"struct RedelegationEntry"},"typeName":{"id":3119,"nodeType":"UserDefinedTypeName","pathNode":{"id":3118,"name":"RedelegationEntry","nameLocations":["1657:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":3132,"src":"1657:17:9"},"referencedDeclaration":3132,"src":"1657:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationEntry_$3132_storage_ptr","typeString":"struct RedelegationEntry"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"balance","nameLocation":"1706:7:9","nodeType":"VariableDeclaration","scope":3123,"src":"1698:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RedelegationEntryResponse","nameLocation":"1625:25:9","nodeType":"StructDefinition","scope":3341,"src":"1618:98:9","visibility":"public"},{"canonicalName":"RedelegationEntry","id":3132,"members":[{"constant":false,"id":3125,"mutability":"mutable","name":"creationHeight","nameLocation":"1755:14:9","nodeType":"VariableDeclaration","scope":3132,"src":"1749:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3124,"name":"int64","nodeType":"ElementaryTypeName","src":"1749:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"completionTime","nameLocation":"1781:14:9","nodeType":"VariableDeclaration","scope":3132,"src":"1775:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3126,"name":"int64","nodeType":"ElementaryTypeName","src":"1775:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"initialBalance","nameLocation":"1809:14:9","nodeType":"VariableDeclaration","scope":3132,"src":"1801:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1801:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"sharesDst","nameLocation":"1837:9:9","nodeType":"VariableDeclaration","scope":3132,"src":"1829:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RedelegationEntry","nameLocation":"1725:17:9","nodeType":"StructDefinition","scope":3341,"src":"1718:131:9","visibility":"public"},{"canonicalName":"UnbondingDelegationEntry","id":3141,"members":[{"constant":false,"id":3134,"mutability":"mutable","name":"creationHeight","nameLocation":"1895:14:9","nodeType":"VariableDeclaration","scope":3141,"src":"1889:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3133,"name":"int64","nodeType":"ElementaryTypeName","src":"1889:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"completionTime","nameLocation":"1921:14:9","nodeType":"VariableDeclaration","scope":3141,"src":"1915:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3135,"name":"int64","nodeType":"ElementaryTypeName","src":"1915:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"initialBalance","nameLocation":"1949:14:9","nodeType":"VariableDeclaration","scope":3141,"src":"1941:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1941:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3140,"mutability":"mutable","name":"balance","nameLocation":"1977:7:9","nodeType":"VariableDeclaration","scope":3141,"src":"1969:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"1969:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UnbondingDelegationEntry","nameLocation":"1858:24:9","nodeType":"StructDefinition","scope":3341,"src":"1851:136:9","visibility":"public"},{"canonicalName":"PageRequest","id":3152,"members":[{"constant":false,"id":3143,"mutability":"mutable","name":"key","nameLocation":"2020:3:9","nodeType":"VariableDeclaration","scope":3152,"src":"2014:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3142,"name":"bytes","nodeType":"ElementaryTypeName","src":"2014:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3145,"mutability":"mutable","name":"offset","nameLocation":"2036:6:9","nodeType":"VariableDeclaration","scope":3152,"src":"2029:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3144,"name":"uint64","nodeType":"ElementaryTypeName","src":"2029:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3147,"mutability":"mutable","name":"limit","nameLocation":"2055:5:9","nodeType":"VariableDeclaration","scope":3152,"src":"2048:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3146,"name":"uint64","nodeType":"ElementaryTypeName","src":"2048:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3149,"mutability":"mutable","name":"countTotal","nameLocation":"2071:10:9","nodeType":"VariableDeclaration","scope":3152,"src":"2066:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3148,"name":"bool","nodeType":"ElementaryTypeName","src":"2066:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"reverse","nameLocation":"2092:7:9","nodeType":"VariableDeclaration","scope":3152,"src":"2087:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3150,"name":"bool","nodeType":"ElementaryTypeName","src":"2087:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PageRequest","nameLocation":"1996:11:9","nodeType":"StructDefinition","scope":3341,"src":"1989:113:9","visibility":"public"},{"canonicalName":"BondStatus","id":3157,"members":[{"id":3153,"name":"Unspecified","nameLocation":"2164:11:9","nodeType":"EnumValue","src":"2164:11:9"},{"id":3154,"name":"Unbonded","nameLocation":"2181:8:9","nodeType":"EnumValue","src":"2181:8:9"},{"id":3155,"name":"Unbonding","nameLocation":"2195:9:9","nodeType":"EnumValue","src":"2195:9:9"},{"id":3156,"name":"Bonded","nameLocation":"2210:6:9","nodeType":"EnumValue","src":"2210:6:9"}],"name":"BondStatus","nameLocation":"2147:10:9","nodeType":"EnumDefinition","src":"2142:76:9"},{"abstract":false,"baseContracts":[{"baseName":{"id":3159,"name":"authorization.AuthorizationI","nameLocations":["2571:13:9","2585:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":2636,"src":"2571:28:9"},"id":3160,"nodeType":"InheritanceSpecifier","src":"2571:28:9"}],"canonicalName":"StakingI","contractDependencies":[],"contractKind":"interface","documentation":{"id":3158,"nodeType":"StructuredDocumentation","src":"2220:329:9","text":"@author Evmos Team\n @title Staking Precompiled Contract\n @dev The interface through which solidity contracts will interact with staking.\n We follow this same interface including four-byte function selectors, in the precompile that\n wraps the pallet.\n @custom:address 0x0000000000000000000000000000000000000800"},"fullyImplemented":false,"id":3340,"linearizedBaseContracts":[3340,2636],"name":"StakingI","nameLocation":"2559:8:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"2606:295:9","text":"@dev Defines a method for performing a delegation of coins from a delegator to a validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of the Coin to be delegated to the validator"},"functionSelector":"53266bbb","id":3172,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2915:8:9","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"delegatorAddress","nameLocation":"2941:16:9","nodeType":"VariableDeclaration","scope":3172,"src":"2933:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3162,"name":"address","nodeType":"ElementaryTypeName","src":"2933:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3165,"mutability":"mutable","name":"validatorAddress","nameLocation":"2981:16:9","nodeType":"VariableDeclaration","scope":3172,"src":"2967:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3164,"name":"string","nodeType":"ElementaryTypeName","src":"2967:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"amount","nameLocation":"3015:6:9","nodeType":"VariableDeclaration","scope":3172,"src":"3007:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3007:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2923:104:9"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"completionTime","nameLocation":"3052:14:9","nodeType":"VariableDeclaration","scope":3172,"src":"3046:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3169,"name":"int64","nodeType":"ElementaryTypeName","src":"3046:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"3045:22:9"},"scope":3340,"src":"2906:162:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"3074:356:9","text":"@dev Defines a method for performing an undelegation from a delegate and a validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount to be undelegated from the validator\n @return completionTime The time when the undelegation is completed"},"functionSelector":"3edab33c","id":3184,"implemented":false,"kind":"function","modifiers":[],"name":"undelegate","nameLocation":"3444:10:9","nodeType":"FunctionDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"delegatorAddress","nameLocation":"3472:16:9","nodeType":"VariableDeclaration","scope":3184,"src":"3464:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3174,"name":"address","nodeType":"ElementaryTypeName","src":"3464:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"validatorAddress","nameLocation":"3512:16:9","nodeType":"VariableDeclaration","scope":3184,"src":"3498:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3176,"name":"string","nodeType":"ElementaryTypeName","src":"3498:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"amount","nameLocation":"3546:6:9","nodeType":"VariableDeclaration","scope":3184,"src":"3538:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3454:104:9"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"completionTime","nameLocation":"3583:14:9","nodeType":"VariableDeclaration","scope":3184,"src":"3577:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3181,"name":"int64","nodeType":"ElementaryTypeName","src":"3577:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"3576:22:9"},"scope":3340,"src":"3435:164:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"3605:519:9","text":"@dev Defines a method for performing a redelegation\n of coins from a delegator and source validator to a destination validator.\n @param delegatorAddress The address of the delegator\n @param validatorSrcAddress The validator from which the redelegation is initiated\n @param validatorDstAddress The validator to which the redelegation is destined\n @param amount The amount to be redelegated to the validator\n @return completionTime The time when the redelegation is completed"},"functionSelector":"54b826f5","id":3198,"implemented":false,"kind":"function","modifiers":[],"name":"redelegate","nameLocation":"4138:10:9","nodeType":"FunctionDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"delegatorAddress","nameLocation":"4166:16:9","nodeType":"VariableDeclaration","scope":3198,"src":"4158:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3186,"name":"address","nodeType":"ElementaryTypeName","src":"4158:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"validatorSrcAddress","nameLocation":"4206:19:9","nodeType":"VariableDeclaration","scope":3198,"src":"4192:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3188,"name":"string","nodeType":"ElementaryTypeName","src":"4192:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"validatorDstAddress","nameLocation":"4249:19:9","nodeType":"VariableDeclaration","scope":3198,"src":"4235:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3190,"name":"string","nodeType":"ElementaryTypeName","src":"4235:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"amount","nameLocation":"4286:6:9","nodeType":"VariableDeclaration","scope":3198,"src":"4278:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"4278:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4148:150:9"},"returnParameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"completionTime","nameLocation":"4323:14:9","nodeType":"VariableDeclaration","scope":3198,"src":"4317:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3195,"name":"int64","nodeType":"ElementaryTypeName","src":"4317:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"4316:22:9"},"scope":3340,"src":"4129:210:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"4345:465:9","text":"@dev Allows delegators to cancel the unbondingDelegation entry\n and to delegate back to a previous validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of the Coin\n @param creationHeight The height at which the unbonding took place\n @return completionTime The time when the cancellation of the unbonding delegation is completed"},"functionSelector":"12d58dfe","id":3212,"implemented":false,"kind":"function","modifiers":[],"name":"cancelUnbondingDelegation","nameLocation":"4824:25:9","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"delegatorAddress","nameLocation":"4867:16:9","nodeType":"VariableDeclaration","scope":3212,"src":"4859:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3200,"name":"address","nodeType":"ElementaryTypeName","src":"4859:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"validatorAddress","nameLocation":"4907:16:9","nodeType":"VariableDeclaration","scope":3212,"src":"4893:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3202,"name":"string","nodeType":"ElementaryTypeName","src":"4893:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"amount","nameLocation":"4941:6:9","nodeType":"VariableDeclaration","scope":3212,"src":"4933:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4933:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"creationHeight","nameLocation":"4965:14:9","nodeType":"VariableDeclaration","scope":3212,"src":"4957:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"4957:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4849:136:9"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"completionTime","nameLocation":"5010:14:9","nodeType":"VariableDeclaration","scope":3212,"src":"5004:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3209,"name":"int64","nodeType":"ElementaryTypeName","src":"5004:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"5003:22:9"},"scope":3340,"src":"4815:211:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3213,"nodeType":"StructuredDocumentation","src":"5032:377:9","text":"@dev Queries the given amount of the bond denomination to a validator.\n @param delegatorAddress The address of the delegator.\n @param validatorAddress The address of the validator.\n @return shares The amount of shares, that the delegator has received.\n @return balance The amount in Coin, that the delegator has delegated to the given validator."},"functionSelector":"241774e6","id":3225,"implemented":false,"kind":"function","modifiers":[],"name":"delegation","nameLocation":"5423:10:9","nodeType":"FunctionDefinition","parameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"delegatorAddress","nameLocation":"5451:16:9","nodeType":"VariableDeclaration","scope":3225,"src":"5443:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3214,"name":"address","nodeType":"ElementaryTypeName","src":"5443:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"validatorAddress","nameLocation":"5491:16:9","nodeType":"VariableDeclaration","scope":3225,"src":"5477:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3216,"name":"string","nodeType":"ElementaryTypeName","src":"5477:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5433:80:9"},"returnParameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"mutability":"mutable","name":"shares","nameLocation":"5545:6:9","nodeType":"VariableDeclaration","scope":3225,"src":"5537:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"5537:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"balance","nameLocation":"5567:7:9","nodeType":"VariableDeclaration","scope":3225,"src":"5553:21:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2694_calldata_ptr","typeString":"struct Coin"},"typeName":{"id":3222,"nodeType":"UserDefinedTypeName","pathNode":{"id":3221,"name":"Coin","nameLocations":["5553:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":2694,"src":"5553:4:9"},"referencedDeclaration":2694,"src":"5553:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$2694_storage_ptr","typeString":"struct Coin"}},"visibility":"internal"}],"src":"5536:39:9"},"scope":3340,"src":"5414:162:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3226,"nodeType":"StructuredDocumentation","src":"5582:322:9","text":"@dev Returns the delegation shares and coins, that are currently\n unbonding for a given delegator and validator pair.\n @param delegatorAddress The address of the delegator.\n @param validatorAddress The address of the validator.\n @return entries The delegations that are currently unbonding."},"functionSelector":"a03ffee1","id":3237,"implemented":false,"kind":"function","modifiers":[],"name":"unbondingDelegation","nameLocation":"5918:19:9","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"delegatorAddress","nameLocation":"5955:16:9","nodeType":"VariableDeclaration","scope":3237,"src":"5947:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3227,"name":"address","nodeType":"ElementaryTypeName","src":"5947:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"validatorAddress","nameLocation":"5995:16:9","nodeType":"VariableDeclaration","scope":3237,"src":"5981:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3229,"name":"string","nodeType":"ElementaryTypeName","src":"5981:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5937:80:9"},"returnParameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"entries","nameLocation":"6077:7:9","nodeType":"VariableDeclaration","scope":3237,"src":"6041:43:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnbondingDelegationEntry_$3141_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UnbondingDelegationEntry[]"},"typeName":{"baseType":{"id":3233,"nodeType":"UserDefinedTypeName","pathNode":{"id":3232,"name":"UnbondingDelegationEntry","nameLocations":["6041:24:9"],"nodeType":"IdentifierPath","referencedDeclaration":3141,"src":"6041:24:9"},"referencedDeclaration":3141,"src":"6041:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_UnbondingDelegationEntry_$3141_storage_ptr","typeString":"struct UnbondingDelegationEntry"}},"id":3234,"nodeType":"ArrayTypeName","src":"6041:26:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UnbondingDelegationEntry_$3141_storage_$dyn_storage_ptr","typeString":"struct UnbondingDelegationEntry[]"}},"visibility":"internal"}],"src":"6040:45:9"},"scope":3340,"src":"5909:177:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3238,"nodeType":"StructuredDocumentation","src":"6092:203:9","text":"@dev Queries validator info for a given validator address.\n @param validatorAddress The address of the validator.\n @return validators The validator info for the given validator address."},"functionSelector":"0bc82a17","id":3247,"implemented":false,"kind":"function","modifiers":[],"name":"validator","nameLocation":"6309:9:9","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"validatorAddress","nameLocation":"6342:16:9","nodeType":"VariableDeclaration","scope":3247,"src":"6328:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3239,"name":"string","nodeType":"ElementaryTypeName","src":"6328:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6318:46:9"},"returnParameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"validators","nameLocation":"6422:10:9","nodeType":"VariableDeclaration","scope":3247,"src":"6401:31:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Validator_$3104_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Validator[]"},"typeName":{"baseType":{"id":3243,"nodeType":"UserDefinedTypeName","pathNode":{"id":3242,"name":"Validator","nameLocations":["6401:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":3104,"src":"6401:9:9"},"referencedDeclaration":3104,"src":"6401:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Validator_$3104_storage_ptr","typeString":"struct Validator"}},"id":3244,"nodeType":"ArrayTypeName","src":"6401:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Validator_$3104_storage_$dyn_storage_ptr","typeString":"struct Validator[]"}},"visibility":"internal"}],"src":"6391:47:9"},"scope":3340,"src":"6300:139:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3248,"nodeType":"StructuredDocumentation","src":"6445:214:9","text":"@dev Queries all validators that match the given status.\n @param status Enables to query for validators matching a given status.\n @param pageRequest Defines an optional pagination for the request."},"functionSelector":"186b2167","id":3263,"implemented":false,"kind":"function","modifiers":[],"name":"validators","nameLocation":"6673:10:9","nodeType":"FunctionDefinition","parameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"status","nameLocation":"6707:6:9","nodeType":"VariableDeclaration","scope":3263,"src":"6693:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3249,"name":"string","nodeType":"ElementaryTypeName","src":"6693:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3253,"mutability":"mutable","name":"pageRequest","nameLocation":"6744:11:9","nodeType":"VariableDeclaration","scope":3263,"src":"6723:32:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PageRequest_$3152_calldata_ptr","typeString":"struct PageRequest"},"typeName":{"id":3252,"nodeType":"UserDefinedTypeName","pathNode":{"id":3251,"name":"PageRequest","nameLocations":["6723:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3152,"src":"6723:11:9"},"referencedDeclaration":3152,"src":"6723:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_PageRequest_$3152_storage_ptr","typeString":"struct PageRequest"}},"visibility":"internal"}],"src":"6683:78:9"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"validators","nameLocation":"6815:10:9","nodeType":"VariableDeclaration","scope":3263,"src":"6794:31:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Validator_$3104_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Validator[]"},"typeName":{"baseType":{"id":3256,"nodeType":"UserDefinedTypeName","pathNode":{"id":3255,"name":"Validator","nameLocations":["6794:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":3104,"src":"6794:9:9"},"referencedDeclaration":3104,"src":"6794:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_Validator_$3104_storage_ptr","typeString":"struct Validator"}},"id":3257,"nodeType":"ArrayTypeName","src":"6794:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Validator_$3104_storage_$dyn_storage_ptr","typeString":"struct Validator[]"}},"visibility":"internal"},{"constant":false,"id":3261,"mutability":"mutable","name":"pageResponse","nameLocation":"6857:12:9","nodeType":"VariableDeclaration","scope":3263,"src":"6835:34:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PageResponse_$2706_calldata_ptr","typeString":"struct PageResponse"},"typeName":{"id":3260,"nodeType":"UserDefinedTypeName","pathNode":{"id":3259,"name":"PageResponse","nameLocations":["6835:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2706,"src":"6835:12:9"},"referencedDeclaration":2706,"src":"6835:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_PageResponse_$2706_storage_ptr","typeString":"struct PageResponse"}},"visibility":"internal"}],"src":"6784:91:9"},"scope":3340,"src":"6664:212:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3264,"nodeType":"StructuredDocumentation","src":"6882:448:9","text":"@dev Queries all redelegations from a source to a destination validator for a given delegator.\n @param delegatorAddress The address of the delegator.\n @param srcValidatorAddress Defines the validator address to redelegate from.\n @param dstValidatorAddress Defines the validator address to redelegate to.\n @return entries The active redelegations for the given delegator, source and destination validator combination."},"functionSelector":"7d9f939c","id":3277,"implemented":false,"kind":"function","modifiers":[],"name":"redelegation","nameLocation":"7344:12:9","nodeType":"FunctionDefinition","parameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"delegatorAddress","nameLocation":"7374:16:9","nodeType":"VariableDeclaration","scope":3277,"src":"7366:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3265,"name":"address","nodeType":"ElementaryTypeName","src":"7366:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"srcValidatorAddress","nameLocation":"7414:19:9","nodeType":"VariableDeclaration","scope":3277,"src":"7400:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3267,"name":"string","nodeType":"ElementaryTypeName","src":"7400:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3270,"mutability":"mutable","name":"dstValidatorAddress","nameLocation":"7457:19:9","nodeType":"VariableDeclaration","scope":3277,"src":"7443:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3269,"name":"string","nodeType":"ElementaryTypeName","src":"7443:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7356:126:9"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"entries","nameLocation":"7535:7:9","nodeType":"VariableDeclaration","scope":3277,"src":"7506:36:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntry_$3132_calldata_ptr_$dyn_calldata_ptr","typeString":"struct RedelegationEntry[]"},"typeName":{"baseType":{"id":3273,"nodeType":"UserDefinedTypeName","pathNode":{"id":3272,"name":"RedelegationEntry","nameLocations":["7506:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":3132,"src":"7506:17:9"},"referencedDeclaration":3132,"src":"7506:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationEntry_$3132_storage_ptr","typeString":"struct RedelegationEntry"}},"id":3274,"nodeType":"ArrayTypeName","src":"7506:19:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RedelegationEntry_$3132_storage_$dyn_storage_ptr","typeString":"struct RedelegationEntry[]"}},"visibility":"internal"}],"src":"7505:38:9"},"scope":3340,"src":"7335:209:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3278,"nodeType":"StructuredDocumentation","src":"7550:567:9","text":"@dev Queries all redelegations from a source to to a destination validator\n for a given delegator in a specified pagination manner.\n @param delegatorAddress The address of the delegator.\n @param srcValidatorAddress Defines the validator address to redelegate from.\n @param dstValidatorAddress Defines the validator address to redelegate to.\n @param pageRequest Defines an optional pagination for the request.\n @return response Holds the redelegations for the given delegator, source and destination validator combination."},"functionSelector":"10a2851c","id":3293,"implemented":false,"kind":"function","modifiers":[],"name":"redelegations","nameLocation":"8131:13:9","nodeType":"FunctionDefinition","parameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"delegatorAddress","nameLocation":"8162:16:9","nodeType":"VariableDeclaration","scope":3293,"src":"8154:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"8154:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"srcValidatorAddress","nameLocation":"8202:19:9","nodeType":"VariableDeclaration","scope":3293,"src":"8188:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3281,"name":"string","nodeType":"ElementaryTypeName","src":"8188:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"dstValidatorAddress","nameLocation":"8245:19:9","nodeType":"VariableDeclaration","scope":3293,"src":"8231:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3283,"name":"string","nodeType":"ElementaryTypeName","src":"8231:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"pageRequest","nameLocation":"8295:11:9","nodeType":"VariableDeclaration","scope":3293,"src":"8274:32:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PageRequest_$3152_calldata_ptr","typeString":"struct PageRequest"},"typeName":{"id":3286,"nodeType":"UserDefinedTypeName","pathNode":{"id":3285,"name":"PageRequest","nameLocations":["8274:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3152,"src":"8274:11:9"},"referencedDeclaration":3152,"src":"8274:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_PageRequest_$3152_storage_ptr","typeString":"struct PageRequest"}},"visibility":"internal"}],"src":"8144:168:9"},"returnParameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"response","nameLocation":"8366:8:9","nodeType":"VariableDeclaration","scope":3293,"src":"8336:38:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationResponse_$3112_calldata_ptr","typeString":"struct RedelegationResponse"},"typeName":{"id":3290,"nodeType":"UserDefinedTypeName","pathNode":{"id":3289,"name":"RedelegationResponse","nameLocations":["8336:20:9"],"nodeType":"IdentifierPath","referencedDeclaration":3112,"src":"8336:20:9"},"referencedDeclaration":3112,"src":"8336:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_RedelegationResponse_$3112_storage_ptr","typeString":"struct RedelegationResponse"}},"visibility":"internal"}],"src":"8335:40:9"},"scope":3340,"src":"8122:254:9","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":3294,"nodeType":"StructuredDocumentation","src":"8382:388:9","text":"@dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\n delegator address to the validator address.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin being delegated\n @param newShares The new delegation shares being held"},"eventSelector":"5a5adf903ba232ef17ed8be4ef872e1f60d17c5ba26a1ecbf44e388a672b118a","id":3304,"name":"Delegate","nameLocation":"8781:8:9","nodeType":"EventDefinition","parameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"indexed":true,"mutability":"mutable","name":"delegatorAddress","nameLocation":"8815:16:9","nodeType":"VariableDeclaration","scope":3304,"src":"8799:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3295,"name":"address","nodeType":"ElementaryTypeName","src":"8799:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3298,"indexed":true,"mutability":"mutable","name":"validatorAddress","nameLocation":"8856:16:9","nodeType":"VariableDeclaration","scope":3304,"src":"8841:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3297,"name":"string","nodeType":"ElementaryTypeName","src":"8841:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3300,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"8890:6:9","nodeType":"VariableDeclaration","scope":3304,"src":"8882:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"8882:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3302,"indexed":false,"mutability":"mutable","name":"newShares","nameLocation":"8914:9:9","nodeType":"VariableDeclaration","scope":3304,"src":"8906:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"8906:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8789:140:9"},"src":"8775:155:9"},{"anonymous":false,"documentation":{"id":3305,"nodeType":"StructuredDocumentation","src":"8936:397:9","text":"@dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\n validator address to the delegator address.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin being unbonded\n @param completionTime The time at which the unbonding is completed"},"eventSelector":"1f6938077d62f3610504390aa8486c8172406456826a39907ca0cd40c8fe700a","id":3315,"name":"Unbond","nameLocation":"9344:6:9","nodeType":"EventDefinition","parameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"indexed":true,"mutability":"mutable","name":"delegatorAddress","nameLocation":"9376:16:9","nodeType":"VariableDeclaration","scope":3315,"src":"9360:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3306,"name":"address","nodeType":"ElementaryTypeName","src":"9360:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3309,"indexed":true,"mutability":"mutable","name":"validatorAddress","nameLocation":"9417:16:9","nodeType":"VariableDeclaration","scope":3315,"src":"9402:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3308,"name":"string","nodeType":"ElementaryTypeName","src":"9402:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3311,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"9451:6:9","nodeType":"VariableDeclaration","scope":3315,"src":"9443:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"9443:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3313,"indexed":false,"mutability":"mutable","name":"completionTime","nameLocation":"9475:14:9","nodeType":"VariableDeclaration","scope":3315,"src":"9467:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3312,"name":"uint256","nodeType":"ElementaryTypeName","src":"9467:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9350:145:9"},"src":"9338:158:9"},{"anonymous":false,"documentation":{"id":3316,"nodeType":"StructuredDocumentation","src":"9502:571:9","text":"@dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\n the source validator address to the destination validator address.\n @param delegatorAddress The address of the delegator\n @param validatorSrcAddress The address of the validator from which the delegation is retracted\n @param validatorDstAddress The address of the validator to which the delegation is directed\n @param amount The amount of Coin being redelegated\n @param completionTime The time at which the redelegation is completed"},"eventSelector":"43c8e32499593a7da63d4aec64367350a850199e23d2ce6a6e067365938d1bb6","id":3328,"name":"Redelegate","nameLocation":"10084:10:9","nodeType":"EventDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"indexed":true,"mutability":"mutable","name":"delegatorAddress","nameLocation":"10120:16:9","nodeType":"VariableDeclaration","scope":3328,"src":"10104:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3317,"name":"address","nodeType":"ElementaryTypeName","src":"10104:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3320,"indexed":true,"mutability":"mutable","name":"validatorSrcAddress","nameLocation":"10161:19:9","nodeType":"VariableDeclaration","scope":3328,"src":"10146:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3319,"name":"string","nodeType":"ElementaryTypeName","src":"10146:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3322,"indexed":true,"mutability":"mutable","name":"validatorDstAddress","nameLocation":"10205:19:9","nodeType":"VariableDeclaration","scope":3328,"src":"10190:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3321,"name":"string","nodeType":"ElementaryTypeName","src":"10190:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3324,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"10242:6:9","nodeType":"VariableDeclaration","scope":3328,"src":"10234:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"10234:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3326,"indexed":false,"mutability":"mutable","name":"completionTime","nameLocation":"10266:14:9","nodeType":"VariableDeclaration","scope":3328,"src":"10258:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3325,"name":"uint256","nodeType":"ElementaryTypeName","src":"10258:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10094:192:9"},"src":"10078:209:9"},{"anonymous":false,"documentation":{"id":3329,"nodeType":"StructuredDocumentation","src":"10293:501:9","text":"@dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\n that are in the process of unbonding from the validator address are bonded again.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin that was in the unbonding process which is to be cancelled\n @param creationHeight The block height at which the unbonding of a delegation was initiated"},"eventSelector":"4df30dbaa29da95e67f93ec6d865329c7e7e870b3939583df3c8889319c89126","id":3339,"name":"CancelUnbondingDelegation","nameLocation":"10805:25:9","nodeType":"EventDefinition","parameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"indexed":true,"mutability":"mutable","name":"delegatorAddress","nameLocation":"10856:16:9","nodeType":"VariableDeclaration","scope":3339,"src":"10840:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3330,"name":"address","nodeType":"ElementaryTypeName","src":"10840:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3333,"indexed":true,"mutability":"mutable","name":"validatorAddress","nameLocation":"10897:16:9","nodeType":"VariableDeclaration","scope":3339,"src":"10882:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3332,"name":"string","nodeType":"ElementaryTypeName","src":"10882:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3335,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"10931:6:9","nodeType":"VariableDeclaration","scope":3339,"src":"10923:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"10923:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3337,"indexed":false,"mutability":"mutable","name":"creationHeight","nameLocation":"10955:14:9","nodeType":"VariableDeclaration","scope":3339,"src":"10947:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"10947:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10830:145:9"},"src":"10799:177:9"}],"scope":3341,"src":"2549:8429:9","usedErrors":[]}],"src":"36:10943:9"},"id":9},"contracts/precompiles/stateless/Bech32.sol":{"ast":{"absolutePath":"contracts/precompiles/stateless/Bech32.sol","exportedSymbols":{"Bech32I":[3366],"Bech32_PRECOMPILE_ADDRESS":[3346]},"id":3367,"license":"LGPL-v3","nodeType":"SourceUnit","nodes":[{"id":3342,"literals":["solidity",">=","0.8",".17"],"nodeType":"PragmaDirective","src":"36:25:10"},{"constant":true,"id":3346,"mutability":"constant","name":"Bech32_PRECOMPILE_ADDRESS","nameLocation":"121:25:10","nodeType":"VariableDeclaration","scope":3367,"src":"104:87:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3344,"name":"address","nodeType":"ElementaryTypeName","src":"104:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030343030","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"149:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000400"},"visibility":"internal"},{"abstract":false,"baseContracts":[],"canonicalName":"Bech32I","contractDependencies":[],"contractKind":"interface","documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"194:242:10","text":"@author Evmos Team\n @title Bech32 Precompiled Contract\n @dev The interface through which solidity contracts can convert addresses from\n hex to bech32 and vice versa.\n @custom:address 0x0000000000000000000000000000000000000010"},"fullyImplemented":false,"id":3366,"linearizedBaseContracts":[3366],"name":"Bech32I","nameLocation":"446:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"460:265:10","text":"@dev Defines a method for converting a hex formatted address to bech32.\n @param addr The hex address to be converted.\n @param prefix The human readable prefix (HRP) of the bech32 address.\n @return bech32Address The address in bech32 format."},"functionSelector":"f958a98c","id":3357,"implemented":false,"kind":"function","modifiers":[],"name":"hexToBech32","nameLocation":"739:11:10","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"addr","nameLocation":"768:4:10","nodeType":"VariableDeclaration","scope":3357,"src":"760:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3349,"name":"address","nodeType":"ElementaryTypeName","src":"760:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"prefix","nameLocation":"796:6:10","nodeType":"VariableDeclaration","scope":3357,"src":"782:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3351,"name":"string","nodeType":"ElementaryTypeName","src":"782:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"750:58:10"},"returnParameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"bech32Address","nameLocation":"841:13:10","nodeType":"VariableDeclaration","scope":3357,"src":"827:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3354,"name":"string","nodeType":"ElementaryTypeName","src":"827:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"826:29:10"},"scope":3366,"src":"730:126:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3358,"nodeType":"StructuredDocumentation","src":"862:188:10","text":"@dev Defines a method for converting a bech32 formatted address to hex.\n @param bech32Address The bech32 address to be converted.\n @return addr The address in hex format."},"functionSelector":"e6df461e","id":3365,"implemented":false,"kind":"function","modifiers":[],"name":"bech32ToHex","nameLocation":"1064:11:10","nodeType":"FunctionDefinition","parameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"bech32Address","nameLocation":"1099:13:10","nodeType":"VariableDeclaration","scope":3365,"src":"1085:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3359,"name":"string","nodeType":"ElementaryTypeName","src":"1085:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1075:43:10"},"returnParameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"addr","nameLocation":"1145:4:10","nodeType":"VariableDeclaration","scope":3365,"src":"1137:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3362,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1136:14:10"},"scope":3366,"src":"1055:96:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3367,"src":"436:717:10","usedErrors":[]}],"src":"36:1118:10"},"id":10}},"contracts":{"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/GreenDAO.sol":{"GreenDAO":{"abi":[{"inputs":[],"name":"_approveRequiredMsgs","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"_dao_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_dao_uris","outputs":[{"internalType":"string","name":"dao_wallet","type":"string"},{"internalType":"string","name":"dao_uri","type":"string"},{"internalType":"string","name":"finished","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_goal_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_goal_uris","outputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"string","name":"goal_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_ideas_uris","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"string","name":"ideas_uri","type":"string"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_vote_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_reply_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_smart_contract_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_smart_contracts_uris","outputs":[{"internalType":"uint256","name":"smart_contract_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"smart_contract_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_doantion","type":"uint256"}],"name":"add_donation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_goal_ideas_votes","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"wallet","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_replies","outputs":[{"internalType":"uint256","name":"reply_id","type":"uint256"},{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"create_dao","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"},{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"create_goal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_wallet","type":"string"}],"name":"create_goal_ideas_vote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"},{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string[]","name":"_smart_contracts","type":"string[]"}],"name":"create_ideas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"dao_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_idea_id","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"donate","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"donated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractRewards","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDelegation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"}],"name":"getMsgIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"message_id","type":"uint256"}],"name":"getReplyIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUnbondingDelegation","outputs":[{"components":[{"internalType":"int64","name":"creationHeight","type":"int64"},{"internalType":"int64","name":"completionTime","type":"int64"},{"internalType":"uint256","name":"initialBalance","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct UnbondingDelegationEntry[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_daos","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_goals","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"get_all_goals_by_dao_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_ideas","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"get_all_ideas_by_goal_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"get_goal_id_by_goal_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_goal_id_from_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_ideas_id_by_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"get_ideas_votes_from_goal","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"goal_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"ideas_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_idea_id","type":"uint256"}],"name":"redeemDonatedMoney","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reset_all","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_message","type":"string"}],"name":"sendMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"_reply","type":"string"}],"name":"sendReply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"set_dao","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"set_goal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"set_ideas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawAllMoney","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"_approveRequiredMsgs()":{"details":"approves the staking and distribution contracts for donating"}},"stateVariables":{"donated":{"details":"map to keep track of user deposits to the contract."},"stakingMethods":{"details":"the required authorizations for Staking and Distribution"}},"version":1},"evm":{"bytecode":{"functionDebugData":{"array_dataslot_t_string_storage":{"entryPoint":738,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":580,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1059,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":874,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1020,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":894,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1214,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":759,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":685,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1184,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":884,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1152,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":638,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":591,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":934,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":775,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1139,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":992,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":788,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":944,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":987,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5231:11","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:11","statements":[{"nodeType":"YulAssignment","src":"77:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:11"},"nodeType":"YulFunctionCall","src":"87:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:11","type":""}],"src":"7:99:11"},{"body":{"nodeType":"YulBlock","src":"140:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:11"},"nodeType":"YulFunctionCall","src":"150:88:11"},"nodeType":"YulExpressionStatement","src":"150:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:11"},"nodeType":"YulFunctionCall","src":"247:15:11"},"nodeType":"YulExpressionStatement","src":"247:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:11"},"nodeType":"YulFunctionCall","src":"271:15:11"},"nodeType":"YulExpressionStatement","src":"271:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:11"},{"body":{"nodeType":"YulBlock","src":"326:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:11"},"nodeType":"YulFunctionCall","src":"336:88:11"},"nodeType":"YulExpressionStatement","src":"336:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:11"},"nodeType":"YulFunctionCall","src":"433:15:11"},"nodeType":"YulExpressionStatement","src":"433:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:11"},"nodeType":"YulFunctionCall","src":"457:15:11"},"nodeType":"YulExpressionStatement","src":"457:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:11"},{"body":{"nodeType":"YulBlock","src":"535:269:11","statements":[{"nodeType":"YulAssignment","src":"545:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:11"},"nodeType":"YulFunctionCall","src":"555:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:11"},"nodeType":"YulFunctionCall","src":"602:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:11","statements":[{"nodeType":"YulAssignment","src":"667:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:11"},"nodeType":"YulFunctionCall","src":"677:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:11"},"nodeType":"YulFunctionCall","src":"626:26:11"},"nodeType":"YulIf","src":"623:81:11"},{"body":{"nodeType":"YulBlock","src":"756:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:11"},"nodeType":"YulFunctionCall","src":"770:18:11"},"nodeType":"YulExpressionStatement","src":"770:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:11"},"nodeType":"YulFunctionCall","src":"740:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:11"},"nodeType":"YulFunctionCall","src":"717:38:11"},"nodeType":"YulIf","src":"714:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:11","type":""}],"src":"484:320:11"},{"body":{"nodeType":"YulBlock","src":"864:87:11","statements":[{"nodeType":"YulAssignment","src":"874:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:11"},"nodeType":"YulFunctionCall","src":"895:14:11"},"nodeType":"YulExpressionStatement","src":"895:14:11"},{"nodeType":"YulAssignment","src":"918:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:11"},"nodeType":"YulFunctionCall","src":"926:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:11","type":""}],"src":"810:141:11"},{"body":{"nodeType":"YulBlock","src":"1001:49:11","statements":[{"nodeType":"YulAssignment","src":"1011:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:11"},"nodeType":"YulFunctionCall","src":"1025:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:11"},"nodeType":"YulFunctionCall","src":"1021:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:11","type":""}],"src":"957:93:11"},{"body":{"nodeType":"YulBlock","src":"1109:54:11","statements":[{"nodeType":"YulAssignment","src":"1119:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:11"},"nodeType":"YulFunctionCall","src":"1140:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:11","type":""}],"src":"1056:107:11"},{"body":{"nodeType":"YulBlock","src":"1245:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:11"},"nodeType":"YulFunctionCall","src":"1272:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:11"},"nodeType":"YulFunctionCall","src":"1311:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:11","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:11"},"nodeType":"YulFunctionCall","src":"1429:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:11"}]},{"nodeType":"YulAssignment","src":"1477:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:11"},"nodeType":"YulFunctionCall","src":"1497:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:11"},"nodeType":"YulFunctionCall","src":"1486:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:11"}]},{"nodeType":"YulAssignment","src":"1516:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:11"},"nodeType":"YulFunctionCall","src":"1536:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:11"},"nodeType":"YulFunctionCall","src":"1526:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:11","type":""}],"src":"1169:393:11"},{"body":{"nodeType":"YulBlock","src":"1613:32:11","statements":[{"nodeType":"YulAssignment","src":"1623:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:11","type":""}],"src":"1568:77:11"},{"body":{"nodeType":"YulBlock","src":"1683:28:11","statements":[{"nodeType":"YulAssignment","src":"1693:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:11","type":""}],"src":"1651:60:11"},{"body":{"nodeType":"YulBlock","src":"1777:82:11","statements":[{"nodeType":"YulAssignment","src":"1787:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:11"},"nodeType":"YulFunctionCall","src":"1827:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:11"},"nodeType":"YulFunctionCall","src":"1818:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:11"},"nodeType":"YulFunctionCall","src":"1800:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:11","type":""}],"src":"1717:142:11"},{"body":{"nodeType":"YulBlock","src":"1912:28:11","statements":[{"nodeType":"YulAssignment","src":"1922:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:11","type":""}],"src":"1865:75:11"},{"body":{"nodeType":"YulBlock","src":"2022:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:11"},"nodeType":"YulFunctionCall","src":"2056:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:11"},"nodeType":"YulFunctionCall","src":"2145:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:11"},"nodeType":"YulFunctionCall","src":"2166:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:11"},"nodeType":"YulFunctionCall","src":"2117:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:11"},"nodeType":"YulFunctionCall","src":"2104:105:11"},"nodeType":"YulExpressionStatement","src":"2104:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:11","type":""}],"src":"1946:269:11"},{"body":{"nodeType":"YulBlock","src":"2270:24:11","statements":[{"nodeType":"YulAssignment","src":"2280:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:11","type":""}],"src":"2221:73:11"},{"body":{"nodeType":"YulBlock","src":"2353:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:11"},"nodeType":"YulFunctionCall","src":"2377:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:11"},"nodeType":"YulFunctionCall","src":"2418:65:11"},"nodeType":"YulExpressionStatement","src":"2418:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:11","type":""}],"src":"2300:189:11"},{"body":{"nodeType":"YulBlock","src":"2545:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:11"},"nodeType":"YulFunctionCall","src":"2626:39:11"},"nodeType":"YulExpressionStatement","src":"2626:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:11"},"nodeType":"YulFunctionCall","src":"2562:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:11","statements":[{"nodeType":"YulAssignment","src":"2579:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:11"},"nodeType":"YulFunctionCall","src":"2588:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:11","statements":[]},"src":"2555:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:11","type":""}],"src":"2495:186:11"},{"body":{"nodeType":"YulBlock","src":"2766:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:11"},"nodeType":"YulFunctionCall","src":"2822:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:11"},"nodeType":"YulFunctionCall","src":"2906:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:11"},"nodeType":"YulFunctionCall","src":"2892:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:11","statements":[{"nodeType":"YulAssignment","src":"3095:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:11"},"nodeType":"YulFunctionCall","src":"3074:18:11"},"nodeType":"YulIf","src":"3071:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:11"},"nodeType":"YulFunctionCall","src":"3189:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:11"},"nodeType":"YulFunctionCall","src":"3175:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:11"},"nodeType":"YulFunctionCall","src":"3133:80:11"},"nodeType":"YulExpressionStatement","src":"3133:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:11"},"nodeType":"YulFunctionCall","src":"2780:11:11"},"nodeType":"YulIf","src":"2777:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:11","type":""}],"src":"2687:543:11"},{"body":{"nodeType":"YulBlock","src":"3299:54:11","statements":[{"nodeType":"YulAssignment","src":"3309:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:11"},"nodeType":"YulFunctionCall","src":"3330:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:11","type":""}],"src":"3236:117:11"},{"body":{"nodeType":"YulBlock","src":"3410:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:11"},"nodeType":"YulFunctionCall","src":"3465:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:11"},"nodeType":"YulFunctionCall","src":"3480:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:11"},"nodeType":"YulFunctionCall","src":"3436:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:11"},"nodeType":"YulFunctionCall","src":"3432:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:11","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:11"},"nodeType":"YulFunctionCall","src":"3507:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:11","type":""}],"src":"3359:169:11"},{"body":{"nodeType":"YulBlock","src":"3614:214:11","statements":[{"nodeType":"YulAssignment","src":"3747:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:11"},"nodeType":"YulFunctionCall","src":"3755:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:11"}]},{"nodeType":"YulAssignment","src":"3793:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:11"},"nodeType":"YulFunctionCall","src":"3810:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:11"},"nodeType":"YulFunctionCall","src":"3801:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:11","type":""}],"src":"3533:295:11"},{"body":{"nodeType":"YulBlock","src":"3925:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:11"},"nodeType":"YulFunctionCall","src":"3950:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:11"},"nodeType":"YulFunctionCall","src":"4074:18:11"},"nodeType":"YulExpressionStatement","src":"4074:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:11"},"nodeType":"YulFunctionCall","src":"4041:30:11"},"nodeType":"YulIf","src":"4038:56:11"},{"nodeType":"YulVariableDeclaration","src":"4104:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:11"},"nodeType":"YulFunctionCall","src":"4144:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:11"},"nodeType":"YulFunctionCall","src":"4118:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:11"},"nodeType":"YulFunctionCall","src":"4203:67:11"},"nodeType":"YulExpressionStatement","src":"4203:67:11"},{"nodeType":"YulVariableDeclaration","src":"4280:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:11","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:11"},"nodeType":"YulFunctionCall","src":"4413:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:11"},"nodeType":"YulFunctionCall","src":"4401:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:11"},"nodeType":"YulFunctionCall","src":"4451:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:11"},"nodeType":"YulFunctionCall","src":"4608:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:11"},"nodeType":"YulFunctionCall","src":"4602:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:11"},"nodeType":"YulFunctionCall","src":"4587:42:11"},"nodeType":"YulExpressionStatement","src":"4587:42:11"},{"nodeType":"YulAssignment","src":"4646:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:11"},"nodeType":"YulFunctionCall","src":"4656:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:11"}]},{"nodeType":"YulAssignment","src":"4687:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:11"},"nodeType":"YulFunctionCall","src":"4700:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:11"},"nodeType":"YulFunctionCall","src":"4532:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:11","statements":[{"nodeType":"YulAssignment","src":"4549:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:11"},"nodeType":"YulFunctionCall","src":"4554:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:11","statements":[]},"src":"4524:208:11"},{"body":{"nodeType":"YulBlock","src":"4768:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:11"},"nodeType":"YulFunctionCall","src":"4809:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:11"},"nodeType":"YulFunctionCall","src":"4803:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:11"},"nodeType":"YulFunctionCall","src":"4891:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:11"},"nodeType":"YulFunctionCall","src":"4861:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:11"},"nodeType":"YulFunctionCall","src":"4846:64:11"},"nodeType":"YulExpressionStatement","src":"4846:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:11"},"nodeType":"YulFunctionCall","src":"4748:19:11"},"nodeType":"YulIf","src":"4745:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:11"},"nodeType":"YulFunctionCall","src":"4954:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:11"},"nodeType":"YulFunctionCall","src":"4950:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:11"},"nodeType":"YulFunctionCall","src":"4937:36:11"},"nodeType":"YulExpressionStatement","src":"4937:36:11"}]},"nodeType":"YulCase","src":"4365:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:11","statements":[{"nodeType":"YulAssignment","src":"5069:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:11"},"nodeType":"YulFunctionCall","src":"5084:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:11"},"nodeType":"YulFunctionCall","src":"5078:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:11"},"nodeType":"YulIf","src":"5041:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:11"},"nodeType":"YulFunctionCall","src":"5144:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:11"},"nodeType":"YulFunctionCall","src":"5131:81:11"},"nodeType":"YulExpressionStatement","src":"5131:81:11"}]},"nodeType":"YulCase","src":"4992:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:11"},"nodeType":"YulFunctionCall","src":"4342:14:11"},"nodeType":"YulSwitch","src":"4335:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:11","type":""}],"src":"3833:1395:11"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040518060600160405280604051806060016040528060238152602001620050996023913981526020016040518060600160405280602581526020016200503d6025913981526020016040518060600160405280602a815260200162004fe0602a913981525060009060036200007c929190620000f7565b50604051806020016040528060405180606001604052806037815260200162005062603791398152506001906001620000b792919062000157565b506040518060600160405280603381526020016200500a6033913960049081620000e29190620004be565b50348015620000f057600080fd5b50620005a5565b82805482825590600052602060002090810192821562000144579160200282015b8281111562000143578251829081620001329190620004be565b509160200191906001019062000118565b5b509050620001539190620001b7565b5090565b828054828255906000526020600020908101928215620001a4579160200282015b82811115620001a3578251829081620001929190620004be565b509160200191906001019062000178565b5b509050620001b39190620001b7565b5090565b5b80821115620001db5760008181620001d19190620001df565b50600101620001b8565b5090565b508054620001ed90620002ad565b6000825580601f1062000201575062000222565b601f01602090049060005260206000209081019062000221919062000225565b5b50565b5b808211156200024057600081600090555060010162000226565b5090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002c657607f821691505b602082108103620002dc57620002db6200027e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003467fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000307565b62000352868362000307565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200039f6200039962000393846200036a565b62000374565b6200036a565b9050919050565b6000819050919050565b620003bb836200037e565b620003d3620003ca82620003a6565b84845462000314565b825550505050565b600090565b620003ea620003db565b620003f7818484620003b0565b505050565b5b818110156200041f5762000413600082620003e0565b600181019050620003fd565b5050565b601f8211156200046e576200043881620002e2565b6200044384620002f7565b8101602085101562000453578190505b6200046b6200046285620002f7565b830182620003fc565b50505b505050565b600082821c905092915050565b6000620004936000198460080262000473565b1980831691505092915050565b6000620004ae838362000480565b9150826002028217905092915050565b620004c98262000244565b67ffffffffffffffff811115620004e557620004e46200024f565b5b620004f18254620002ad565b620004fe82828562000423565b600060209050601f83116001811462000536576000841562000521578287015190505b6200052d8582620004a0565b8655506200059d565b601f1984166200054686620002e2565b60005b82811015620005705784890151825560018201915060208501945060208101905062000549565b868310156200059057848901516200058c601f89168262000480565b8355505b6001600288020188555050505b505050505050565b614a2b80620005b56000396000f3fe6080604052600436106102ae5760003560e01c80637f2035d411610175578063aa4cdf2a116100dc578063c04fe97811610095578063d3791b201161006f578063d3791b2014610b96578063e3280c9614610bc1578063e32acc1a14610bfe578063ff4a37ef14610c3b576102ae565b8063c04fe97814610b05578063c29595c514610b30578063c4c2e36414610b59576102ae565b8063aa4cdf2a14610a07578063ae429e4714610a44578063b16060a614610a6f578063b2947c7114610a86578063b527d45e14610a9d578063c04e743014610adc576102ae565b80639077007d1161012e5780639077007d146108f757806397ee760614610922578063a1ca91781461094d578063a2cdb3a91461098a578063a694fc3a146109b3578063aa2bf5d3146109dc576102ae565b80637f2035d41461079c578063803f5b9f146107da578063812fae1f1461081757806382fcc73214610854578063881de858146108915780638d3d2595146108ba576102ae565b8063414d9a2b116102195780635d907da1116101d25780635d907da1146106525780636af3304e1461068f5780636f9fb98a146106cc57806371085cab146106f75780637bbd582d146107345780637e22cd111461075f576102ae565b8063414d9a2b1461051857806342c7652a14610555578063468d0c80146105805780634a797bd7146105bf5780634be7adb5146105ea57806353f6880214610627576102ae565b80631ba44c4c1161026b5780631ba44c4c146103b65780631e9ac9f5146103f557806327a568b91461043257806329b56f60146104715780632d5bf5b01461049c5780633f87a2f4146104d9576102ae565b80630cdd53f6146102b3578063109ac970146102cf578063131d44f21461030c57806313bf4cea146103495780631b52b9de146103745780631b592aeb1461038b575b600080fd5b6102cd60048036038101906102c89190612f03565b610c7a565b005b3480156102db57600080fd5b506102f660048036038101906102f19190612f43565b610cb0565b60405161030391906130c2565b60405180910390f35b34801561031857600080fd5b50610333600480360381019061032e9190612f43565b610e1f565b60405161034091906130c2565b60405180910390f35b34801561035557600080fd5b5061035e610f8e565b60405161036b91906130f3565b60405180910390f35b34801561038057600080fd5b50610389610f94565b005b34801561039757600080fd5b506103a0611009565b6040516103ad91906130f3565b60405180910390f35b3480156103c257600080fd5b506103dd60048036038101906103d89190612f43565b61100f565b6040516103ec93929190613158565b60405180910390f35b34801561040157600080fd5b5061041c600480360381019061041791906132cb565b6110c1565b60405161042991906130f3565b60405180910390f35b34801561043e57600080fd5b5061045960048036038101906104549190612f43565b611132565b60405161046893929190613314565b60405180910390f35b34801561047d57600080fd5b506104866112f4565b60405161049391906130c2565b60405180910390f35b3480156104a857600080fd5b506104c360048036038101906104be9190613360565b61142f565b6040516104d091906130f3565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb9190612f43565b6114b3565b60405161050f93929190613158565b60405180910390f35b34801561052457600080fd5b5061053f600480360381019061053a9190612f43565b611565565b60405161054c91906130f3565b60405180910390f35b34801561056157600080fd5b5061056a61157d565b60405161057791906134eb565b60405180910390f35b34801561058c57600080fd5b506105a760048036038101906105a29190612f43565b611608565b6040516105b69392919061350d565b60405180910390f35b3480156105cb57600080fd5b506105d46116ba565b6040516105e191906130f3565b60405180910390f35b3480156105f657600080fd5b50610611600480360381019061060c9190612f03565b6116c0565b60405161061e91906130c2565b60405180910390f35b34801561063357600080fd5b5061063c611852565b60405161064991906130f3565b60405180910390f35b34801561065e57600080fd5b5061067960048036038101906106749190612f43565b6118eb565b604051610686919061354b565b60405180910390f35b34801561069b57600080fd5b506106b660048036038101906106b19190613360565b611993565b6040516106c391906130f3565b60405180910390f35b3480156106d857600080fd5b506106e1611a17565b6040516106ee91906130f3565b60405180910390f35b34801561070357600080fd5b5061071e6004803603810190610719919061356d565b611a1f565b60405161072b91906130f3565b60405180910390f35b34801561074057600080fd5b50610749611a91565b60405161075691906130f3565b60405180910390f35b34801561076b57600080fd5b5061078660048036038101906107819190612f43565b611a97565b604051610793919061354b565b60405180910390f35b3480156107a857600080fd5b506107c360048036038101906107be9190612f43565b611cf4565b6040516107d19291906135c9565b60405180910390f35b3480156107e657600080fd5b5061080160048036038101906107fc9190612f43565b611da0565b60405161080e91906136a8565b60405180910390f35b34801561082357600080fd5b5061083e60048036038101906108399190612f43565b611e83565b60405161084b91906136a8565b60405180910390f35b34801561086057600080fd5b5061087b600480360381019061087691906136ca565b611f66565b60405161088891906130f3565b60405180910390f35b34801561089d57600080fd5b506108b860048036038101906108b39190613739565b611fe9565b005b3480156108c657600080fd5b506108e160048036038101906108dc9190612f43565b612036565b6040516108ee919061354b565b60405180910390f35b34801561090357600080fd5b5061090c6120de565b60405161091991906130f3565b60405180910390f35b34801561092e57600080fd5b506109376120e4565b60405161094491906130c2565b60405180910390f35b34801561095957600080fd5b50610974600480360381019061096f91906132cb565b61221f565b60405161098191906130f3565b60405180910390f35b34801561099657600080fd5b506109b160048036038101906109ac9190612f03565b612290565b005b3480156109bf57600080fd5b506109da60048036038101906109d59190612f43565b6122c1565b005b3480156109e857600080fd5b506109f1612348565b6040516109fe91906130f3565b60405180910390f35b348015610a1357600080fd5b50610a2e6004803603810190610a2991906132cb565b61234e565b604051610a3b91906130f3565b60405180910390f35b348015610a5057600080fd5b50610a596123d5565b604051610a6691906138f2565b60405180910390f35b348015610a7b57600080fd5b50610a84612460565b005b348015610a9257600080fd5b50610a9b6126fb565b005b348015610aa957600080fd5b50610ac46004803603810190610abf9190612f43565b6128ab565b604051610ad393929190613158565b60405180910390f35b348015610ae857600080fd5b50610b036004803603810190610afe9190613360565b61295d565b005b348015610b1157600080fd5b50610b1a612985565b604051610b2791906130c2565b60405180910390f35b348015610b3c57600080fd5b50610b576004803603810190610b529190613360565b612ac0565b005b348015610b6557600080fd5b50610b806004803603810190610b7b9190613914565b612ae8565b604051610b8d91906130f3565b60405180910390f35b348015610ba257600080fd5b50610bab612bb7565b604051610bb891906130f3565b60405180910390f35b348015610bcd57600080fd5b50610be86004803603810190610be39190613a72565b612bbd565b604051610bf591906130f3565b60405180910390f35b348015610c0a57600080fd5b50610c256004803603810190610c209190612f43565b612ca2565b604051610c32919061354b565b60405180910390f35b348015610c4757600080fd5b50610c626004803603810190610c5d9190612f43565b612d4a565b604051610c7193929190613158565b60405180910390f35b610c826126fb565b80600260008481526020019081526020016000206000828254610ca59190613b2c565b925050819055505050565b6060600060065467ffffffffffffffff811115610cd057610ccf6131a0565b5b604051908082528060200260200182016040528015610d0357816020015b6060815260200190600190039081610cee5790505b509050600080600090505b600654811015610e145784600d60008381526020019081526020016000206000015403610e0157600d60008281526020019081526020016000206001018054610d5690613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8290613b8f565b8015610dcf5780601f10610da457610100808354040283529160200191610dcf565b820191906000526020600020905b815481529060010190602001808311610db257829003601f168201915b5050505050838381518110610de757610de6613bc0565b5b60200260200101819052508180610dfd90613bef565b9250505b8080610e0c90613bef565b915050610d0e565b508192505050919050565b6060600060075467ffffffffffffffff811115610e3f57610e3e6131a0565b5b604051908082528060200260200182016040528015610e7257816020015b6060815260200190600190039081610e5d5790505b509050600080600090505b600754811015610f835784600e60008381526020019081526020016000206000015403610f6257600e60008281526020019081526020016000206001018054610ec590613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef190613b8f565b8015610f3e5780601f10610f1357610100808354040283529160200191610f3e565b820191906000526020600020905b815481529060010190602001808311610f2157829003601f168201915b5050505050838381518110610f5657610f55613bc0565b5b60200260200101819052505b8180610f6d90613bef565b9250508080610f7b90613bef565b915050610e7d565b508192505050919050565b60065481565b600047905060003373ffffffffffffffffffffffffffffffffffffffff1682604051610fbf90613c68565b60006040518083038185875af1925050503d8060008114610ffc576040519150601f19603f3d011682016040523d82523d6000602084013e611001565b606091505b505090505050565b60085481565b601060205280600052604060002060009150905080600001549080600101549080600201805461103e90613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461106a90613b8f565b80156110b75780601f1061108c576101008083540402835291602001916110b7565b820191906000526020600020905b81548152906001019060200180831161109a57829003601f168201915b5050505050905083565b600080600090505b600654811015611127578280519060200120600d60008381526020019081526020016000206001016040516110fe9190613d15565b604051809103902003611114578091505061112d565b808061111f90613bef565b9150506110c9565b50600090505b919050565b600c60205280600052604060002060009150905080600001805461115590613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461118190613b8f565b80156111ce5780601f106111a3576101008083540402835291602001916111ce565b820191906000526020600020905b8154815290600101906020018083116111b157829003601f168201915b5050505050908060010180546111e390613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461120f90613b8f565b801561125c5780601f106112315761010080835404028352916020019161125c565b820191906000526020600020905b81548152906001019060200180831161123f57829003601f168201915b50505050509080600201805461127190613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461129d90613b8f565b80156112ea5780601f106112bf576101008083540402835291602001916112ea565b820191906000526020600020905b8154815290600101906020018083116112cd57829003601f168201915b5050505050905083565b6060600060065467ffffffffffffffff811115611314576113136131a0565b5b60405190808252806020026020018201604052801561134757816020015b60608152602001906001900390816113325790505b50905060005b60065481101561142757600d6000828152602001908152602001600020600101805461137890613b8f565b80601f01602080910402602001604051908101604052809291908181526020018280546113a490613b8f565b80156113f15780601f106113c6576101008083540402835291602001916113f1565b820191906000526020600020905b8154815290600101906020018083116113d457829003601f168201915b505050505082828151811061140957611408613bc0565b5b6020026020010181905250808061141f90613bef565b91505061134d565b508091505090565b60006040518060600160405280600a5481526020018481526020018381525060116000600a5481526020019081526020016000206000820151816000015560208201518160010155604082015181600201908161148c9190613ed8565b50905050600a60008154809291906114a390613bef565b9190505550600a54905092915050565b60126020528060005260406000206000915090508060000154908060010154908060020180546114e290613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461150e90613b8f565b801561155b5780601f106115305761010080835404028352916020019161155b565b820191906000526020600020905b81548152906001019060200180831161153e57829003601f168201915b5050505050905083565b60026020528060005260406000206000915090505481565b606061080073ffffffffffffffffffffffffffffffffffffffff1663a03ffee13060046040518363ffffffff1660e01b81526004016115bd92919061406f565b600060405180830381865afa1580156115da573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116039190614225565b905090565b600e60205280600052604060002060009150905080600001549080600101805461163190613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461165d90613b8f565b80156116aa5780601f1061167f576101008083540402835291602001916116aa565b820191906000526020600020905b81548152906001019060200180831161168d57829003601f168201915b5050505050908060020154905083565b60095481565b6060600060095467ffffffffffffffff8111156116e0576116df6131a0565b5b60405190808252806020026020018201604052801561171357816020015b60608152602001906001900390816116fe5790505b509050600080600090505b600954811015611846578560106000838152602001908152602001600020600001541480156117625750846010600083815260200190815260200160002060010154145b156118255760106000828152602001908152602001600020600201805461178890613b8f565b80601f01602080910402602001604051908101604052809291908181526020018280546117b490613b8f565b80156118015780601f106117d657610100808354040283529160200191611801565b820191906000526020600020905b8154815290600101906020018083116117e457829003601f168201915b505050505083838151811061181957611818613bc0565b5b60200260200101819052505b818061183090613bef565b925050808061183e90613bef565b91505061171e565b50819250505092915050565b600080600061080073ffffffffffffffffffffffffffffffffffffffff1663241774e63060046040518363ffffffff1660e01b815260040161189592919061406f565b600060405180830381865afa1580156118b2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906118db919061434a565b9150915080602001519250505090565b6060600c6000838152602001908152602001600020600101805461190e90613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461193a90613b8f565b80156119875780601f1061195c57610100808354040283529160200191611987565b820191906000526020600020905b81548152906001019060200180831161196a57829003601f168201915b50505050509050919050565b60006040518060600160405280600b5481526020018481526020018381525060126000600b548152602001908152602001600020600082015181600001556020820151816001015560408201518160020190816119f09190613ed8565b50905050600b6000815480929190611a0790613bef565b9190505550600b54905092915050565b600047905090565b6000604051806040016040528083815260200184815250600d60006006548152602001908152602001600020600082015181600001556020820151816001019081611a6a9190613ed8565b5090505060066000815480929190611a8190613bef565b9190505550600654905092915050565b60055481565b6060611aa16126fb565b600061080173ffffffffffffffffffffffffffffffffffffffff1663b46a8d613060046040518363ffffffff1660e01b8152600401611ae192919061406f565b6000604051808303816000875af1158015611b00573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611b299190614487565b905080600081518110611b3f57611b3e613bc0565b5b60200260200101516020015160036000828254611b5c9190613b2c565b9250508190555060006002600085815260200190815260200160002054905061080073ffffffffffffffffffffffffffffffffffffffff16633edab33c306004846040518463ffffffff1660e01b8152600401611bbb939291906144d0565b6020604051808303816000875af1158015611bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bfe919061450e565b50600082600081518110611c1557611c14613bc0565b5b60200260200101516020015182611c2c9190613b2c565b905060003373ffffffffffffffffffffffffffffffffffffffff1682604051611c5490613c68565b60006040518083038185875af1925050503d8060008114611c91576040519150601f19603f3d011682016040523d82523d6000602084013e611c96565b606091505b50509050600060026000888152602001908152602001600020819055506040518060400160405280601881526020017f53656e74204d6f6e657920746f2069646561206f776e65720000000000000000815250945050505050919050565b600d602052806000526040600020600091509050806000015490806001018054611d1d90613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054611d4990613b8f565b8015611d965780601f10611d6b57610100808354040283529160200191611d96565b820191906000526020600020905b815481529060010190602001808311611d7957829003601f168201915b5050505050905082565b60606000600a5467ffffffffffffffff811115611dc057611dbf6131a0565b5b604051908082528060200260200182016040528015611dee5781602001602082028036833780820191505090505b509050600080600090505b600a54811015611e785784601160008381526020019081526020016000206001015403611e65576011600082815260200190815260200160002060000154838381518110611e4a57611e49613bc0565b5b6020026020010181815250508180611e6190613bef565b9250505b8080611e7090613bef565b915050611df9565b508192505050919050565b60606000600b5467ffffffffffffffff811115611ea357611ea26131a0565b5b604051908082528060200260200182016040528015611ed15781602001602082028036833780820191505090505b509050600080600090505b600b54811015611f5b5784601260008381526020019081526020016000206001015403611f48576012600082815260200190815260200160002060000154838381518110611f2d57611f2c613bc0565b5b6020026020010181815250508180611f4490613bef565b9250505b8080611f5390613bef565b915050611edc565b508192505050919050565b600060405180606001604052808581526020018481526020018381525060106000600954815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611fc19190613ed8565b5090505060096000815480929190611fd890613bef565b919050555060095490509392505050565b81600c6000858152602001908152602001600020600001908161200c9190613ed8565b5080600c600085815260200190815260200160002060010190816120309190613ed8565b50505050565b6060600e6000838152602001908152602001600020600101805461205990613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461208590613b8f565b80156120d25780601f106120a7576101008083540402835291602001916120d2565b820191906000526020600020905b8154815290600101906020018083116120b557829003601f168201915b50505050509050919050565b600a5481565b6060600060075467ffffffffffffffff811115612104576121036131a0565b5b60405190808252806020026020018201604052801561213757816020015b60608152602001906001900390816121225790505b50905060005b60075481101561221757600e6000828152602001908152602001600020600101805461216890613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461219490613b8f565b80156121e15780601f106121b6576101008083540402835291602001916121e1565b820191906000526020600020905b8154815290600101906020018083116121c457829003601f168201915b50505050508282815181106121f9576121f8613bc0565b5b6020026020010181905250808061220f90613bef565b91505061213d565b508091505090565b600080600090505b600754811015612285578280519060200120600e600083815260200190815260200160002060010160405161225c9190613d15565b604051809103902003612272578091505061228b565b808061227d90613bef565b915050612227565b50600090505b919050565b80600e600084815260200190815260200160002060020160008282546122b69190613b2c565b925050819055505050565b61080073ffffffffffffffffffffffffffffffffffffffff166353266bbb306004846040518463ffffffff1660e01b8152600401612301939291906144d0565b6020604051808303816000875af1158015612320573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612344919061450e565b5050565b600b5481565b600080600090505b6007548110156123ca578280519060200120600e600083815260200190815260200160002060010160405161238b9190613d15565b6040518091039020036123b757600e6000828152602001908152602001600020600001549150506123d0565b80806123c290613bef565b915050612356565b50600090505b919050565b606061080173ffffffffffffffffffffffffffffffffffffffff16639ad563b43060046040518363ffffffff1660e01b815260040161241592919061406f565b600060405180830381865afa158015612432573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061245b91906146c8565b905090565b60005b6005548110156124c657600c6000828152602001908152602001600020600080820160006124919190612e5c565b6001820160006124a19190612e5c565b6002820160006124b19190612e5c565b505080806124be90613bef565b915050612463565b5060005b60065481101561251557600d60008281526020019081526020016000206000808201600090556001820160006125009190612e5c565b5050808061250d90613bef565b9150506124ca565b5060005b60075481101561256c57600e600082815260200190815260200160002060008082016000905560018201600061254f9190612e5c565b60028201600090555050808061256490613bef565b915050612519565b5060005b6006548110156125c357600f600082815260200190815260200160002060008082016000905560018201600090556002820160006125ae9190612e5c565b505080806125bb90613bef565b915050612570565b5060005b600a5481101561261a576011600082815260200190815260200160002060008082016000905560018201600090556002820160006126059190612e5c565b5050808061261290613bef565b9150506125c7565b5060005b600b548110156126715760126000828152602001908152602001600020600080820160009055600182016000905560028201600061265c9190612e5c565b5050808061266990613bef565b91505061261e565b5060005b6009548110156126c8576010600082815260200190815260200160002060008082016000905560018201600090556002820160006126b39190612e5c565b505080806126c090613bef565b915050612675565b506000600581905550600060068190555060006007819055506000600a819055506000600b819055506000600981905550565b600061080073ffffffffffffffffffffffffffffffffffffffff1663b6039895327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60006040518463ffffffff1660e01b815260040161275d9392919061484a565b6020604051808303816000875af115801561277c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a091906148c0565b9050806127e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127d990614939565b60405180910390fd5b600061080173ffffffffffffffffffffffffffffffffffffffff16637a9841ed3260016040518363ffffffff1660e01b8152600401612822929190614959565b6020604051808303816000875af1158015612841573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061286591906148c0565b9050806128a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161289e906149d5565b60405180910390fd5b5050565b60116020528060005260406000206000915090508060000154908060010154908060020180546128da90613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461290690613b8f565b80156129535780601f1061292857610100808354040283529160200191612953565b820191906000526020600020905b81548152906001019060200180831161293657829003601f168201915b5050505050905083565b80600e600084815260200190815260200160002060010190816129809190613ed8565b505050565b6060600060055467ffffffffffffffff8111156129a5576129a46131a0565b5b6040519080825280602002602001820160405280156129d857816020015b60608152602001906001900390816129c35790505b50905060005b600554811015612ab857600c60008281526020019081526020016000206001018054612a0990613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054612a3590613b8f565b8015612a825780601f10612a5757610100808354040283529160200191612a82565b820191906000526020600020905b815481529060010190602001808311612a6557829003601f168201915b5050505050828281518110612a9a57612a99613bc0565b5b60200260200101819052508080612ab090613bef565b9150506129de565b508091505090565b80600d60008481526020019081526020016000206001019081612ae39190613ed8565b505050565b600060405180606001604052808481526020018381526020016040518060400160405280600581526020017f46616c7365000000000000000000000000000000000000000000000000000000815250815250600c600060055481526020019081526020016000206000820151816000019081612b649190613ed8565b506020820151816001019081612b7a9190613ed8565b506040820151816002019081612b909190613ed8565b5090505060056000815480929190612ba790613bef565b9190505550600554905092915050565b60075481565b600060405180606001604052808481526020018581526020016000815250600e60006007548152602001908152602001600020600082015181600001556020820151816001019081612c0f9190613ed8565b506040820151816002015590505060076000815480929190612c3090613bef565b919050555060005b8251811015612c9557612c6a600754600854858481518110612c5d57612c5c613bc0565b5b6020026020010151612dfc565b60086000815480929190612c7d90613bef565b91905055508080612c8d90613bef565b915050612c38565b5060075490509392505050565b6060600d60008381526020019081526020016000206001018054612cc590613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054612cf190613b8f565b8015612d3e5780601f10612d1357610100808354040283529160200191612d3e565b820191906000526020600020905b815481529060010190602001808311612d2157829003601f168201915b50505050509050919050565b600f602052806000526040600020600091509050806000015490806001015490806002018054612d7990613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054612da590613b8f565b8015612df25780601f10612dc757610100808354040283529160200191612df2565b820191906000526020600020905b815481529060010190602001808311612dd557829003601f168201915b5050505050905083565b604051806060016040528084815260200183815260200182815250600f600084815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081612e539190613ed8565b50905050505050565b508054612e6890613b8f565b6000825580601f10612e7a5750612e99565b601f016020900490600052602060002090810190612e989190612e9c565b5b50565b5b80821115612eb5576000816000905550600101612e9d565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b612ee081612ecd565b8114612eeb57600080fd5b50565b600081359050612efd81612ed7565b92915050565b60008060408385031215612f1a57612f19612ec3565b5b6000612f2885828601612eee565b9250506020612f3985828601612eee565b9150509250929050565b600060208284031215612f5957612f58612ec3565b5b6000612f6784828501612eee565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612fd6578082015181840152602081019050612fbb565b60008484015250505050565b6000601f19601f8301169050919050565b6000612ffe82612f9c565b6130088185612fa7565b9350613018818560208601612fb8565b61302181612fe2565b840191505092915050565b60006130388383612ff3565b905092915050565b6000602082019050919050565b600061305882612f70565b6130628185612f7b565b93508360208202850161307485612f8c565b8060005b858110156130b05784840389528151613091858261302c565b945061309c83613040565b925060208a01995050600181019050613078565b50829750879550505050505092915050565b600060208201905081810360008301526130dc818461304d565b905092915050565b6130ed81612ecd565b82525050565b600060208201905061310860008301846130e4565b92915050565b600082825260208201905092915050565b600061312a82612f9c565b613134818561310e565b9350613144818560208601612fb8565b61314d81612fe2565b840191505092915050565b600060608201905061316d60008301866130e4565b61317a60208301856130e4565b818103604083015261318c818461311f565b9050949350505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6131d882612fe2565b810181811067ffffffffffffffff821117156131f7576131f66131a0565b5b80604052505050565b600061320a612eb9565b905061321682826131cf565b919050565b600067ffffffffffffffff821115613236576132356131a0565b5b61323f82612fe2565b9050602081019050919050565b82818337600083830152505050565b600061326e6132698461321b565b613200565b90508281526020810184848401111561328a5761328961319b565b5b61329584828561324c565b509392505050565b600082601f8301126132b2576132b1613196565b5b81356132c284826020860161325b565b91505092915050565b6000602082840312156132e1576132e0612ec3565b5b600082013567ffffffffffffffff8111156132ff576132fe612ec8565b5b61330b8482850161329d565b91505092915050565b6000606082019050818103600083015261332e818661311f565b90508181036020830152613342818561311f565b90508181036040830152613356818461311f565b9050949350505050565b6000806040838503121561337757613376612ec3565b5b600061338585828601612eee565b925050602083013567ffffffffffffffff8111156133a6576133a5612ec8565b5b6133b28582860161329d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008160070b9050919050565b6133fe816133e8565b82525050565b61340d81612ecd565b82525050565b60808201600082015161342960008501826133f5565b50602082015161343c60208501826133f5565b50604082015161344f6040850182613404565b5060608201516134626060850182613404565b50505050565b60006134748383613413565b60808301905092915050565b6000602082019050919050565b6000613498826133bc565b6134a281856133c7565b93506134ad836133d8565b8060005b838110156134de5781516134c58882613468565b97506134d083613480565b9250506001810190506134b1565b5085935050505092915050565b60006020820190508181036000830152613505818461348d565b905092915050565b600060608201905061352260008301866130e4565b8181036020830152613534818561311f565b905061354360408301846130e4565b949350505050565b60006020820190508181036000830152613565818461311f565b905092915050565b6000806040838503121561358457613583612ec3565b5b600083013567ffffffffffffffff8111156135a2576135a1612ec8565b5b6135ae8582860161329d565b92505060206135bf85828601612eee565b9150509250929050565b60006040820190506135de60008301856130e4565b81810360208301526135f0818461311f565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006136318383613404565b60208301905092915050565b6000602082019050919050565b6000613655826135f9565b61365f8185613604565b935061366a83613615565b8060005b8381101561369b5781516136828882613625565b975061368d8361363d565b92505060018101905061366e565b5085935050505092915050565b600060208201905081810360008301526136c2818461364a565b905092915050565b6000806000606084860312156136e3576136e2612ec3565b5b60006136f186828701612eee565b935050602061370286828701612eee565b925050604084013567ffffffffffffffff81111561372357613722612ec8565b5b61372f8682870161329d565b9150509250925092565b60008060006060848603121561375257613751612ec3565b5b600061376086828701612eee565b935050602084013567ffffffffffffffff81111561378157613780612ec8565b5b61378d8682870161329d565b925050604084013567ffffffffffffffff8111156137ae576137ad612ec8565b5b6137ba8682870161329d565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060ff82169050919050565b613806816137f0565b82525050565b600060608301600083015184820360008601526138298282612ff3565b915050602083015161383e6020860182613404565b50604083015161385160408601826137fd565b508091505092915050565b6000613868838361380c565b905092915050565b6000602082019050919050565b6000613888826137c4565b61389281856137cf565b9350836020820285016138a4856137e0565b8060005b858110156138e057848403895281516138c1858261385c565b94506138cc83613870565b925060208a019950506001810190506138a8565b50829750879550505050505092915050565b6000602082019050818103600083015261390c818461387d565b905092915050565b6000806040838503121561392b5761392a612ec3565b5b600083013567ffffffffffffffff81111561394957613948612ec8565b5b6139558582860161329d565b925050602083013567ffffffffffffffff81111561397657613975612ec8565b5b6139828582860161329d565b9150509250929050565b600067ffffffffffffffff8211156139a7576139a66131a0565b5b602082029050602081019050919050565b600080fd5b60006139d06139cb8461398c565b613200565b905080838252602082019050602084028301858111156139f3576139f26139b8565b5b835b81811015613a3a57803567ffffffffffffffff811115613a1857613a17613196565b5b808601613a25898261329d565b855260208501945050506020810190506139f5565b5050509392505050565b600082601f830112613a5957613a58613196565b5b8135613a698482602086016139bd565b91505092915050565b600080600060608486031215613a8b57613a8a612ec3565b5b600084013567ffffffffffffffff811115613aa957613aa8612ec8565b5b613ab58682870161329d565b9350506020613ac686828701612eee565b925050604084013567ffffffffffffffff811115613ae757613ae6612ec8565b5b613af386828701613a44565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613b3782612ecd565b9150613b4283612ecd565b9250828201905080821115613b5a57613b59613afd565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613ba757607f821691505b602082108103613bba57613bb9613b60565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613bfa82612ecd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613c2c57613c2b613afd565b5b600182019050919050565b600081905092915050565b50565b6000613c52600083613c37565b9150613c5d82613c42565b600082019050919050565b6000613c7382613c45565b9150819050919050565b60008190508160005260206000209050919050565b60008154613c9f81613b8f565b613ca98186613c37565b94506001821660008114613cc45760018114613cd957613d0c565b60ff1983168652811515820286019350613d0c565b613ce285613c7d565b60005b83811015613d0457815481890152600182019150602081019050613ce5565b838801955050505b50505092915050565b6000613d218284613c92565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613d8e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613d51565b613d988683613d51565b95508019841693508086168417925050509392505050565b6000819050919050565b6000613dd5613dd0613dcb84612ecd565b613db0565b612ecd565b9050919050565b6000819050919050565b613def83613dba565b613e03613dfb82613ddc565b848454613d5e565b825550505050565b600090565b613e18613e0b565b613e23818484613de6565b505050565b5b81811015613e4757613e3c600082613e10565b600181019050613e29565b5050565b601f821115613e8c57613e5d81613d2c565b613e6684613d41565b81016020851015613e75578190505b613e89613e8185613d41565b830182613e28565b50505b505050565b600082821c905092915050565b6000613eaf60001984600802613e91565b1980831691505092915050565b6000613ec88383613e9e565b9150826002028217905092915050565b613ee182612f9c565b67ffffffffffffffff811115613efa57613ef96131a0565b5b613f048254613b8f565b613f0f828285613e4b565b600060209050601f831160018114613f425760008415613f30578287015190505b613f3a8582613ebc565b865550613fa2565b601f198416613f5086613d2c565b60005b82811015613f7857848901518255600182019150602085019450602081019050613f53565b86831015613f955784890151613f91601f891682613e9e565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613fd582613faa565b9050919050565b613fe581613fca565b82525050565b60008154613ff881613b8f565b614002818661310e565b9450600182166000811461401d576001811461403357614066565b60ff198316865281151560200286019350614066565b61403c85613d2c565b60005b8381101561405e5781548189015260018201915060208101905061403f565b808801955050505b50505092915050565b60006040820190506140846000830185613fdc565b81810360208301526140968184613feb565b90509392505050565b600067ffffffffffffffff8211156140ba576140b96131a0565b5b602082029050602081019050919050565b600080fd5b600080fd5b6140de816133e8565b81146140e957600080fd5b50565b6000815190506140fb816140d5565b92915050565b60008151905061411081612ed7565b92915050565b60006080828403121561412c5761412b6140cb565b5b6141366080613200565b90506000614146848285016140ec565b600083015250602061415a848285016140ec565b602083015250604061416e84828501614101565b604083015250606061418284828501614101565b60608301525092915050565b60006141a161419c8461409f565b613200565b905080838252602082019050608084028301858111156141c4576141c36139b8565b5b835b818110156141ed57806141d98882614116565b8452602084019350506080810190506141c6565b5050509392505050565b600082601f83011261420c5761420b613196565b5b815161421c84826020860161418e565b91505092915050565b60006020828403121561423b5761423a612ec3565b5b600082015167ffffffffffffffff81111561425957614258612ec8565b5b614265848285016141f7565b91505092915050565b600061428161427c8461321b565b613200565b90508281526020810184848401111561429d5761429c61319b565b5b6142a8848285612fb8565b509392505050565b600082601f8301126142c5576142c4613196565b5b81516142d584826020860161426e565b91505092915050565b6000604082840312156142f4576142f36140cb565b5b6142fe6040613200565b9050600082015167ffffffffffffffff81111561431e5761431d6140d0565b5b61432a848285016142b0565b600083015250602061433e84828501614101565b60208301525092915050565b6000806040838503121561436157614360612ec3565b5b600061436f85828601614101565b925050602083015167ffffffffffffffff8111156143905761438f612ec8565b5b61439c858286016142de565b9150509250929050565b600067ffffffffffffffff8211156143c1576143c06131a0565b5b602082029050602081019050919050565b60006143e56143e0846143a6565b613200565b90508083825260208201905060208402830185811115614408576144076139b8565b5b835b8181101561444f57805167ffffffffffffffff81111561442d5761442c613196565b5b80860161443a89826142de565b8552602085019450505060208101905061440a565b5050509392505050565b600082601f83011261446e5761446d613196565b5b815161447e8482602086016143d2565b91505092915050565b60006020828403121561449d5761449c612ec3565b5b600082015167ffffffffffffffff8111156144bb576144ba612ec8565b5b6144c784828501614459565b91505092915050565b60006060820190506144e56000830186613fdc565b81810360208301526144f78185613feb565b905061450660408301846130e4565b949350505050565b60006020828403121561452457614523612ec3565b5b6000614532848285016140ec565b91505092915050565b600067ffffffffffffffff821115614556576145556131a0565b5b602082029050602081019050919050565b614570816137f0565b811461457b57600080fd5b50565b60008151905061458d81614567565b92915050565b6000606082840312156145a9576145a86140cb565b5b6145b36060613200565b9050600082015167ffffffffffffffff8111156145d3576145d26140d0565b5b6145df848285016142b0565b60008301525060206145f384828501614101565b60208301525060406146078482850161457e565b60408301525092915050565b60006146266146218461453b565b613200565b90508083825260208201905060208402830185811115614649576146486139b8565b5b835b8181101561469057805167ffffffffffffffff81111561466e5761466d613196565b5b80860161467b8982614593565b8552602085019450505060208101905061464b565b5050509392505050565b600082601f8301126146af576146ae613196565b5b81516146bf848260208601614613565b91505092915050565b6000602082840312156146de576146dd612ec3565b5b600082015167ffffffffffffffff8111156146fc576146fb612ec8565b5b6147088482850161469a565b91505092915050565b600081549050919050565b60008190508160005260206000209050919050565b6000815461473e81613b8f565b6147488186612fa7565b945060018216600081146147635760018114614779576147ac565b60ff1983168652811515602002860193506147ac565b61478285613d2c565b60005b838110156147a457815481890152600182019150602081019050614785565b808801955050505b50505092915050565b60006147c18383614731565b905092915050565b6000600182019050919050565b60006147e182614711565b6147eb8185612f7b565b9350836020820285016147fd8561471c565b8060005b858110156148385784840389528161481985826147b5565b9450614824836147c9565b925060208a01995050600181019050614801565b50829750879550505050505092915050565b600060608201905061485f6000830186613fdc565b61486c60208301856130e4565b818103604083015261487e81846147d6565b9050949350505050565b60008115159050919050565b61489d81614888565b81146148a857600080fd5b50565b6000815190506148ba81614894565b92915050565b6000602082840312156148d6576148d5612ec3565b5b60006148e4848285016148ab565b91505092915050565b7f5374616b696e6720417070726f7665206661696c656400000000000000000000600082015250565b600061492360168361310e565b915061492e826148ed565b602082019050919050565b6000602082019050818103600083015261495281614916565b9050919050565b600060408201905061496e6000830185613fdc565b818103602083015261498081846147d6565b90509392505050565b7f446973747269627574696f6e20417070726f7665206661696c65640000000000600082015250565b60006149bf601b8361310e565b91506149ca82614989565b602082019050919050565b600060208201905081810360008301526149ee816149b2565b905091905056fea2646970667358221220d55721b5d9a50ad0201a19dfe32c7eca381a4ee4d4c390256db97ada705bc5b064736f6c634300081100332f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c656761746565766d6f7376616c6f7065723135387777617334763666676375327833706c67373073367530666d306c6c653233376b6c74722f636f736d6f732e7374616b696e672e763162657461312e4d7367556e64656c65676174652f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367576974686472617744656c656761746f725265776172642f636f736d6f732e7374616b696e672e763162657461312e4d736744656c6567617465","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x5099 PUSH1 0x23 SWAP2 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x503D PUSH1 0x25 SWAP2 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4FE0 PUSH1 0x2A SWAP2 CODECOPY DUP2 MSTORE POP PUSH1 0x0 SWAP1 PUSH1 0x3 PUSH3 0x7C SWAP3 SWAP2 SWAP1 PUSH3 0xF7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x5062 PUSH1 0x37 SWAP2 CODECOPY DUP2 MSTORE POP PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH3 0xB7 SWAP3 SWAP2 SWAP1 PUSH3 0x157 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x500A PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x4 SWAP1 DUP2 PUSH3 0xE2 SWAP2 SWAP1 PUSH3 0x4BE JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x5A5 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x144 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x143 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH3 0x132 SWAP2 SWAP1 PUSH3 0x4BE JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x118 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x153 SWAP2 SWAP1 PUSH3 0x1B7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x1A4 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1A3 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH3 0x192 SWAP2 SWAP1 PUSH3 0x4BE JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x178 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1B3 SWAP2 SWAP1 PUSH3 0x1B7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1DB JUMPI PUSH1 0x0 DUP2 DUP2 PUSH3 0x1D1 SWAP2 SWAP1 PUSH3 0x1DF JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x1B8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x1ED SWAP1 PUSH3 0x2AD JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x201 JUMPI POP PUSH3 0x222 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x221 SWAP2 SWAP1 PUSH3 0x225 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x240 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x226 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2DC JUMPI PUSH3 0x2DB PUSH3 0x27E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x346 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x307 JUMP JUMPDEST PUSH3 0x352 DUP7 DUP4 PUSH3 0x307 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x39F PUSH3 0x399 PUSH3 0x393 DUP5 PUSH3 0x36A JUMP JUMPDEST PUSH3 0x374 JUMP JUMPDEST PUSH3 0x36A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3BB DUP4 PUSH3 0x37E JUMP JUMPDEST PUSH3 0x3D3 PUSH3 0x3CA DUP3 PUSH3 0x3A6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x314 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3EA PUSH3 0x3DB JUMP JUMPDEST PUSH3 0x3F7 DUP2 DUP5 DUP5 PUSH3 0x3B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x41F JUMPI PUSH3 0x413 PUSH1 0x0 DUP3 PUSH3 0x3E0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3FD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x46E JUMPI PUSH3 0x438 DUP2 PUSH3 0x2E2 JUMP JUMPDEST PUSH3 0x443 DUP5 PUSH3 0x2F7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x453 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x46B PUSH3 0x462 DUP6 PUSH3 0x2F7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3FC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x493 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x473 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4AE DUP4 DUP4 PUSH3 0x480 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4C9 DUP3 PUSH3 0x244 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4E5 JUMPI PUSH3 0x4E4 PUSH3 0x24F JUMP JUMPDEST JUMPDEST PUSH3 0x4F1 DUP3 SLOAD PUSH3 0x2AD JUMP JUMPDEST PUSH3 0x4FE DUP3 DUP3 DUP6 PUSH3 0x423 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x536 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x521 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x52D DUP6 DUP3 PUSH3 0x4A0 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x59D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x546 DUP7 PUSH3 0x2E2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x570 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x549 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x590 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x58C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x480 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A2B DUP1 PUSH3 0x5B5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2AE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F2035D4 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0xAA4CDF2A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC04FE978 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD3791B20 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xB96 JUMPI DUP1 PUSH4 0xE3280C96 EQ PUSH2 0xBC1 JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xBFE JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xC3B JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xB05 JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xB30 JUMPI DUP1 PUSH4 0xC4C2E364 EQ PUSH2 0xB59 JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0xA07 JUMPI DUP1 PUSH4 0xAE429E47 EQ PUSH2 0xA44 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0xA6F JUMPI DUP1 PUSH4 0xB2947C71 EQ PUSH2 0xA86 JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0xA9D JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xADC JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0x9077007D GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x8F7 JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x922 JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x94D JUMPI DUP1 PUSH4 0xA2CDB3A9 EQ PUSH2 0x98A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x9B3 JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x9DC JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x7DA JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x817 JUMPI DUP1 PUSH4 0x82FCC732 EQ PUSH2 0x854 JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x8BA JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0x414D9A2B GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x5D907DA1 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0x6AF3304E EQ PUSH2 0x68F JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0x71085CAB EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x734 JUMPI DUP1 PUSH4 0x7E22CD11 EQ PUSH2 0x75F JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0x414D9A2B EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0x42C7652A EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x5BF JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0x53F68802 EQ PUSH2 0x627 JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0x1BA44C4C GT PUSH2 0x26B JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x2D5BF5B0 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x4D9 JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0xCDD53F6 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x109AC970 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x1B52B9DE EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x38B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0xC7A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH2 0xF94 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A0 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x12F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x3360 JUMP JUMPDEST PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56A PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D4 PUSH2 0x16BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x611 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63C PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x679 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x3360 JUMP JUMPDEST PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E1 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x719 SWAP2 SWAP1 PUSH2 0x356D JUMP JUMPDEST PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x749 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x786 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D1 SWAP3 SWAP2 SWAP1 PUSH2 0x35C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x801 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1DA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x839 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1E83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x36CA JUMP JUMPDEST PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x888 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B3 SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH2 0x1FE9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8DC SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90C PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x937 PUSH2 0x20E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x944 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x974 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96F SWAP2 SWAP1 PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x221F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0x2290 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x22C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F1 PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA59 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA84 PUSH2 0x2460 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9B PUSH2 0x26FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB03 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x3360 JUMP JUMPDEST PUSH2 0x295D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1A PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB57 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x3360 JUMP JUMPDEST PUSH2 0x2AC0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB80 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB7B SWAP2 SWAP1 PUSH2 0x3914 JUMP JUMPDEST PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBAB PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE3 SWAP2 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH2 0x2BBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC25 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC20 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC32 SWAP2 SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC62 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x2D4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC71 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC82 PUSH2 0x26FB JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x3B2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCCF PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD03 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCEE JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xE14 JUMPI DUP5 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xE01 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD56 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD82 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDCF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDA4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDCF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xDFD SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE0C SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD0E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE3E PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE72 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE5D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xF83 JUMPI DUP5 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xF62 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xEC5 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEF1 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF3E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF13 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF3E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF21 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF56 JUMPI PUSH2 0xF55 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xF6D SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xF7B SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE7D JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xFBF SWAP1 PUSH2 0x3C68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x103E SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x106A SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x108C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x109A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1127 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1114 JUMPI DUP1 SWAP2 POP POP PUSH2 0x112D JUMP JUMPDEST DUP1 DUP1 PUSH2 0x111F SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10C9 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1155 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1181 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x11E3 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x120F SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x125C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1231 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x125C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x123F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1271 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x129D SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1314 JUMPI PUSH2 0x1313 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1347 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1332 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1427 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1378 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13A4 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13F1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13D4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1409 JUMPI PUSH2 0x1408 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x141F SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x134D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x148C SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x14A3 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x14E2 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x150E SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x155B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1530 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x155B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x153E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA03FFEE1 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BD SWAP3 SWAP2 SWAP1 PUSH2 0x406F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x4225 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1631 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x165D SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x167F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x168D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E0 JUMPI PUSH2 0x16DF PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1713 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x16FE JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1846 JUMPI DUP6 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x1762 JUMPI POP DUP5 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1825 JUMPI PUSH1 0x10 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1788 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17B4 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1801 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17D6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1801 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1819 JUMPI PUSH2 0x1818 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x1830 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x183E SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x171E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x241774E6 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1895 SWAP3 SWAP2 SWAP1 PUSH2 0x406F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18DB SWAP2 SWAP1 PUSH2 0x434A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x190E SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x193A SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1987 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x195C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1987 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x196A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0xB SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x19F0 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xB PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A07 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xB SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1A6A SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A81 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1AA1 PUSH2 0x26FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB46A8D61 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE1 SWAP3 SWAP2 SWAP1 PUSH2 0x406F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B29 SWAP2 SWAP1 PUSH2 0x4487 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B3F JUMPI PUSH2 0x1B3E PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B5C SWAP2 SWAP1 PUSH2 0x3B2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3EDAB33C ADDRESS PUSH1 0x4 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BFE SWAP2 SWAP1 PUSH2 0x450E JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C15 JUMPI PUSH2 0x1C14 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x1C2C SWAP2 SWAP1 PUSH2 0x3B2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C54 SWAP1 PUSH2 0x3C68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C91 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53656E74204D6F6E657920746F2069646561206F776E65720000000000000000 DUP2 MSTORE POP SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1D1D SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D49 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D96 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D6B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D96 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D79 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DC0 JUMPI PUSH2 0x1DBF PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DEE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x1E78 JUMPI DUP5 PUSH1 0x11 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1E65 JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E4A JUMPI PUSH2 0x1E49 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1E61 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1E70 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1DF9 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EA3 JUMPI PUSH2 0x1EA2 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1ED1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1F5B JUMPI DUP5 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1F48 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F2D JUMPI PUSH2 0x1F2C PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1F44 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1F53 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EDC JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1FC1 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD8 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xC PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x200C SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP DUP1 PUSH1 0xC PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2030 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2059 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2085 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2104 JUMPI PUSH2 0x2103 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2137 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2122 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2217 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2168 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2194 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x21F9 JUMPI PUSH2 0x21F8 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x220F SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x213D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2285 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x225C SWAP2 SWAP1 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2272 JUMPI DUP1 SWAP2 POP POP PUSH2 0x228B JUMP JUMPDEST DUP1 DUP1 PUSH2 0x227D SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2227 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x22B6 SWAP2 SWAP1 PUSH2 0x3B2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x53266BBB ADDRESS PUSH1 0x4 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2301 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2320 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2344 SWAP2 SWAP1 PUSH2 0x450E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x23CA JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x238B SWAP2 SWAP1 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x23B7 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x23D0 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x23C2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2356 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9AD563B4 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2415 SWAP3 SWAP2 SWAP1 PUSH2 0x406F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x245B SWAP2 SWAP1 PUSH2 0x46C8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x24C6 JUMPI PUSH1 0xC PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2491 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x24A1 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x24B1 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x24BE SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2463 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2515 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2500 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x250D SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x24CA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x256C JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x254F SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2564 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2519 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x25C3 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x25AE SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x25BB SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2570 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x261A JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2605 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2612 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25C7 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2671 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x265C SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2669 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x261E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x26C8 JUMPI PUSH1 0x10 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x26B3 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x26C0 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2675 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6039895 ORIGIN PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x275D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x484A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x277C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27A0 SWAP2 SWAP1 PUSH2 0x48C0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x27E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27D9 SWAP1 PUSH2 0x4939 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7A9841ED ORIGIN PUSH1 0x1 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2822 SWAP3 SWAP2 SWAP1 PUSH2 0x4959 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2841 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2865 SWAP2 SWAP1 PUSH2 0x48C0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x28A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x289E SWAP1 PUSH2 0x49D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x28DA SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2906 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2953 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2928 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2953 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2936 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2980 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A5 JUMPI PUSH2 0x29A4 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29D8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x29C3 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x2AB8 JUMPI PUSH1 0xC PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2A09 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A35 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A82 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A57 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A82 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A65 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A9A JUMPI PUSH2 0x2A99 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2AB0 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x29DE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2AE3 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2B64 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2B7A SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2B90 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2BA7 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2C0F SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2C30 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2C95 JUMPI PUSH2 0x2C6A PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2C5D JUMPI PUSH2 0x2C5C PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2DFC JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2C7D SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x2C8D SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2C38 JUMP JUMPDEST POP PUSH1 0x7 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2CC5 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CF1 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D3E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D13 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D3E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D21 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2D79 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DA5 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DF2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DC7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DF2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DD5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2E53 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2E68 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2E7A JUMPI POP PUSH2 0x2E99 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2E98 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2EB5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2E9D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE0 DUP2 PUSH2 0x2ECD JUMP JUMPDEST DUP2 EQ PUSH2 0x2EEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EFD DUP2 PUSH2 0x2ED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F1A JUMPI PUSH2 0x2F19 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F28 DUP6 DUP3 DUP7 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F39 DUP6 DUP3 DUP7 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F59 JUMPI PUSH2 0x2F58 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F67 DUP5 DUP3 DUP6 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FD6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FBB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FFE DUP3 PUSH2 0x2F9C JUMP JUMPDEST PUSH2 0x3008 DUP2 DUP6 PUSH2 0x2FA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x3018 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x3021 DUP2 PUSH2 0x2FE2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3038 DUP4 DUP4 PUSH2 0x2FF3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3058 DUP3 PUSH2 0x2F70 JUMP JUMPDEST PUSH2 0x3062 DUP2 DUP6 PUSH2 0x2F7B JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3074 DUP6 PUSH2 0x2F8C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x30B0 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3091 DUP6 DUP3 PUSH2 0x302C JUMP JUMPDEST SWAP5 POP PUSH2 0x309C DUP4 PUSH2 0x3040 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3078 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30DC DUP2 DUP5 PUSH2 0x304D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30ED DUP2 PUSH2 0x2ECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3108 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312A DUP3 PUSH2 0x2F9C JUMP JUMPDEST PUSH2 0x3134 DUP2 DUP6 PUSH2 0x310E JUMP JUMPDEST SWAP4 POP PUSH2 0x3144 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x314D DUP2 PUSH2 0x2FE2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x316D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x30E4 JUMP JUMPDEST PUSH2 0x317A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x30E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x318C DUP2 DUP5 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x31D8 DUP3 PUSH2 0x2FE2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x31F7 JUMPI PUSH2 0x31F6 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x320A PUSH2 0x2EB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3216 DUP3 DUP3 PUSH2 0x31CF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3236 JUMPI PUSH2 0x3235 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH2 0x323F DUP3 PUSH2 0x2FE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x326E PUSH2 0x3269 DUP5 PUSH2 0x321B JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x328A JUMPI PUSH2 0x3289 PUSH2 0x319B JUMP JUMPDEST JUMPDEST PUSH2 0x3295 DUP5 DUP3 DUP6 PUSH2 0x324C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32B2 JUMPI PUSH2 0x32B1 PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32C2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x325B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32E1 JUMPI PUSH2 0x32E0 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32FF JUMPI PUSH2 0x32FE PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x330B DUP5 DUP3 DUP6 ADD PUSH2 0x329D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x332E DUP2 DUP7 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3342 DUP2 DUP6 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3356 DUP2 DUP5 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3377 JUMPI PUSH2 0x3376 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3385 DUP6 DUP3 DUP7 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33A6 JUMPI PUSH2 0x33A5 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x33B2 DUP6 DUP3 DUP7 ADD PUSH2 0x329D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33FE DUP2 PUSH2 0x33E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x340D DUP2 PUSH2 0x2ECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3429 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x33F5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x343C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x33F5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x344F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3404 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3462 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3404 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3474 DUP4 DUP4 PUSH2 0x3413 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3498 DUP3 PUSH2 0x33BC JUMP JUMPDEST PUSH2 0x34A2 DUP2 DUP6 PUSH2 0x33C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x34AD DUP4 PUSH2 0x33D8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34DE JUMPI DUP2 MLOAD PUSH2 0x34C5 DUP9 DUP3 PUSH2 0x3468 JUMP JUMPDEST SWAP8 POP PUSH2 0x34D0 DUP4 PUSH2 0x3480 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x34B1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3505 DUP2 DUP5 PUSH2 0x348D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3522 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x30E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3534 DUP2 DUP6 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP PUSH2 0x3543 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x30E4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3565 DUP2 DUP5 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3584 JUMPI PUSH2 0x3583 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35A2 JUMPI PUSH2 0x35A1 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x35AE DUP6 DUP3 DUP7 ADD PUSH2 0x329D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35BF DUP6 DUP3 DUP7 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35DE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x35F0 DUP2 DUP5 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3631 DUP4 DUP4 PUSH2 0x3404 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3655 DUP3 PUSH2 0x35F9 JUMP JUMPDEST PUSH2 0x365F DUP2 DUP6 PUSH2 0x3604 JUMP JUMPDEST SWAP4 POP PUSH2 0x366A DUP4 PUSH2 0x3615 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x369B JUMPI DUP2 MLOAD PUSH2 0x3682 DUP9 DUP3 PUSH2 0x3625 JUMP JUMPDEST SWAP8 POP PUSH2 0x368D DUP4 PUSH2 0x363D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x366E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36C2 DUP2 DUP5 PUSH2 0x364A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x36E3 JUMPI PUSH2 0x36E2 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36F1 DUP7 DUP3 DUP8 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3702 DUP7 DUP3 DUP8 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3723 JUMPI PUSH2 0x3722 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x372F DUP7 DUP3 DUP8 ADD PUSH2 0x329D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3752 JUMPI PUSH2 0x3751 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3760 DUP7 DUP3 DUP8 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3781 JUMPI PUSH2 0x3780 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x378D DUP7 DUP3 DUP8 ADD PUSH2 0x329D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37AE JUMPI PUSH2 0x37AD PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x37BA DUP7 DUP3 DUP8 ADD PUSH2 0x329D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3806 DUP2 PUSH2 0x37F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x3829 DUP3 DUP3 PUSH2 0x2FF3 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x383E PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x3404 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x3851 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x37FD JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3868 DUP4 DUP4 PUSH2 0x380C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3888 DUP3 PUSH2 0x37C4 JUMP JUMPDEST PUSH2 0x3892 DUP2 DUP6 PUSH2 0x37CF JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x38A4 DUP6 PUSH2 0x37E0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x38E0 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x38C1 DUP6 DUP3 PUSH2 0x385C JUMP JUMPDEST SWAP5 POP PUSH2 0x38CC DUP4 PUSH2 0x3870 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x38A8 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x390C DUP2 DUP5 PUSH2 0x387D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x392B JUMPI PUSH2 0x392A PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3949 JUMPI PUSH2 0x3948 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x3955 DUP6 DUP3 DUP7 ADD PUSH2 0x329D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3976 JUMPI PUSH2 0x3975 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x3982 DUP6 DUP3 DUP7 ADD PUSH2 0x329D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x39A7 JUMPI PUSH2 0x39A6 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39D0 PUSH2 0x39CB DUP5 PUSH2 0x398C JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x39F3 JUMPI PUSH2 0x39F2 PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A3A JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A18 JUMPI PUSH2 0x3A17 PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3A25 DUP10 DUP3 PUSH2 0x329D JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39F5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A59 JUMPI PUSH2 0x3A58 PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A69 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x39BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3A8B JUMPI PUSH2 0x3A8A PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AA9 JUMPI PUSH2 0x3AA8 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x3AB5 DUP7 DUP3 DUP8 ADD PUSH2 0x329D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3AC6 DUP7 DUP3 DUP8 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AE7 JUMPI PUSH2 0x3AE6 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x3AF3 DUP7 DUP3 DUP8 ADD PUSH2 0x3A44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B37 DUP3 PUSH2 0x2ECD JUMP JUMPDEST SWAP2 POP PUSH2 0x3B42 DUP4 PUSH2 0x2ECD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3B5A JUMPI PUSH2 0x3B59 PUSH2 0x3AFD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3BA7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3BBA JUMPI PUSH2 0x3BB9 PUSH2 0x3B60 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BFA DUP3 PUSH2 0x2ECD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3C2C JUMPI PUSH2 0x3C2B PUSH2 0x3AFD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C52 PUSH1 0x0 DUP4 PUSH2 0x3C37 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C5D DUP3 PUSH2 0x3C42 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C73 DUP3 PUSH2 0x3C45 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3C9F DUP2 PUSH2 0x3B8F JUMP JUMPDEST PUSH2 0x3CA9 DUP2 DUP7 PUSH2 0x3C37 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3CC4 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3CD9 JUMPI PUSH2 0x3D0C JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x3D0C JUMP JUMPDEST PUSH2 0x3CE2 DUP6 PUSH2 0x3C7D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D04 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3CE5 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D21 DUP3 DUP5 PUSH2 0x3C92 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3D8E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3D51 JUMP JUMPDEST PUSH2 0x3D98 DUP7 DUP4 PUSH2 0x3D51 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DD5 PUSH2 0x3DD0 PUSH2 0x3DCB DUP5 PUSH2 0x2ECD JUMP JUMPDEST PUSH2 0x3DB0 JUMP JUMPDEST PUSH2 0x2ECD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DEF DUP4 PUSH2 0x3DBA JUMP JUMPDEST PUSH2 0x3E03 PUSH2 0x3DFB DUP3 PUSH2 0x3DDC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3D5E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3E18 PUSH2 0x3E0B JUMP JUMPDEST PUSH2 0x3E23 DUP2 DUP5 DUP5 PUSH2 0x3DE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E47 JUMPI PUSH2 0x3E3C PUSH1 0x0 DUP3 PUSH2 0x3E10 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E8C JUMPI PUSH2 0x3E5D DUP2 PUSH2 0x3D2C JUMP JUMPDEST PUSH2 0x3E66 DUP5 PUSH2 0x3D41 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E75 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E89 PUSH2 0x3E81 DUP6 PUSH2 0x3D41 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3E28 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EAF PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E91 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC8 DUP4 DUP4 PUSH2 0x3E9E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EE1 DUP3 PUSH2 0x2F9C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EFA JUMPI PUSH2 0x3EF9 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH2 0x3F04 DUP3 SLOAD PUSH2 0x3B8F JUMP JUMPDEST PUSH2 0x3F0F DUP3 DUP3 DUP6 PUSH2 0x3E4B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F42 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3F30 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3F3A DUP6 DUP3 PUSH2 0x3EBC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3FA2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3F50 DUP7 PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F78 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F53 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3F95 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3F91 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3E9E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD5 DUP3 PUSH2 0x3FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FE5 DUP2 PUSH2 0x3FCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3FF8 DUP2 PUSH2 0x3B8F JUMP JUMPDEST PUSH2 0x4002 DUP2 DUP7 PUSH2 0x310E JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x401D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4033 JUMPI PUSH2 0x4066 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x4066 JUMP JUMPDEST PUSH2 0x403C DUP6 PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x405E JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x403F JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4084 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FDC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4096 DUP2 DUP5 PUSH2 0x3FEB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x40BA JUMPI PUSH2 0x40B9 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40DE DUP2 PUSH2 0x33E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x40E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x40FB DUP2 PUSH2 0x40D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4110 DUP2 PUSH2 0x2ED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x412C JUMPI PUSH2 0x412B PUSH2 0x40CB JUMP JUMPDEST JUMPDEST PUSH2 0x4136 PUSH1 0x80 PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4146 DUP5 DUP3 DUP6 ADD PUSH2 0x40EC JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x415A DUP5 DUP3 DUP6 ADD PUSH2 0x40EC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x416E DUP5 DUP3 DUP6 ADD PUSH2 0x4101 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x4182 DUP5 DUP3 DUP6 ADD PUSH2 0x4101 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A1 PUSH2 0x419C DUP5 PUSH2 0x409F JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x80 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x41C4 JUMPI PUSH2 0x41C3 PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x41ED JUMPI DUP1 PUSH2 0x41D9 DUP9 DUP3 PUSH2 0x4116 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x80 DUP2 ADD SWAP1 POP PUSH2 0x41C6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x420C JUMPI PUSH2 0x420B PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x421C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x418E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x423B JUMPI PUSH2 0x423A PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4259 JUMPI PUSH2 0x4258 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x4265 DUP5 DUP3 DUP6 ADD PUSH2 0x41F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4281 PUSH2 0x427C DUP5 PUSH2 0x321B JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x429D JUMPI PUSH2 0x429C PUSH2 0x319B JUMP JUMPDEST JUMPDEST PUSH2 0x42A8 DUP5 DUP3 DUP6 PUSH2 0x2FB8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x42C5 JUMPI PUSH2 0x42C4 PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x42D5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x426E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42F4 JUMPI PUSH2 0x42F3 PUSH2 0x40CB JUMP JUMPDEST JUMPDEST PUSH2 0x42FE PUSH1 0x40 PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x431E JUMPI PUSH2 0x431D PUSH2 0x40D0 JUMP JUMPDEST JUMPDEST PUSH2 0x432A DUP5 DUP3 DUP6 ADD PUSH2 0x42B0 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x433E DUP5 DUP3 DUP6 ADD PUSH2 0x4101 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4361 JUMPI PUSH2 0x4360 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x436F DUP6 DUP3 DUP7 ADD PUSH2 0x4101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4390 JUMPI PUSH2 0x438F PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x439C DUP6 DUP3 DUP7 ADD PUSH2 0x42DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x43C1 JUMPI PUSH2 0x43C0 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43E5 PUSH2 0x43E0 DUP5 PUSH2 0x43A6 JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4408 JUMPI PUSH2 0x4407 PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x444F JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x442D JUMPI PUSH2 0x442C PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x443A DUP10 DUP3 PUSH2 0x42DE JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x440A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x446E JUMPI PUSH2 0x446D PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x447E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x43D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x449D JUMPI PUSH2 0x449C PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44BB JUMPI PUSH2 0x44BA PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x44C7 DUP5 DUP3 DUP6 ADD PUSH2 0x4459 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x44E5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FDC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x44F7 DUP2 DUP6 PUSH2 0x3FEB JUMP JUMPDEST SWAP1 POP PUSH2 0x4506 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x30E4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4524 JUMPI PUSH2 0x4523 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4532 DUP5 DUP3 DUP6 ADD PUSH2 0x40EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4556 JUMPI PUSH2 0x4555 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4570 DUP2 PUSH2 0x37F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x457B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x458D DUP2 PUSH2 0x4567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45A9 JUMPI PUSH2 0x45A8 PUSH2 0x40CB JUMP JUMPDEST JUMPDEST PUSH2 0x45B3 PUSH1 0x60 PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45D3 JUMPI PUSH2 0x45D2 PUSH2 0x40D0 JUMP JUMPDEST JUMPDEST PUSH2 0x45DF DUP5 DUP3 DUP6 ADD PUSH2 0x42B0 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x45F3 DUP5 DUP3 DUP6 ADD PUSH2 0x4101 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x4607 DUP5 DUP3 DUP6 ADD PUSH2 0x457E JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4626 PUSH2 0x4621 DUP5 PUSH2 0x453B JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4649 JUMPI PUSH2 0x4648 PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4690 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x466E JUMPI PUSH2 0x466D PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x467B DUP10 DUP3 PUSH2 0x4593 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x464B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46AF JUMPI PUSH2 0x46AE PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x46BF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4613 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46DE JUMPI PUSH2 0x46DD PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46FC JUMPI PUSH2 0x46FB PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x4708 DUP5 DUP3 DUP6 ADD PUSH2 0x469A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x473E DUP2 PUSH2 0x3B8F JUMP JUMPDEST PUSH2 0x4748 DUP2 DUP7 PUSH2 0x2FA7 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4763 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4779 JUMPI PUSH2 0x47AC JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x47AC JUMP JUMPDEST PUSH2 0x4782 DUP6 PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x47A4 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4785 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C1 DUP4 DUP4 PUSH2 0x4731 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47E1 DUP3 PUSH2 0x4711 JUMP JUMPDEST PUSH2 0x47EB DUP2 DUP6 PUSH2 0x2F7B JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x47FD DUP6 PUSH2 0x471C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4838 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 PUSH2 0x4819 DUP6 DUP3 PUSH2 0x47B5 JUMP JUMPDEST SWAP5 POP PUSH2 0x4824 DUP4 PUSH2 0x47C9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4801 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x485F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FDC JUMP JUMPDEST PUSH2 0x486C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x30E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x487E DUP2 DUP5 PUSH2 0x47D6 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x489D DUP2 PUSH2 0x4888 JUMP JUMPDEST DUP2 EQ PUSH2 0x48A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x48BA DUP2 PUSH2 0x4894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48D6 JUMPI PUSH2 0x48D5 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48E4 DUP5 DUP3 DUP6 ADD PUSH2 0x48AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E6720417070726F7665206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4923 PUSH1 0x16 DUP4 PUSH2 0x310E JUMP JUMPDEST SWAP2 POP PUSH2 0x492E DUP3 PUSH2 0x48ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4952 DUP2 PUSH2 0x4916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x496E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FDC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4980 DUP2 DUP5 PUSH2 0x47D6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446973747269627574696F6E20417070726F7665206661696C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49BF PUSH1 0x1B DUP4 PUSH2 0x310E JUMP JUMPDEST SWAP2 POP PUSH2 0x49CA DUP3 PUSH2 0x4989 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49EE DUP2 PUSH2 0x49B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 JUMPI 0x21 0xB5 0xD9 0xA5 EXP 0xD0 KECCAK256 BYTE NOT 0xDF 0xE3 0x2C PUSH31 0xCA381A4EE4D4C390256DB97ADA705BC5B064736F6C634300081100332F636F PUSH20 0x6D6F732E7374616B696E672E763162657461312E 0x4D PUSH20 0x67426567696E526564656C656761746565766D6F PUSH20 0x76616C6F70657231353877776173347636666763 PUSH22 0x327833706C67373073367530666D306C6C653233376B PUSH13 0x74722F636F736D6F732E737461 PUSH12 0x696E672E763162657461312E 0x4D PUSH20 0x67556E64656C65676174652F636F736D6F732E64 PUSH10 0x73747269627574696F6E 0x2E PUSH23 0x3162657461312E4D7367576974686472617744656C6567 PUSH2 0x746F PUSH19 0x5265776172642F636F736D6F732E7374616B69 PUSH15 0x672E763162657461312E4D73674465 PUSH13 0x65676174650000000000000000 ","sourceMap":"208:14643:3:-:0;;;1128:80;;;;;;;;1163:12;;;;;;;;;;;;;;;;;1128:80;;;;1177:14;;;;;;;;;;;;;;;;;1128:80;;;;1193:14;;;;;;;;;;;;;;;;;1128:80;;;;;;;;;;;:::i;:::-;;1215:70;;;;;;;;1255:29;;;;;;;;;;;;;;;;;1215:70;;;;;;;;;;;:::i;:::-;;1525:86;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;208:14643;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;208:14643:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approveRequiredMsgs_2555":{"entryPoint":9979,"id":2555,"parameterSlots":0,"returnSlots":0},"@_dao_ids_1276":{"entryPoint":6801,"id":1276,"parameterSlots":0,"returnSlots":0},"@_dao_uris_1293":{"entryPoint":4402,"id":1293,"parameterSlots":0,"returnSlots":0},"@_goal_ids_1278":{"entryPoint":3982,"id":1278,"parameterSlots":0,"returnSlots":0},"@_goal_uris_1298":{"entryPoint":7412,"id":1298,"parameterSlots":0,"returnSlots":0},"@_ideas_ids_1280":{"entryPoint":11191,"id":1280,"parameterSlots":0,"returnSlots":0},"@_ideas_uris_1303":{"entryPoint":5640,"id":1303,"parameterSlots":0,"returnSlots":0},"@_ideas_vote_ids_1284":{"entryPoint":5818,"id":1284,"parameterSlots":0,"returnSlots":0},"@_message_ids_1286":{"entryPoint":8414,"id":1286,"parameterSlots":0,"returnSlots":0},"@_reply_ids_1288":{"entryPoint":9032,"id":1288,"parameterSlots":0,"returnSlots":0},"@_smart_contract_ids_1282":{"entryPoint":4105,"id":1282,"parameterSlots":0,"returnSlots":0},"@_smart_contracts_uris_1308":{"entryPoint":11594,"id":1308,"parameterSlots":0,"returnSlots":0},"@add_donation_1719":{"entryPoint":8848,"id":1719,"parameterSlots":2,"returnSlots":0},"@all_goal_ideas_votes_1313":{"entryPoint":4111,"id":1313,"parameterSlots":0,"returnSlots":0},"@all_messages_1318":{"entryPoint":10411,"id":1318,"parameterSlots":0,"returnSlots":0},"@all_replies_1323":{"entryPoint":5299,"id":1323,"parameterSlots":0,"returnSlots":0},"@create_dao_1348":{"entryPoint":10984,"id":1348,"parameterSlots":2,"returnSlots":1},"@create_goal_1450":{"entryPoint":6687,"id":1450,"parameterSlots":2,"returnSlots":1},"@create_goal_ideas_vote_1941":{"entryPoint":8038,"id":1941,"parameterSlots":3,"returnSlots":1},"@create_ideas_1669":{"entryPoint":11197,"id":1669,"parameterSlots":3,"returnSlots":1},"@create_ideas_smart_contract_1689":{"entryPoint":11772,"id":1689,"parameterSlots":3,"returnSlots":0},"@dao_uri_1426":{"entryPoint":6379,"id":1426,"parameterSlots":1,"returnSlots":1},"@donate_2187":{"entryPoint":3194,"id":2187,"parameterSlots":2,"returnSlots":0},"@donated_1269":{"entryPoint":5477,"id":1269,"parameterSlots":0,"returnSlots":0},"@getContractBalance_2320":{"entryPoint":6679,"id":2320,"parameterSlots":0,"returnSlots":1},"@getContractRewards_2337":{"entryPoint":9173,"id":2337,"parameterSlots":0,"returnSlots":1},"@getDelegation_2360":{"entryPoint":6226,"id":2360,"parameterSlots":0,"returnSlots":1},"@getMsgIDs_2088":{"entryPoint":7584,"id":2088,"parameterSlots":1,"returnSlots":1},"@getReplyIDs_2170":{"entryPoint":7811,"id":2170,"parameterSlots":1,"returnSlots":1},"@getUnbondingDelegation_2377":{"entryPoint":5501,"id":2377,"parameterSlots":0,"returnSlots":1},"@get_all_daos_1413":{"entryPoint":10629,"id":1413,"parameterSlots":0,"returnSlots":1},"@get_all_goals_1506":{"entryPoint":4852,"id":1506,"parameterSlots":0,"returnSlots":1},"@get_all_goals_by_dao_id_1563":{"entryPoint":3248,"id":1563,"parameterSlots":1,"returnSlots":1},"@get_all_ideas_1760":{"entryPoint":8420,"id":1760,"parameterSlots":0,"returnSlots":1},"@get_all_ideas_by_goal_id_1816":{"entryPoint":3615,"id":1816,"parameterSlots":1,"returnSlots":1},"@get_goal_id_by_goal_uri_1604":{"entryPoint":4289,"id":1604,"parameterSlots":1,"returnSlots":1},"@get_goal_id_from_ideas_uri_1901":{"entryPoint":9038,"id":1901,"parameterSlots":1,"returnSlots":1},"@get_ideas_id_by_ideas_uri_1857":{"entryPoint":8735,"id":1857,"parameterSlots":1,"returnSlots":1},"@get_ideas_votes_from_goal_2006":{"entryPoint":5824,"id":2006,"parameterSlots":2,"returnSlots":1},"@goal_uri_1617":{"entryPoint":11426,"id":1617,"parameterSlots":1,"returnSlots":1},"@ideas_uri_1914":{"entryPoint":8246,"id":1914,"parameterSlots":1,"returnSlots":1},"@redeemDonatedMoney_2283":{"entryPoint":6807,"id":2283,"parameterSlots":1,"returnSlots":1},"@reset_all_2517":{"entryPoint":9312,"id":2517,"parameterSlots":0,"returnSlots":0},"@sendMsg_2031":{"entryPoint":5167,"id":2031,"parameterSlots":2,"returnSlots":1},"@sendReply_2113":{"entryPoint":6547,"id":2113,"parameterSlots":2,"returnSlots":1},"@set_dao_1372":{"entryPoint":8169,"id":1372,"parameterSlots":3,"returnSlots":0},"@set_goal_1465":{"entryPoint":10944,"id":1465,"parameterSlots":2,"returnSlots":0},"@set_ideas_1704":{"entryPoint":10589,"id":1704,"parameterSlots":2,"returnSlots":0},"@stake_2204":{"entryPoint":8897,"id":2204,"parameterSlots":1,"returnSlots":0},"@withdrawAllMoney_2308":{"entryPoint":3988,"id":2308,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14781,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":17362,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":17939,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":16782,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":12891,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":17006,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14916,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":17497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":18074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":16887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":18603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int64_fromMemory":{"entryPoint":16620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":12957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":17072,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Coin_$2694_memory_ptr_fromMemory":{"entryPoint":17118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_DecCoin_$2701_memory_ptr_fromMemory":{"entryPoint":17811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_fromMemory":{"entryPoint":16662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":12014,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":16641,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":17790,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":17543,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":18120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":16933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":18624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int64_fromMemory":{"entryPoint":17678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":13003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr":{"entryPoint":14612,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256":{"entryPoint":13677,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14962,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":12099,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":13152,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":14137,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_struct$_Coin_$2694_memory_ptr_fromMemory":{"entryPoint":17226,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":12035,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr":{"entryPoint":14026,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":12332,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr":{"entryPoint":18357,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_DecCoin_$2701_memory_ptr_to_t_struct$_DecCoin_$2701_memory_ptr":{"entryPoint":14428,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr":{"entryPoint":13416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":13861,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":16348,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":18390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13898,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15506,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_int64_to_t_int64":{"entryPoint":13301,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":12275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr":{"entryPoint":18225,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack":{"entryPoint":16363,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974_to_t_string_memory_ptr_fromStack":{"entryPoint":18866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3_to_t_string_memory_ptr_fromStack":{"entryPoint":18710,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15429,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_DecCoin_$2701_memory_ptr_to_t_struct$_DecCoin_$2701_memory_ptr":{"entryPoint":14348,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr":{"entryPoint":13331,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":13316,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12516,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8":{"entryPoint":14333,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15637,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15464,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address_t_array$_t_string_storage_$dyn_storage__to_t_address_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":18777,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_string_storage__to_t_address_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16495,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_string_storage_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":17616,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_array$_t_string_storage_$dyn_storage__to_t_address_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":18506,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14578,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13547,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13076,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18901,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18745,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12531,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13769,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":13581,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12632,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":12800,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":11961,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14732,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr":{"entryPoint":17318,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr":{"entryPoint":17723,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr":{"entryPoint":16543,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":12827,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":12172,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_storage_$dyn_storage":{"entryPoint":18204,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr":{"entryPoint":14304,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr":{"entryPoint":13272,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13845,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":15485,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":15660,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":12144,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_storage_$dyn_storage":{"entryPoint":18193,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr":{"entryPoint":14276,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr":{"entryPoint":13244,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13817,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12188,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":12352,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_storage_$dyn_storage":{"entryPoint":18377,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr":{"entryPoint":14448,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr":{"entryPoint":13440,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13885,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12155,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14287,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13255,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13828,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15415,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":12199,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12558,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15148,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":15947,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":16330,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":18568,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int64":{"entryPoint":13288,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":16298,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":11981,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":14320,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":15912,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":15802,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":16088,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":12876,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":12216,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":15681,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":15247,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":16060,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":12751,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":15792,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":15343,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":16030,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":15101,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":15200,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15296,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12704,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":15836,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":12694,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":16587,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":16592,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":14776,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":12699,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":11976,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11971,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12258,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":15697,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":16017,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":15888,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974":{"entryPoint":18825,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3":{"entryPoint":18669,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":15426,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":15710,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":15846,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":18580,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int64":{"entryPoint":16597,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":11991,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":17767,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":15883,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:56632:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:32:11","statements":[{"nodeType":"YulAssignment","src":"389:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:77:11"},{"body":{"nodeType":"YulBlock","src":"460:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:11"},"nodeType":"YulFunctionCall","src":"519:12:11"},"nodeType":"YulExpressionStatement","src":"519:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:11"},"nodeType":"YulFunctionCall","src":"490:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:11"},"nodeType":"YulFunctionCall","src":"480:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:11"},"nodeType":"YulFunctionCall","src":"473:43:11"},"nodeType":"YulIf","src":"470:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:11","type":""}],"src":"417:122:11"},{"body":{"nodeType":"YulBlock","src":"597:87:11","statements":[{"nodeType":"YulAssignment","src":"607:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:11"},"nodeType":"YulFunctionCall","src":"616:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:11"},"nodeType":"YulFunctionCall","src":"645:33:11"},"nodeType":"YulExpressionStatement","src":"645:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:11","type":""}],"src":"545:139:11"},{"body":{"nodeType":"YulBlock","src":"773:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"819:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"821:77:11"},"nodeType":"YulFunctionCall","src":"821:79:11"},"nodeType":"YulExpressionStatement","src":"821:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"794:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"803:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"790:3:11"},"nodeType":"YulFunctionCall","src":"790:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"815:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"786:3:11"},"nodeType":"YulFunctionCall","src":"786:32:11"},"nodeType":"YulIf","src":"783:119:11"},{"nodeType":"YulBlock","src":"912:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"927:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"941:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"931:6:11","type":""}]},{"nodeType":"YulAssignment","src":"956:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"991:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1002:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"987:3:11"},"nodeType":"YulFunctionCall","src":"987:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1011:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"966:20:11"},"nodeType":"YulFunctionCall","src":"966:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"956:6:11"}]}]},{"nodeType":"YulBlock","src":"1039:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1054:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1068:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1058:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1084:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1119:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1130:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1115:3:11"},"nodeType":"YulFunctionCall","src":"1115:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1139:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1094:20:11"},"nodeType":"YulFunctionCall","src":"1094:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1084:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"735:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"746:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"758:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"766:6:11","type":""}],"src":"690:474:11"},{"body":{"nodeType":"YulBlock","src":"1236:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"1282:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1284:77:11"},"nodeType":"YulFunctionCall","src":"1284:79:11"},"nodeType":"YulExpressionStatement","src":"1284:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1257:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1266:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1253:3:11"},"nodeType":"YulFunctionCall","src":"1253:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1278:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1249:3:11"},"nodeType":"YulFunctionCall","src":"1249:32:11"},"nodeType":"YulIf","src":"1246:119:11"},{"nodeType":"YulBlock","src":"1375:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1390:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1404:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1394:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1419:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1454:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1465:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1450:3:11"},"nodeType":"YulFunctionCall","src":"1450:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1474:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1429:20:11"},"nodeType":"YulFunctionCall","src":"1429:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1419:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1206:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1217:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1229:6:11","type":""}],"src":"1170:329:11"},{"body":{"nodeType":"YulBlock","src":"1589:40:11","statements":[{"nodeType":"YulAssignment","src":"1600:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1616:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1610:5:11"},"nodeType":"YulFunctionCall","src":"1610:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1600:6:11"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1572:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1582:6:11","type":""}],"src":"1505:124:11"},{"body":{"nodeType":"YulBlock","src":"1756:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1773:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"1778:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1766:6:11"},"nodeType":"YulFunctionCall","src":"1766:19:11"},"nodeType":"YulExpressionStatement","src":"1766:19:11"},{"nodeType":"YulAssignment","src":"1794:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1813:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1818:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:11"},"nodeType":"YulFunctionCall","src":"1809:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1794:11:11"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1728:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"1733:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1744:11:11","type":""}],"src":"1635:194:11"},{"body":{"nodeType":"YulBlock","src":"1917:60:11","statements":[{"nodeType":"YulAssignment","src":"1927:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1935:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1927:4:11"}]},{"nodeType":"YulAssignment","src":"1948:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1960:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1965:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1956:3:11"},"nodeType":"YulFunctionCall","src":"1956:14:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1948:4:11"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1904:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1912:4:11","type":""}],"src":"1835:142:11"},{"body":{"nodeType":"YulBlock","src":"2042:40:11","statements":[{"nodeType":"YulAssignment","src":"2053:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2069:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2063:5:11"},"nodeType":"YulFunctionCall","src":"2063:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2053:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2025:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2035:6:11","type":""}],"src":"1983:99:11"},{"body":{"nodeType":"YulBlock","src":"2174:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2191:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2196:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2184:6:11"},"nodeType":"YulFunctionCall","src":"2184:19:11"},"nodeType":"YulExpressionStatement","src":"2184:19:11"},{"nodeType":"YulAssignment","src":"2212:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2231:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2236:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2227:3:11"},"nodeType":"YulFunctionCall","src":"2227:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2212:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2146:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"2151:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2162:11:11","type":""}],"src":"2088:159:11"},{"body":{"nodeType":"YulBlock","src":"2315:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2325:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2334:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2329:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2394:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2419:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"2424:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2415:3:11"},"nodeType":"YulFunctionCall","src":"2415:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2438:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"2443:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2434:3:11"},"nodeType":"YulFunctionCall","src":"2434:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2428:5:11"},"nodeType":"YulFunctionCall","src":"2428:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2408:6:11"},"nodeType":"YulFunctionCall","src":"2408:39:11"},"nodeType":"YulExpressionStatement","src":"2408:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2355:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"2358:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2352:2:11"},"nodeType":"YulFunctionCall","src":"2352:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2366:19:11","statements":[{"nodeType":"YulAssignment","src":"2368:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2377:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"2380:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2373:3:11"},"nodeType":"YulFunctionCall","src":"2373:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2368:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"2348:3:11","statements":[]},"src":"2344:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2477:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2482:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2473:3:11"},"nodeType":"YulFunctionCall","src":"2473:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"2491:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2466:6:11"},"nodeType":"YulFunctionCall","src":"2466:27:11"},"nodeType":"YulExpressionStatement","src":"2466:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2297:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2302:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"2307:6:11","type":""}],"src":"2253:246:11"},{"body":{"nodeType":"YulBlock","src":"2553:54:11","statements":[{"nodeType":"YulAssignment","src":"2563:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2581:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2588:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:11"},"nodeType":"YulFunctionCall","src":"2577:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2597:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2593:3:11"},"nodeType":"YulFunctionCall","src":"2593:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2573:3:11"},"nodeType":"YulFunctionCall","src":"2573:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2563:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2536:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2546:6:11","type":""}],"src":"2505:102:11"},{"body":{"nodeType":"YulBlock","src":"2695:275:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2705:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2752:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2719:32:11"},"nodeType":"YulFunctionCall","src":"2719:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2709:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2767:68:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2823:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2828:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2774:48:11"},"nodeType":"YulFunctionCall","src":"2774:61:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2767:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2883:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2890:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2879:3:11"},"nodeType":"YulFunctionCall","src":"2879:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"2897:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2902:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2844:34:11"},"nodeType":"YulFunctionCall","src":"2844:65:11"},"nodeType":"YulExpressionStatement","src":"2844:65:11"},{"nodeType":"YulAssignment","src":"2918:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2929:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2956:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2934:21:11"},"nodeType":"YulFunctionCall","src":"2934:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2925:3:11"},"nodeType":"YulFunctionCall","src":"2925:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2918:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2676:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2683:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2691:3:11","type":""}],"src":"2613:357:11"},{"body":{"nodeType":"YulBlock","src":"3076:96:11","statements":[{"nodeType":"YulAssignment","src":"3086:80:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3154:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"3162:3:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3100:53:11"},"nodeType":"YulFunctionCall","src":"3100:66:11"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"3086:10:11"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"3049:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3057:3:11","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"3065:10:11","type":""}],"src":"2976:196:11"},{"body":{"nodeType":"YulBlock","src":"3263:38:11","statements":[{"nodeType":"YulAssignment","src":"3273:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3285:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3290:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3281:3:11"},"nodeType":"YulFunctionCall","src":"3281:14:11"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"3273:4:11"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3250:3:11","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"3258:4:11","type":""}],"src":"3178:123:11"},{"body":{"nodeType":"YulBlock","src":"3479:847:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3489:78:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3561:5:11"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3503:57:11"},"nodeType":"YulFunctionCall","src":"3503:64:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3493:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3576:103:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3667:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3672:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3583:83:11"},"nodeType":"YulFunctionCall","src":"3583:96:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"3688:20:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"3705:3:11"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"3692:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3717:39:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3733:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3742:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3750:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3738:3:11"},"nodeType":"YulFunctionCall","src":"3738:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3729:3:11"},"nodeType":"YulFunctionCall","src":"3729:27:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"3721:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3765:81:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3840:5:11"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3780:59:11"},"nodeType":"YulFunctionCall","src":"3780:66:11"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"3769:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3855:21:11","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"3869:7:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3859:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3945:336:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3966:3:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3975:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3981:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3971:3:11"},"nodeType":"YulFunctionCall","src":"3971:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3959:6:11"},"nodeType":"YulFunctionCall","src":"3959:33:11"},"nodeType":"YulExpressionStatement","src":"3959:33:11"},{"nodeType":"YulVariableDeclaration","src":"4005:34:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4032:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4026:5:11"},"nodeType":"YulFunctionCall","src":"4026:13:11"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"4009:13:11","type":""}]},{"nodeType":"YulAssignment","src":"4052:92:11","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"4124:13:11"},{"name":"tail","nodeType":"YulIdentifier","src":"4139:4:11"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4060:63:11"},"nodeType":"YulFunctionCall","src":"4060:84:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4052:4:11"}]},{"nodeType":"YulAssignment","src":"4157:80:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4230:6:11"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4167:62:11"},"nodeType":"YulFunctionCall","src":"4167:70:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4157:6:11"}]},{"nodeType":"YulAssignment","src":"4250:21:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4261:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4266:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4257:3:11"},"nodeType":"YulFunctionCall","src":"4257:14:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4250:3:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3907:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"3910:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3904:2:11"},"nodeType":"YulFunctionCall","src":"3904:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3918:18:11","statements":[{"nodeType":"YulAssignment","src":"3920:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3929:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"3932:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3925:3:11"},"nodeType":"YulFunctionCall","src":"3925:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3920:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"3889:14:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3891:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3900:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3895:1:11","type":""}]}]},"src":"3885:396:11"},{"nodeType":"YulAssignment","src":"4290:11:11","value":{"name":"tail","nodeType":"YulIdentifier","src":"4297:4:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4290:3:11"}]},{"nodeType":"YulAssignment","src":"4310:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"4317:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4310:3:11"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3458:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3465:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3474:3:11","type":""}],"src":"3335:991:11"},{"body":{"nodeType":"YulBlock","src":"4500:245:11","statements":[{"nodeType":"YulAssignment","src":"4510:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4522:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4533:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4518:3:11"},"nodeType":"YulFunctionCall","src":"4518:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4510:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4557:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4568:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4553:3:11"},"nodeType":"YulFunctionCall","src":"4553:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4576:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4582:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4572:3:11"},"nodeType":"YulFunctionCall","src":"4572:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4546:6:11"},"nodeType":"YulFunctionCall","src":"4546:47:11"},"nodeType":"YulExpressionStatement","src":"4546:47:11"},{"nodeType":"YulAssignment","src":"4602:136:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"4733:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4610:113:11"},"nodeType":"YulFunctionCall","src":"4610:128:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4602:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4472:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4484:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4495:4:11","type":""}],"src":"4332:413:11"},{"body":{"nodeType":"YulBlock","src":"4816:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4833:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4856:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4838:17:11"},"nodeType":"YulFunctionCall","src":"4838:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4826:6:11"},"nodeType":"YulFunctionCall","src":"4826:37:11"},"nodeType":"YulExpressionStatement","src":"4826:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4804:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4811:3:11","type":""}],"src":"4751:118:11"},{"body":{"nodeType":"YulBlock","src":"4973:124:11","statements":[{"nodeType":"YulAssignment","src":"4983:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4995:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5006:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4991:3:11"},"nodeType":"YulFunctionCall","src":"4991:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4983:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5063:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5076:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5087:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5072:3:11"},"nodeType":"YulFunctionCall","src":"5072:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5019:43:11"},"nodeType":"YulFunctionCall","src":"5019:71:11"},"nodeType":"YulExpressionStatement","src":"5019:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4945:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4957:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4968:4:11","type":""}],"src":"4875:222:11"},{"body":{"nodeType":"YulBlock","src":"5199:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5216:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"5221:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5209:6:11"},"nodeType":"YulFunctionCall","src":"5209:19:11"},"nodeType":"YulExpressionStatement","src":"5209:19:11"},{"nodeType":"YulAssignment","src":"5237:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5256:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5261:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:11"},"nodeType":"YulFunctionCall","src":"5252:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5237:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5171:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"5176:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5187:11:11","type":""}],"src":"5103:169:11"},{"body":{"nodeType":"YulBlock","src":"5370:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5380:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5427:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5394:32:11"},"nodeType":"YulFunctionCall","src":"5394:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5384:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5442:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5508:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"5513:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5449:58:11"},"nodeType":"YulFunctionCall","src":"5449:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5442:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5568:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5575:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5564:3:11"},"nodeType":"YulFunctionCall","src":"5564:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"5582:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"5587:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5529:34:11"},"nodeType":"YulFunctionCall","src":"5529:65:11"},"nodeType":"YulExpressionStatement","src":"5529:65:11"},{"nodeType":"YulAssignment","src":"5603:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5614:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5641:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5619:21:11"},"nodeType":"YulFunctionCall","src":"5619:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:11"},"nodeType":"YulFunctionCall","src":"5610:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5603:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5351:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5358:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5366:3:11","type":""}],"src":"5278:377:11"},{"body":{"nodeType":"YulBlock","src":"5835:359:11","statements":[{"nodeType":"YulAssignment","src":"5845:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5857:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5868:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5853:3:11"},"nodeType":"YulFunctionCall","src":"5853:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5845:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5925:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5938:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5949:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5934:3:11"},"nodeType":"YulFunctionCall","src":"5934:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5881:43:11"},"nodeType":"YulFunctionCall","src":"5881:71:11"},"nodeType":"YulExpressionStatement","src":"5881:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6006:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6019:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6030:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6015:3:11"},"nodeType":"YulFunctionCall","src":"6015:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5962:43:11"},"nodeType":"YulFunctionCall","src":"5962:72:11"},"nodeType":"YulExpressionStatement","src":"5962:72:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6055:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6066:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6051:3:11"},"nodeType":"YulFunctionCall","src":"6051:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6075:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6081:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6071:3:11"},"nodeType":"YulFunctionCall","src":"6071:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6044:6:11"},"nodeType":"YulFunctionCall","src":"6044:48:11"},"nodeType":"YulExpressionStatement","src":"6044:48:11"},{"nodeType":"YulAssignment","src":"6101:86:11","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6173:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"6182:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6109:63:11"},"nodeType":"YulFunctionCall","src":"6109:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6101:4:11"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5791:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5803:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5811:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5819:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5830:4:11","type":""}],"src":"5661:533:11"},{"body":{"nodeType":"YulBlock","src":"6289:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6306:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6309:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6299:6:11"},"nodeType":"YulFunctionCall","src":"6299:12:11"},"nodeType":"YulExpressionStatement","src":"6299:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6200:117:11"},{"body":{"nodeType":"YulBlock","src":"6412:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6429:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6432:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6422:6:11"},"nodeType":"YulFunctionCall","src":"6422:12:11"},"nodeType":"YulExpressionStatement","src":"6422:12:11"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"6323:117:11"},{"body":{"nodeType":"YulBlock","src":"6474:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6491:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6494:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6484:6:11"},"nodeType":"YulFunctionCall","src":"6484:88:11"},"nodeType":"YulExpressionStatement","src":"6484:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6588:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6591:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6581:6:11"},"nodeType":"YulFunctionCall","src":"6581:15:11"},"nodeType":"YulExpressionStatement","src":"6581:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6612:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6615:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6605:6:11"},"nodeType":"YulFunctionCall","src":"6605:15:11"},"nodeType":"YulExpressionStatement","src":"6605:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6446:180:11"},{"body":{"nodeType":"YulBlock","src":"6675:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6685:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6707:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6737:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6715:21:11"},"nodeType":"YulFunctionCall","src":"6715:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6703:3:11"},"nodeType":"YulFunctionCall","src":"6703:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6689:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6854:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6856:16:11"},"nodeType":"YulFunctionCall","src":"6856:18:11"},"nodeType":"YulExpressionStatement","src":"6856:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6797:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"6809:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6794:2:11"},"nodeType":"YulFunctionCall","src":"6794:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6833:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6845:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6830:2:11"},"nodeType":"YulFunctionCall","src":"6830:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6791:2:11"},"nodeType":"YulFunctionCall","src":"6791:62:11"},"nodeType":"YulIf","src":"6788:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6892:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6896:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6885:6:11"},"nodeType":"YulFunctionCall","src":"6885:22:11"},"nodeType":"YulExpressionStatement","src":"6885:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"6669:4:11","type":""}],"src":"6632:281:11"},{"body":{"nodeType":"YulBlock","src":"6960:88:11","statements":[{"nodeType":"YulAssignment","src":"6970:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6980:18:11"},"nodeType":"YulFunctionCall","src":"6980:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6970:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7029:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"7037:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7009:19:11"},"nodeType":"YulFunctionCall","src":"7009:33:11"},"nodeType":"YulExpressionStatement","src":"7009:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6944:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6953:6:11","type":""}],"src":"6919:129:11"},{"body":{"nodeType":"YulBlock","src":"7121:241:11","statements":[{"body":{"nodeType":"YulBlock","src":"7226:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7228:16:11"},"nodeType":"YulFunctionCall","src":"7228:18:11"},"nodeType":"YulExpressionStatement","src":"7228:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7198:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7206:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7195:2:11"},"nodeType":"YulFunctionCall","src":"7195:30:11"},"nodeType":"YulIf","src":"7192:56:11"},{"nodeType":"YulAssignment","src":"7258:37:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7288:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7266:21:11"},"nodeType":"YulFunctionCall","src":"7266:29:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7258:4:11"}]},{"nodeType":"YulAssignment","src":"7332:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7344:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"7350:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7340:3:11"},"nodeType":"YulFunctionCall","src":"7340:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7332:4:11"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7105:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7116:4:11","type":""}],"src":"7054:308:11"},{"body":{"nodeType":"YulBlock","src":"7432:82:11","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7455:3:11"},{"name":"src","nodeType":"YulIdentifier","src":"7460:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"7465:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7442:12:11"},"nodeType":"YulFunctionCall","src":"7442:30:11"},"nodeType":"YulExpressionStatement","src":"7442:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7492:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"7497:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:11"},"nodeType":"YulFunctionCall","src":"7488:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"7506:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7481:6:11"},"nodeType":"YulFunctionCall","src":"7481:27:11"},"nodeType":"YulExpressionStatement","src":"7481:27:11"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7414:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7419:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"7424:6:11","type":""}],"src":"7368:146:11"},{"body":{"nodeType":"YulBlock","src":"7604:341:11","statements":[{"nodeType":"YulAssignment","src":"7614:75:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7681:6:11"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7639:41:11"},"nodeType":"YulFunctionCall","src":"7639:49:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7623:15:11"},"nodeType":"YulFunctionCall","src":"7623:66:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7614:5:11"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7705:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"7712:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7698:6:11"},"nodeType":"YulFunctionCall","src":"7698:21:11"},"nodeType":"YulExpressionStatement","src":"7698:21:11"},{"nodeType":"YulVariableDeclaration","src":"7728:27:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7743:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7750:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7739:3:11"},"nodeType":"YulFunctionCall","src":"7739:16:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7732:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7793:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7795:77:11"},"nodeType":"YulFunctionCall","src":"7795:79:11"},"nodeType":"YulExpressionStatement","src":"7795:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7774:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"7779:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7770:3:11"},"nodeType":"YulFunctionCall","src":"7770:16:11"},{"name":"end","nodeType":"YulIdentifier","src":"7788:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7767:2:11"},"nodeType":"YulFunctionCall","src":"7767:25:11"},"nodeType":"YulIf","src":"7764:112:11"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7922:3:11"},{"name":"dst","nodeType":"YulIdentifier","src":"7927:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"7932:6:11"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7885:36:11"},"nodeType":"YulFunctionCall","src":"7885:54:11"},"nodeType":"YulExpressionStatement","src":"7885:54:11"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7577:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"7582:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"7590:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7598:5:11","type":""}],"src":"7520:425:11"},{"body":{"nodeType":"YulBlock","src":"8027:278:11","statements":[{"body":{"nodeType":"YulBlock","src":"8076:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8078:77:11"},"nodeType":"YulFunctionCall","src":"8078:79:11"},"nodeType":"YulExpressionStatement","src":"8078:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8055:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8063:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8051:3:11"},"nodeType":"YulFunctionCall","src":"8051:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"8070:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8047:3:11"},"nodeType":"YulFunctionCall","src":"8047:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8040:6:11"},"nodeType":"YulFunctionCall","src":"8040:35:11"},"nodeType":"YulIf","src":"8037:122:11"},{"nodeType":"YulVariableDeclaration","src":"8168:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8195:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8182:12:11"},"nodeType":"YulFunctionCall","src":"8182:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8172:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8211:88:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8272:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8280:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8268:3:11"},"nodeType":"YulFunctionCall","src":"8268:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"8287:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"8295:3:11"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8220:47:11"},"nodeType":"YulFunctionCall","src":"8220:79:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8211:5:11"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8005:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"8013:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8021:5:11","type":""}],"src":"7965:340:11"},{"body":{"nodeType":"YulBlock","src":"8387:433:11","statements":[{"body":{"nodeType":"YulBlock","src":"8433:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8435:77:11"},"nodeType":"YulFunctionCall","src":"8435:79:11"},"nodeType":"YulExpressionStatement","src":"8435:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8408:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8417:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8404:3:11"},"nodeType":"YulFunctionCall","src":"8404:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"8429:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8400:3:11"},"nodeType":"YulFunctionCall","src":"8400:32:11"},"nodeType":"YulIf","src":"8397:119:11"},{"nodeType":"YulBlock","src":"8526:287:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8541:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8572:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8583:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8568:3:11"},"nodeType":"YulFunctionCall","src":"8568:17:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8555:12:11"},"nodeType":"YulFunctionCall","src":"8555:31:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8545:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8633:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8635:77:11"},"nodeType":"YulFunctionCall","src":"8635:79:11"},"nodeType":"YulExpressionStatement","src":"8635:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8605:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8613:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8602:2:11"},"nodeType":"YulFunctionCall","src":"8602:30:11"},"nodeType":"YulIf","src":"8599:117:11"},{"nodeType":"YulAssignment","src":"8730:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8775:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8786:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8771:3:11"},"nodeType":"YulFunctionCall","src":"8771:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8795:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8740:30:11"},"nodeType":"YulFunctionCall","src":"8740:63:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8730:6:11"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8357:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8368:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8380:6:11","type":""}],"src":"8311:509:11"},{"body":{"nodeType":"YulBlock","src":"9040:501:11","statements":[{"nodeType":"YulAssignment","src":"9050:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9062:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9073:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9058:3:11"},"nodeType":"YulFunctionCall","src":"9058:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9050:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9097:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9108:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9093:3:11"},"nodeType":"YulFunctionCall","src":"9093:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9116:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9122:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9112:3:11"},"nodeType":"YulFunctionCall","src":"9112:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9086:6:11"},"nodeType":"YulFunctionCall","src":"9086:47:11"},"nodeType":"YulExpressionStatement","src":"9086:47:11"},{"nodeType":"YulAssignment","src":"9142:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9214:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"9223:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9150:63:11"},"nodeType":"YulFunctionCall","src":"9150:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9142:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9249:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9260:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9245:3:11"},"nodeType":"YulFunctionCall","src":"9245:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9269:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9275:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9265:3:11"},"nodeType":"YulFunctionCall","src":"9265:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9238:6:11"},"nodeType":"YulFunctionCall","src":"9238:48:11"},"nodeType":"YulExpressionStatement","src":"9238:48:11"},{"nodeType":"YulAssignment","src":"9295:86:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9367:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"9376:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9303:63:11"},"nodeType":"YulFunctionCall","src":"9303:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9295:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9402:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9413:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9398:3:11"},"nodeType":"YulFunctionCall","src":"9398:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9422:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9428:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9418:3:11"},"nodeType":"YulFunctionCall","src":"9418:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9391:6:11"},"nodeType":"YulFunctionCall","src":"9391:48:11"},"nodeType":"YulExpressionStatement","src":"9391:48:11"},{"nodeType":"YulAssignment","src":"9448:86:11","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9520:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"9529:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9456:63:11"},"nodeType":"YulFunctionCall","src":"9456:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9448:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8996:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9008:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9016:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9024:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9035:4:11","type":""}],"src":"8826:715:11"},{"body":{"nodeType":"YulBlock","src":"9640:561:11","statements":[{"body":{"nodeType":"YulBlock","src":"9686:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9688:77:11"},"nodeType":"YulFunctionCall","src":"9688:79:11"},"nodeType":"YulExpressionStatement","src":"9688:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9661:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9670:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9657:3:11"},"nodeType":"YulFunctionCall","src":"9657:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"9682:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9653:3:11"},"nodeType":"YulFunctionCall","src":"9653:32:11"},"nodeType":"YulIf","src":"9650:119:11"},{"nodeType":"YulBlock","src":"9779:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9794:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9808:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9798:6:11","type":""}]},{"nodeType":"YulAssignment","src":"9823:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9858:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"9869:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9854:3:11"},"nodeType":"YulFunctionCall","src":"9854:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9878:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9833:20:11"},"nodeType":"YulFunctionCall","src":"9833:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9823:6:11"}]}]},{"nodeType":"YulBlock","src":"9906:288:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9921:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9952:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9963:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9948:3:11"},"nodeType":"YulFunctionCall","src":"9948:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9935:12:11"},"nodeType":"YulFunctionCall","src":"9935:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9925:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"10014:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10016:77:11"},"nodeType":"YulFunctionCall","src":"10016:79:11"},"nodeType":"YulExpressionStatement","src":"10016:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9986:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9994:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9983:2:11"},"nodeType":"YulFunctionCall","src":"9983:30:11"},"nodeType":"YulIf","src":"9980:117:11"},{"nodeType":"YulAssignment","src":"10111:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10156:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"10167:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10152:3:11"},"nodeType":"YulFunctionCall","src":"10152:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10176:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10121:30:11"},"nodeType":"YulFunctionCall","src":"10121:63:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10111:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9602:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9613:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9625:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9633:6:11","type":""}],"src":"9547:654:11"},{"body":{"nodeType":"YulBlock","src":"10323:40:11","statements":[{"nodeType":"YulAssignment","src":"10334:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10350:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10344:5:11"},"nodeType":"YulFunctionCall","src":"10344:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10334:6:11"}]}]},"name":"array_length_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10306:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10316:6:11","type":""}],"src":"10207:156:11"},{"body":{"nodeType":"YulBlock","src":"10522:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10539:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"10544:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10532:6:11"},"nodeType":"YulFunctionCall","src":"10532:19:11"},"nodeType":"YulExpressionStatement","src":"10532:19:11"},{"nodeType":"YulAssignment","src":"10560:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10579:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10584:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10575:3:11"},"nodeType":"YulFunctionCall","src":"10575:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10560:11:11"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10494:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"10499:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10510:11:11","type":""}],"src":"10369:226:11"},{"body":{"nodeType":"YulBlock","src":"10715:60:11","statements":[{"nodeType":"YulAssignment","src":"10725:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"10733:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10725:4:11"}]},{"nodeType":"YulAssignment","src":"10746:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10758:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10763:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10754:3:11"},"nodeType":"YulFunctionCall","src":"10754:14:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10746:4:11"}]}]},"name":"array_dataslot_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10702:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10710:4:11","type":""}],"src":"10601:174:11"},{"body":{"nodeType":"YulBlock","src":"10824:47:11","statements":[{"nodeType":"YulAssignment","src":"10834:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10856:1:11","type":"","value":"7"},{"name":"value","nodeType":"YulIdentifier","src":"10859:5:11"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"10845:10:11"},"nodeType":"YulFunctionCall","src":"10845:20:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10834:7:11"}]}]},"name":"cleanup_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10806:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10816:7:11","type":""}],"src":"10781:90:11"},{"body":{"nodeType":"YulBlock","src":"10928:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10945:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10966:5:11"}],"functionName":{"name":"cleanup_t_int64","nodeType":"YulIdentifier","src":"10950:15:11"},"nodeType":"YulFunctionCall","src":"10950:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10938:6:11"},"nodeType":"YulFunctionCall","src":"10938:35:11"},"nodeType":"YulExpressionStatement","src":"10938:35:11"}]},"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10916:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10923:3:11","type":""}],"src":"10877:102:11"},{"body":{"nodeType":"YulBlock","src":"11040:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11057:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11080:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11062:17:11"},"nodeType":"YulFunctionCall","src":"11062:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11050:6:11"},"nodeType":"YulFunctionCall","src":"11050:37:11"},"nodeType":"YulExpressionStatement","src":"11050:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11028:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11035:3:11","type":""}],"src":"10985:108:11"},{"body":{"nodeType":"YulBlock","src":"11313:764:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11323:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11339:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11344:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11335:3:11"},"nodeType":"YulFunctionCall","src":"11335:14:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"11327:4:11","type":""}]},{"nodeType":"YulBlock","src":"11359:170:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11404:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11434:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"11441:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11430:3:11"},"nodeType":"YulFunctionCall","src":"11430:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11424:5:11"},"nodeType":"YulFunctionCall","src":"11424:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11408:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11490:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11508:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11513:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11504:3:11"},"nodeType":"YulFunctionCall","src":"11504:14:11"}],"functionName":{"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulIdentifier","src":"11460:29:11"},"nodeType":"YulFunctionCall","src":"11460:59:11"},"nodeType":"YulExpressionStatement","src":"11460:59:11"}]},{"nodeType":"YulBlock","src":"11539:170:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11584:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11614:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"11621:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:11"},"nodeType":"YulFunctionCall","src":"11610:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11604:5:11"},"nodeType":"YulFunctionCall","src":"11604:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11588:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11670:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11688:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11693:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11684:3:11"},"nodeType":"YulFunctionCall","src":"11684:14:11"}],"functionName":{"name":"abi_encode_t_int64_to_t_int64","nodeType":"YulIdentifier","src":"11640:29:11"},"nodeType":"YulFunctionCall","src":"11640:59:11"},"nodeType":"YulExpressionStatement","src":"11640:59:11"}]},{"nodeType":"YulBlock","src":"11719:174:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11764:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11794:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"11801:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11790:3:11"},"nodeType":"YulFunctionCall","src":"11790:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11784:5:11"},"nodeType":"YulFunctionCall","src":"11784:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11768:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11854:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11872:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11877:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11868:3:11"},"nodeType":"YulFunctionCall","src":"11868:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11820:33:11"},"nodeType":"YulFunctionCall","src":"11820:63:11"},"nodeType":"YulExpressionStatement","src":"11820:63:11"}]},{"nodeType":"YulBlock","src":"11903:167:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11941:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11971:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"11978:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11967:3:11"},"nodeType":"YulFunctionCall","src":"11967:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11961:5:11"},"nodeType":"YulFunctionCall","src":"11961:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11945:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12031:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12049:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12054:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12045:3:11"},"nodeType":"YulFunctionCall","src":"12045:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11997:33:11"},"nodeType":"YulFunctionCall","src":"11997:63:11"},"nodeType":"YulExpressionStatement","src":"11997:63:11"}]}]},"name":"abi_encode_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11300:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11307:3:11","type":""}],"src":"11173:904:11"},{"body":{"nodeType":"YulBlock","src":"12247:183:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12375:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"12383:3:11"}],"functionName":{"name":"abi_encode_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr","nodeType":"YulIdentifier","src":"12257:117:11"},"nodeType":"YulFunctionCall","src":"12257:130:11"},"nodeType":"YulExpressionStatement","src":"12257:130:11"},{"nodeType":"YulAssignment","src":"12396:28:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12414:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12419:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12410:3:11"},"nodeType":"YulFunctionCall","src":"12410:14:11"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"12396:10:11"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"12220:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12228:3:11","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"12236:10:11","type":""}],"src":"12083:347:11"},{"body":{"nodeType":"YulBlock","src":"12553:38:11","statements":[{"nodeType":"YulAssignment","src":"12563:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12575:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12580:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12571:3:11"},"nodeType":"YulFunctionCall","src":"12571:14:11"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"12563:4:11"}]}]},"name":"array_nextElement_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12540:3:11","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"12548:4:11","type":""}],"src":"12436:155:11"},{"body":{"nodeType":"YulBlock","src":"12883:860:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12893:110:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12997:5:11"}],"functionName":{"name":"array_length_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12907:89:11"},"nodeType":"YulFunctionCall","src":"12907:96:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12897:6:11","type":""}]},{"nodeType":"YulAssignment","src":"13012:135:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13135:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"13140:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13019:115:11"},"nodeType":"YulFunctionCall","src":"13019:128:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13012:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"13156:113:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13263:5:11"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13171:91:11"},"nodeType":"YulFunctionCall","src":"13171:98:11"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13160:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13278:21:11","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"13292:7:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13282:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"13368:350:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13382:34:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13409:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13403:5:11"},"nodeType":"YulFunctionCall","src":"13403:13:11"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"13386:13:11","type":""}]},{"nodeType":"YulAssignment","src":"13429:154:11","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"13564:13:11"},{"name":"pos","nodeType":"YulIdentifier","src":"13579:3:11"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr","nodeType":"YulIdentifier","src":"13436:127:11"},"nodeType":"YulFunctionCall","src":"13436:147:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13429:3:11"}]},{"nodeType":"YulAssignment","src":"13596:112:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13701:6:11"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13606:94:11"},"nodeType":"YulFunctionCall","src":"13606:102:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13596:6:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13330:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"13333:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13327:2:11"},"nodeType":"YulFunctionCall","src":"13327:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13341:18:11","statements":[{"nodeType":"YulAssignment","src":"13343:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13352:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"13355:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13348:3:11"},"nodeType":"YulFunctionCall","src":"13348:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13343:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"13312:14:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13314:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"13323:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13318:1:11","type":""}]}]},"src":"13308:410:11"},{"nodeType":"YulAssignment","src":"13727:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"13734:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13727:3:11"}]}]},"name":"abi_encode_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12862:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12869:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12878:3:11","type":""}],"src":"12675:1068:11"},{"body":{"nodeType":"YulBlock","src":"13981:309:11","statements":[{"nodeType":"YulAssignment","src":"13991:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14003:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14014:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13999:3:11"},"nodeType":"YulFunctionCall","src":"13999:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13991:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14038:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14049:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14034:3:11"},"nodeType":"YulFunctionCall","src":"14034:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14057:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14063:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14053:3:11"},"nodeType":"YulFunctionCall","src":"14053:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14027:6:11"},"nodeType":"YulFunctionCall","src":"14027:47:11"},"nodeType":"YulExpressionStatement","src":"14027:47:11"},{"nodeType":"YulAssignment","src":"14083:200:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14269:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"14278:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14091:177:11"},"nodeType":"YulFunctionCall","src":"14091:192:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14083:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13953:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13965:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13976:4:11","type":""}],"src":"13749:541:11"},{"body":{"nodeType":"YulBlock","src":"14470:359:11","statements":[{"nodeType":"YulAssignment","src":"14480:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14492:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14503:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14488:3:11"},"nodeType":"YulFunctionCall","src":"14488:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14480:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14560:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14573:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14584:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14569:3:11"},"nodeType":"YulFunctionCall","src":"14569:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14516:43:11"},"nodeType":"YulFunctionCall","src":"14516:71:11"},"nodeType":"YulExpressionStatement","src":"14516:71:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14608:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14619:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14604:3:11"},"nodeType":"YulFunctionCall","src":"14604:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14628:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14634:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14624:3:11"},"nodeType":"YulFunctionCall","src":"14624:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14597:6:11"},"nodeType":"YulFunctionCall","src":"14597:48:11"},"nodeType":"YulExpressionStatement","src":"14597:48:11"},{"nodeType":"YulAssignment","src":"14654:86:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14726:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"14735:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14662:63:11"},"nodeType":"YulFunctionCall","src":"14662:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14654:4:11"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14794:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14807:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14818:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14803:3:11"},"nodeType":"YulFunctionCall","src":"14803:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14750:43:11"},"nodeType":"YulFunctionCall","src":"14750:72:11"},"nodeType":"YulExpressionStatement","src":"14750:72:11"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14426:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14438:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14446:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14454:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14465:4:11","type":""}],"src":"14296:533:11"},{"body":{"nodeType":"YulBlock","src":"14953:195:11","statements":[{"nodeType":"YulAssignment","src":"14963:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14975:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14986:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14971:3:11"},"nodeType":"YulFunctionCall","src":"14971:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14963:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15010:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15021:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15006:3:11"},"nodeType":"YulFunctionCall","src":"15006:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15029:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15035:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15025:3:11"},"nodeType":"YulFunctionCall","src":"15025:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14999:6:11"},"nodeType":"YulFunctionCall","src":"14999:47:11"},"nodeType":"YulExpressionStatement","src":"14999:47:11"},{"nodeType":"YulAssignment","src":"15055:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15127:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"15136:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15063:63:11"},"nodeType":"YulFunctionCall","src":"15063:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15055:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14925:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14937:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14948:4:11","type":""}],"src":"14835:313:11"},{"body":{"nodeType":"YulBlock","src":"15247:561:11","statements":[{"body":{"nodeType":"YulBlock","src":"15293:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15295:77:11"},"nodeType":"YulFunctionCall","src":"15295:79:11"},"nodeType":"YulExpressionStatement","src":"15295:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15268:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15277:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15264:3:11"},"nodeType":"YulFunctionCall","src":"15264:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"15289:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15260:3:11"},"nodeType":"YulFunctionCall","src":"15260:32:11"},"nodeType":"YulIf","src":"15257:119:11"},{"nodeType":"YulBlock","src":"15386:287:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15401:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15432:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15443:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15428:3:11"},"nodeType":"YulFunctionCall","src":"15428:17:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15415:12:11"},"nodeType":"YulFunctionCall","src":"15415:31:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15405:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"15493:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15495:77:11"},"nodeType":"YulFunctionCall","src":"15495:79:11"},"nodeType":"YulExpressionStatement","src":"15495:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15465:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15473:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15462:2:11"},"nodeType":"YulFunctionCall","src":"15462:30:11"},"nodeType":"YulIf","src":"15459:117:11"},{"nodeType":"YulAssignment","src":"15590:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15635:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"15646:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15631:3:11"},"nodeType":"YulFunctionCall","src":"15631:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15655:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15600:30:11"},"nodeType":"YulFunctionCall","src":"15600:63:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15590:6:11"}]}]},{"nodeType":"YulBlock","src":"15683:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15698:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"15712:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15702:6:11","type":""}]},{"nodeType":"YulAssignment","src":"15728:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15763:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"15774:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15759:3:11"},"nodeType":"YulFunctionCall","src":"15759:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15783:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15738:20:11"},"nodeType":"YulFunctionCall","src":"15738:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15728:6:11"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15209:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15220:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15232:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15240:6:11","type":""}],"src":"15154:654:11"},{"body":{"nodeType":"YulBlock","src":"15960:277:11","statements":[{"nodeType":"YulAssignment","src":"15970:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15982:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15993:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15978:3:11"},"nodeType":"YulFunctionCall","src":"15978:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15970:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16050:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16063:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16074:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16059:3:11"},"nodeType":"YulFunctionCall","src":"16059:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16006:43:11"},"nodeType":"YulFunctionCall","src":"16006:71:11"},"nodeType":"YulExpressionStatement","src":"16006:71:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16098:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16109:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16094:3:11"},"nodeType":"YulFunctionCall","src":"16094:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16118:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"16124:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16114:3:11"},"nodeType":"YulFunctionCall","src":"16114:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16087:6:11"},"nodeType":"YulFunctionCall","src":"16087:48:11"},"nodeType":"YulExpressionStatement","src":"16087:48:11"},{"nodeType":"YulAssignment","src":"16144:86:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16216:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"16225:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16152:63:11"},"nodeType":"YulFunctionCall","src":"16152:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16144:4:11"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15924:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15936:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15944:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15955:4:11","type":""}],"src":"15814:423:11"},{"body":{"nodeType":"YulBlock","src":"16317:40:11","statements":[{"nodeType":"YulAssignment","src":"16328:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16344:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16338:5:11"},"nodeType":"YulFunctionCall","src":"16338:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16328:6:11"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16300:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16310:6:11","type":""}],"src":"16243:114:11"},{"body":{"nodeType":"YulBlock","src":"16474:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16491:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"16496:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16484:6:11"},"nodeType":"YulFunctionCall","src":"16484:19:11"},"nodeType":"YulExpressionStatement","src":"16484:19:11"},{"nodeType":"YulAssignment","src":"16512:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16531:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16536:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16527:3:11"},"nodeType":"YulFunctionCall","src":"16527:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16512:11:11"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16446:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"16451:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16462:11:11","type":""}],"src":"16363:184:11"},{"body":{"nodeType":"YulBlock","src":"16625:60:11","statements":[{"nodeType":"YulAssignment","src":"16635:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16643:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16635:4:11"}]},{"nodeType":"YulAssignment","src":"16656:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16668:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16673:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16664:3:11"},"nodeType":"YulFunctionCall","src":"16664:14:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16656:4:11"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16612:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16620:4:11","type":""}],"src":"16553:132:11"},{"body":{"nodeType":"YulBlock","src":"16771:99:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16815:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"16823:3:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16781:33:11"},"nodeType":"YulFunctionCall","src":"16781:46:11"},"nodeType":"YulExpressionStatement","src":"16781:46:11"},{"nodeType":"YulAssignment","src":"16836:28:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16854:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16859:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16850:3:11"},"nodeType":"YulFunctionCall","src":"16850:14:11"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"16836:10:11"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"16744:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16752:3:11","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"16760:10:11","type":""}],"src":"16691:179:11"},{"body":{"nodeType":"YulBlock","src":"16951:38:11","statements":[{"nodeType":"YulAssignment","src":"16961:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16973:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16978:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16969:3:11"},"nodeType":"YulFunctionCall","src":"16969:14:11"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16961:4:11"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16938:3:11","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16946:4:11","type":""}],"src":"16876:113:11"},{"body":{"nodeType":"YulBlock","src":"17149:608:11","statements":[{"nodeType":"YulVariableDeclaration","src":"17159:68:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17221:5:11"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17173:47:11"},"nodeType":"YulFunctionCall","src":"17173:54:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17163:6:11","type":""}]},{"nodeType":"YulAssignment","src":"17236:93:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17317:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"17322:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17243:73:11"},"nodeType":"YulFunctionCall","src":"17243:86:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17236:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"17338:71:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17403:5:11"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17353:49:11"},"nodeType":"YulFunctionCall","src":"17353:56:11"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"17342:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17418:21:11","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"17432:7:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"17422:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"17508:224:11","statements":[{"nodeType":"YulVariableDeclaration","src":"17522:34:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17549:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17543:5:11"},"nodeType":"YulFunctionCall","src":"17543:13:11"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"17526:13:11","type":""}]},{"nodeType":"YulAssignment","src":"17569:70:11","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"17620:13:11"},{"name":"pos","nodeType":"YulIdentifier","src":"17635:3:11"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17576:43:11"},"nodeType":"YulFunctionCall","src":"17576:63:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17569:3:11"}]},{"nodeType":"YulAssignment","src":"17652:70:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17715:6:11"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17662:52:11"},"nodeType":"YulFunctionCall","src":"17662:60:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17652:6:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17470:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"17473:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17467:2:11"},"nodeType":"YulFunctionCall","src":"17467:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17481:18:11","statements":[{"nodeType":"YulAssignment","src":"17483:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17492:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"17495:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17488:3:11"},"nodeType":"YulFunctionCall","src":"17488:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17483:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"17452:14:11","statements":[{"nodeType":"YulVariableDeclaration","src":"17454:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17463:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17458:1:11","type":""}]}]},"src":"17448:284:11"},{"nodeType":"YulAssignment","src":"17741:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"17748:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17741:3:11"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17128:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17135:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17144:3:11","type":""}],"src":"17025:732:11"},{"body":{"nodeType":"YulBlock","src":"17911:225:11","statements":[{"nodeType":"YulAssignment","src":"17921:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17933:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17944:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17929:3:11"},"nodeType":"YulFunctionCall","src":"17929:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17921:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17968:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17979:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17964:3:11"},"nodeType":"YulFunctionCall","src":"17964:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17987:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"17993:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17983:3:11"},"nodeType":"YulFunctionCall","src":"17983:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17957:6:11"},"nodeType":"YulFunctionCall","src":"17957:47:11"},"nodeType":"YulExpressionStatement","src":"17957:47:11"},{"nodeType":"YulAssignment","src":"18013:116:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18115:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"18124:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18021:93:11"},"nodeType":"YulFunctionCall","src":"18021:108:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18013:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17883:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17895:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17906:4:11","type":""}],"src":"17763:373:11"},{"body":{"nodeType":"YulBlock","src":"18252:689:11","statements":[{"body":{"nodeType":"YulBlock","src":"18298:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18300:77:11"},"nodeType":"YulFunctionCall","src":"18300:79:11"},"nodeType":"YulExpressionStatement","src":"18300:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18273:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"18282:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18269:3:11"},"nodeType":"YulFunctionCall","src":"18269:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"18294:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18265:3:11"},"nodeType":"YulFunctionCall","src":"18265:32:11"},"nodeType":"YulIf","src":"18262:119:11"},{"nodeType":"YulBlock","src":"18391:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18406:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18420:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18410:6:11","type":""}]},{"nodeType":"YulAssignment","src":"18435:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18470:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"18481:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18466:3:11"},"nodeType":"YulFunctionCall","src":"18466:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18490:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18445:20:11"},"nodeType":"YulFunctionCall","src":"18445:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18435:6:11"}]}]},{"nodeType":"YulBlock","src":"18518:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18533:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18547:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18537:6:11","type":""}]},{"nodeType":"YulAssignment","src":"18563:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18598:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"18609:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:11"},"nodeType":"YulFunctionCall","src":"18594:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18618:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18573:20:11"},"nodeType":"YulFunctionCall","src":"18573:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18563:6:11"}]}]},{"nodeType":"YulBlock","src":"18646:288:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18661:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18692:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18703:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18688:3:11"},"nodeType":"YulFunctionCall","src":"18688:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18675:12:11"},"nodeType":"YulFunctionCall","src":"18675:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18665:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"18754:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18756:77:11"},"nodeType":"YulFunctionCall","src":"18756:79:11"},"nodeType":"YulExpressionStatement","src":"18756:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18726:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18734:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18723:2:11"},"nodeType":"YulFunctionCall","src":"18723:30:11"},"nodeType":"YulIf","src":"18720:117:11"},{"nodeType":"YulAssignment","src":"18851:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18896:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"18907:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18892:3:11"},"nodeType":"YulFunctionCall","src":"18892:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18916:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18861:30:11"},"nodeType":"YulFunctionCall","src":"18861:63:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18851:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18206:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18217:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18229:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18237:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18245:6:11","type":""}],"src":"18142:799:11"},{"body":{"nodeType":"YulBlock","src":"19067:859:11","statements":[{"body":{"nodeType":"YulBlock","src":"19113:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19115:77:11"},"nodeType":"YulFunctionCall","src":"19115:79:11"},"nodeType":"YulExpressionStatement","src":"19115:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19088:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"19097:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19084:3:11"},"nodeType":"YulFunctionCall","src":"19084:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"19109:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19080:3:11"},"nodeType":"YulFunctionCall","src":"19080:32:11"},"nodeType":"YulIf","src":"19077:119:11"},{"nodeType":"YulBlock","src":"19206:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19221:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19235:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19225:6:11","type":""}]},{"nodeType":"YulAssignment","src":"19250:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19285:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"19296:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19281:3:11"},"nodeType":"YulFunctionCall","src":"19281:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19305:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19260:20:11"},"nodeType":"YulFunctionCall","src":"19260:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19250:6:11"}]}]},{"nodeType":"YulBlock","src":"19333:288:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19348:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19379:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19390:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19375:3:11"},"nodeType":"YulFunctionCall","src":"19375:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19362:12:11"},"nodeType":"YulFunctionCall","src":"19362:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19352:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"19441:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19443:77:11"},"nodeType":"YulFunctionCall","src":"19443:79:11"},"nodeType":"YulExpressionStatement","src":"19443:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19413:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19421:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19410:2:11"},"nodeType":"YulFunctionCall","src":"19410:30:11"},"nodeType":"YulIf","src":"19407:117:11"},{"nodeType":"YulAssignment","src":"19538:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19583:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"19594:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19579:3:11"},"nodeType":"YulFunctionCall","src":"19579:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19603:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19548:30:11"},"nodeType":"YulFunctionCall","src":"19548:63:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19538:6:11"}]}]},{"nodeType":"YulBlock","src":"19631:288:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19646:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19677:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19688:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19673:3:11"},"nodeType":"YulFunctionCall","src":"19673:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19660:12:11"},"nodeType":"YulFunctionCall","src":"19660:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19650:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"19739:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19741:77:11"},"nodeType":"YulFunctionCall","src":"19741:79:11"},"nodeType":"YulExpressionStatement","src":"19741:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19711:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19719:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19708:2:11"},"nodeType":"YulFunctionCall","src":"19708:30:11"},"nodeType":"YulIf","src":"19705:117:11"},{"nodeType":"YulAssignment","src":"19836:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19881:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"19892:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19877:3:11"},"nodeType":"YulFunctionCall","src":"19877:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19901:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19846:30:11"},"nodeType":"YulFunctionCall","src":"19846:63:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19836:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19021:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19032:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19044:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19052:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19060:6:11","type":""}],"src":"18947:979:11"},{"body":{"nodeType":"YulBlock","src":"20031:40:11","statements":[{"nodeType":"YulAssignment","src":"20042:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20058:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20052:5:11"},"nodeType":"YulFunctionCall","src":"20052:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20042:6:11"}]}]},"name":"array_length_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20014:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20024:6:11","type":""}],"src":"19932:139:11"},{"body":{"nodeType":"YulBlock","src":"20213:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20230:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"20235:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20223:6:11"},"nodeType":"YulFunctionCall","src":"20223:19:11"},"nodeType":"YulExpressionStatement","src":"20223:19:11"},{"nodeType":"YulAssignment","src":"20251:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20270:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"20275:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20266:3:11"},"nodeType":"YulFunctionCall","src":"20266:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20251:11:11"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20185:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"20190:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20201:11:11","type":""}],"src":"20077:209:11"},{"body":{"nodeType":"YulBlock","src":"20389:60:11","statements":[{"nodeType":"YulAssignment","src":"20399:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"20407:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"20399:4:11"}]},{"nodeType":"YulAssignment","src":"20420:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"20432:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"20437:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20428:3:11"},"nodeType":"YulFunctionCall","src":"20428:14:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"20420:4:11"}]}]},"name":"array_dataslot_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"20376:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"20384:4:11","type":""}],"src":"20292:157:11"},{"body":{"nodeType":"YulBlock","src":"20498:43:11","statements":[{"nodeType":"YulAssignment","src":"20508:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20523:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"20530:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20519:3:11"},"nodeType":"YulFunctionCall","src":"20519:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20508:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20480:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20490:7:11","type":""}],"src":"20455:86:11"},{"body":{"nodeType":"YulBlock","src":"20598:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20615:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20636:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"20620:15:11"},"nodeType":"YulFunctionCall","src":"20620:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20608:6:11"},"nodeType":"YulFunctionCall","src":"20608:35:11"},"nodeType":"YulExpressionStatement","src":"20608:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20586:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20593:3:11","type":""}],"src":"20547:102:11"},{"body":{"nodeType":"YulBlock","src":"20809:660:11","statements":[{"nodeType":"YulVariableDeclaration","src":"20819:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20835:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"20840:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20831:3:11"},"nodeType":"YulFunctionCall","src":"20831:14:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"20823:4:11","type":""}]},{"nodeType":"YulBlock","src":"20855:236:11","statements":[{"nodeType":"YulVariableDeclaration","src":"20891:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20921:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"20928:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20917:3:11"},"nodeType":"YulFunctionCall","src":"20917:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20911:5:11"},"nodeType":"YulFunctionCall","src":"20911:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20895:12:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20959:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"20964:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20955:3:11"},"nodeType":"YulFunctionCall","src":"20955:14:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20975:4:11"},{"name":"pos","nodeType":"YulIdentifier","src":"20981:3:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20971:3:11"},"nodeType":"YulFunctionCall","src":"20971:14:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20948:6:11"},"nodeType":"YulFunctionCall","src":"20948:38:11"},"nodeType":"YulExpressionStatement","src":"20948:38:11"},{"nodeType":"YulAssignment","src":"20999:81:11","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21061:12:11"},{"name":"tail","nodeType":"YulIdentifier","src":"21075:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21007:53:11"},"nodeType":"YulFunctionCall","src":"21007:73:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20999:4:11"}]}]},{"nodeType":"YulBlock","src":"21101:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"21138:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21168:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"21175:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21164:3:11"},"nodeType":"YulFunctionCall","src":"21164:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21158:5:11"},"nodeType":"YulFunctionCall","src":"21158:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21142:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21228:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21246:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21251:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21242:3:11"},"nodeType":"YulFunctionCall","src":"21242:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21194:33:11"},"nodeType":"YulFunctionCall","src":"21194:63:11"},"nodeType":"YulExpressionStatement","src":"21194:63:11"}]},{"nodeType":"YulBlock","src":"21277:165:11","statements":[{"nodeType":"YulVariableDeclaration","src":"21317:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21347:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"21354:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21343:3:11"},"nodeType":"YulFunctionCall","src":"21343:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21337:5:11"},"nodeType":"YulFunctionCall","src":"21337:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21321:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21403:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21421:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21426:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21417:3:11"},"nodeType":"YulFunctionCall","src":"21417:14:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8","nodeType":"YulIdentifier","src":"21373:29:11"},"nodeType":"YulFunctionCall","src":"21373:59:11"},"nodeType":"YulExpressionStatement","src":"21373:59:11"}]},{"nodeType":"YulAssignment","src":"21452:11:11","value":{"name":"tail","nodeType":"YulIdentifier","src":"21459:4:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21452:3:11"}]}]},"name":"abi_encode_t_struct$_DecCoin_$2701_memory_ptr_to_t_struct$_DecCoin_$2701_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20788:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20795:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20804:3:11","type":""}],"src":"20695:774:11"},{"body":{"nodeType":"YulBlock","src":"21605:126:11","statements":[{"nodeType":"YulAssignment","src":"21615:110:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21713:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"21721:3:11"}],"functionName":{"name":"abi_encode_t_struct$_DecCoin_$2701_memory_ptr_to_t_struct$_DecCoin_$2701_memory_ptr","nodeType":"YulIdentifier","src":"21629:83:11"},"nodeType":"YulFunctionCall","src":"21629:96:11"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"21615:10:11"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_DecCoin_$2701_memory_ptr_to_t_struct$_DecCoin_$2701_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"21578:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21586:3:11","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"21594:10:11","type":""}],"src":"21475:256:11"},{"body":{"nodeType":"YulBlock","src":"21837:38:11","statements":[{"nodeType":"YulAssignment","src":"21847:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21859:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21864:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21855:3:11"},"nodeType":"YulFunctionCall","src":"21855:14:11"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"21847:4:11"}]}]},"name":"array_nextElement_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21824:3:11","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"21832:4:11","type":""}],"src":"21737:138:11"},{"body":{"nodeType":"YulBlock","src":"22099:937:11","statements":[{"nodeType":"YulVariableDeclaration","src":"22109:93:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22196:5:11"}],"functionName":{"name":"array_length_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22123:72:11"},"nodeType":"YulFunctionCall","src":"22123:79:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22113:6:11","type":""}]},{"nodeType":"YulAssignment","src":"22211:118:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22317:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"22322:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22218:98:11"},"nodeType":"YulFunctionCall","src":"22218:111:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22211:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"22338:20:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"22355:3:11"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"22342:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22367:39:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22383:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22392:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22400:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22388:3:11"},"nodeType":"YulFunctionCall","src":"22388:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22379:3:11"},"nodeType":"YulFunctionCall","src":"22379:27:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"22371:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22415:96:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22505:5:11"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22430:74:11"},"nodeType":"YulFunctionCall","src":"22430:81:11"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"22419:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22520:21:11","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"22534:7:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"22524:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"22610:381:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22631:3:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22640:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"22646:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22636:3:11"},"nodeType":"YulFunctionCall","src":"22636:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22624:6:11"},"nodeType":"YulFunctionCall","src":"22624:33:11"},"nodeType":"YulExpressionStatement","src":"22624:33:11"},{"nodeType":"YulVariableDeclaration","src":"22670:34:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22697:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22691:5:11"},"nodeType":"YulFunctionCall","src":"22691:13:11"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"22674:13:11","type":""}]},{"nodeType":"YulAssignment","src":"22717:122:11","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"22819:13:11"},{"name":"tail","nodeType":"YulIdentifier","src":"22834:4:11"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_DecCoin_$2701_memory_ptr_to_t_struct$_DecCoin_$2701_memory_ptr","nodeType":"YulIdentifier","src":"22725:93:11"},"nodeType":"YulFunctionCall","src":"22725:114:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22717:4:11"}]},{"nodeType":"YulAssignment","src":"22852:95:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22940:6:11"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22862:77:11"},"nodeType":"YulFunctionCall","src":"22862:85:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22852:6:11"}]},{"nodeType":"YulAssignment","src":"22960:21:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22971:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22976:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22967:3:11"},"nodeType":"YulFunctionCall","src":"22967:14:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22960:3:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22572:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"22575:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22569:2:11"},"nodeType":"YulFunctionCall","src":"22569:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22583:18:11","statements":[{"nodeType":"YulAssignment","src":"22585:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22594:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"22597:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22590:3:11"},"nodeType":"YulFunctionCall","src":"22590:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22585:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"22554:14:11","statements":[{"nodeType":"YulVariableDeclaration","src":"22556:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"22565:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22560:1:11","type":""}]}]},"src":"22550:441:11"},{"nodeType":"YulAssignment","src":"23000:11:11","value":{"name":"tail","nodeType":"YulIdentifier","src":"23007:4:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23000:3:11"}]},{"nodeType":"YulAssignment","src":"23020:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"23027:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23020:3:11"}]}]},"name":"abi_encode_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22078:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22085:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22094:3:11","type":""}],"src":"21925:1111:11"},{"body":{"nodeType":"YulBlock","src":"23240:275:11","statements":[{"nodeType":"YulAssignment","src":"23250:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23262:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23273:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23258:3:11"},"nodeType":"YulFunctionCall","src":"23258:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23250:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23297:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23308:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23293:3:11"},"nodeType":"YulFunctionCall","src":"23293:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23316:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"23322:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23312:3:11"},"nodeType":"YulFunctionCall","src":"23312:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23286:6:11"},"nodeType":"YulFunctionCall","src":"23286:47:11"},"nodeType":"YulExpressionStatement","src":"23286:47:11"},{"nodeType":"YulAssignment","src":"23342:166:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23494:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"23503:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23350:143:11"},"nodeType":"YulFunctionCall","src":"23350:158:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23342:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23212:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23224:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23235:4:11","type":""}],"src":"23042:473:11"},{"body":{"nodeType":"YulBlock","src":"23624:731:11","statements":[{"body":{"nodeType":"YulBlock","src":"23670:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23672:77:11"},"nodeType":"YulFunctionCall","src":"23672:79:11"},"nodeType":"YulExpressionStatement","src":"23672:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23645:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"23654:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23641:3:11"},"nodeType":"YulFunctionCall","src":"23641:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"23666:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23637:3:11"},"nodeType":"YulFunctionCall","src":"23637:32:11"},"nodeType":"YulIf","src":"23634:119:11"},{"nodeType":"YulBlock","src":"23763:287:11","statements":[{"nodeType":"YulVariableDeclaration","src":"23778:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23809:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23820:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23805:3:11"},"nodeType":"YulFunctionCall","src":"23805:17:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23792:12:11"},"nodeType":"YulFunctionCall","src":"23792:31:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23782:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"23870:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"23872:77:11"},"nodeType":"YulFunctionCall","src":"23872:79:11"},"nodeType":"YulExpressionStatement","src":"23872:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23842:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"23850:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23839:2:11"},"nodeType":"YulFunctionCall","src":"23839:30:11"},"nodeType":"YulIf","src":"23836:117:11"},{"nodeType":"YulAssignment","src":"23967:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24012:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"24023:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24008:3:11"},"nodeType":"YulFunctionCall","src":"24008:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24032:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"23977:30:11"},"nodeType":"YulFunctionCall","src":"23977:63:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23967:6:11"}]}]},{"nodeType":"YulBlock","src":"24060:288:11","statements":[{"nodeType":"YulVariableDeclaration","src":"24075:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24106:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24117:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24102:3:11"},"nodeType":"YulFunctionCall","src":"24102:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24089:12:11"},"nodeType":"YulFunctionCall","src":"24089:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24079:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"24168:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24170:77:11"},"nodeType":"YulFunctionCall","src":"24170:79:11"},"nodeType":"YulExpressionStatement","src":"24170:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24140:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"24148:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24137:2:11"},"nodeType":"YulFunctionCall","src":"24137:30:11"},"nodeType":"YulIf","src":"24134:117:11"},{"nodeType":"YulAssignment","src":"24265:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24310:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"24321:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24306:3:11"},"nodeType":"YulFunctionCall","src":"24306:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24330:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24275:30:11"},"nodeType":"YulFunctionCall","src":"24275:63:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24265:6:11"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23586:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23597:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23609:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23617:6:11","type":""}],"src":"23521:834:11"},{"body":{"nodeType":"YulBlock","src":"24453:229:11","statements":[{"body":{"nodeType":"YulBlock","src":"24558:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"24560:16:11"},"nodeType":"YulFunctionCall","src":"24560:18:11"},"nodeType":"YulExpressionStatement","src":"24560:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24530:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"24538:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24527:2:11"},"nodeType":"YulFunctionCall","src":"24527:30:11"},"nodeType":"YulIf","src":"24524:56:11"},{"nodeType":"YulAssignment","src":"24590:25:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24602:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"24610:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24598:3:11"},"nodeType":"YulFunctionCall","src":"24598:17:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"24590:4:11"}]},{"nodeType":"YulAssignment","src":"24652:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"24664:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"24670:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24660:3:11"},"nodeType":"YulFunctionCall","src":"24660:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"24652:4:11"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"24437:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"24448:4:11","type":""}],"src":"24361:321:11"},{"body":{"nodeType":"YulBlock","src":"24777:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24794:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24797:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24787:6:11"},"nodeType":"YulFunctionCall","src":"24787:12:11"},"nodeType":"YulExpressionStatement","src":"24787:12:11"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"24688:117:11"},{"body":{"nodeType":"YulBlock","src":"24939:833:11","statements":[{"nodeType":"YulAssignment","src":"24949:100:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25041:6:11"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"24974:66:11"},"nodeType":"YulFunctionCall","src":"24974:74:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"24958:15:11"},"nodeType":"YulFunctionCall","src":"24958:91:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"24949:5:11"}]},{"nodeType":"YulVariableDeclaration","src":"25058:16:11","value":{"name":"array","nodeType":"YulIdentifier","src":"25069:5:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"25062:3:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"25091:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"25098:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25084:6:11"},"nodeType":"YulFunctionCall","src":"25084:21:11"},"nodeType":"YulExpressionStatement","src":"25084:21:11"},{"nodeType":"YulAssignment","src":"25114:23:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"25125:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"25132:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25121:3:11"},"nodeType":"YulFunctionCall","src":"25121:16:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"25114:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"25147:44:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25165:6:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25177:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"25185:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25173:3:11"},"nodeType":"YulFunctionCall","src":"25173:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25161:3:11"},"nodeType":"YulFunctionCall","src":"25161:30:11"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"25151:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"25219:103:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"25233:77:11"},"nodeType":"YulFunctionCall","src":"25233:79:11"},"nodeType":"YulExpressionStatement","src":"25233:79:11"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"25206:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"25214:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25203:2:11"},"nodeType":"YulFunctionCall","src":"25203:15:11"},"nodeType":"YulIf","src":"25200:122:11"},{"body":{"nodeType":"YulBlock","src":"25407:359:11","statements":[{"nodeType":"YulVariableDeclaration","src":"25422:36:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25454:3:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25441:12:11"},"nodeType":"YulFunctionCall","src":"25441:17:11"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"25426:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"25510:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"25512:77:11"},"nodeType":"YulFunctionCall","src":"25512:79:11"},"nodeType":"YulExpressionStatement","src":"25512:79:11"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"25477:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"25490:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25474:2:11"},"nodeType":"YulFunctionCall","src":"25474:35:11"},"nodeType":"YulIf","src":"25471:122:11"},{"nodeType":"YulVariableDeclaration","src":"25606:42:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25628:6:11"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"25636:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25624:3:11"},"nodeType":"YulFunctionCall","src":"25624:24:11"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"25610:10:11","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25669:3:11"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"25705:10:11"},{"name":"end","nodeType":"YulIdentifier","src":"25717:3:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25674:30:11"},"nodeType":"YulFunctionCall","src":"25674:47:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25662:6:11"},"nodeType":"YulFunctionCall","src":"25662:60:11"},"nodeType":"YulExpressionStatement","src":"25662:60:11"},{"nodeType":"YulAssignment","src":"25735:21:11","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25746:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"25751:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25742:3:11"},"nodeType":"YulFunctionCall","src":"25742:14:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"25735:3:11"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25360:3:11"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"25365:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25357:2:11"},"nodeType":"YulFunctionCall","src":"25357:15:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25373:25:11","statements":[{"nodeType":"YulAssignment","src":"25375:21:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25386:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"25391:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25382:3:11"},"nodeType":"YulFunctionCall","src":"25382:14:11"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"25375:3:11"}]}]},"pre":{"nodeType":"YulBlock","src":"25335:21:11","statements":[{"nodeType":"YulVariableDeclaration","src":"25337:17:11","value":{"name":"offset","nodeType":"YulIdentifier","src":"25348:6:11"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"25341:3:11","type":""}]}]},"src":"25331:435:11"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24909:6:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"24917:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"24925:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"24933:5:11","type":""}],"src":"24827:945:11"},{"body":{"nodeType":"YulBlock","src":"25881:303:11","statements":[{"body":{"nodeType":"YulBlock","src":"25930:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"25932:77:11"},"nodeType":"YulFunctionCall","src":"25932:79:11"},"nodeType":"YulExpressionStatement","src":"25932:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25909:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"25917:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25905:3:11"},"nodeType":"YulFunctionCall","src":"25905:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"25924:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25901:3:11"},"nodeType":"YulFunctionCall","src":"25901:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25894:6:11"},"nodeType":"YulFunctionCall","src":"25894:35:11"},"nodeType":"YulIf","src":"25891:122:11"},{"nodeType":"YulVariableDeclaration","src":"26022:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26049:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26036:12:11"},"nodeType":"YulFunctionCall","src":"26036:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26026:6:11","type":""}]},{"nodeType":"YulAssignment","src":"26065:113:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26151:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"26159:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26147:3:11"},"nodeType":"YulFunctionCall","src":"26147:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"26166:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"26174:3:11"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"26074:72:11"},"nodeType":"YulFunctionCall","src":"26074:104:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"26065:5:11"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25859:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"25867:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"25875:5:11","type":""}],"src":"25794:390:11"},{"body":{"nodeType":"YulBlock","src":"26335:884:11","statements":[{"body":{"nodeType":"YulBlock","src":"26381:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26383:77:11"},"nodeType":"YulFunctionCall","src":"26383:79:11"},"nodeType":"YulExpressionStatement","src":"26383:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26356:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"26365:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26352:3:11"},"nodeType":"YulFunctionCall","src":"26352:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"26377:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26348:3:11"},"nodeType":"YulFunctionCall","src":"26348:32:11"},"nodeType":"YulIf","src":"26345:119:11"},{"nodeType":"YulBlock","src":"26474:287:11","statements":[{"nodeType":"YulVariableDeclaration","src":"26489:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26520:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26531:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26516:3:11"},"nodeType":"YulFunctionCall","src":"26516:17:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26503:12:11"},"nodeType":"YulFunctionCall","src":"26503:31:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26493:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"26581:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26583:77:11"},"nodeType":"YulFunctionCall","src":"26583:79:11"},"nodeType":"YulExpressionStatement","src":"26583:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26553:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"26561:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26550:2:11"},"nodeType":"YulFunctionCall","src":"26550:30:11"},"nodeType":"YulIf","src":"26547:117:11"},{"nodeType":"YulAssignment","src":"26678:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26723:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"26734:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26719:3:11"},"nodeType":"YulFunctionCall","src":"26719:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26743:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"26688:30:11"},"nodeType":"YulFunctionCall","src":"26688:63:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26678:6:11"}]}]},{"nodeType":"YulBlock","src":"26771:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"26786:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"26800:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26790:6:11","type":""}]},{"nodeType":"YulAssignment","src":"26816:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26851:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"26862:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26847:3:11"},"nodeType":"YulFunctionCall","src":"26847:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26871:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26826:20:11"},"nodeType":"YulFunctionCall","src":"26826:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"26816:6:11"}]}]},{"nodeType":"YulBlock","src":"26899:313:11","statements":[{"nodeType":"YulVariableDeclaration","src":"26914:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26945:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26956:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26941:3:11"},"nodeType":"YulFunctionCall","src":"26941:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26928:12:11"},"nodeType":"YulFunctionCall","src":"26928:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26918:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"27007:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27009:77:11"},"nodeType":"YulFunctionCall","src":"27009:79:11"},"nodeType":"YulExpressionStatement","src":"27009:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26979:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"26987:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26976:2:11"},"nodeType":"YulFunctionCall","src":"26976:30:11"},"nodeType":"YulIf","src":"26973:117:11"},{"nodeType":"YulAssignment","src":"27104:98:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27174:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"27185:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27170:3:11"},"nodeType":"YulFunctionCall","src":"27170:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27194:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"27114:55:11"},"nodeType":"YulFunctionCall","src":"27114:88:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"27104:6:11"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26289:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26300:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26312:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26320:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26328:6:11","type":""}],"src":"26190:1029:11"},{"body":{"nodeType":"YulBlock","src":"27253:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27270:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27273:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27263:6:11"},"nodeType":"YulFunctionCall","src":"27263:88:11"},"nodeType":"YulExpressionStatement","src":"27263:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27367:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27370:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27360:6:11"},"nodeType":"YulFunctionCall","src":"27360:15:11"},"nodeType":"YulExpressionStatement","src":"27360:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27391:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27394:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27384:6:11"},"nodeType":"YulFunctionCall","src":"27384:15:11"},"nodeType":"YulExpressionStatement","src":"27384:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"27225:180:11"},{"body":{"nodeType":"YulBlock","src":"27455:147:11","statements":[{"nodeType":"YulAssignment","src":"27465:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27488:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27470:17:11"},"nodeType":"YulFunctionCall","src":"27470:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27465:1:11"}]},{"nodeType":"YulAssignment","src":"27499:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27522:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27504:17:11"},"nodeType":"YulFunctionCall","src":"27504:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27499:1:11"}]},{"nodeType":"YulAssignment","src":"27533:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27544:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"27547:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27540:3:11"},"nodeType":"YulFunctionCall","src":"27540:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"27533:3:11"}]},{"body":{"nodeType":"YulBlock","src":"27573:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27575:16:11"},"nodeType":"YulFunctionCall","src":"27575:18:11"},"nodeType":"YulExpressionStatement","src":"27575:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27565:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"27568:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27562:2:11"},"nodeType":"YulFunctionCall","src":"27562:10:11"},"nodeType":"YulIf","src":"27559:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27442:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"27445:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"27451:3:11","type":""}],"src":"27411:191:11"},{"body":{"nodeType":"YulBlock","src":"27636:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27653:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27656:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27646:6:11"},"nodeType":"YulFunctionCall","src":"27646:88:11"},"nodeType":"YulExpressionStatement","src":"27646:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27750:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27753:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27743:6:11"},"nodeType":"YulFunctionCall","src":"27743:15:11"},"nodeType":"YulExpressionStatement","src":"27743:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27774:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27777:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27767:6:11"},"nodeType":"YulFunctionCall","src":"27767:15:11"},"nodeType":"YulExpressionStatement","src":"27767:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"27608:180:11"},{"body":{"nodeType":"YulBlock","src":"27845:269:11","statements":[{"nodeType":"YulAssignment","src":"27855:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27869:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"27875:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"27865:3:11"},"nodeType":"YulFunctionCall","src":"27865:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27855:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"27886:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27916:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"27922:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27912:3:11"},"nodeType":"YulFunctionCall","src":"27912:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"27890:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"27963:51:11","statements":[{"nodeType":"YulAssignment","src":"27977:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27991:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"27999:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27987:3:11"},"nodeType":"YulFunctionCall","src":"27987:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27977:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"27943:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27936:6:11"},"nodeType":"YulFunctionCall","src":"27936:26:11"},"nodeType":"YulIf","src":"27933:81:11"},{"body":{"nodeType":"YulBlock","src":"28066:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"28080:16:11"},"nodeType":"YulFunctionCall","src":"28080:18:11"},"nodeType":"YulExpressionStatement","src":"28080:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"28030:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28053:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"28061:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28050:2:11"},"nodeType":"YulFunctionCall","src":"28050:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28027:2:11"},"nodeType":"YulFunctionCall","src":"28027:38:11"},"nodeType":"YulIf","src":"28024:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27829:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"27838:6:11","type":""}],"src":"27794:320:11"},{"body":{"nodeType":"YulBlock","src":"28148:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28165:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28168:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28158:6:11"},"nodeType":"YulFunctionCall","src":"28158:88:11"},"nodeType":"YulExpressionStatement","src":"28158:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28262:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28265:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28255:6:11"},"nodeType":"YulFunctionCall","src":"28255:15:11"},"nodeType":"YulExpressionStatement","src":"28255:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28286:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28289:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28279:6:11"},"nodeType":"YulFunctionCall","src":"28279:15:11"},"nodeType":"YulExpressionStatement","src":"28279:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"28120:180:11"},{"body":{"nodeType":"YulBlock","src":"28349:190:11","statements":[{"nodeType":"YulAssignment","src":"28359:33:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28386:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28368:17:11"},"nodeType":"YulFunctionCall","src":"28368:24:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28359:5:11"}]},{"body":{"nodeType":"YulBlock","src":"28482:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28484:16:11"},"nodeType":"YulFunctionCall","src":"28484:18:11"},"nodeType":"YulExpressionStatement","src":"28484:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28407:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"28414:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28404:2:11"},"nodeType":"YulFunctionCall","src":"28404:77:11"},"nodeType":"YulIf","src":"28401:103:11"},{"nodeType":"YulAssignment","src":"28513:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28524:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"28531:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28520:3:11"},"nodeType":"YulFunctionCall","src":"28520:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28513:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28335:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28345:3:11","type":""}],"src":"28306:233:11"},{"body":{"nodeType":"YulBlock","src":"28658:34:11","statements":[{"nodeType":"YulAssignment","src":"28668:18:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"28683:3:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"28668:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28630:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"28635:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"28646:11:11","type":""}],"src":"28545:147:11"},{"body":{"nodeType":"YulBlock","src":"28804:8:11","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28796:6:11","type":""}],"src":"28698:114:11"},{"body":{"nodeType":"YulBlock","src":"28981:235:11","statements":[{"nodeType":"YulAssignment","src":"28991:90:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29074:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"29079:1:11","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28998:75:11"},"nodeType":"YulFunctionCall","src":"28998:83:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28991:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29179:3:11"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"29090:88:11"},"nodeType":"YulFunctionCall","src":"29090:93:11"},"nodeType":"YulExpressionStatement","src":"29090:93:11"},{"nodeType":"YulAssignment","src":"29192:18:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29203:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"29208:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29199:3:11"},"nodeType":"YulFunctionCall","src":"29199:11:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29192:3:11"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28969:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28977:3:11","type":""}],"src":"28818:398:11"},{"body":{"nodeType":"YulBlock","src":"29410:191:11","statements":[{"nodeType":"YulAssignment","src":"29421:154:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29571:3:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29428:141:11"},"nodeType":"YulFunctionCall","src":"29428:147:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29421:3:11"}]},{"nodeType":"YulAssignment","src":"29585:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"29592:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29585:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29397:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29406:3:11","type":""}],"src":"29222:379:11"},{"body":{"nodeType":"YulBlock","src":"29664:87:11","statements":[{"nodeType":"YulAssignment","src":"29674:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"29682:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29674:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29702:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"29705:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29695:6:11"},"nodeType":"YulFunctionCall","src":"29695:14:11"},"nodeType":"YulExpressionStatement","src":"29695:14:11"},{"nodeType":"YulAssignment","src":"29718:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29736:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29739:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"29726:9:11"},"nodeType":"YulFunctionCall","src":"29726:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29718:4:11"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"29651:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"29659:4:11","type":""}],"src":"29607:144:11"},{"body":{"nodeType":"YulBlock","src":"29888:769:11","statements":[{"nodeType":"YulVariableDeclaration","src":"29898:29:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29921:5:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"29915:5:11"},"nodeType":"YulFunctionCall","src":"29915:12:11"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"29902:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29936:50:11","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"29976:9:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"29950:25:11"},"nodeType":"YulFunctionCall","src":"29950:36:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29940:6:11","type":""}]},{"nodeType":"YulAssignment","src":"29995:95:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30078:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"30083:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30002:75:11"},"nodeType":"YulFunctionCall","src":"30002:88:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29995:3:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"30139:159:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30192:3:11"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"30201:9:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30216:4:11","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30212:3:11"},"nodeType":"YulFunctionCall","src":"30212:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30197:3:11"},"nodeType":"YulFunctionCall","src":"30197:25:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30185:6:11"},"nodeType":"YulFunctionCall","src":"30185:38:11"},"nodeType":"YulExpressionStatement","src":"30185:38:11"},{"nodeType":"YulAssignment","src":"30236:52:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30247:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30256:6:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30278:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30271:6:11"},"nodeType":"YulFunctionCall","src":"30271:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30264:6:11"},"nodeType":"YulFunctionCall","src":"30264:22:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30252:3:11"},"nodeType":"YulFunctionCall","src":"30252:35:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30243:3:11"},"nodeType":"YulFunctionCall","src":"30243:45:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30236:3:11"}]}]},"nodeType":"YulCase","src":"30132:166:11","value":{"kind":"number","nodeType":"YulLiteral","src":"30137:1:11","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"30314:337:11","statements":[{"nodeType":"YulVariableDeclaration","src":"30359:56:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30409:5:11"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"30374:34:11"},"nodeType":"YulFunctionCall","src":"30374:41:11"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"30363:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30428:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"30437:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"30432:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"30495:110:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30524:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"30529:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30520:3:11"},"nodeType":"YulFunctionCall","src":"30520:11:11"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"30539:7:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"30533:5:11"},"nodeType":"YulFunctionCall","src":"30533:14:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30513:6:11"},"nodeType":"YulFunctionCall","src":"30513:35:11"},"nodeType":"YulExpressionStatement","src":"30513:35:11"},{"nodeType":"YulAssignment","src":"30565:26:11","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"30580:7:11"},{"kind":"number","nodeType":"YulLiteral","src":"30589:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30576:3:11"},"nodeType":"YulFunctionCall","src":"30576:15:11"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"30565:7:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30462:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"30465:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30459:2:11"},"nodeType":"YulFunctionCall","src":"30459:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"30473:21:11","statements":[{"nodeType":"YulAssignment","src":"30475:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30484:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"30487:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30480:3:11"},"nodeType":"YulFunctionCall","src":"30480:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"30475:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"30455:3:11","statements":[]},"src":"30451:154:11"},{"nodeType":"YulAssignment","src":"30618:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30629:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"30634:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30625:3:11"},"nodeType":"YulFunctionCall","src":"30625:16:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30618:3:11"}]}]},"nodeType":"YulCase","src":"30307:344:11","value":{"kind":"number","nodeType":"YulLiteral","src":"30312:1:11","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"30110:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"30121:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30106:3:11"},"nodeType":"YulFunctionCall","src":"30106:17:11"},"nodeType":"YulSwitch","src":"30099:552:11"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29869:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29876:3:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29884:3:11","type":""}],"src":"29779:878:11"},{"body":{"nodeType":"YulBlock","src":"30798:138:11","statements":[{"nodeType":"YulAssignment","src":"30809:101:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30897:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"30906:3:11"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30816:80:11"},"nodeType":"YulFunctionCall","src":"30816:94:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30809:3:11"}]},{"nodeType":"YulAssignment","src":"30920:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"30927:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30920:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30777:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30783:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30794:3:11","type":""}],"src":"30663:273:11"},{"body":{"nodeType":"YulBlock","src":"30996:87:11","statements":[{"nodeType":"YulAssignment","src":"31006:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"31014:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31006:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31034:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"31037:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31027:6:11"},"nodeType":"YulFunctionCall","src":"31027:14:11"},"nodeType":"YulExpressionStatement","src":"31027:14:11"},{"nodeType":"YulAssignment","src":"31050:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31068:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31071:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"31058:9:11"},"nodeType":"YulFunctionCall","src":"31058:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31050:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"30983:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"30991:4:11","type":""}],"src":"30942:141:11"},{"body":{"nodeType":"YulBlock","src":"31133:49:11","statements":[{"nodeType":"YulAssignment","src":"31143:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31161:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"31168:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31157:3:11"},"nodeType":"YulFunctionCall","src":"31157:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"31173:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"31153:3:11"},"nodeType":"YulFunctionCall","src":"31153:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"31143:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31116:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"31126:6:11","type":""}],"src":"31089:93:11"},{"body":{"nodeType":"YulBlock","src":"31241:54:11","statements":[{"nodeType":"YulAssignment","src":"31251:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"31276:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"31282:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"31272:3:11"},"nodeType":"YulFunctionCall","src":"31272:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"31251:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"31216:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"31222:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"31232:8:11","type":""}],"src":"31188:107:11"},{"body":{"nodeType":"YulBlock","src":"31377:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"31387:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"31408:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"31420:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31404:3:11"},"nodeType":"YulFunctionCall","src":"31404:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"31391:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31431:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"31462:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"31473:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"31443:18:11"},"nodeType":"YulFunctionCall","src":"31443:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"31435:4:11","type":""}]},{"nodeType":"YulAssignment","src":"31549:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"31580:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"31591:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"31561:18:11"},"nodeType":"YulFunctionCall","src":"31561:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"31549:8:11"}]},{"nodeType":"YulAssignment","src":"31609:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31622:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"31633:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"31629:3:11"},"nodeType":"YulFunctionCall","src":"31629:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31618:3:11"},"nodeType":"YulFunctionCall","src":"31618:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31609:5:11"}]},{"nodeType":"YulAssignment","src":"31648:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31661:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"31672:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"31682:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31668:3:11"},"nodeType":"YulFunctionCall","src":"31668:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"31658:2:11"},"nodeType":"YulFunctionCall","src":"31658:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"31648:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31338:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"31345:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"31357:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"31370:6:11","type":""}],"src":"31301:393:11"},{"body":{"nodeType":"YulBlock","src":"31732:28:11","statements":[{"nodeType":"YulAssignment","src":"31742:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"31749:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"31742:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31718:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"31728:3:11","type":""}],"src":"31700:60:11"},{"body":{"nodeType":"YulBlock","src":"31826:82:11","statements":[{"nodeType":"YulAssignment","src":"31836:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31894:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31876:17:11"},"nodeType":"YulFunctionCall","src":"31876:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"31867:8:11"},"nodeType":"YulFunctionCall","src":"31867:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31849:17:11"},"nodeType":"YulFunctionCall","src":"31849:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"31836:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31806:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"31816:9:11","type":""}],"src":"31766:142:11"},{"body":{"nodeType":"YulBlock","src":"31961:28:11","statements":[{"nodeType":"YulAssignment","src":"31971:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"31978:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"31971:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31947:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"31957:3:11","type":""}],"src":"31914:75:11"},{"body":{"nodeType":"YulBlock","src":"32071:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"32081:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"32136:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"32105:30:11"},"nodeType":"YulFunctionCall","src":"32105:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"32085:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32160:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32200:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"32194:5:11"},"nodeType":"YulFunctionCall","src":"32194:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"32207:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"32239:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"32215:23:11"},"nodeType":"YulFunctionCall","src":"32215:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"32166:27:11"},"nodeType":"YulFunctionCall","src":"32166:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32153:6:11"},"nodeType":"YulFunctionCall","src":"32153:105:11"},"nodeType":"YulExpressionStatement","src":"32153:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"32048:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"32054:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"32062:7:11","type":""}],"src":"31995:269:11"},{"body":{"nodeType":"YulBlock","src":"32319:24:11","statements":[{"nodeType":"YulAssignment","src":"32329:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"32336:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32329:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32315:3:11","type":""}],"src":"32270:73:11"},{"body":{"nodeType":"YulBlock","src":"32402:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"32412:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"32426:30:11"},"nodeType":"YulFunctionCall","src":"32426:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"32416:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32511:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"32517:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"32525:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"32467:43:11"},"nodeType":"YulFunctionCall","src":"32467:65:11"},"nodeType":"YulExpressionStatement","src":"32467:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"32388:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"32394:6:11","type":""}],"src":"32349:189:11"},{"body":{"nodeType":"YulBlock","src":"32594:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"32661:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"32705:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"32712:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"32675:29:11"},"nodeType":"YulFunctionCall","src":"32675:39:11"},"nodeType":"YulExpressionStatement","src":"32675:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"32614:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"32621:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32611:2:11"},"nodeType":"YulFunctionCall","src":"32611:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"32626:26:11","statements":[{"nodeType":"YulAssignment","src":"32628:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"32641:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"32648:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32637:3:11"},"nodeType":"YulFunctionCall","src":"32637:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"32628:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"32608:2:11","statements":[]},"src":"32604:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"32582:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"32589:3:11","type":""}],"src":"32544:186:11"},{"body":{"nodeType":"YulBlock","src":"32815:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"32841:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"32855:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"32903:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"32871:31:11"},"nodeType":"YulFunctionCall","src":"32871:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"32859:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32922:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"32945:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"32973:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"32955:17:11"},"nodeType":"YulFunctionCall","src":"32955:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32941:3:11"},"nodeType":"YulFunctionCall","src":"32941:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"32926:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"33142:27:11","statements":[{"nodeType":"YulAssignment","src":"33144:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"33159:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"33144:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"33126:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"33138:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33123:2:11"},"nodeType":"YulFunctionCall","src":"33123:18:11"},"nodeType":"YulIf","src":"33120:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"33211:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"33228:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"33256:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"33238:17:11"},"nodeType":"YulFunctionCall","src":"33238:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33224:3:11"},"nodeType":"YulFunctionCall","src":"33224:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"33182:28:11"},"nodeType":"YulFunctionCall","src":"33182:80:11"},"nodeType":"YulExpressionStatement","src":"33182:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"32832:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"32837:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32829:2:11"},"nodeType":"YulFunctionCall","src":"32829:11:11"},"nodeType":"YulIf","src":"32826:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"32791:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"32798:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"32803:10:11","type":""}],"src":"32736:543:11"},{"body":{"nodeType":"YulBlock","src":"33348:54:11","statements":[{"nodeType":"YulAssignment","src":"33358:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"33383:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"33389:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"33379:3:11"},"nodeType":"YulFunctionCall","src":"33379:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"33358:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"33323:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"33329:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"33339:8:11","type":""}],"src":"33285:117:11"},{"body":{"nodeType":"YulBlock","src":"33459:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"33469:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33518:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"33521:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33514:3:11"},"nodeType":"YulFunctionCall","src":"33514:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33533:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33529:3:11"},"nodeType":"YulFunctionCall","src":"33529:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"33485:28:11"},"nodeType":"YulFunctionCall","src":"33485:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33481:3:11"},"nodeType":"YulFunctionCall","src":"33481:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"33473:4:11","type":""}]},{"nodeType":"YulAssignment","src":"33546:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"33560:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"33566:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33556:3:11"},"nodeType":"YulFunctionCall","src":"33556:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"33546:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"33436:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"33442:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"33452:6:11","type":""}],"src":"33408:169:11"},{"body":{"nodeType":"YulBlock","src":"33663:214:11","statements":[{"nodeType":"YulAssignment","src":"33796:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"33823:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"33829:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"33804:18:11"},"nodeType":"YulFunctionCall","src":"33804:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33796:4:11"}]},{"nodeType":"YulAssignment","src":"33842:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"33853:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33863:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"33866:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33859:3:11"},"nodeType":"YulFunctionCall","src":"33859:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"33850:2:11"},"nodeType":"YulFunctionCall","src":"33850:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"33842:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"33644:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"33650:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"33658:4:11","type":""}],"src":"33582:295:11"},{"body":{"nodeType":"YulBlock","src":"33974:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"33985:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"34032:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"33999:32:11"},"nodeType":"YulFunctionCall","src":"33999:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"33989:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"34121:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"34123:16:11"},"nodeType":"YulFunctionCall","src":"34123:18:11"},"nodeType":"YulExpressionStatement","src":"34123:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"34093:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"34101:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34090:2:11"},"nodeType":"YulFunctionCall","src":"34090:30:11"},"nodeType":"YulIf","src":"34087:56:11"},{"nodeType":"YulVariableDeclaration","src":"34153:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34199:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34193:5:11"},"nodeType":"YulFunctionCall","src":"34193:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"34167:25:11"},"nodeType":"YulFunctionCall","src":"34167:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"34157:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34298:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"34304:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"34312:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"34252:45:11"},"nodeType":"YulFunctionCall","src":"34252:67:11"},"nodeType":"YulExpressionStatement","src":"34252:67:11"},{"nodeType":"YulVariableDeclaration","src":"34329:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"34346:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"34333:9:11","type":""}]},{"nodeType":"YulAssignment","src":"34357:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"34370:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"34357:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"34421:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"34435:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"34454:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34466:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34462:3:11"},"nodeType":"YulFunctionCall","src":"34462:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34450:3:11"},"nodeType":"YulFunctionCall","src":"34450:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"34439:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34486:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34532:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"34500:31:11"},"nodeType":"YulFunctionCall","src":"34500:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"34490:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34550:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"34559:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"34554:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"34618:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"34643:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"34661:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"34666:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34657:3:11"},"nodeType":"YulFunctionCall","src":"34657:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34651:5:11"},"nodeType":"YulFunctionCall","src":"34651:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"34636:6:11"},"nodeType":"YulFunctionCall","src":"34636:42:11"},"nodeType":"YulExpressionStatement","src":"34636:42:11"},{"nodeType":"YulAssignment","src":"34695:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"34709:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"34717:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34705:3:11"},"nodeType":"YulFunctionCall","src":"34705:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"34695:6:11"}]},{"nodeType":"YulAssignment","src":"34736:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"34753:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"34764:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34749:3:11"},"nodeType":"YulFunctionCall","src":"34749:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"34736:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"34584:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"34587:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34581:2:11"},"nodeType":"YulFunctionCall","src":"34581:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"34596:21:11","statements":[{"nodeType":"YulAssignment","src":"34598:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"34607:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"34610:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34603:3:11"},"nodeType":"YulFunctionCall","src":"34603:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"34598:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"34577:3:11","statements":[]},"src":"34573:208:11"},{"body":{"nodeType":"YulBlock","src":"34817:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"34835:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"34862:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"34867:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34858:3:11"},"nodeType":"YulFunctionCall","src":"34858:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34852:5:11"},"nodeType":"YulFunctionCall","src":"34852:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"34839:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"34902:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"34929:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"34944:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"34952:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34940:3:11"},"nodeType":"YulFunctionCall","src":"34940:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"34910:18:11"},"nodeType":"YulFunctionCall","src":"34910:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"34895:6:11"},"nodeType":"YulFunctionCall","src":"34895:64:11"},"nodeType":"YulExpressionStatement","src":"34895:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"34800:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"34809:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34797:2:11"},"nodeType":"YulFunctionCall","src":"34797:19:11"},"nodeType":"YulIf","src":"34794:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34993:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35007:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"35015:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35003:3:11"},"nodeType":"YulFunctionCall","src":"35003:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"35019:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34999:3:11"},"nodeType":"YulFunctionCall","src":"34999:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"34986:6:11"},"nodeType":"YulFunctionCall","src":"34986:36:11"},"nodeType":"YulExpressionStatement","src":"34986:36:11"}]},"nodeType":"YulCase","src":"34414:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"34419:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"35049:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"35063:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"35076:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"35067:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"35100:67:11","statements":[{"nodeType":"YulAssignment","src":"35118:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35137:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35142:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35133:3:11"},"nodeType":"YulFunctionCall","src":"35133:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35127:5:11"},"nodeType":"YulFunctionCall","src":"35127:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35118:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"35093:6:11"},"nodeType":"YulIf","src":"35090:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35187:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35246:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"35253:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"35193:52:11"},"nodeType":"YulFunctionCall","src":"35193:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35180:6:11"},"nodeType":"YulFunctionCall","src":"35180:81:11"},"nodeType":"YulExpressionStatement","src":"35180:81:11"}]},"nodeType":"YulCase","src":"35041:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"34394:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"34402:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34391:2:11"},"nodeType":"YulFunctionCall","src":"34391:14:11"},"nodeType":"YulSwitch","src":"34384:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"33963:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"33969:3:11","type":""}],"src":"33882:1395:11"},{"body":{"nodeType":"YulBlock","src":"35328:81:11","statements":[{"nodeType":"YulAssignment","src":"35338:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35353:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"35360:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35349:3:11"},"nodeType":"YulFunctionCall","src":"35349:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35338:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35310:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35320:7:11","type":""}],"src":"35283:126:11"},{"body":{"nodeType":"YulBlock","src":"35460:51:11","statements":[{"nodeType":"YulAssignment","src":"35470:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35499:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"35481:17:11"},"nodeType":"YulFunctionCall","src":"35481:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35470:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35442:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35452:7:11","type":""}],"src":"35415:96:11"},{"body":{"nodeType":"YulBlock","src":"35582:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35599:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35622:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"35604:17:11"},"nodeType":"YulFunctionCall","src":"35604:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35592:6:11"},"nodeType":"YulFunctionCall","src":"35592:37:11"},"nodeType":"YulExpressionStatement","src":"35592:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35570:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35577:3:11","type":""}],"src":"35517:118:11"},{"body":{"nodeType":"YulBlock","src":"35754:742:11","statements":[{"nodeType":"YulVariableDeclaration","src":"35764:29:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35787:5:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"35781:5:11"},"nodeType":"YulFunctionCall","src":"35781:12:11"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"35768:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35802:50:11","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"35842:9:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"35816:25:11"},"nodeType":"YulFunctionCall","src":"35816:36:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"35806:6:11","type":""}]},{"nodeType":"YulAssignment","src":"35861:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35927:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"35932:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35868:58:11"},"nodeType":"YulFunctionCall","src":"35868:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35861:3:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"35988:157:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36041:3:11"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"36050:9:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36065:4:11","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"36061:3:11"},"nodeType":"YulFunctionCall","src":"36061:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36046:3:11"},"nodeType":"YulFunctionCall","src":"36046:25:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36034:6:11"},"nodeType":"YulFunctionCall","src":"36034:38:11"},"nodeType":"YulExpressionStatement","src":"36034:38:11"},{"nodeType":"YulAssignment","src":"36085:50:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36096:3:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36105:4:11","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"36125:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36118:6:11"},"nodeType":"YulFunctionCall","src":"36118:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36111:6:11"},"nodeType":"YulFunctionCall","src":"36111:22:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36101:3:11"},"nodeType":"YulFunctionCall","src":"36101:33:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36092:3:11"},"nodeType":"YulFunctionCall","src":"36092:43:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"36085:3:11"}]}]},"nodeType":"YulCase","src":"35981:164:11","value":{"kind":"number","nodeType":"YulLiteral","src":"35986:1:11","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"36161:329:11","statements":[{"nodeType":"YulVariableDeclaration","src":"36206:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36253:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"36221:31:11"},"nodeType":"YulFunctionCall","src":"36221:38:11"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"36210:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36272:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"36281:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"36276:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"36339:110:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36368:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"36373:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36364:3:11"},"nodeType":"YulFunctionCall","src":"36364:11:11"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"36383:7:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"36377:5:11"},"nodeType":"YulFunctionCall","src":"36377:14:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36357:6:11"},"nodeType":"YulFunctionCall","src":"36357:35:11"},"nodeType":"YulExpressionStatement","src":"36357:35:11"},{"nodeType":"YulAssignment","src":"36409:26:11","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"36424:7:11"},{"kind":"number","nodeType":"YulLiteral","src":"36433:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36420:3:11"},"nodeType":"YulFunctionCall","src":"36420:15:11"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"36409:7:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36306:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"36309:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36303:2:11"},"nodeType":"YulFunctionCall","src":"36303:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"36317:21:11","statements":[{"nodeType":"YulAssignment","src":"36319:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36328:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"36331:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36324:3:11"},"nodeType":"YulFunctionCall","src":"36324:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"36319:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"36299:3:11","statements":[]},"src":"36295:154:11"},{"nodeType":"YulAssignment","src":"36462:18:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36473:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"36478:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36469:3:11"},"nodeType":"YulFunctionCall","src":"36469:11:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"36462:3:11"}]}]},"nodeType":"YulCase","src":"36154:336:11","value":{"kind":"number","nodeType":"YulLiteral","src":"36159:1:11","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"35959:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"35970:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35955:3:11"},"nodeType":"YulFunctionCall","src":"35955:17:11"},"nodeType":"YulSwitch","src":"35948:542:11"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35735:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35742:3:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"35750:3:11","type":""}],"src":"35665:831:11"},{"body":{"nodeType":"YulBlock","src":"36645:274:11","statements":[{"nodeType":"YulAssignment","src":"36655:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36667:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"36678:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36663:3:11"},"nodeType":"YulFunctionCall","src":"36663:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36655:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36735:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36748:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"36759:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36744:3:11"},"nodeType":"YulFunctionCall","src":"36744:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36691:43:11"},"nodeType":"YulFunctionCall","src":"36691:71:11"},"nodeType":"YulExpressionStatement","src":"36691:71:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36783:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"36794:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36779:3:11"},"nodeType":"YulFunctionCall","src":"36779:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36803:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"36809:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36799:3:11"},"nodeType":"YulFunctionCall","src":"36799:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36772:6:11"},"nodeType":"YulFunctionCall","src":"36772:48:11"},"nodeType":"YulExpressionStatement","src":"36772:48:11"},{"nodeType":"YulAssignment","src":"36829:83:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36898:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"36907:4:11"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36837:60:11"},"nodeType":"YulFunctionCall","src":"36837:75:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36829:4:11"}]}]},"name":"abi_encode_tuple_t_address_t_string_storage__to_t_address_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36609:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36621:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36629:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36640:4:11","type":""}],"src":"36502:417:11"},{"body":{"nodeType":"YulBlock","src":"37049:229:11","statements":[{"body":{"nodeType":"YulBlock","src":"37154:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"37156:16:11"},"nodeType":"YulFunctionCall","src":"37156:18:11"},"nodeType":"YulExpressionStatement","src":"37156:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37126:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"37134:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37123:2:11"},"nodeType":"YulFunctionCall","src":"37123:30:11"},"nodeType":"YulIf","src":"37120:56:11"},{"nodeType":"YulAssignment","src":"37186:25:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37198:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"37206:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37194:3:11"},"nodeType":"YulFunctionCall","src":"37194:17:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"37186:4:11"}]},{"nodeType":"YulAssignment","src":"37248:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"37260:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"37266:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37256:3:11"},"nodeType":"YulFunctionCall","src":"37256:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"37248:4:11"}]}]},"name":"array_allocation_size_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"37033:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"37044:4:11","type":""}],"src":"36925:353:11"},{"body":{"nodeType":"YulBlock","src":"37373:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37390:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37393:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37383:6:11"},"nodeType":"YulFunctionCall","src":"37383:12:11"},"nodeType":"YulExpressionStatement","src":"37383:12:11"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"37284:117:11"},{"body":{"nodeType":"YulBlock","src":"37496:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37513:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37516:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37506:6:11"},"nodeType":"YulFunctionCall","src":"37506:12:11"},"nodeType":"YulExpressionStatement","src":"37506:12:11"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"37407:117:11"},{"body":{"nodeType":"YulBlock","src":"37571:77:11","statements":[{"body":{"nodeType":"YulBlock","src":"37626:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37635:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37638:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37628:6:11"},"nodeType":"YulFunctionCall","src":"37628:12:11"},"nodeType":"YulExpressionStatement","src":"37628:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37594:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37617:5:11"}],"functionName":{"name":"cleanup_t_int64","nodeType":"YulIdentifier","src":"37601:15:11"},"nodeType":"YulFunctionCall","src":"37601:22:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"37591:2:11"},"nodeType":"YulFunctionCall","src":"37591:33:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37584:6:11"},"nodeType":"YulFunctionCall","src":"37584:41:11"},"nodeType":"YulIf","src":"37581:61:11"}]},"name":"validator_revert_t_int64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37564:5:11","type":""}],"src":"37530:118:11"},{"body":{"nodeType":"YulBlock","src":"37715:78:11","statements":[{"nodeType":"YulAssignment","src":"37725:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37740:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37734:5:11"},"nodeType":"YulFunctionCall","src":"37734:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37725:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37781:5:11"}],"functionName":{"name":"validator_revert_t_int64","nodeType":"YulIdentifier","src":"37756:24:11"},"nodeType":"YulFunctionCall","src":"37756:31:11"},"nodeType":"YulExpressionStatement","src":"37756:31:11"}]},"name":"abi_decode_t_int64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37693:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"37701:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"37709:5:11","type":""}],"src":"37654:139:11"},{"body":{"nodeType":"YulBlock","src":"37862:80:11","statements":[{"nodeType":"YulAssignment","src":"37872:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37887:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37881:5:11"},"nodeType":"YulFunctionCall","src":"37881:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37872:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37930:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"37903:26:11"},"nodeType":"YulFunctionCall","src":"37903:33:11"},"nodeType":"YulExpressionStatement","src":"37903:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37840:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"37848:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"37856:5:11","type":""}],"src":"37799:143:11"},{"body":{"nodeType":"YulBlock","src":"38095:889:11","statements":[{"body":{"nodeType":"YulBlock","src":"38139:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"38141:77:11"},"nodeType":"YulFunctionCall","src":"38141:79:11"},"nodeType":"YulExpressionStatement","src":"38141:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"38116:3:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"38121:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38112:3:11"},"nodeType":"YulFunctionCall","src":"38112:19:11"},{"kind":"number","nodeType":"YulLiteral","src":"38133:4:11","type":"","value":"0x80"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"38108:3:11"},"nodeType":"YulFunctionCall","src":"38108:30:11"},"nodeType":"YulIf","src":"38105:117:11"},{"nodeType":"YulAssignment","src":"38231:30:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38256:4:11","type":"","value":"0x80"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"38240:15:11"},"nodeType":"YulFunctionCall","src":"38240:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"38231:5:11"}]},{"nodeType":"YulBlock","src":"38271:169:11","statements":[{"nodeType":"YulVariableDeclaration","src":"38316:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"38330:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"38320:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38356:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"38363:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38352:3:11"},"nodeType":"YulFunctionCall","src":"38352:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38404:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"38415:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38400:3:11"},"nodeType":"YulFunctionCall","src":"38400:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"38424:3:11"}],"functionName":{"name":"abi_decode_t_int64_fromMemory","nodeType":"YulIdentifier","src":"38370:29:11"},"nodeType":"YulFunctionCall","src":"38370:58:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38345:6:11"},"nodeType":"YulFunctionCall","src":"38345:84:11"},"nodeType":"YulExpressionStatement","src":"38345:84:11"}]},{"nodeType":"YulBlock","src":"38450:170:11","statements":[{"nodeType":"YulVariableDeclaration","src":"38495:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"38509:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"38499:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38536:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"38543:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38532:3:11"},"nodeType":"YulFunctionCall","src":"38532:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38584:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"38595:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38580:3:11"},"nodeType":"YulFunctionCall","src":"38580:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"38604:3:11"}],"functionName":{"name":"abi_decode_t_int64_fromMemory","nodeType":"YulIdentifier","src":"38550:29:11"},"nodeType":"YulFunctionCall","src":"38550:58:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38525:6:11"},"nodeType":"YulFunctionCall","src":"38525:84:11"},"nodeType":"YulExpressionStatement","src":"38525:84:11"}]},{"nodeType":"YulBlock","src":"38630:172:11","statements":[{"nodeType":"YulVariableDeclaration","src":"38675:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"38689:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"38679:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38716:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"38723:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38712:3:11"},"nodeType":"YulFunctionCall","src":"38712:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38766:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"38777:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38762:3:11"},"nodeType":"YulFunctionCall","src":"38762:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"38786:3:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"38730:31:11"},"nodeType":"YulFunctionCall","src":"38730:60:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38705:6:11"},"nodeType":"YulFunctionCall","src":"38705:86:11"},"nodeType":"YulExpressionStatement","src":"38705:86:11"}]},{"nodeType":"YulBlock","src":"38812:165:11","statements":[{"nodeType":"YulVariableDeclaration","src":"38850:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"38864:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"38854:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38891:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"38898:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38887:3:11"},"nodeType":"YulFunctionCall","src":"38887:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38941:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"38952:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38937:3:11"},"nodeType":"YulFunctionCall","src":"38937:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"38961:3:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"38905:31:11"},"nodeType":"YulFunctionCall","src":"38905:60:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38880:6:11"},"nodeType":"YulFunctionCall","src":"38880:86:11"},"nodeType":"YulExpressionStatement","src":"38880:86:11"}]}]},"name":"abi_decode_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38070:9:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"38081:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"38089:5:11","type":""}],"src":"37987:997:11"},{"body":{"nodeType":"YulBlock","src":"39186:703:11","statements":[{"nodeType":"YulAssignment","src":"39196:132:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"39320:6:11"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"39221:98:11"},"nodeType":"YulFunctionCall","src":"39221:106:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"39205:15:11"},"nodeType":"YulFunctionCall","src":"39205:123:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"39196:5:11"}]},{"nodeType":"YulVariableDeclaration","src":"39337:16:11","value":{"name":"array","nodeType":"YulIdentifier","src":"39348:5:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"39341:3:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"39370:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"39377:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39363:6:11"},"nodeType":"YulFunctionCall","src":"39363:21:11"},"nodeType":"YulExpressionStatement","src":"39363:21:11"},{"nodeType":"YulAssignment","src":"39393:23:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"39404:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"39411:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39400:3:11"},"nodeType":"YulFunctionCall","src":"39400:16:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"39393:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"39426:44:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"39444:6:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"39456:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"39464:4:11","type":"","value":"0x80"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"39452:3:11"},"nodeType":"YulFunctionCall","src":"39452:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39440:3:11"},"nodeType":"YulFunctionCall","src":"39440:30:11"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"39430:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"39498:103:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"39512:77:11"},"nodeType":"YulFunctionCall","src":"39512:79:11"},"nodeType":"YulExpressionStatement","src":"39512:79:11"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"39485:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"39493:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"39482:2:11"},"nodeType":"YulFunctionCall","src":"39482:15:11"},"nodeType":"YulIf","src":"39479:122:11"},{"body":{"nodeType":"YulBlock","src":"39686:197:11","statements":[{"nodeType":"YulVariableDeclaration","src":"39701:21:11","value":{"name":"src","nodeType":"YulIdentifier","src":"39719:3:11"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"39705:10:11","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"39743:3:11"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"39822:10:11"},{"name":"end","nodeType":"YulIdentifier","src":"39834:3:11"}],"functionName":{"name":"abi_decode_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"39748:73:11"},"nodeType":"YulFunctionCall","src":"39748:90:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39736:6:11"},"nodeType":"YulFunctionCall","src":"39736:103:11"},"nodeType":"YulExpressionStatement","src":"39736:103:11"},{"nodeType":"YulAssignment","src":"39852:21:11","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"39863:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"39868:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39859:3:11"},"nodeType":"YulFunctionCall","src":"39859:14:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"39852:3:11"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"39639:3:11"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"39644:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"39636:2:11"},"nodeType":"YulFunctionCall","src":"39636:15:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"39652:25:11","statements":[{"nodeType":"YulAssignment","src":"39654:21:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"39665:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"39670:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39661:3:11"},"nodeType":"YulFunctionCall","src":"39661:14:11"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"39654:3:11"}]}]},"pre":{"nodeType":"YulBlock","src":"39614:21:11","statements":[{"nodeType":"YulVariableDeclaration","src":"39616:17:11","value":{"name":"offset","nodeType":"YulIdentifier","src":"39627:6:11"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"39620:3:11","type":""}]}]},"src":"39610:273:11"}]},"name":"abi_decode_available_length_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"39156:6:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"39164:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"39172:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"39180:5:11","type":""}],"src":"39031:858:11"},{"body":{"nodeType":"YulBlock","src":"40066:339:11","statements":[{"body":{"nodeType":"YulBlock","src":"40115:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"40117:77:11"},"nodeType":"YulFunctionCall","src":"40117:79:11"},"nodeType":"YulExpressionStatement","src":"40117:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40094:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"40102:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40090:3:11"},"nodeType":"YulFunctionCall","src":"40090:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"40109:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"40086:3:11"},"nodeType":"YulFunctionCall","src":"40086:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40079:6:11"},"nodeType":"YulFunctionCall","src":"40079:35:11"},"nodeType":"YulIf","src":"40076:122:11"},{"nodeType":"YulVariableDeclaration","src":"40207:27:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40227:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"40221:5:11"},"nodeType":"YulFunctionCall","src":"40221:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"40211:6:11","type":""}]},{"nodeType":"YulAssignment","src":"40243:156:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40372:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"40380:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40368:3:11"},"nodeType":"YulFunctionCall","src":"40368:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"40387:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"40395:3:11"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"40252:115:11"},"nodeType":"YulFunctionCall","src":"40252:147:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"40243:5:11"}]}]},"name":"abi_decode_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"40044:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"40052:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"40060:5:11","type":""}],"src":"39936:469:11"},{"body":{"nodeType":"YulBlock","src":"40555:494:11","statements":[{"body":{"nodeType":"YulBlock","src":"40601:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"40603:77:11"},"nodeType":"YulFunctionCall","src":"40603:79:11"},"nodeType":"YulExpressionStatement","src":"40603:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"40576:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"40585:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40572:3:11"},"nodeType":"YulFunctionCall","src":"40572:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"40597:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"40568:3:11"},"nodeType":"YulFunctionCall","src":"40568:32:11"},"nodeType":"YulIf","src":"40565:119:11"},{"nodeType":"YulBlock","src":"40694:348:11","statements":[{"nodeType":"YulVariableDeclaration","src":"40709:38:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40733:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"40744:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40729:3:11"},"nodeType":"YulFunctionCall","src":"40729:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"40723:5:11"},"nodeType":"YulFunctionCall","src":"40723:24:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"40713:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"40794:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"40796:77:11"},"nodeType":"YulFunctionCall","src":"40796:79:11"},"nodeType":"YulExpressionStatement","src":"40796:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40766:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"40774:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40763:2:11"},"nodeType":"YulFunctionCall","src":"40763:30:11"},"nodeType":"YulIf","src":"40760:117:11"},{"nodeType":"YulAssignment","src":"40891:141:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41004:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"41015:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41000:3:11"},"nodeType":"YulFunctionCall","src":"41000:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"41024:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"40901:98:11"},"nodeType":"YulFunctionCall","src":"40901:131:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"40891:6:11"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40525:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"40536:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"40548:6:11","type":""}],"src":"40411:638:11"},{"body":{"nodeType":"YulBlock","src":"41150:339:11","statements":[{"nodeType":"YulAssignment","src":"41160:75:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"41227:6:11"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"41185:41:11"},"nodeType":"YulFunctionCall","src":"41185:49:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"41169:15:11"},"nodeType":"YulFunctionCall","src":"41169:66:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"41160:5:11"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41251:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"41258:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41244:6:11"},"nodeType":"YulFunctionCall","src":"41244:21:11"},"nodeType":"YulExpressionStatement","src":"41244:21:11"},{"nodeType":"YulVariableDeclaration","src":"41274:27:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41289:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"41296:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41285:3:11"},"nodeType":"YulFunctionCall","src":"41285:16:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"41278:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"41339:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"41341:77:11"},"nodeType":"YulFunctionCall","src":"41341:79:11"},"nodeType":"YulExpressionStatement","src":"41341:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"41320:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"41325:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41316:3:11"},"nodeType":"YulFunctionCall","src":"41316:16:11"},{"name":"end","nodeType":"YulIdentifier","src":"41334:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41313:2:11"},"nodeType":"YulFunctionCall","src":"41313:25:11"},"nodeType":"YulIf","src":"41310:112:11"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"41466:3:11"},{"name":"dst","nodeType":"YulIdentifier","src":"41471:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"41476:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"41431:34:11"},"nodeType":"YulFunctionCall","src":"41431:52:11"},"nodeType":"YulExpressionStatement","src":"41431:52:11"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"41123:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"41128:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"41136:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"41144:5:11","type":""}],"src":"41055:434:11"},{"body":{"nodeType":"YulBlock","src":"41582:282:11","statements":[{"body":{"nodeType":"YulBlock","src":"41631:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"41633:77:11"},"nodeType":"YulFunctionCall","src":"41633:79:11"},"nodeType":"YulExpressionStatement","src":"41633:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"41610:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"41618:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41606:3:11"},"nodeType":"YulFunctionCall","src":"41606:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"41625:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"41602:3:11"},"nodeType":"YulFunctionCall","src":"41602:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41595:6:11"},"nodeType":"YulFunctionCall","src":"41595:35:11"},"nodeType":"YulIf","src":"41592:122:11"},{"nodeType":"YulVariableDeclaration","src":"41723:27:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"41743:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41737:5:11"},"nodeType":"YulFunctionCall","src":"41737:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"41727:6:11","type":""}]},{"nodeType":"YulAssignment","src":"41759:99:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"41831:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"41839:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41827:3:11"},"nodeType":"YulFunctionCall","src":"41827:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"41846:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"41854:3:11"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"41768:58:11"},"nodeType":"YulFunctionCall","src":"41768:90:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"41759:5:11"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"41560:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"41568:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"41576:5:11","type":""}],"src":"41509:355:11"},{"body":{"nodeType":"YulBlock","src":"41977:682:11","statements":[{"body":{"nodeType":"YulBlock","src":"42021:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"42023:77:11"},"nodeType":"YulFunctionCall","src":"42023:79:11"},"nodeType":"YulExpressionStatement","src":"42023:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"41998:3:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"42003:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41994:3:11"},"nodeType":"YulFunctionCall","src":"41994:19:11"},{"kind":"number","nodeType":"YulLiteral","src":"42015:4:11","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"41990:3:11"},"nodeType":"YulFunctionCall","src":"41990:30:11"},"nodeType":"YulIf","src":"41987:117:11"},{"nodeType":"YulAssignment","src":"42113:30:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42138:4:11","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"42122:15:11"},"nodeType":"YulFunctionCall","src":"42122:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"42113:5:11"}]},{"nodeType":"YulBlock","src":"42153:325:11","statements":[{"nodeType":"YulVariableDeclaration","src":"42189:38:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42213:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"42224:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42209:3:11"},"nodeType":"YulFunctionCall","src":"42209:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42203:5:11"},"nodeType":"YulFunctionCall","src":"42203:24:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"42193:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"42274:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"42276:77:11"},"nodeType":"YulFunctionCall","src":"42276:79:11"},"nodeType":"YulExpressionStatement","src":"42276:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"42246:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"42254:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42243:2:11"},"nodeType":"YulFunctionCall","src":"42243:30:11"},"nodeType":"YulIf","src":"42240:117:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42382:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"42389:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42378:3:11"},"nodeType":"YulFunctionCall","src":"42378:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42442:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"42453:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42438:3:11"},"nodeType":"YulFunctionCall","src":"42438:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"42462:3:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"42396:41:11"},"nodeType":"YulFunctionCall","src":"42396:70:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42371:6:11"},"nodeType":"YulFunctionCall","src":"42371:96:11"},"nodeType":"YulExpressionStatement","src":"42371:96:11"}]},{"nodeType":"YulBlock","src":"42488:164:11","statements":[{"nodeType":"YulVariableDeclaration","src":"42525:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"42539:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"42529:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42566:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"42573:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42562:3:11"},"nodeType":"YulFunctionCall","src":"42562:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42616:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"42627:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42612:3:11"},"nodeType":"YulFunctionCall","src":"42612:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"42636:3:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"42580:31:11"},"nodeType":"YulFunctionCall","src":"42580:60:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42555:6:11"},"nodeType":"YulFunctionCall","src":"42555:86:11"},"nodeType":"YulExpressionStatement","src":"42555:86:11"}]}]},"name":"abi_decode_t_struct$_Coin_$2694_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41952:9:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"41963:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"41971:5:11","type":""}],"src":"41889:770:11"},{"body":{"nodeType":"YulBlock","src":"42781:588:11","statements":[{"body":{"nodeType":"YulBlock","src":"42827:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"42829:77:11"},"nodeType":"YulFunctionCall","src":"42829:79:11"},"nodeType":"YulExpressionStatement","src":"42829:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"42802:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"42811:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42798:3:11"},"nodeType":"YulFunctionCall","src":"42798:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"42823:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"42794:3:11"},"nodeType":"YulFunctionCall","src":"42794:32:11"},"nodeType":"YulIf","src":"42791:119:11"},{"nodeType":"YulBlock","src":"42920:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"42935:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"42949:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"42939:6:11","type":""}]},{"nodeType":"YulAssignment","src":"42964:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43010:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"43021:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43006:3:11"},"nodeType":"YulFunctionCall","src":"43006:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"43030:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"42974:31:11"},"nodeType":"YulFunctionCall","src":"42974:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"42964:6:11"}]}]},{"nodeType":"YulBlock","src":"43058:304:11","statements":[{"nodeType":"YulVariableDeclaration","src":"43073:39:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43097:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"43108:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43093:3:11"},"nodeType":"YulFunctionCall","src":"43093:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43087:5:11"},"nodeType":"YulFunctionCall","src":"43087:25:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"43077:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"43159:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"43161:77:11"},"nodeType":"YulFunctionCall","src":"43161:79:11"},"nodeType":"YulExpressionStatement","src":"43161:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"43131:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"43139:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"43128:2:11"},"nodeType":"YulFunctionCall","src":"43128:30:11"},"nodeType":"YulIf","src":"43125:117:11"},{"nodeType":"YulAssignment","src":"43256:96:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43324:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"43335:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43320:3:11"},"nodeType":"YulFunctionCall","src":"43320:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"43344:7:11"}],"functionName":{"name":"abi_decode_t_struct$_Coin_$2694_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"43266:53:11"},"nodeType":"YulFunctionCall","src":"43266:86:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"43256:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_struct$_Coin_$2694_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42743:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"42754:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"42766:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42774:6:11","type":""}],"src":"42665:704:11"},{"body":{"nodeType":"YulBlock","src":"43479:229:11","statements":[{"body":{"nodeType":"YulBlock","src":"43584:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"43586:16:11"},"nodeType":"YulFunctionCall","src":"43586:18:11"},"nodeType":"YulExpressionStatement","src":"43586:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"43556:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"43564:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"43553:2:11"},"nodeType":"YulFunctionCall","src":"43553:30:11"},"nodeType":"YulIf","src":"43550:56:11"},{"nodeType":"YulAssignment","src":"43616:25:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"43628:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"43636:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"43624:3:11"},"nodeType":"YulFunctionCall","src":"43624:17:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"43616:4:11"}]},{"nodeType":"YulAssignment","src":"43678:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"43690:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"43696:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43686:3:11"},"nodeType":"YulFunctionCall","src":"43686:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"43678:4:11"}]}]},"name":"array_allocation_size_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"43463:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"43474:4:11","type":""}],"src":"43375:333:11"},{"body":{"nodeType":"YulBlock","src":"43870:861:11","statements":[{"nodeType":"YulAssignment","src":"43880:112:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"43984:6:11"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"43905:78:11"},"nodeType":"YulFunctionCall","src":"43905:86:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"43889:15:11"},"nodeType":"YulFunctionCall","src":"43889:103:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"43880:5:11"}]},{"nodeType":"YulVariableDeclaration","src":"44001:16:11","value":{"name":"array","nodeType":"YulIdentifier","src":"44012:5:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"44005:3:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"44034:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"44041:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44027:6:11"},"nodeType":"YulFunctionCall","src":"44027:21:11"},"nodeType":"YulExpressionStatement","src":"44027:21:11"},{"nodeType":"YulAssignment","src":"44057:23:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"44068:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"44075:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44064:3:11"},"nodeType":"YulFunctionCall","src":"44064:16:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"44057:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"44090:44:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44108:6:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"44120:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"44128:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"44116:3:11"},"nodeType":"YulFunctionCall","src":"44116:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44104:3:11"},"nodeType":"YulFunctionCall","src":"44104:30:11"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"44094:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"44162:103:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"44176:77:11"},"nodeType":"YulFunctionCall","src":"44176:79:11"},"nodeType":"YulExpressionStatement","src":"44176:79:11"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"44149:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"44157:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44146:2:11"},"nodeType":"YulFunctionCall","src":"44146:15:11"},"nodeType":"YulIf","src":"44143:122:11"},{"body":{"nodeType":"YulBlock","src":"44350:375:11","statements":[{"nodeType":"YulVariableDeclaration","src":"44365:29:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"44390:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"44384:5:11"},"nodeType":"YulFunctionCall","src":"44384:10:11"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"44369:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"44446:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"44448:77:11"},"nodeType":"YulFunctionCall","src":"44448:79:11"},"nodeType":"YulExpressionStatement","src":"44448:79:11"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"44413:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"44426:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44410:2:11"},"nodeType":"YulFunctionCall","src":"44410:35:11"},"nodeType":"YulIf","src":"44407:122:11"},{"nodeType":"YulVariableDeclaration","src":"44542:42:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44564:6:11"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"44572:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44560:3:11"},"nodeType":"YulFunctionCall","src":"44560:24:11"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"44546:10:11","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"44605:3:11"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"44664:10:11"},{"name":"end","nodeType":"YulIdentifier","src":"44676:3:11"}],"functionName":{"name":"abi_decode_t_struct$_Coin_$2694_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"44610:53:11"},"nodeType":"YulFunctionCall","src":"44610:70:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44598:6:11"},"nodeType":"YulFunctionCall","src":"44598:83:11"},"nodeType":"YulExpressionStatement","src":"44598:83:11"},{"nodeType":"YulAssignment","src":"44694:21:11","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"44705:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"44710:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44701:3:11"},"nodeType":"YulFunctionCall","src":"44701:14:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"44694:3:11"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"44303:3:11"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"44308:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"44300:2:11"},"nodeType":"YulFunctionCall","src":"44300:15:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"44316:25:11","statements":[{"nodeType":"YulAssignment","src":"44318:21:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"44329:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"44334:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44325:3:11"},"nodeType":"YulFunctionCall","src":"44325:14:11"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"44318:3:11"}]}]},"pre":{"nodeType":"YulBlock","src":"44278:21:11","statements":[{"nodeType":"YulVariableDeclaration","src":"44280:17:11","value":{"name":"offset","nodeType":"YulIdentifier","src":"44291:6:11"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"44284:3:11","type":""}]}]},"src":"44274:451:11"}]},"name":"abi_decode_available_length_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"43840:6:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"43848:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"43856:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"43864:5:11","type":""}],"src":"43735:996:11"},{"body":{"nodeType":"YulBlock","src":"44868:319:11","statements":[{"body":{"nodeType":"YulBlock","src":"44917:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"44919:77:11"},"nodeType":"YulFunctionCall","src":"44919:79:11"},"nodeType":"YulExpressionStatement","src":"44919:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44896:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"44904:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44892:3:11"},"nodeType":"YulFunctionCall","src":"44892:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"44911:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"44888:3:11"},"nodeType":"YulFunctionCall","src":"44888:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"44881:6:11"},"nodeType":"YulFunctionCall","src":"44881:35:11"},"nodeType":"YulIf","src":"44878:122:11"},{"nodeType":"YulVariableDeclaration","src":"45009:27:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"45029:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"45023:5:11"},"nodeType":"YulFunctionCall","src":"45023:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"45013:6:11","type":""}]},{"nodeType":"YulAssignment","src":"45045:136:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"45154:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"45162:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45150:3:11"},"nodeType":"YulFunctionCall","src":"45150:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"45169:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"45177:3:11"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"45054:95:11"},"nodeType":"YulFunctionCall","src":"45054:127:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"45045:5:11"}]}]},"name":"abi_decode_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44846:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"44854:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"44862:5:11","type":""}],"src":"44758:429:11"},{"body":{"nodeType":"YulBlock","src":"45317:474:11","statements":[{"body":{"nodeType":"YulBlock","src":"45363:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"45365:77:11"},"nodeType":"YulFunctionCall","src":"45365:79:11"},"nodeType":"YulExpressionStatement","src":"45365:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"45338:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"45347:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45334:3:11"},"nodeType":"YulFunctionCall","src":"45334:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"45359:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"45330:3:11"},"nodeType":"YulFunctionCall","src":"45330:32:11"},"nodeType":"YulIf","src":"45327:119:11"},{"nodeType":"YulBlock","src":"45456:328:11","statements":[{"nodeType":"YulVariableDeclaration","src":"45471:38:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45495:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"45506:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45491:3:11"},"nodeType":"YulFunctionCall","src":"45491:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"45485:5:11"},"nodeType":"YulFunctionCall","src":"45485:24:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"45475:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"45556:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"45558:77:11"},"nodeType":"YulFunctionCall","src":"45558:79:11"},"nodeType":"YulExpressionStatement","src":"45558:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"45528:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"45536:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"45525:2:11"},"nodeType":"YulFunctionCall","src":"45525:30:11"},"nodeType":"YulIf","src":"45522:117:11"},{"nodeType":"YulAssignment","src":"45653:121:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45746:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"45757:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45742:3:11"},"nodeType":"YulFunctionCall","src":"45742:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"45766:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"45663:78:11"},"nodeType":"YulFunctionCall","src":"45663:111:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"45653:6:11"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45287:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"45298:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"45310:6:11","type":""}],"src":"45193:598:11"},{"body":{"nodeType":"YulBlock","src":"45968:356:11","statements":[{"nodeType":"YulAssignment","src":"45978:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45990:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"46001:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45986:3:11"},"nodeType":"YulFunctionCall","src":"45986:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45978:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46058:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46071:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"46082:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46067:3:11"},"nodeType":"YulFunctionCall","src":"46067:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"46014:43:11"},"nodeType":"YulFunctionCall","src":"46014:71:11"},"nodeType":"YulExpressionStatement","src":"46014:71:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46106:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"46117:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46102:3:11"},"nodeType":"YulFunctionCall","src":"46102:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46126:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"46132:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46122:3:11"},"nodeType":"YulFunctionCall","src":"46122:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46095:6:11"},"nodeType":"YulFunctionCall","src":"46095:48:11"},"nodeType":"YulExpressionStatement","src":"46095:48:11"},{"nodeType":"YulAssignment","src":"46152:83:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"46221:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"46230:4:11"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46160:60:11"},"nodeType":"YulFunctionCall","src":"46160:75:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46152:4:11"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"46289:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46302:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"46313:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46298:3:11"},"nodeType":"YulFunctionCall","src":"46298:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"46245:43:11"},"nodeType":"YulFunctionCall","src":"46245:72:11"},"nodeType":"YulExpressionStatement","src":"46245:72:11"}]},"name":"abi_encode_tuple_t_address_t_string_storage_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45924:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"45936:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"45944:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45952:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45963:4:11","type":""}],"src":"45797:527:11"},{"body":{"nodeType":"YulBlock","src":"46405:272:11","statements":[{"body":{"nodeType":"YulBlock","src":"46451:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"46453:77:11"},"nodeType":"YulFunctionCall","src":"46453:79:11"},"nodeType":"YulExpressionStatement","src":"46453:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"46426:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"46435:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46422:3:11"},"nodeType":"YulFunctionCall","src":"46422:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"46447:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"46418:3:11"},"nodeType":"YulFunctionCall","src":"46418:32:11"},"nodeType":"YulIf","src":"46415:119:11"},{"nodeType":"YulBlock","src":"46544:126:11","statements":[{"nodeType":"YulVariableDeclaration","src":"46559:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"46573:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"46563:6:11","type":""}]},{"nodeType":"YulAssignment","src":"46588:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46632:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"46643:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46628:3:11"},"nodeType":"YulFunctionCall","src":"46628:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"46652:7:11"}],"functionName":{"name":"abi_decode_t_int64_fromMemory","nodeType":"YulIdentifier","src":"46598:29:11"},"nodeType":"YulFunctionCall","src":"46598:62:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"46588:6:11"}]}]}]},"name":"abi_decode_tuple_t_int64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46375:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"46386:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"46398:6:11","type":""}],"src":"46330:347:11"},{"body":{"nodeType":"YulBlock","src":"46790:229:11","statements":[{"body":{"nodeType":"YulBlock","src":"46895:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"46897:16:11"},"nodeType":"YulFunctionCall","src":"46897:18:11"},"nodeType":"YulExpressionStatement","src":"46897:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"46867:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"46875:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"46864:2:11"},"nodeType":"YulFunctionCall","src":"46864:30:11"},"nodeType":"YulIf","src":"46861:56:11"},{"nodeType":"YulAssignment","src":"46927:25:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"46939:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"46947:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"46935:3:11"},"nodeType":"YulFunctionCall","src":"46935:17:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"46927:4:11"}]},{"nodeType":"YulAssignment","src":"46989:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"47001:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"47007:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46997:3:11"},"nodeType":"YulFunctionCall","src":"46997:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"46989:4:11"}]}]},"name":"array_allocation_size_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"46774:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"46785:4:11","type":""}],"src":"46683:336:11"},{"body":{"nodeType":"YulBlock","src":"47066:77:11","statements":[{"body":{"nodeType":"YulBlock","src":"47121:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47130:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47133:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47123:6:11"},"nodeType":"YulFunctionCall","src":"47123:12:11"},"nodeType":"YulExpressionStatement","src":"47123:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47089:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47112:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"47096:15:11"},"nodeType":"YulFunctionCall","src":"47096:22:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"47086:2:11"},"nodeType":"YulFunctionCall","src":"47086:33:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"47079:6:11"},"nodeType":"YulFunctionCall","src":"47079:41:11"},"nodeType":"YulIf","src":"47076:61:11"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47059:5:11","type":""}],"src":"47025:118:11"},{"body":{"nodeType":"YulBlock","src":"47210:78:11","statements":[{"nodeType":"YulAssignment","src":"47220:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"47235:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47229:5:11"},"nodeType":"YulFunctionCall","src":"47229:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"47220:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47276:5:11"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"47251:24:11"},"nodeType":"YulFunctionCall","src":"47251:31:11"},"nodeType":"YulExpressionStatement","src":"47251:31:11"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"47188:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"47196:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"47204:5:11","type":""}],"src":"47149:139:11"},{"body":{"nodeType":"YulBlock","src":"47407:857:11","statements":[{"body":{"nodeType":"YulBlock","src":"47451:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"47453:77:11"},"nodeType":"YulFunctionCall","src":"47453:79:11"},"nodeType":"YulExpressionStatement","src":"47453:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"47428:3:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"47433:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47424:3:11"},"nodeType":"YulFunctionCall","src":"47424:19:11"},{"kind":"number","nodeType":"YulLiteral","src":"47445:4:11","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"47420:3:11"},"nodeType":"YulFunctionCall","src":"47420:30:11"},"nodeType":"YulIf","src":"47417:117:11"},{"nodeType":"YulAssignment","src":"47543:30:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47568:4:11","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"47552:15:11"},"nodeType":"YulFunctionCall","src":"47552:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"47543:5:11"}]},{"nodeType":"YulBlock","src":"47583:325:11","statements":[{"nodeType":"YulVariableDeclaration","src":"47619:38:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47643:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"47654:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47639:3:11"},"nodeType":"YulFunctionCall","src":"47639:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47633:5:11"},"nodeType":"YulFunctionCall","src":"47633:24:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"47623:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"47704:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"47706:77:11"},"nodeType":"YulFunctionCall","src":"47706:79:11"},"nodeType":"YulExpressionStatement","src":"47706:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"47676:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"47684:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"47673:2:11"},"nodeType":"YulFunctionCall","src":"47673:30:11"},"nodeType":"YulIf","src":"47670:117:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47812:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"47819:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47808:3:11"},"nodeType":"YulFunctionCall","src":"47808:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47872:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"47883:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47868:3:11"},"nodeType":"YulFunctionCall","src":"47868:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"47892:3:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"47826:41:11"},"nodeType":"YulFunctionCall","src":"47826:70:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47801:6:11"},"nodeType":"YulFunctionCall","src":"47801:96:11"},"nodeType":"YulExpressionStatement","src":"47801:96:11"}]},{"nodeType":"YulBlock","src":"47918:164:11","statements":[{"nodeType":"YulVariableDeclaration","src":"47955:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"47969:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"47959:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47996:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"48003:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47992:3:11"},"nodeType":"YulFunctionCall","src":"47992:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48046:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"48057:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48042:3:11"},"nodeType":"YulFunctionCall","src":"48042:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"48066:3:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"48010:31:11"},"nodeType":"YulFunctionCall","src":"48010:60:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47985:6:11"},"nodeType":"YulFunctionCall","src":"47985:86:11"},"nodeType":"YulExpressionStatement","src":"47985:86:11"}]},{"nodeType":"YulBlock","src":"48092:165:11","statements":[{"nodeType":"YulVariableDeclaration","src":"48132:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"48146:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"48136:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48173:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"48180:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48169:3:11"},"nodeType":"YulFunctionCall","src":"48169:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48221:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"48232:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48217:3:11"},"nodeType":"YulFunctionCall","src":"48217:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"48241:3:11"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"48187:29:11"},"nodeType":"YulFunctionCall","src":"48187:58:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48162:6:11"},"nodeType":"YulFunctionCall","src":"48162:84:11"},"nodeType":"YulExpressionStatement","src":"48162:84:11"}]}]},"name":"abi_decode_t_struct$_DecCoin_$2701_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47382:9:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"47393:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"47401:5:11","type":""}],"src":"47316:948:11"},{"body":{"nodeType":"YulBlock","src":"48432:867:11","statements":[{"nodeType":"YulAssignment","src":"48442:115:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"48549:6:11"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"48467:81:11"},"nodeType":"YulFunctionCall","src":"48467:89:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"48451:15:11"},"nodeType":"YulFunctionCall","src":"48451:106:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"48442:5:11"}]},{"nodeType":"YulVariableDeclaration","src":"48566:16:11","value":{"name":"array","nodeType":"YulIdentifier","src":"48577:5:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"48570:3:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"48599:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"48606:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48592:6:11"},"nodeType":"YulFunctionCall","src":"48592:21:11"},"nodeType":"YulExpressionStatement","src":"48592:21:11"},{"nodeType":"YulAssignment","src":"48622:23:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"48633:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"48640:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48629:3:11"},"nodeType":"YulFunctionCall","src":"48629:16:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"48622:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"48655:44:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48673:6:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"48685:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"48693:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"48681:3:11"},"nodeType":"YulFunctionCall","src":"48681:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48669:3:11"},"nodeType":"YulFunctionCall","src":"48669:30:11"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"48659:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"48727:103:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"48741:77:11"},"nodeType":"YulFunctionCall","src":"48741:79:11"},"nodeType":"YulExpressionStatement","src":"48741:79:11"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"48714:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"48722:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"48711:2:11"},"nodeType":"YulFunctionCall","src":"48711:15:11"},"nodeType":"YulIf","src":"48708:122:11"},{"body":{"nodeType":"YulBlock","src":"48915:378:11","statements":[{"nodeType":"YulVariableDeclaration","src":"48930:29:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48955:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48949:5:11"},"nodeType":"YulFunctionCall","src":"48949:10:11"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"48934:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"49011:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"49013:77:11"},"nodeType":"YulFunctionCall","src":"49013:79:11"},"nodeType":"YulExpressionStatement","src":"49013:79:11"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"48978:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"48991:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"48975:2:11"},"nodeType":"YulFunctionCall","src":"48975:35:11"},"nodeType":"YulIf","src":"48972:122:11"},{"nodeType":"YulVariableDeclaration","src":"49107:42:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"49129:6:11"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"49137:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49125:3:11"},"nodeType":"YulFunctionCall","src":"49125:24:11"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"49111:10:11","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"49170:3:11"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"49232:10:11"},{"name":"end","nodeType":"YulIdentifier","src":"49244:3:11"}],"functionName":{"name":"abi_decode_t_struct$_DecCoin_$2701_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"49175:56:11"},"nodeType":"YulFunctionCall","src":"49175:73:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49163:6:11"},"nodeType":"YulFunctionCall","src":"49163:86:11"},"nodeType":"YulExpressionStatement","src":"49163:86:11"},{"nodeType":"YulAssignment","src":"49262:21:11","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"49273:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"49278:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49269:3:11"},"nodeType":"YulFunctionCall","src":"49269:14:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"49262:3:11"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48868:3:11"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"48873:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"48865:2:11"},"nodeType":"YulFunctionCall","src":"48865:15:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"48881:25:11","statements":[{"nodeType":"YulAssignment","src":"48883:21:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48894:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"48899:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48890:3:11"},"nodeType":"YulFunctionCall","src":"48890:14:11"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"48883:3:11"}]}]},"pre":{"nodeType":"YulBlock","src":"48843:21:11","statements":[{"nodeType":"YulVariableDeclaration","src":"48845:17:11","value":{"name":"offset","nodeType":"YulIdentifier","src":"48856:6:11"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"48849:3:11","type":""}]}]},"src":"48839:454:11"}]},"name":"abi_decode_available_length_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48402:6:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"48410:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"48418:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"48426:5:11","type":""}],"src":"48294:1005:11"},{"body":{"nodeType":"YulBlock","src":"49442:322:11","statements":[{"body":{"nodeType":"YulBlock","src":"49491:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"49493:77:11"},"nodeType":"YulFunctionCall","src":"49493:79:11"},"nodeType":"YulExpressionStatement","src":"49493:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"49470:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"49478:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49466:3:11"},"nodeType":"YulFunctionCall","src":"49466:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"49485:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"49462:3:11"},"nodeType":"YulFunctionCall","src":"49462:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"49455:6:11"},"nodeType":"YulFunctionCall","src":"49455:35:11"},"nodeType":"YulIf","src":"49452:122:11"},{"nodeType":"YulVariableDeclaration","src":"49583:27:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"49603:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49597:5:11"},"nodeType":"YulFunctionCall","src":"49597:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"49587:6:11","type":""}]},{"nodeType":"YulAssignment","src":"49619:139:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"49731:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"49739:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49727:3:11"},"nodeType":"YulFunctionCall","src":"49727:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"49746:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"49754:3:11"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"49628:98:11"},"nodeType":"YulFunctionCall","src":"49628:130:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"49619:5:11"}]}]},"name":"abi_decode_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"49420:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"49428:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"49436:5:11","type":""}],"src":"49329:435:11"},{"body":{"nodeType":"YulBlock","src":"49897:477:11","statements":[{"body":{"nodeType":"YulBlock","src":"49943:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"49945:77:11"},"nodeType":"YulFunctionCall","src":"49945:79:11"},"nodeType":"YulExpressionStatement","src":"49945:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"49918:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"49927:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49914:3:11"},"nodeType":"YulFunctionCall","src":"49914:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"49939:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"49910:3:11"},"nodeType":"YulFunctionCall","src":"49910:32:11"},"nodeType":"YulIf","src":"49907:119:11"},{"nodeType":"YulBlock","src":"50036:331:11","statements":[{"nodeType":"YulVariableDeclaration","src":"50051:38:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50075:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"50086:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50071:3:11"},"nodeType":"YulFunctionCall","src":"50071:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"50065:5:11"},"nodeType":"YulFunctionCall","src":"50065:24:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"50055:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"50136:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"50138:77:11"},"nodeType":"YulFunctionCall","src":"50138:79:11"},"nodeType":"YulExpressionStatement","src":"50138:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"50108:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"50116:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"50105:2:11"},"nodeType":"YulFunctionCall","src":"50105:30:11"},"nodeType":"YulIf","src":"50102:117:11"},{"nodeType":"YulAssignment","src":"50233:124:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50329:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"50340:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50325:3:11"},"nodeType":"YulFunctionCall","src":"50325:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"50349:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"50243:81:11"},"nodeType":"YulFunctionCall","src":"50243:114:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"50233:6:11"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49867:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"49878:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"49890:6:11","type":""}],"src":"49770:604:11"},{"body":{"nodeType":"YulBlock","src":"50458:40:11","statements":[{"nodeType":"YulAssignment","src":"50469:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50485:5:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"50479:5:11"},"nodeType":"YulFunctionCall","src":"50479:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"50469:6:11"}]}]},"name":"array_length_t_array$_t_string_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50441:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"50451:6:11","type":""}],"src":"50380:118:11"},{"body":{"nodeType":"YulBlock","src":"50580:87:11","statements":[{"nodeType":"YulAssignment","src":"50590:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"50598:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"50590:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50618:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"50621:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50611:6:11"},"nodeType":"YulFunctionCall","src":"50611:14:11"},"nodeType":"YulExpressionStatement","src":"50611:14:11"},{"nodeType":"YulAssignment","src":"50634:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50652:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50655:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"50642:9:11"},"nodeType":"YulFunctionCall","src":"50642:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"50634:4:11"}]}]},"name":"array_dataslot_t_array$_t_string_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"50567:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"50575:4:11","type":""}],"src":"50504:163:11"},{"body":{"nodeType":"YulBlock","src":"50776:732:11","statements":[{"nodeType":"YulVariableDeclaration","src":"50786:29:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50809:5:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"50803:5:11"},"nodeType":"YulFunctionCall","src":"50803:12:11"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"50790:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"50824:50:11","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"50864:9:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"50838:25:11"},"nodeType":"YulFunctionCall","src":"50838:36:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"50828:6:11","type":""}]},{"nodeType":"YulAssignment","src":"50883:68:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50939:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"50944:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"50890:48:11"},"nodeType":"YulFunctionCall","src":"50890:61:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50883:3:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"51000:157:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51053:3:11"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"51062:9:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"51077:4:11","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"51073:3:11"},"nodeType":"YulFunctionCall","src":"51073:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"51058:3:11"},"nodeType":"YulFunctionCall","src":"51058:25:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51046:6:11"},"nodeType":"YulFunctionCall","src":"51046:38:11"},"nodeType":"YulExpressionStatement","src":"51046:38:11"},{"nodeType":"YulAssignment","src":"51097:50:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51108:3:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"51117:4:11","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"51137:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"51130:6:11"},"nodeType":"YulFunctionCall","src":"51130:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"51123:6:11"},"nodeType":"YulFunctionCall","src":"51123:22:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"51113:3:11"},"nodeType":"YulFunctionCall","src":"51113:33:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51104:3:11"},"nodeType":"YulFunctionCall","src":"51104:43:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"51097:3:11"}]}]},"nodeType":"YulCase","src":"50993:164:11","value":{"kind":"number","nodeType":"YulLiteral","src":"50998:1:11","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"51173:329:11","statements":[{"nodeType":"YulVariableDeclaration","src":"51218:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"51265:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"51233:31:11"},"nodeType":"YulFunctionCall","src":"51233:38:11"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"51222:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"51284:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"51293:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"51288:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"51351:110:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51380:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"51385:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51376:3:11"},"nodeType":"YulFunctionCall","src":"51376:11:11"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"51395:7:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"51389:5:11"},"nodeType":"YulFunctionCall","src":"51389:14:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51369:6:11"},"nodeType":"YulFunctionCall","src":"51369:35:11"},"nodeType":"YulExpressionStatement","src":"51369:35:11"},{"nodeType":"YulAssignment","src":"51421:26:11","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"51436:7:11"},{"kind":"number","nodeType":"YulLiteral","src":"51445:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51432:3:11"},"nodeType":"YulFunctionCall","src":"51432:15:11"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"51421:7:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"51318:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"51321:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"51315:2:11"},"nodeType":"YulFunctionCall","src":"51315:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"51329:21:11","statements":[{"nodeType":"YulAssignment","src":"51331:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"51340:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"51343:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51336:3:11"},"nodeType":"YulFunctionCall","src":"51336:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"51331:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"51311:3:11","statements":[]},"src":"51307:154:11"},{"nodeType":"YulAssignment","src":"51474:18:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51485:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"51490:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51481:3:11"},"nodeType":"YulFunctionCall","src":"51481:11:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"51474:3:11"}]}]},"nodeType":"YulCase","src":"51166:336:11","value":{"kind":"number","nodeType":"YulLiteral","src":"51171:1:11","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"50971:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"50982:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"50967:3:11"},"nodeType":"YulFunctionCall","src":"50967:17:11"},"nodeType":"YulSwitch","src":"50960:542:11"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50757:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"50764:3:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"50772:3:11","type":""}],"src":"50697:811:11"},{"body":{"nodeType":"YulBlock","src":"51611:93:11","statements":[{"nodeType":"YulAssignment","src":"51621:77:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"51686:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"51694:3:11"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"51635:50:11"},"nodeType":"YulFunctionCall","src":"51635:63:11"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"51621:10:11"}]}]},"name":"abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"51584:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"51592:3:11","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"51600:10:11","type":""}],"src":"51514:190:11"},{"body":{"nodeType":"YulBlock","src":"51789:38:11","statements":[{"nodeType":"YulAssignment","src":"51799:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"51811:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"51816:4:11","type":"","value":"0x01"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51807:3:11"},"nodeType":"YulFunctionCall","src":"51807:14:11"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"51799:4:11"}]}]},"name":"array_nextElement_t_array$_t_string_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"51776:3:11","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"51784:4:11","type":""}],"src":"51710:117:11"},{"body":{"nodeType":"YulBlock","src":"51999:819:11","statements":[{"nodeType":"YulVariableDeclaration","src":"52009:72:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52075:5:11"}],"functionName":{"name":"array_length_t_array$_t_string_storage_$dyn_storage","nodeType":"YulIdentifier","src":"52023:51:11"},"nodeType":"YulFunctionCall","src":"52023:58:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"52013:6:11","type":""}]},{"nodeType":"YulAssignment","src":"52090:103:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52181:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"52186:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52097:83:11"},"nodeType":"YulFunctionCall","src":"52097:96:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52090:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"52202:20:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"52219:3:11"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"52206:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"52231:39:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52247:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"52256:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"52264:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"52252:3:11"},"nodeType":"YulFunctionCall","src":"52252:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52243:3:11"},"nodeType":"YulFunctionCall","src":"52243:27:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"52235:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"52279:75:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52348:5:11"}],"functionName":{"name":"array_dataslot_t_array$_t_string_storage_$dyn_storage","nodeType":"YulIdentifier","src":"52294:53:11"},"nodeType":"YulFunctionCall","src":"52294:60:11"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"52283:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"52363:21:11","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"52377:7:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"52367:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"52453:320:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52474:3:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52483:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"52489:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52479:3:11"},"nodeType":"YulFunctionCall","src":"52479:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52467:6:11"},"nodeType":"YulFunctionCall","src":"52467:33:11"},"nodeType":"YulExpressionStatement","src":"52467:33:11"},{"nodeType":"YulVariableDeclaration","src":"52513:27:11","value":{"name":"srcPtr","nodeType":"YulIdentifier","src":"52534:6:11"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"52517:13:11","type":""}]},{"nodeType":"YulAssignment","src":"52553:89:11","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"52622:13:11"},{"name":"tail","nodeType":"YulIdentifier","src":"52637:4:11"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"52561:60:11"},"nodeType":"YulFunctionCall","src":"52561:81:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52553:4:11"}]},{"nodeType":"YulAssignment","src":"52655:74:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"52722:6:11"}],"functionName":{"name":"array_nextElement_t_array$_t_string_storage_$dyn_storage","nodeType":"YulIdentifier","src":"52665:56:11"},"nodeType":"YulFunctionCall","src":"52665:64:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"52655:6:11"}]},{"nodeType":"YulAssignment","src":"52742:21:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52753:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"52758:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52749:3:11"},"nodeType":"YulFunctionCall","src":"52749:14:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52742:3:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"52415:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"52418:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"52412:2:11"},"nodeType":"YulFunctionCall","src":"52412:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"52426:18:11","statements":[{"nodeType":"YulAssignment","src":"52428:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"52437:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"52440:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52433:3:11"},"nodeType":"YulFunctionCall","src":"52433:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"52428:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"52397:14:11","statements":[{"nodeType":"YulVariableDeclaration","src":"52399:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"52408:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"52403:1:11","type":""}]}]},"src":"52393:380:11"},{"nodeType":"YulAssignment","src":"52782:11:11","value":{"name":"tail","nodeType":"YulIdentifier","src":"52789:4:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52782:3:11"}]},{"nodeType":"YulAssignment","src":"52802:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"52809:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52802:3:11"}]}]},"name":"abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"51978:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"51985:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51994:3:11","type":""}],"src":"51861:957:11"},{"body":{"nodeType":"YulBlock","src":"53042:403:11","statements":[{"nodeType":"YulAssignment","src":"53052:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53064:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"53075:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53060:3:11"},"nodeType":"YulFunctionCall","src":"53060:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53052:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"53132:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53145:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"53156:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53141:3:11"},"nodeType":"YulFunctionCall","src":"53141:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"53088:43:11"},"nodeType":"YulFunctionCall","src":"53088:71:11"},"nodeType":"YulExpressionStatement","src":"53088:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"53213:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53226:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"53237:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53222:3:11"},"nodeType":"YulFunctionCall","src":"53222:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"53169:43:11"},"nodeType":"YulFunctionCall","src":"53169:72:11"},"nodeType":"YulExpressionStatement","src":"53169:72:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53262:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"53273:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53258:3:11"},"nodeType":"YulFunctionCall","src":"53258:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53282:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"53288:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53278:3:11"},"nodeType":"YulFunctionCall","src":"53278:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53251:6:11"},"nodeType":"YulFunctionCall","src":"53251:48:11"},"nodeType":"YulExpressionStatement","src":"53251:48:11"},{"nodeType":"YulAssignment","src":"53308:130:11","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"53424:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"53433:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53316:107:11"},"nodeType":"YulFunctionCall","src":"53316:122:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53308:4:11"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_array$_t_string_storage_$dyn_storage__to_t_address_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52998:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"53010:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"53018:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"53026:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53037:4:11","type":""}],"src":"52824:621:11"},{"body":{"nodeType":"YulBlock","src":"53493:48:11","statements":[{"nodeType":"YulAssignment","src":"53503:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53528:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"53521:6:11"},"nodeType":"YulFunctionCall","src":"53521:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"53514:6:11"},"nodeType":"YulFunctionCall","src":"53514:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"53503:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"53475:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"53485:7:11","type":""}],"src":"53451:90:11"},{"body":{"nodeType":"YulBlock","src":"53587:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"53641:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"53650:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"53653:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"53643:6:11"},"nodeType":"YulFunctionCall","src":"53643:12:11"},"nodeType":"YulExpressionStatement","src":"53643:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53610:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53632:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"53617:14:11"},"nodeType":"YulFunctionCall","src":"53617:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"53607:2:11"},"nodeType":"YulFunctionCall","src":"53607:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"53600:6:11"},"nodeType":"YulFunctionCall","src":"53600:40:11"},"nodeType":"YulIf","src":"53597:60:11"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"53580:5:11","type":""}],"src":"53547:116:11"},{"body":{"nodeType":"YulBlock","src":"53729:77:11","statements":[{"nodeType":"YulAssignment","src":"53739:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"53754:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"53748:5:11"},"nodeType":"YulFunctionCall","src":"53748:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"53739:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53794:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"53770:23:11"},"nodeType":"YulFunctionCall","src":"53770:30:11"},"nodeType":"YulExpressionStatement","src":"53770:30:11"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53707:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"53715:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53723:5:11","type":""}],"src":"53669:137:11"},{"body":{"nodeType":"YulBlock","src":"53886:271:11","statements":[{"body":{"nodeType":"YulBlock","src":"53932:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"53934:77:11"},"nodeType":"YulFunctionCall","src":"53934:79:11"},"nodeType":"YulExpressionStatement","src":"53934:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"53907:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"53916:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53903:3:11"},"nodeType":"YulFunctionCall","src":"53903:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"53928:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"53899:3:11"},"nodeType":"YulFunctionCall","src":"53899:32:11"},"nodeType":"YulIf","src":"53896:119:11"},{"nodeType":"YulBlock","src":"54025:125:11","statements":[{"nodeType":"YulVariableDeclaration","src":"54040:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"54054:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"54044:6:11","type":""}]},{"nodeType":"YulAssignment","src":"54069:71:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54112:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"54123:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54108:3:11"},"nodeType":"YulFunctionCall","src":"54108:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"54132:7:11"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"54079:28:11"},"nodeType":"YulFunctionCall","src":"54079:61:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"54069:6:11"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53856:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"53867:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"53879:6:11","type":""}],"src":"53812:345:11"},{"body":{"nodeType":"YulBlock","src":"54269:66:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54291:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"54299:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54287:3:11"},"nodeType":"YulFunctionCall","src":"54287:14:11"},{"hexValue":"5374616b696e6720417070726f7665206661696c6564","kind":"string","nodeType":"YulLiteral","src":"54303:24:11","type":"","value":"Staking Approve failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54280:6:11"},"nodeType":"YulFunctionCall","src":"54280:48:11"},"nodeType":"YulExpressionStatement","src":"54280:48:11"}]},"name":"store_literal_in_memory_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"54261:6:11","type":""}],"src":"54163:172:11"},{"body":{"nodeType":"YulBlock","src":"54487:220:11","statements":[{"nodeType":"YulAssignment","src":"54497:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54563:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"54568:2:11","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54504:58:11"},"nodeType":"YulFunctionCall","src":"54504:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54497:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54669:3:11"}],"functionName":{"name":"store_literal_in_memory_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3","nodeType":"YulIdentifier","src":"54580:88:11"},"nodeType":"YulFunctionCall","src":"54580:93:11"},"nodeType":"YulExpressionStatement","src":"54580:93:11"},{"nodeType":"YulAssignment","src":"54682:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54693:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"54698:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54689:3:11"},"nodeType":"YulFunctionCall","src":"54689:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54682:3:11"}]}]},"name":"abi_encode_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"54475:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54483:3:11","type":""}],"src":"54341:366:11"},{"body":{"nodeType":"YulBlock","src":"54884:248:11","statements":[{"nodeType":"YulAssignment","src":"54894:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54906:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"54917:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54902:3:11"},"nodeType":"YulFunctionCall","src":"54902:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54894:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54941:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"54952:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54937:3:11"},"nodeType":"YulFunctionCall","src":"54937:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54960:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"54966:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54956:3:11"},"nodeType":"YulFunctionCall","src":"54956:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54930:6:11"},"nodeType":"YulFunctionCall","src":"54930:47:11"},"nodeType":"YulExpressionStatement","src":"54930:47:11"},{"nodeType":"YulAssignment","src":"54986:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55120:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54994:124:11"},"nodeType":"YulFunctionCall","src":"54994:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54986:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54864:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54879:4:11","type":""}],"src":"54713:419:11"},{"body":{"nodeType":"YulBlock","src":"55328:321:11","statements":[{"nodeType":"YulAssignment","src":"55338:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55350:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"55361:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55346:3:11"},"nodeType":"YulFunctionCall","src":"55346:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55338:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"55418:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55431:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"55442:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55427:3:11"},"nodeType":"YulFunctionCall","src":"55427:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"55374:43:11"},"nodeType":"YulFunctionCall","src":"55374:71:11"},"nodeType":"YulExpressionStatement","src":"55374:71:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55466:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"55477:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55462:3:11"},"nodeType":"YulFunctionCall","src":"55462:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55486:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"55492:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55482:3:11"},"nodeType":"YulFunctionCall","src":"55482:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55455:6:11"},"nodeType":"YulFunctionCall","src":"55455:48:11"},"nodeType":"YulExpressionStatement","src":"55455:48:11"},{"nodeType":"YulAssignment","src":"55512:130:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"55628:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"55637:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55520:107:11"},"nodeType":"YulFunctionCall","src":"55520:122:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55512:4:11"}]}]},"name":"abi_encode_tuple_t_address_t_array$_t_string_storage_$dyn_storage__to_t_address_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55292:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"55304:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"55312:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55323:4:11","type":""}],"src":"55138:511:11"},{"body":{"nodeType":"YulBlock","src":"55761:71:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55783:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"55791:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55779:3:11"},"nodeType":"YulFunctionCall","src":"55779:14:11"},{"hexValue":"446973747269627574696f6e20417070726f7665206661696c6564","kind":"string","nodeType":"YulLiteral","src":"55795:29:11","type":"","value":"Distribution Approve failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55772:6:11"},"nodeType":"YulFunctionCall","src":"55772:53:11"},"nodeType":"YulExpressionStatement","src":"55772:53:11"}]},"name":"store_literal_in_memory_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"55753:6:11","type":""}],"src":"55655:177:11"},{"body":{"nodeType":"YulBlock","src":"55984:220:11","statements":[{"nodeType":"YulAssignment","src":"55994:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56060:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"56065:2:11","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56001:58:11"},"nodeType":"YulFunctionCall","src":"56001:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55994:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56166:3:11"}],"functionName":{"name":"store_literal_in_memory_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974","nodeType":"YulIdentifier","src":"56077:88:11"},"nodeType":"YulFunctionCall","src":"56077:93:11"},"nodeType":"YulExpressionStatement","src":"56077:93:11"},{"nodeType":"YulAssignment","src":"56179:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56190:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"56195:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56186:3:11"},"nodeType":"YulFunctionCall","src":"56186:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"56179:3:11"}]}]},"name":"abi_encode_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55972:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55980:3:11","type":""}],"src":"55838:366:11"},{"body":{"nodeType":"YulBlock","src":"56381:248:11","statements":[{"nodeType":"YulAssignment","src":"56391:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56403:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"56414:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56399:3:11"},"nodeType":"YulFunctionCall","src":"56399:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56391:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56438:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"56449:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56434:3:11"},"nodeType":"YulFunctionCall","src":"56434:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56457:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"56463:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56453:3:11"},"nodeType":"YulFunctionCall","src":"56453:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56427:6:11"},"nodeType":"YulFunctionCall","src":"56427:47:11"},"nodeType":"YulExpressionStatement","src":"56427:47:11"},{"nodeType":"YulAssignment","src":"56483:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56617:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56491:124:11"},"nodeType":"YulFunctionCall","src":"56491:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56483:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56361:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56376:4:11","type":""}],"src":"56210:419:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_int64(value) -> cleaned {\n        cleaned := signextend(7, value)\n    }\n\n    function abi_encode_t_int64_to_t_int64(value, pos) {\n        mstore(pos, cleanup_t_int64(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct UnbondingDelegationEntry -> struct UnbondingDelegationEntry\n    function abi_encode_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // creationHeight\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_int64_to_t_int64(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // completionTime\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_int64_to_t_int64(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // initialBalance\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // balance\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function array_nextElement_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct UnbondingDelegationEntry[] -> struct UnbondingDelegationEntry[]\n    function abi_encode_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_to_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    // struct DecCoin -> struct DecCoin\n    function abi_encode_t_struct$_DecCoin_$2701_memory_ptr_to_t_struct$_DecCoin_$2701_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // denom\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // precision\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x40))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_DecCoin_$2701_memory_ptr_to_t_struct$_DecCoin_$2701_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_DecCoin_$2701_memory_ptr_to_t_struct$_DecCoin_$2701_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct DecCoin[] -> struct DecCoin[]\n    function abi_encode_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_DecCoin_$2701_memory_ptr_to_t_struct$_DecCoin_$2701_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_string_storage__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_int64(value) {\n        if iszero(eq(value, cleanup_t_int64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int64(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct UnbondingDelegationEntry\n    function abi_decode_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x80) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x80)\n\n        {\n            // creationHeight\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_int64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // completionTime\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_int64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // initialBalance\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // balance\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct UnbondingDelegationEntry[]\n    function abi_decode_available_length_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x80))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x80) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct UnbondingDelegationEntry[]\n    function abi_decode_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_struct$_UnbondingDelegationEntry_$3141_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // struct Coin\n    function abi_decode_t_struct$_Coin_$2694_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // denom\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_struct$_Coin_$2694_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_struct$_Coin_$2694_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // struct Coin[]\n    function abi_decode_available_length_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_struct$_Coin_$2694_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct Coin[]\n    function abi_decode_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_struct$_Coin_$2694_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_storage_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_int64_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    // struct DecCoin\n    function abi_decode_t_struct$_DecCoin_$2701_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // denom\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // precision\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint8_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct DecCoin[]\n    function abi_decode_available_length_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_struct$_DecCoin_$2701_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct DecCoin[]\n    function abi_decode_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_struct$_DecCoin_$2701_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_storage_$dyn_storage(value) -> length {\n\n        length := sload(value)\n\n    }\n\n    function array_dataslot_t_array$_t_string_storage_$dyn_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_storage_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_storage_$dyn_storage(ptr) -> next {\n        next := add(ptr, 0x01)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_storage_$dyn_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_storage_$dyn_storage(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := srcPtr\n            tail := abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_storage_$dyn_storage(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_array$_t_string_storage_$dyn_storage__to_t_address_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking Approve failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_523eee1ea30fb5b53d7586d91c6f089b2705b907c7f1c34c7e41767024ee9de3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_array$_t_string_storage_$dyn_storage__to_t_address_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974(memPtr) {\n\n        mstore(add(memPtr, 0), \"Distribution Approve failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14da2c403b532bd8d4bc4f2cf5df427e620556f4b8c89cc238a681f687cec974_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106102ae5760003560e01c80637f2035d411610175578063aa4cdf2a116100dc578063c04fe97811610095578063d3791b201161006f578063d3791b2014610b96578063e3280c9614610bc1578063e32acc1a14610bfe578063ff4a37ef14610c3b576102ae565b8063c04fe97814610b05578063c29595c514610b30578063c4c2e36414610b59576102ae565b8063aa4cdf2a14610a07578063ae429e4714610a44578063b16060a614610a6f578063b2947c7114610a86578063b527d45e14610a9d578063c04e743014610adc576102ae565b80639077007d1161012e5780639077007d146108f757806397ee760614610922578063a1ca91781461094d578063a2cdb3a91461098a578063a694fc3a146109b3578063aa2bf5d3146109dc576102ae565b80637f2035d41461079c578063803f5b9f146107da578063812fae1f1461081757806382fcc73214610854578063881de858146108915780638d3d2595146108ba576102ae565b8063414d9a2b116102195780635d907da1116101d25780635d907da1146106525780636af3304e1461068f5780636f9fb98a146106cc57806371085cab146106f75780637bbd582d146107345780637e22cd111461075f576102ae565b8063414d9a2b1461051857806342c7652a14610555578063468d0c80146105805780634a797bd7146105bf5780634be7adb5146105ea57806353f6880214610627576102ae565b80631ba44c4c1161026b5780631ba44c4c146103b65780631e9ac9f5146103f557806327a568b91461043257806329b56f60146104715780632d5bf5b01461049c5780633f87a2f4146104d9576102ae565b80630cdd53f6146102b3578063109ac970146102cf578063131d44f21461030c57806313bf4cea146103495780631b52b9de146103745780631b592aeb1461038b575b600080fd5b6102cd60048036038101906102c89190612f03565b610c7a565b005b3480156102db57600080fd5b506102f660048036038101906102f19190612f43565b610cb0565b60405161030391906130c2565b60405180910390f35b34801561031857600080fd5b50610333600480360381019061032e9190612f43565b610e1f565b60405161034091906130c2565b60405180910390f35b34801561035557600080fd5b5061035e610f8e565b60405161036b91906130f3565b60405180910390f35b34801561038057600080fd5b50610389610f94565b005b34801561039757600080fd5b506103a0611009565b6040516103ad91906130f3565b60405180910390f35b3480156103c257600080fd5b506103dd60048036038101906103d89190612f43565b61100f565b6040516103ec93929190613158565b60405180910390f35b34801561040157600080fd5b5061041c600480360381019061041791906132cb565b6110c1565b60405161042991906130f3565b60405180910390f35b34801561043e57600080fd5b5061045960048036038101906104549190612f43565b611132565b60405161046893929190613314565b60405180910390f35b34801561047d57600080fd5b506104866112f4565b60405161049391906130c2565b60405180910390f35b3480156104a857600080fd5b506104c360048036038101906104be9190613360565b61142f565b6040516104d091906130f3565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb9190612f43565b6114b3565b60405161050f93929190613158565b60405180910390f35b34801561052457600080fd5b5061053f600480360381019061053a9190612f43565b611565565b60405161054c91906130f3565b60405180910390f35b34801561056157600080fd5b5061056a61157d565b60405161057791906134eb565b60405180910390f35b34801561058c57600080fd5b506105a760048036038101906105a29190612f43565b611608565b6040516105b69392919061350d565b60405180910390f35b3480156105cb57600080fd5b506105d46116ba565b6040516105e191906130f3565b60405180910390f35b3480156105f657600080fd5b50610611600480360381019061060c9190612f03565b6116c0565b60405161061e91906130c2565b60405180910390f35b34801561063357600080fd5b5061063c611852565b60405161064991906130f3565b60405180910390f35b34801561065e57600080fd5b5061067960048036038101906106749190612f43565b6118eb565b604051610686919061354b565b60405180910390f35b34801561069b57600080fd5b506106b660048036038101906106b19190613360565b611993565b6040516106c391906130f3565b60405180910390f35b3480156106d857600080fd5b506106e1611a17565b6040516106ee91906130f3565b60405180910390f35b34801561070357600080fd5b5061071e6004803603810190610719919061356d565b611a1f565b60405161072b91906130f3565b60405180910390f35b34801561074057600080fd5b50610749611a91565b60405161075691906130f3565b60405180910390f35b34801561076b57600080fd5b5061078660048036038101906107819190612f43565b611a97565b604051610793919061354b565b60405180910390f35b3480156107a857600080fd5b506107c360048036038101906107be9190612f43565b611cf4565b6040516107d19291906135c9565b60405180910390f35b3480156107e657600080fd5b5061080160048036038101906107fc9190612f43565b611da0565b60405161080e91906136a8565b60405180910390f35b34801561082357600080fd5b5061083e60048036038101906108399190612f43565b611e83565b60405161084b91906136a8565b60405180910390f35b34801561086057600080fd5b5061087b600480360381019061087691906136ca565b611f66565b60405161088891906130f3565b60405180910390f35b34801561089d57600080fd5b506108b860048036038101906108b39190613739565b611fe9565b005b3480156108c657600080fd5b506108e160048036038101906108dc9190612f43565b612036565b6040516108ee919061354b565b60405180910390f35b34801561090357600080fd5b5061090c6120de565b60405161091991906130f3565b60405180910390f35b34801561092e57600080fd5b506109376120e4565b60405161094491906130c2565b60405180910390f35b34801561095957600080fd5b50610974600480360381019061096f91906132cb565b61221f565b60405161098191906130f3565b60405180910390f35b34801561099657600080fd5b506109b160048036038101906109ac9190612f03565b612290565b005b3480156109bf57600080fd5b506109da60048036038101906109d59190612f43565b6122c1565b005b3480156109e857600080fd5b506109f1612348565b6040516109fe91906130f3565b60405180910390f35b348015610a1357600080fd5b50610a2e6004803603810190610a2991906132cb565b61234e565b604051610a3b91906130f3565b60405180910390f35b348015610a5057600080fd5b50610a596123d5565b604051610a6691906138f2565b60405180910390f35b348015610a7b57600080fd5b50610a84612460565b005b348015610a9257600080fd5b50610a9b6126fb565b005b348015610aa957600080fd5b50610ac46004803603810190610abf9190612f43565b6128ab565b604051610ad393929190613158565b60405180910390f35b348015610ae857600080fd5b50610b036004803603810190610afe9190613360565b61295d565b005b348015610b1157600080fd5b50610b1a612985565b604051610b2791906130c2565b60405180910390f35b348015610b3c57600080fd5b50610b576004803603810190610b529190613360565b612ac0565b005b348015610b6557600080fd5b50610b806004803603810190610b7b9190613914565b612ae8565b604051610b8d91906130f3565b60405180910390f35b348015610ba257600080fd5b50610bab612bb7565b604051610bb891906130f3565b60405180910390f35b348015610bcd57600080fd5b50610be86004803603810190610be39190613a72565b612bbd565b604051610bf591906130f3565b60405180910390f35b348015610c0a57600080fd5b50610c256004803603810190610c209190612f43565b612ca2565b604051610c32919061354b565b60405180910390f35b348015610c4757600080fd5b50610c626004803603810190610c5d9190612f43565b612d4a565b604051610c7193929190613158565b60405180910390f35b610c826126fb565b80600260008481526020019081526020016000206000828254610ca59190613b2c565b925050819055505050565b6060600060065467ffffffffffffffff811115610cd057610ccf6131a0565b5b604051908082528060200260200182016040528015610d0357816020015b6060815260200190600190039081610cee5790505b509050600080600090505b600654811015610e145784600d60008381526020019081526020016000206000015403610e0157600d60008281526020019081526020016000206001018054610d5690613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8290613b8f565b8015610dcf5780601f10610da457610100808354040283529160200191610dcf565b820191906000526020600020905b815481529060010190602001808311610db257829003601f168201915b5050505050838381518110610de757610de6613bc0565b5b60200260200101819052508180610dfd90613bef565b9250505b8080610e0c90613bef565b915050610d0e565b508192505050919050565b6060600060075467ffffffffffffffff811115610e3f57610e3e6131a0565b5b604051908082528060200260200182016040528015610e7257816020015b6060815260200190600190039081610e5d5790505b509050600080600090505b600754811015610f835784600e60008381526020019081526020016000206000015403610f6257600e60008281526020019081526020016000206001018054610ec590613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef190613b8f565b8015610f3e5780601f10610f1357610100808354040283529160200191610f3e565b820191906000526020600020905b815481529060010190602001808311610f2157829003601f168201915b5050505050838381518110610f5657610f55613bc0565b5b60200260200101819052505b8180610f6d90613bef565b9250508080610f7b90613bef565b915050610e7d565b508192505050919050565b60065481565b600047905060003373ffffffffffffffffffffffffffffffffffffffff1682604051610fbf90613c68565b60006040518083038185875af1925050503d8060008114610ffc576040519150601f19603f3d011682016040523d82523d6000602084013e611001565b606091505b505090505050565b60085481565b601060205280600052604060002060009150905080600001549080600101549080600201805461103e90613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461106a90613b8f565b80156110b75780601f1061108c576101008083540402835291602001916110b7565b820191906000526020600020905b81548152906001019060200180831161109a57829003601f168201915b5050505050905083565b600080600090505b600654811015611127578280519060200120600d60008381526020019081526020016000206001016040516110fe9190613d15565b604051809103902003611114578091505061112d565b808061111f90613bef565b9150506110c9565b50600090505b919050565b600c60205280600052604060002060009150905080600001805461115590613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461118190613b8f565b80156111ce5780601f106111a3576101008083540402835291602001916111ce565b820191906000526020600020905b8154815290600101906020018083116111b157829003601f168201915b5050505050908060010180546111e390613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461120f90613b8f565b801561125c5780601f106112315761010080835404028352916020019161125c565b820191906000526020600020905b81548152906001019060200180831161123f57829003601f168201915b50505050509080600201805461127190613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461129d90613b8f565b80156112ea5780601f106112bf576101008083540402835291602001916112ea565b820191906000526020600020905b8154815290600101906020018083116112cd57829003601f168201915b5050505050905083565b6060600060065467ffffffffffffffff811115611314576113136131a0565b5b60405190808252806020026020018201604052801561134757816020015b60608152602001906001900390816113325790505b50905060005b60065481101561142757600d6000828152602001908152602001600020600101805461137890613b8f565b80601f01602080910402602001604051908101604052809291908181526020018280546113a490613b8f565b80156113f15780601f106113c6576101008083540402835291602001916113f1565b820191906000526020600020905b8154815290600101906020018083116113d457829003601f168201915b505050505082828151811061140957611408613bc0565b5b6020026020010181905250808061141f90613bef565b91505061134d565b508091505090565b60006040518060600160405280600a5481526020018481526020018381525060116000600a5481526020019081526020016000206000820151816000015560208201518160010155604082015181600201908161148c9190613ed8565b50905050600a60008154809291906114a390613bef565b9190505550600a54905092915050565b60126020528060005260406000206000915090508060000154908060010154908060020180546114e290613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461150e90613b8f565b801561155b5780601f106115305761010080835404028352916020019161155b565b820191906000526020600020905b81548152906001019060200180831161153e57829003601f168201915b5050505050905083565b60026020528060005260406000206000915090505481565b606061080073ffffffffffffffffffffffffffffffffffffffff1663a03ffee13060046040518363ffffffff1660e01b81526004016115bd92919061406f565b600060405180830381865afa1580156115da573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116039190614225565b905090565b600e60205280600052604060002060009150905080600001549080600101805461163190613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461165d90613b8f565b80156116aa5780601f1061167f576101008083540402835291602001916116aa565b820191906000526020600020905b81548152906001019060200180831161168d57829003601f168201915b5050505050908060020154905083565b60095481565b6060600060095467ffffffffffffffff8111156116e0576116df6131a0565b5b60405190808252806020026020018201604052801561171357816020015b60608152602001906001900390816116fe5790505b509050600080600090505b600954811015611846578560106000838152602001908152602001600020600001541480156117625750846010600083815260200190815260200160002060010154145b156118255760106000828152602001908152602001600020600201805461178890613b8f565b80601f01602080910402602001604051908101604052809291908181526020018280546117b490613b8f565b80156118015780601f106117d657610100808354040283529160200191611801565b820191906000526020600020905b8154815290600101906020018083116117e457829003601f168201915b505050505083838151811061181957611818613bc0565b5b60200260200101819052505b818061183090613bef565b925050808061183e90613bef565b91505061171e565b50819250505092915050565b600080600061080073ffffffffffffffffffffffffffffffffffffffff1663241774e63060046040518363ffffffff1660e01b815260040161189592919061406f565b600060405180830381865afa1580156118b2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906118db919061434a565b9150915080602001519250505090565b6060600c6000838152602001908152602001600020600101805461190e90613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461193a90613b8f565b80156119875780601f1061195c57610100808354040283529160200191611987565b820191906000526020600020905b81548152906001019060200180831161196a57829003601f168201915b50505050509050919050565b60006040518060600160405280600b5481526020018481526020018381525060126000600b548152602001908152602001600020600082015181600001556020820151816001015560408201518160020190816119f09190613ed8565b50905050600b6000815480929190611a0790613bef565b9190505550600b54905092915050565b600047905090565b6000604051806040016040528083815260200184815250600d60006006548152602001908152602001600020600082015181600001556020820151816001019081611a6a9190613ed8565b5090505060066000815480929190611a8190613bef565b9190505550600654905092915050565b60055481565b6060611aa16126fb565b600061080173ffffffffffffffffffffffffffffffffffffffff1663b46a8d613060046040518363ffffffff1660e01b8152600401611ae192919061406f565b6000604051808303816000875af1158015611b00573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611b299190614487565b905080600081518110611b3f57611b3e613bc0565b5b60200260200101516020015160036000828254611b5c9190613b2c565b9250508190555060006002600085815260200190815260200160002054905061080073ffffffffffffffffffffffffffffffffffffffff16633edab33c306004846040518463ffffffff1660e01b8152600401611bbb939291906144d0565b6020604051808303816000875af1158015611bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bfe919061450e565b50600082600081518110611c1557611c14613bc0565b5b60200260200101516020015182611c2c9190613b2c565b905060003373ffffffffffffffffffffffffffffffffffffffff1682604051611c5490613c68565b60006040518083038185875af1925050503d8060008114611c91576040519150601f19603f3d011682016040523d82523d6000602084013e611c96565b606091505b50509050600060026000888152602001908152602001600020819055506040518060400160405280601881526020017f53656e74204d6f6e657920746f2069646561206f776e65720000000000000000815250945050505050919050565b600d602052806000526040600020600091509050806000015490806001018054611d1d90613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054611d4990613b8f565b8015611d965780601f10611d6b57610100808354040283529160200191611d96565b820191906000526020600020905b815481529060010190602001808311611d7957829003601f168201915b5050505050905082565b60606000600a5467ffffffffffffffff811115611dc057611dbf6131a0565b5b604051908082528060200260200182016040528015611dee5781602001602082028036833780820191505090505b509050600080600090505b600a54811015611e785784601160008381526020019081526020016000206001015403611e65576011600082815260200190815260200160002060000154838381518110611e4a57611e49613bc0565b5b6020026020010181815250508180611e6190613bef565b9250505b8080611e7090613bef565b915050611df9565b508192505050919050565b60606000600b5467ffffffffffffffff811115611ea357611ea26131a0565b5b604051908082528060200260200182016040528015611ed15781602001602082028036833780820191505090505b509050600080600090505b600b54811015611f5b5784601260008381526020019081526020016000206001015403611f48576012600082815260200190815260200160002060000154838381518110611f2d57611f2c613bc0565b5b6020026020010181815250508180611f4490613bef565b9250505b8080611f5390613bef565b915050611edc565b508192505050919050565b600060405180606001604052808581526020018481526020018381525060106000600954815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611fc19190613ed8565b5090505060096000815480929190611fd890613bef565b919050555060095490509392505050565b81600c6000858152602001908152602001600020600001908161200c9190613ed8565b5080600c600085815260200190815260200160002060010190816120309190613ed8565b50505050565b6060600e6000838152602001908152602001600020600101805461205990613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461208590613b8f565b80156120d25780601f106120a7576101008083540402835291602001916120d2565b820191906000526020600020905b8154815290600101906020018083116120b557829003601f168201915b50505050509050919050565b600a5481565b6060600060075467ffffffffffffffff811115612104576121036131a0565b5b60405190808252806020026020018201604052801561213757816020015b60608152602001906001900390816121225790505b50905060005b60075481101561221757600e6000828152602001908152602001600020600101805461216890613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461219490613b8f565b80156121e15780601f106121b6576101008083540402835291602001916121e1565b820191906000526020600020905b8154815290600101906020018083116121c457829003601f168201915b50505050508282815181106121f9576121f8613bc0565b5b6020026020010181905250808061220f90613bef565b91505061213d565b508091505090565b600080600090505b600754811015612285578280519060200120600e600083815260200190815260200160002060010160405161225c9190613d15565b604051809103902003612272578091505061228b565b808061227d90613bef565b915050612227565b50600090505b919050565b80600e600084815260200190815260200160002060020160008282546122b69190613b2c565b925050819055505050565b61080073ffffffffffffffffffffffffffffffffffffffff166353266bbb306004846040518463ffffffff1660e01b8152600401612301939291906144d0565b6020604051808303816000875af1158015612320573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612344919061450e565b5050565b600b5481565b600080600090505b6007548110156123ca578280519060200120600e600083815260200190815260200160002060010160405161238b9190613d15565b6040518091039020036123b757600e6000828152602001908152602001600020600001549150506123d0565b80806123c290613bef565b915050612356565b50600090505b919050565b606061080173ffffffffffffffffffffffffffffffffffffffff16639ad563b43060046040518363ffffffff1660e01b815260040161241592919061406f565b600060405180830381865afa158015612432573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061245b91906146c8565b905090565b60005b6005548110156124c657600c6000828152602001908152602001600020600080820160006124919190612e5c565b6001820160006124a19190612e5c565b6002820160006124b19190612e5c565b505080806124be90613bef565b915050612463565b5060005b60065481101561251557600d60008281526020019081526020016000206000808201600090556001820160006125009190612e5c565b5050808061250d90613bef565b9150506124ca565b5060005b60075481101561256c57600e600082815260200190815260200160002060008082016000905560018201600061254f9190612e5c565b60028201600090555050808061256490613bef565b915050612519565b5060005b6006548110156125c357600f600082815260200190815260200160002060008082016000905560018201600090556002820160006125ae9190612e5c565b505080806125bb90613bef565b915050612570565b5060005b600a5481101561261a576011600082815260200190815260200160002060008082016000905560018201600090556002820160006126059190612e5c565b5050808061261290613bef565b9150506125c7565b5060005b600b548110156126715760126000828152602001908152602001600020600080820160009055600182016000905560028201600061265c9190612e5c565b5050808061266990613bef565b91505061261e565b5060005b6009548110156126c8576010600082815260200190815260200160002060008082016000905560018201600090556002820160006126b39190612e5c565b505080806126c090613bef565b915050612675565b506000600581905550600060068190555060006007819055506000600a819055506000600b819055506000600981905550565b600061080073ffffffffffffffffffffffffffffffffffffffff1663b6039895327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60006040518463ffffffff1660e01b815260040161275d9392919061484a565b6020604051808303816000875af115801561277c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a091906148c0565b9050806127e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127d990614939565b60405180910390fd5b600061080173ffffffffffffffffffffffffffffffffffffffff16637a9841ed3260016040518363ffffffff1660e01b8152600401612822929190614959565b6020604051808303816000875af1158015612841573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061286591906148c0565b9050806128a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161289e906149d5565b60405180910390fd5b5050565b60116020528060005260406000206000915090508060000154908060010154908060020180546128da90613b8f565b80601f016020809104026020016040519081016040528092919081815260200182805461290690613b8f565b80156129535780601f1061292857610100808354040283529160200191612953565b820191906000526020600020905b81548152906001019060200180831161293657829003601f168201915b5050505050905083565b80600e600084815260200190815260200160002060010190816129809190613ed8565b505050565b6060600060055467ffffffffffffffff8111156129a5576129a46131a0565b5b6040519080825280602002602001820160405280156129d857816020015b60608152602001906001900390816129c35790505b50905060005b600554811015612ab857600c60008281526020019081526020016000206001018054612a0990613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054612a3590613b8f565b8015612a825780601f10612a5757610100808354040283529160200191612a82565b820191906000526020600020905b815481529060010190602001808311612a6557829003601f168201915b5050505050828281518110612a9a57612a99613bc0565b5b60200260200101819052508080612ab090613bef565b9150506129de565b508091505090565b80600d60008481526020019081526020016000206001019081612ae39190613ed8565b505050565b600060405180606001604052808481526020018381526020016040518060400160405280600581526020017f46616c7365000000000000000000000000000000000000000000000000000000815250815250600c600060055481526020019081526020016000206000820151816000019081612b649190613ed8565b506020820151816001019081612b7a9190613ed8565b506040820151816002019081612b909190613ed8565b5090505060056000815480929190612ba790613bef565b9190505550600554905092915050565b60075481565b600060405180606001604052808481526020018581526020016000815250600e60006007548152602001908152602001600020600082015181600001556020820151816001019081612c0f9190613ed8565b506040820151816002015590505060076000815480929190612c3090613bef565b919050555060005b8251811015612c9557612c6a600754600854858481518110612c5d57612c5c613bc0565b5b6020026020010151612dfc565b60086000815480929190612c7d90613bef565b91905055508080612c8d90613bef565b915050612c38565b5060075490509392505050565b6060600d60008381526020019081526020016000206001018054612cc590613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054612cf190613b8f565b8015612d3e5780601f10612d1357610100808354040283529160200191612d3e565b820191906000526020600020905b815481529060010190602001808311612d2157829003601f168201915b50505050509050919050565b600f602052806000526040600020600091509050806000015490806001015490806002018054612d7990613b8f565b80601f0160208091040260200160405190810160405280929190818152602001828054612da590613b8f565b8015612df25780601f10612dc757610100808354040283529160200191612df2565b820191906000526020600020905b815481529060010190602001808311612dd557829003601f168201915b5050505050905083565b604051806060016040528084815260200183815260200182815250600f600084815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081612e539190613ed8565b50905050505050565b508054612e6890613b8f565b6000825580601f10612e7a5750612e99565b601f016020900490600052602060002090810190612e989190612e9c565b5b50565b5b80821115612eb5576000816000905550600101612e9d565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b612ee081612ecd565b8114612eeb57600080fd5b50565b600081359050612efd81612ed7565b92915050565b60008060408385031215612f1a57612f19612ec3565b5b6000612f2885828601612eee565b9250506020612f3985828601612eee565b9150509250929050565b600060208284031215612f5957612f58612ec3565b5b6000612f6784828501612eee565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612fd6578082015181840152602081019050612fbb565b60008484015250505050565b6000601f19601f8301169050919050565b6000612ffe82612f9c565b6130088185612fa7565b9350613018818560208601612fb8565b61302181612fe2565b840191505092915050565b60006130388383612ff3565b905092915050565b6000602082019050919050565b600061305882612f70565b6130628185612f7b565b93508360208202850161307485612f8c565b8060005b858110156130b05784840389528151613091858261302c565b945061309c83613040565b925060208a01995050600181019050613078565b50829750879550505050505092915050565b600060208201905081810360008301526130dc818461304d565b905092915050565b6130ed81612ecd565b82525050565b600060208201905061310860008301846130e4565b92915050565b600082825260208201905092915050565b600061312a82612f9c565b613134818561310e565b9350613144818560208601612fb8565b61314d81612fe2565b840191505092915050565b600060608201905061316d60008301866130e4565b61317a60208301856130e4565b818103604083015261318c818461311f565b9050949350505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6131d882612fe2565b810181811067ffffffffffffffff821117156131f7576131f66131a0565b5b80604052505050565b600061320a612eb9565b905061321682826131cf565b919050565b600067ffffffffffffffff821115613236576132356131a0565b5b61323f82612fe2565b9050602081019050919050565b82818337600083830152505050565b600061326e6132698461321b565b613200565b90508281526020810184848401111561328a5761328961319b565b5b61329584828561324c565b509392505050565b600082601f8301126132b2576132b1613196565b5b81356132c284826020860161325b565b91505092915050565b6000602082840312156132e1576132e0612ec3565b5b600082013567ffffffffffffffff8111156132ff576132fe612ec8565b5b61330b8482850161329d565b91505092915050565b6000606082019050818103600083015261332e818661311f565b90508181036020830152613342818561311f565b90508181036040830152613356818461311f565b9050949350505050565b6000806040838503121561337757613376612ec3565b5b600061338585828601612eee565b925050602083013567ffffffffffffffff8111156133a6576133a5612ec8565b5b6133b28582860161329d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008160070b9050919050565b6133fe816133e8565b82525050565b61340d81612ecd565b82525050565b60808201600082015161342960008501826133f5565b50602082015161343c60208501826133f5565b50604082015161344f6040850182613404565b5060608201516134626060850182613404565b50505050565b60006134748383613413565b60808301905092915050565b6000602082019050919050565b6000613498826133bc565b6134a281856133c7565b93506134ad836133d8565b8060005b838110156134de5781516134c58882613468565b97506134d083613480565b9250506001810190506134b1565b5085935050505092915050565b60006020820190508181036000830152613505818461348d565b905092915050565b600060608201905061352260008301866130e4565b8181036020830152613534818561311f565b905061354360408301846130e4565b949350505050565b60006020820190508181036000830152613565818461311f565b905092915050565b6000806040838503121561358457613583612ec3565b5b600083013567ffffffffffffffff8111156135a2576135a1612ec8565b5b6135ae8582860161329d565b92505060206135bf85828601612eee565b9150509250929050565b60006040820190506135de60008301856130e4565b81810360208301526135f0818461311f565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006136318383613404565b60208301905092915050565b6000602082019050919050565b6000613655826135f9565b61365f8185613604565b935061366a83613615565b8060005b8381101561369b5781516136828882613625565b975061368d8361363d565b92505060018101905061366e565b5085935050505092915050565b600060208201905081810360008301526136c2818461364a565b905092915050565b6000806000606084860312156136e3576136e2612ec3565b5b60006136f186828701612eee565b935050602061370286828701612eee565b925050604084013567ffffffffffffffff81111561372357613722612ec8565b5b61372f8682870161329d565b9150509250925092565b60008060006060848603121561375257613751612ec3565b5b600061376086828701612eee565b935050602084013567ffffffffffffffff81111561378157613780612ec8565b5b61378d8682870161329d565b925050604084013567ffffffffffffffff8111156137ae576137ad612ec8565b5b6137ba8682870161329d565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060ff82169050919050565b613806816137f0565b82525050565b600060608301600083015184820360008601526138298282612ff3565b915050602083015161383e6020860182613404565b50604083015161385160408601826137fd565b508091505092915050565b6000613868838361380c565b905092915050565b6000602082019050919050565b6000613888826137c4565b61389281856137cf565b9350836020820285016138a4856137e0565b8060005b858110156138e057848403895281516138c1858261385c565b94506138cc83613870565b925060208a019950506001810190506138a8565b50829750879550505050505092915050565b6000602082019050818103600083015261390c818461387d565b905092915050565b6000806040838503121561392b5761392a612ec3565b5b600083013567ffffffffffffffff81111561394957613948612ec8565b5b6139558582860161329d565b925050602083013567ffffffffffffffff81111561397657613975612ec8565b5b6139828582860161329d565b9150509250929050565b600067ffffffffffffffff8211156139a7576139a66131a0565b5b602082029050602081019050919050565b600080fd5b60006139d06139cb8461398c565b613200565b905080838252602082019050602084028301858111156139f3576139f26139b8565b5b835b81811015613a3a57803567ffffffffffffffff811115613a1857613a17613196565b5b808601613a25898261329d565b855260208501945050506020810190506139f5565b5050509392505050565b600082601f830112613a5957613a58613196565b5b8135613a698482602086016139bd565b91505092915050565b600080600060608486031215613a8b57613a8a612ec3565b5b600084013567ffffffffffffffff811115613aa957613aa8612ec8565b5b613ab58682870161329d565b9350506020613ac686828701612eee565b925050604084013567ffffffffffffffff811115613ae757613ae6612ec8565b5b613af386828701613a44565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613b3782612ecd565b9150613b4283612ecd565b9250828201905080821115613b5a57613b59613afd565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613ba757607f821691505b602082108103613bba57613bb9613b60565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613bfa82612ecd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613c2c57613c2b613afd565b5b600182019050919050565b600081905092915050565b50565b6000613c52600083613c37565b9150613c5d82613c42565b600082019050919050565b6000613c7382613c45565b9150819050919050565b60008190508160005260206000209050919050565b60008154613c9f81613b8f565b613ca98186613c37565b94506001821660008114613cc45760018114613cd957613d0c565b60ff1983168652811515820286019350613d0c565b613ce285613c7d565b60005b83811015613d0457815481890152600182019150602081019050613ce5565b838801955050505b50505092915050565b6000613d218284613c92565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613d8e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613d51565b613d988683613d51565b95508019841693508086168417925050509392505050565b6000819050919050565b6000613dd5613dd0613dcb84612ecd565b613db0565b612ecd565b9050919050565b6000819050919050565b613def83613dba565b613e03613dfb82613ddc565b848454613d5e565b825550505050565b600090565b613e18613e0b565b613e23818484613de6565b505050565b5b81811015613e4757613e3c600082613e10565b600181019050613e29565b5050565b601f821115613e8c57613e5d81613d2c565b613e6684613d41565b81016020851015613e75578190505b613e89613e8185613d41565b830182613e28565b50505b505050565b600082821c905092915050565b6000613eaf60001984600802613e91565b1980831691505092915050565b6000613ec88383613e9e565b9150826002028217905092915050565b613ee182612f9c565b67ffffffffffffffff811115613efa57613ef96131a0565b5b613f048254613b8f565b613f0f828285613e4b565b600060209050601f831160018114613f425760008415613f30578287015190505b613f3a8582613ebc565b865550613fa2565b601f198416613f5086613d2c565b60005b82811015613f7857848901518255600182019150602085019450602081019050613f53565b86831015613f955784890151613f91601f891682613e9e565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613fd582613faa565b9050919050565b613fe581613fca565b82525050565b60008154613ff881613b8f565b614002818661310e565b9450600182166000811461401d576001811461403357614066565b60ff198316865281151560200286019350614066565b61403c85613d2c565b60005b8381101561405e5781548189015260018201915060208101905061403f565b808801955050505b50505092915050565b60006040820190506140846000830185613fdc565b81810360208301526140968184613feb565b90509392505050565b600067ffffffffffffffff8211156140ba576140b96131a0565b5b602082029050602081019050919050565b600080fd5b600080fd5b6140de816133e8565b81146140e957600080fd5b50565b6000815190506140fb816140d5565b92915050565b60008151905061411081612ed7565b92915050565b60006080828403121561412c5761412b6140cb565b5b6141366080613200565b90506000614146848285016140ec565b600083015250602061415a848285016140ec565b602083015250604061416e84828501614101565b604083015250606061418284828501614101565b60608301525092915050565b60006141a161419c8461409f565b613200565b905080838252602082019050608084028301858111156141c4576141c36139b8565b5b835b818110156141ed57806141d98882614116565b8452602084019350506080810190506141c6565b5050509392505050565b600082601f83011261420c5761420b613196565b5b815161421c84826020860161418e565b91505092915050565b60006020828403121561423b5761423a612ec3565b5b600082015167ffffffffffffffff81111561425957614258612ec8565b5b614265848285016141f7565b91505092915050565b600061428161427c8461321b565b613200565b90508281526020810184848401111561429d5761429c61319b565b5b6142a8848285612fb8565b509392505050565b600082601f8301126142c5576142c4613196565b5b81516142d584826020860161426e565b91505092915050565b6000604082840312156142f4576142f36140cb565b5b6142fe6040613200565b9050600082015167ffffffffffffffff81111561431e5761431d6140d0565b5b61432a848285016142b0565b600083015250602061433e84828501614101565b60208301525092915050565b6000806040838503121561436157614360612ec3565b5b600061436f85828601614101565b925050602083015167ffffffffffffffff8111156143905761438f612ec8565b5b61439c858286016142de565b9150509250929050565b600067ffffffffffffffff8211156143c1576143c06131a0565b5b602082029050602081019050919050565b60006143e56143e0846143a6565b613200565b90508083825260208201905060208402830185811115614408576144076139b8565b5b835b8181101561444f57805167ffffffffffffffff81111561442d5761442c613196565b5b80860161443a89826142de565b8552602085019450505060208101905061440a565b5050509392505050565b600082601f83011261446e5761446d613196565b5b815161447e8482602086016143d2565b91505092915050565b60006020828403121561449d5761449c612ec3565b5b600082015167ffffffffffffffff8111156144bb576144ba612ec8565b5b6144c784828501614459565b91505092915050565b60006060820190506144e56000830186613fdc565b81810360208301526144f78185613feb565b905061450660408301846130e4565b949350505050565b60006020828403121561452457614523612ec3565b5b6000614532848285016140ec565b91505092915050565b600067ffffffffffffffff821115614556576145556131a0565b5b602082029050602081019050919050565b614570816137f0565b811461457b57600080fd5b50565b60008151905061458d81614567565b92915050565b6000606082840312156145a9576145a86140cb565b5b6145b36060613200565b9050600082015167ffffffffffffffff8111156145d3576145d26140d0565b5b6145df848285016142b0565b60008301525060206145f384828501614101565b60208301525060406146078482850161457e565b60408301525092915050565b60006146266146218461453b565b613200565b90508083825260208201905060208402830185811115614649576146486139b8565b5b835b8181101561469057805167ffffffffffffffff81111561466e5761466d613196565b5b80860161467b8982614593565b8552602085019450505060208101905061464b565b5050509392505050565b600082601f8301126146af576146ae613196565b5b81516146bf848260208601614613565b91505092915050565b6000602082840312156146de576146dd612ec3565b5b600082015167ffffffffffffffff8111156146fc576146fb612ec8565b5b6147088482850161469a565b91505092915050565b600081549050919050565b60008190508160005260206000209050919050565b6000815461473e81613b8f565b6147488186612fa7565b945060018216600081146147635760018114614779576147ac565b60ff1983168652811515602002860193506147ac565b61478285613d2c565b60005b838110156147a457815481890152600182019150602081019050614785565b808801955050505b50505092915050565b60006147c18383614731565b905092915050565b6000600182019050919050565b60006147e182614711565b6147eb8185612f7b565b9350836020820285016147fd8561471c565b8060005b858110156148385784840389528161481985826147b5565b9450614824836147c9565b925060208a01995050600181019050614801565b50829750879550505050505092915050565b600060608201905061485f6000830186613fdc565b61486c60208301856130e4565b818103604083015261487e81846147d6565b9050949350505050565b60008115159050919050565b61489d81614888565b81146148a857600080fd5b50565b6000815190506148ba81614894565b92915050565b6000602082840312156148d6576148d5612ec3565b5b60006148e4848285016148ab565b91505092915050565b7f5374616b696e6720417070726f7665206661696c656400000000000000000000600082015250565b600061492360168361310e565b915061492e826148ed565b602082019050919050565b6000602082019050818103600083015261495281614916565b9050919050565b600060408201905061496e6000830185613fdc565b818103602083015261498081846147d6565b90509392505050565b7f446973747269627574696f6e20417070726f7665206661696c65640000000000600082015250565b60006149bf601b8361310e565b91506149ca82614989565b602082019050919050565b600060208201905081810360008301526149ee816149b2565b905091905056fea2646970667358221220d55721b5d9a50ad0201a19dfe32c7eca381a4ee4d4c390256db97ada705bc5b064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2AE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F2035D4 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0xAA4CDF2A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC04FE978 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD3791B20 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xB96 JUMPI DUP1 PUSH4 0xE3280C96 EQ PUSH2 0xBC1 JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xBFE JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xC3B JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xB05 JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xB30 JUMPI DUP1 PUSH4 0xC4C2E364 EQ PUSH2 0xB59 JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0xA07 JUMPI DUP1 PUSH4 0xAE429E47 EQ PUSH2 0xA44 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0xA6F JUMPI DUP1 PUSH4 0xB2947C71 EQ PUSH2 0xA86 JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0xA9D JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xADC JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0x9077007D GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x8F7 JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x922 JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x94D JUMPI DUP1 PUSH4 0xA2CDB3A9 EQ PUSH2 0x98A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x9B3 JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x9DC JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x7DA JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x817 JUMPI DUP1 PUSH4 0x82FCC732 EQ PUSH2 0x854 JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x8BA JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0x414D9A2B GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x5D907DA1 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0x6AF3304E EQ PUSH2 0x68F JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0x71085CAB EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x734 JUMPI DUP1 PUSH4 0x7E22CD11 EQ PUSH2 0x75F JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0x414D9A2B EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0x42C7652A EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x5BF JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0x53F68802 EQ PUSH2 0x627 JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0x1BA44C4C GT PUSH2 0x26B JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x2D5BF5B0 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x4D9 JUMPI PUSH2 0x2AE JUMP JUMPDEST DUP1 PUSH4 0xCDD53F6 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x109AC970 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x1B52B9DE EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x38B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0xC7A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH2 0xF94 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A0 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x12F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x3360 JUMP JUMPDEST PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56A PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D4 PUSH2 0x16BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x611 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63C PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x679 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x3360 JUMP JUMPDEST PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E1 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x719 SWAP2 SWAP1 PUSH2 0x356D JUMP JUMPDEST PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x749 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x786 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D1 SWAP3 SWAP2 SWAP1 PUSH2 0x35C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x801 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1DA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x839 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x1E83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x36A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x36CA JUMP JUMPDEST PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x888 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B3 SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH2 0x1FE9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8DC SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90C PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x937 PUSH2 0x20E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x944 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x974 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96F SWAP2 SWAP1 PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x221F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0x2290 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x22C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F1 PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x234E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA59 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA84 PUSH2 0x2460 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9B PUSH2 0x26FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB03 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x3360 JUMP JUMPDEST PUSH2 0x295D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1A PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB57 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x3360 JUMP JUMPDEST PUSH2 0x2AC0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB80 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB7B SWAP2 SWAP1 PUSH2 0x3914 JUMP JUMPDEST PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBAB PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE3 SWAP2 SWAP1 PUSH2 0x3A72 JUMP JUMPDEST PUSH2 0x2BBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC25 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC20 SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC32 SWAP2 SWAP1 PUSH2 0x354B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC62 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x2F43 JUMP JUMPDEST PUSH2 0x2D4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC71 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC82 PUSH2 0x26FB JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x3B2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCCF PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD03 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCEE JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xE14 JUMPI DUP5 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xE01 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD56 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD82 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDCF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDA4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDCF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xDFD SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE0C SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD0E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE3E PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE72 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE5D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xF83 JUMPI DUP5 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xF62 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xEC5 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEF1 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF3E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF13 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF3E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF21 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF56 JUMPI PUSH2 0xF55 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xF6D SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xF7B SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE7D JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xFBF SWAP1 PUSH2 0x3C68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x103E SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x106A SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x108C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x109A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1127 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1114 JUMPI DUP1 SWAP2 POP POP PUSH2 0x112D JUMP JUMPDEST DUP1 DUP1 PUSH2 0x111F SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10C9 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1155 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1181 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x11E3 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x120F SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x125C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1231 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x125C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x123F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1271 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x129D SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1314 JUMPI PUSH2 0x1313 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1347 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1332 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1427 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1378 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13A4 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13F1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13D4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1409 JUMPI PUSH2 0x1408 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x141F SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x134D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x148C SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x14A3 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x14E2 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x150E SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x155B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1530 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x155B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x153E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA03FFEE1 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BD SWAP3 SWAP2 SWAP1 PUSH2 0x406F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x4225 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1631 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x165D SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x167F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x168D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E0 JUMPI PUSH2 0x16DF PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1713 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x16FE JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1846 JUMPI DUP6 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x1762 JUMPI POP DUP5 PUSH1 0x10 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1825 JUMPI PUSH1 0x10 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1788 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17B4 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1801 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17D6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1801 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1819 JUMPI PUSH2 0x1818 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x1830 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x183E SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x171E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x241774E6 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1895 SWAP3 SWAP2 SWAP1 PUSH2 0x406F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18DB SWAP2 SWAP1 PUSH2 0x434A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x190E SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x193A SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1987 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x195C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1987 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x196A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0xB SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x19F0 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xB PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A07 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xB SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1A6A SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A81 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1AA1 PUSH2 0x26FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB46A8D61 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE1 SWAP3 SWAP2 SWAP1 PUSH2 0x406F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B29 SWAP2 SWAP1 PUSH2 0x4487 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B3F JUMPI PUSH2 0x1B3E PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B5C SWAP2 SWAP1 PUSH2 0x3B2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3EDAB33C ADDRESS PUSH1 0x4 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BFE SWAP2 SWAP1 PUSH2 0x450E JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C15 JUMPI PUSH2 0x1C14 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x1C2C SWAP2 SWAP1 PUSH2 0x3B2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1C54 SWAP1 PUSH2 0x3C68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C91 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53656E74204D6F6E657920746F2069646561206F776E65720000000000000000 DUP2 MSTORE POP SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1D1D SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D49 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D96 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D6B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D96 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D79 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DC0 JUMPI PUSH2 0x1DBF PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DEE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x1E78 JUMPI DUP5 PUSH1 0x11 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1E65 JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E4A JUMPI PUSH2 0x1E49 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1E61 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1E70 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1DF9 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EA3 JUMPI PUSH2 0x1EA2 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1ED1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1F5B JUMPI DUP5 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1F48 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F2D JUMPI PUSH2 0x1F2C PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1F44 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1F53 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EDC JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1FC1 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD8 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xC PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x200C SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP DUP1 PUSH1 0xC PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2030 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2059 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2085 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2104 JUMPI PUSH2 0x2103 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2137 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2122 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2217 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2168 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2194 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x21F9 JUMPI PUSH2 0x21F8 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x220F SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x213D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2285 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x225C SWAP2 SWAP1 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2272 JUMPI DUP1 SWAP2 POP POP PUSH2 0x228B JUMP JUMPDEST DUP1 DUP1 PUSH2 0x227D SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2227 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x22B6 SWAP2 SWAP1 PUSH2 0x3B2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x53266BBB ADDRESS PUSH1 0x4 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2301 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2320 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2344 SWAP2 SWAP1 PUSH2 0x450E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x23CA JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x238B SWAP2 SWAP1 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x23B7 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x23D0 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x23C2 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2356 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9AD563B4 ADDRESS PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2415 SWAP3 SWAP2 SWAP1 PUSH2 0x406F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x245B SWAP2 SWAP1 PUSH2 0x46C8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x24C6 JUMPI PUSH1 0xC PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2491 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x24A1 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x24B1 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x24BE SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2463 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2515 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2500 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x250D SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x24CA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x256C JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x254F SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2564 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2519 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x25C3 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x25AE SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x25BB SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2570 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x261A JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2605 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2612 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25C7 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2671 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x265C SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2669 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x261E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x26C8 JUMPI PUSH1 0x10 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x26B3 SWAP2 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x26C0 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2675 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6039895 ORIGIN PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x275D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x484A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x277C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27A0 SWAP2 SWAP1 PUSH2 0x48C0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x27E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27D9 SWAP1 PUSH2 0x4939 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x801 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7A9841ED ORIGIN PUSH1 0x1 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2822 SWAP3 SWAP2 SWAP1 PUSH2 0x4959 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2841 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2865 SWAP2 SWAP1 PUSH2 0x48C0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x28A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x289E SWAP1 PUSH2 0x49D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x28DA SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2906 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2953 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2928 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2953 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2936 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2980 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A5 JUMPI PUSH2 0x29A4 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29D8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x29C3 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x2AB8 JUMPI PUSH1 0xC PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2A09 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A35 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A82 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A57 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A82 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A65 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A9A JUMPI PUSH2 0x2A99 PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2AB0 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x29DE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2AE3 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2B64 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2B7A SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2B90 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2BA7 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2C0F SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2C30 SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2C95 JUMPI PUSH2 0x2C6A PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2C5D JUMPI PUSH2 0x2C5C PUSH2 0x3BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2DFC JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2C7D SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x2C8D SWAP1 PUSH2 0x3BEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2C38 JUMP JUMPDEST POP PUSH1 0x7 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2CC5 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CF1 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D3E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D13 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D3E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D21 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2D79 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DA5 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DF2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DC7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DF2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DD5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2E53 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2E68 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2E7A JUMPI POP PUSH2 0x2E99 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2E98 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2EB5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2E9D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE0 DUP2 PUSH2 0x2ECD JUMP JUMPDEST DUP2 EQ PUSH2 0x2EEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EFD DUP2 PUSH2 0x2ED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F1A JUMPI PUSH2 0x2F19 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F28 DUP6 DUP3 DUP7 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F39 DUP6 DUP3 DUP7 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F59 JUMPI PUSH2 0x2F58 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F67 DUP5 DUP3 DUP6 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FD6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FBB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FFE DUP3 PUSH2 0x2F9C JUMP JUMPDEST PUSH2 0x3008 DUP2 DUP6 PUSH2 0x2FA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x3018 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x3021 DUP2 PUSH2 0x2FE2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3038 DUP4 DUP4 PUSH2 0x2FF3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3058 DUP3 PUSH2 0x2F70 JUMP JUMPDEST PUSH2 0x3062 DUP2 DUP6 PUSH2 0x2F7B JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3074 DUP6 PUSH2 0x2F8C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x30B0 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3091 DUP6 DUP3 PUSH2 0x302C JUMP JUMPDEST SWAP5 POP PUSH2 0x309C DUP4 PUSH2 0x3040 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3078 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30DC DUP2 DUP5 PUSH2 0x304D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30ED DUP2 PUSH2 0x2ECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3108 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312A DUP3 PUSH2 0x2F9C JUMP JUMPDEST PUSH2 0x3134 DUP2 DUP6 PUSH2 0x310E JUMP JUMPDEST SWAP4 POP PUSH2 0x3144 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x314D DUP2 PUSH2 0x2FE2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x316D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x30E4 JUMP JUMPDEST PUSH2 0x317A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x30E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x318C DUP2 DUP5 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x31D8 DUP3 PUSH2 0x2FE2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x31F7 JUMPI PUSH2 0x31F6 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x320A PUSH2 0x2EB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3216 DUP3 DUP3 PUSH2 0x31CF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3236 JUMPI PUSH2 0x3235 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH2 0x323F DUP3 PUSH2 0x2FE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x326E PUSH2 0x3269 DUP5 PUSH2 0x321B JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x328A JUMPI PUSH2 0x3289 PUSH2 0x319B JUMP JUMPDEST JUMPDEST PUSH2 0x3295 DUP5 DUP3 DUP6 PUSH2 0x324C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32B2 JUMPI PUSH2 0x32B1 PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32C2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x325B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32E1 JUMPI PUSH2 0x32E0 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32FF JUMPI PUSH2 0x32FE PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x330B DUP5 DUP3 DUP6 ADD PUSH2 0x329D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x332E DUP2 DUP7 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3342 DUP2 DUP6 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3356 DUP2 DUP5 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3377 JUMPI PUSH2 0x3376 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3385 DUP6 DUP3 DUP7 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33A6 JUMPI PUSH2 0x33A5 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x33B2 DUP6 DUP3 DUP7 ADD PUSH2 0x329D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33FE DUP2 PUSH2 0x33E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x340D DUP2 PUSH2 0x2ECD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3429 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x33F5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x343C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x33F5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x344F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3404 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3462 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3404 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3474 DUP4 DUP4 PUSH2 0x3413 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3498 DUP3 PUSH2 0x33BC JUMP JUMPDEST PUSH2 0x34A2 DUP2 DUP6 PUSH2 0x33C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x34AD DUP4 PUSH2 0x33D8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34DE JUMPI DUP2 MLOAD PUSH2 0x34C5 DUP9 DUP3 PUSH2 0x3468 JUMP JUMPDEST SWAP8 POP PUSH2 0x34D0 DUP4 PUSH2 0x3480 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x34B1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3505 DUP2 DUP5 PUSH2 0x348D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3522 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x30E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3534 DUP2 DUP6 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP PUSH2 0x3543 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x30E4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3565 DUP2 DUP5 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3584 JUMPI PUSH2 0x3583 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35A2 JUMPI PUSH2 0x35A1 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x35AE DUP6 DUP3 DUP7 ADD PUSH2 0x329D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35BF DUP6 DUP3 DUP7 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35DE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x35F0 DUP2 DUP5 PUSH2 0x311F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3631 DUP4 DUP4 PUSH2 0x3404 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3655 DUP3 PUSH2 0x35F9 JUMP JUMPDEST PUSH2 0x365F DUP2 DUP6 PUSH2 0x3604 JUMP JUMPDEST SWAP4 POP PUSH2 0x366A DUP4 PUSH2 0x3615 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x369B JUMPI DUP2 MLOAD PUSH2 0x3682 DUP9 DUP3 PUSH2 0x3625 JUMP JUMPDEST SWAP8 POP PUSH2 0x368D DUP4 PUSH2 0x363D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x366E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36C2 DUP2 DUP5 PUSH2 0x364A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x36E3 JUMPI PUSH2 0x36E2 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36F1 DUP7 DUP3 DUP8 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3702 DUP7 DUP3 DUP8 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3723 JUMPI PUSH2 0x3722 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x372F DUP7 DUP3 DUP8 ADD PUSH2 0x329D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3752 JUMPI PUSH2 0x3751 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3760 DUP7 DUP3 DUP8 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3781 JUMPI PUSH2 0x3780 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x378D DUP7 DUP3 DUP8 ADD PUSH2 0x329D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37AE JUMPI PUSH2 0x37AD PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x37BA DUP7 DUP3 DUP8 ADD PUSH2 0x329D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3806 DUP2 PUSH2 0x37F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x3829 DUP3 DUP3 PUSH2 0x2FF3 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x383E PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x3404 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x3851 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x37FD JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3868 DUP4 DUP4 PUSH2 0x380C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3888 DUP3 PUSH2 0x37C4 JUMP JUMPDEST PUSH2 0x3892 DUP2 DUP6 PUSH2 0x37CF JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x38A4 DUP6 PUSH2 0x37E0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x38E0 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x38C1 DUP6 DUP3 PUSH2 0x385C JUMP JUMPDEST SWAP5 POP PUSH2 0x38CC DUP4 PUSH2 0x3870 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x38A8 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x390C DUP2 DUP5 PUSH2 0x387D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x392B JUMPI PUSH2 0x392A PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3949 JUMPI PUSH2 0x3948 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x3955 DUP6 DUP3 DUP7 ADD PUSH2 0x329D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3976 JUMPI PUSH2 0x3975 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x3982 DUP6 DUP3 DUP7 ADD PUSH2 0x329D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x39A7 JUMPI PUSH2 0x39A6 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39D0 PUSH2 0x39CB DUP5 PUSH2 0x398C JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x39F3 JUMPI PUSH2 0x39F2 PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A3A JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A18 JUMPI PUSH2 0x3A17 PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3A25 DUP10 DUP3 PUSH2 0x329D JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39F5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A59 JUMPI PUSH2 0x3A58 PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A69 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x39BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3A8B JUMPI PUSH2 0x3A8A PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AA9 JUMPI PUSH2 0x3AA8 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x3AB5 DUP7 DUP3 DUP8 ADD PUSH2 0x329D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3AC6 DUP7 DUP3 DUP8 ADD PUSH2 0x2EEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AE7 JUMPI PUSH2 0x3AE6 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x3AF3 DUP7 DUP3 DUP8 ADD PUSH2 0x3A44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B37 DUP3 PUSH2 0x2ECD JUMP JUMPDEST SWAP2 POP PUSH2 0x3B42 DUP4 PUSH2 0x2ECD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3B5A JUMPI PUSH2 0x3B59 PUSH2 0x3AFD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3BA7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3BBA JUMPI PUSH2 0x3BB9 PUSH2 0x3B60 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BFA DUP3 PUSH2 0x2ECD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3C2C JUMPI PUSH2 0x3C2B PUSH2 0x3AFD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C52 PUSH1 0x0 DUP4 PUSH2 0x3C37 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C5D DUP3 PUSH2 0x3C42 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C73 DUP3 PUSH2 0x3C45 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3C9F DUP2 PUSH2 0x3B8F JUMP JUMPDEST PUSH2 0x3CA9 DUP2 DUP7 PUSH2 0x3C37 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3CC4 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3CD9 JUMPI PUSH2 0x3D0C JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x3D0C JUMP JUMPDEST PUSH2 0x3CE2 DUP6 PUSH2 0x3C7D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D04 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3CE5 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D21 DUP3 DUP5 PUSH2 0x3C92 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3D8E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3D51 JUMP JUMPDEST PUSH2 0x3D98 DUP7 DUP4 PUSH2 0x3D51 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DD5 PUSH2 0x3DD0 PUSH2 0x3DCB DUP5 PUSH2 0x2ECD JUMP JUMPDEST PUSH2 0x3DB0 JUMP JUMPDEST PUSH2 0x2ECD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DEF DUP4 PUSH2 0x3DBA JUMP JUMPDEST PUSH2 0x3E03 PUSH2 0x3DFB DUP3 PUSH2 0x3DDC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3D5E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3E18 PUSH2 0x3E0B JUMP JUMPDEST PUSH2 0x3E23 DUP2 DUP5 DUP5 PUSH2 0x3DE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E47 JUMPI PUSH2 0x3E3C PUSH1 0x0 DUP3 PUSH2 0x3E10 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E8C JUMPI PUSH2 0x3E5D DUP2 PUSH2 0x3D2C JUMP JUMPDEST PUSH2 0x3E66 DUP5 PUSH2 0x3D41 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E75 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E89 PUSH2 0x3E81 DUP6 PUSH2 0x3D41 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3E28 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EAF PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E91 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC8 DUP4 DUP4 PUSH2 0x3E9E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EE1 DUP3 PUSH2 0x2F9C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EFA JUMPI PUSH2 0x3EF9 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH2 0x3F04 DUP3 SLOAD PUSH2 0x3B8F JUMP JUMPDEST PUSH2 0x3F0F DUP3 DUP3 DUP6 PUSH2 0x3E4B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F42 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3F30 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3F3A DUP6 DUP3 PUSH2 0x3EBC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3FA2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3F50 DUP7 PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F78 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F53 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3F95 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3F91 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3E9E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD5 DUP3 PUSH2 0x3FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FE5 DUP2 PUSH2 0x3FCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3FF8 DUP2 PUSH2 0x3B8F JUMP JUMPDEST PUSH2 0x4002 DUP2 DUP7 PUSH2 0x310E JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x401D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4033 JUMPI PUSH2 0x4066 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x4066 JUMP JUMPDEST PUSH2 0x403C DUP6 PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x405E JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x403F JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4084 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FDC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4096 DUP2 DUP5 PUSH2 0x3FEB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x40BA JUMPI PUSH2 0x40B9 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40DE DUP2 PUSH2 0x33E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x40E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x40FB DUP2 PUSH2 0x40D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4110 DUP2 PUSH2 0x2ED7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x412C JUMPI PUSH2 0x412B PUSH2 0x40CB JUMP JUMPDEST JUMPDEST PUSH2 0x4136 PUSH1 0x80 PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4146 DUP5 DUP3 DUP6 ADD PUSH2 0x40EC JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x415A DUP5 DUP3 DUP6 ADD PUSH2 0x40EC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x416E DUP5 DUP3 DUP6 ADD PUSH2 0x4101 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x4182 DUP5 DUP3 DUP6 ADD PUSH2 0x4101 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A1 PUSH2 0x419C DUP5 PUSH2 0x409F JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x80 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x41C4 JUMPI PUSH2 0x41C3 PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x41ED JUMPI DUP1 PUSH2 0x41D9 DUP9 DUP3 PUSH2 0x4116 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x80 DUP2 ADD SWAP1 POP PUSH2 0x41C6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x420C JUMPI PUSH2 0x420B PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x421C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x418E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x423B JUMPI PUSH2 0x423A PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4259 JUMPI PUSH2 0x4258 PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x4265 DUP5 DUP3 DUP6 ADD PUSH2 0x41F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4281 PUSH2 0x427C DUP5 PUSH2 0x321B JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x429D JUMPI PUSH2 0x429C PUSH2 0x319B JUMP JUMPDEST JUMPDEST PUSH2 0x42A8 DUP5 DUP3 DUP6 PUSH2 0x2FB8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x42C5 JUMPI PUSH2 0x42C4 PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x42D5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x426E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42F4 JUMPI PUSH2 0x42F3 PUSH2 0x40CB JUMP JUMPDEST JUMPDEST PUSH2 0x42FE PUSH1 0x40 PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x431E JUMPI PUSH2 0x431D PUSH2 0x40D0 JUMP JUMPDEST JUMPDEST PUSH2 0x432A DUP5 DUP3 DUP6 ADD PUSH2 0x42B0 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x433E DUP5 DUP3 DUP6 ADD PUSH2 0x4101 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4361 JUMPI PUSH2 0x4360 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x436F DUP6 DUP3 DUP7 ADD PUSH2 0x4101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4390 JUMPI PUSH2 0x438F PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x439C DUP6 DUP3 DUP7 ADD PUSH2 0x42DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x43C1 JUMPI PUSH2 0x43C0 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43E5 PUSH2 0x43E0 DUP5 PUSH2 0x43A6 JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4408 JUMPI PUSH2 0x4407 PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x444F JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x442D JUMPI PUSH2 0x442C PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x443A DUP10 DUP3 PUSH2 0x42DE JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x440A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x446E JUMPI PUSH2 0x446D PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x447E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x43D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x449D JUMPI PUSH2 0x449C PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44BB JUMPI PUSH2 0x44BA PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x44C7 DUP5 DUP3 DUP6 ADD PUSH2 0x4459 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x44E5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FDC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x44F7 DUP2 DUP6 PUSH2 0x3FEB JUMP JUMPDEST SWAP1 POP PUSH2 0x4506 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x30E4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4524 JUMPI PUSH2 0x4523 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4532 DUP5 DUP3 DUP6 ADD PUSH2 0x40EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4556 JUMPI PUSH2 0x4555 PUSH2 0x31A0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4570 DUP2 PUSH2 0x37F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x457B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x458D DUP2 PUSH2 0x4567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45A9 JUMPI PUSH2 0x45A8 PUSH2 0x40CB JUMP JUMPDEST JUMPDEST PUSH2 0x45B3 PUSH1 0x60 PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45D3 JUMPI PUSH2 0x45D2 PUSH2 0x40D0 JUMP JUMPDEST JUMPDEST PUSH2 0x45DF DUP5 DUP3 DUP6 ADD PUSH2 0x42B0 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x45F3 DUP5 DUP3 DUP6 ADD PUSH2 0x4101 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x4607 DUP5 DUP3 DUP6 ADD PUSH2 0x457E JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4626 PUSH2 0x4621 DUP5 PUSH2 0x453B JUMP JUMPDEST PUSH2 0x3200 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4649 JUMPI PUSH2 0x4648 PUSH2 0x39B8 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4690 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x466E JUMPI PUSH2 0x466D PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x467B DUP10 DUP3 PUSH2 0x4593 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x464B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46AF JUMPI PUSH2 0x46AE PUSH2 0x3196 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x46BF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4613 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46DE JUMPI PUSH2 0x46DD PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46FC JUMPI PUSH2 0x46FB PUSH2 0x2EC8 JUMP JUMPDEST JUMPDEST PUSH2 0x4708 DUP5 DUP3 DUP6 ADD PUSH2 0x469A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x473E DUP2 PUSH2 0x3B8F JUMP JUMPDEST PUSH2 0x4748 DUP2 DUP7 PUSH2 0x2FA7 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4763 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4779 JUMPI PUSH2 0x47AC JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x47AC JUMP JUMPDEST PUSH2 0x4782 DUP6 PUSH2 0x3D2C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x47A4 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4785 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C1 DUP4 DUP4 PUSH2 0x4731 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47E1 DUP3 PUSH2 0x4711 JUMP JUMPDEST PUSH2 0x47EB DUP2 DUP6 PUSH2 0x2F7B JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x47FD DUP6 PUSH2 0x471C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4838 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 PUSH2 0x4819 DUP6 DUP3 PUSH2 0x47B5 JUMP JUMPDEST SWAP5 POP PUSH2 0x4824 DUP4 PUSH2 0x47C9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4801 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x485F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FDC JUMP JUMPDEST PUSH2 0x486C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x30E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x487E DUP2 DUP5 PUSH2 0x47D6 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x489D DUP2 PUSH2 0x4888 JUMP JUMPDEST DUP2 EQ PUSH2 0x48A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x48BA DUP2 PUSH2 0x4894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48D6 JUMPI PUSH2 0x48D5 PUSH2 0x2EC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48E4 DUP5 DUP3 DUP6 ADD PUSH2 0x48AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E6720417070726F7665206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4923 PUSH1 0x16 DUP4 PUSH2 0x310E JUMP JUMPDEST SWAP2 POP PUSH2 0x492E DUP3 PUSH2 0x48ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4952 DUP2 PUSH2 0x4916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x496E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3FDC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4980 DUP2 DUP5 PUSH2 0x47D6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446973747269627574696F6E20417070726F7665206661696C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49BF PUSH1 0x1B DUP4 PUSH2 0x310E JUMP JUMPDEST SWAP2 POP PUSH2 0x49CA DUP3 PUSH2 0x4989 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49EE DUP2 PUSH2 0x49B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 JUMPI 0x21 0xB5 0xD9 0xA5 EXP 0xD0 KECCAK256 BYTE NOT 0xDF 0xE3 0x2C PUSH31 0xCA381A4EE4D4C390256DB97ADA705BC5B064736F6C63430008110033000000 ","sourceMap":"208:14643:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11785:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4655:496;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7360:485;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1652:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12820:169;;;;;;;;;;;;;:::i;:::-;;1715:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2420:71;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5159:378;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1859:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4339:308;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9932:359;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2699:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1358:42;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13489:183;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2133:55;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1756:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9283:620;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13281:200;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3716:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10841:346;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12995:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3890:281;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1622:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12072:742;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2003:53;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;10304:531;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11195:540;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8849:426;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3125:273;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8663:165;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1793:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7040:312;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7853:386;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6877:155;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11939:125;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1827:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8247:408;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13108:165;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13682:728;;;;;;;;;;;;;:::i;:::-;;14491:357;;;;;;;;;;;;;:::i;:::-;;2580:54;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6709:160;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3406:302;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4179:152;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2823:294;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1683:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5725:615;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5545:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2267:74;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;11785:146;11862:22;:20;:22::i;:::-;11916:7;11895;:17;11903:8;11895:17;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;11785:146;;:::o;4655:496::-;4742:15;4809:26;4851:9;;4838:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4809:52;;4872:17;4905:9;4917:1;4905:13;;4900:214;4924:9;;4920:1;:13;4900:214;;;4983:7;4959:10;:13;4970:1;4959:13;;;;;;;;;;;:20;;;:31;4955:148;;5035:10;:13;5046:1;5035:13;;;;;;;;;;;:22;;5011:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;5022:9;5011:21;;;;;;;;:::i;:::-;;;;;;;:46;;;;5076:11;;;;;:::i;:::-;;;;4955:148;4935:3;;;;;:::i;:::-;;;;4900:214;;;;5133:10;5126:17;;;;4655:496;;;:::o;7360:485::-;7449:15;7517:26;7559:10;;7546:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7517:53;;7581:17;7614:9;7626:1;7614:13;;7609:199;7633:10;;7629:1;:14;7609:199;;;7695:8;7669:11;:14;7681:1;7669:14;;;;;;;;;;;:22;;;:34;7665:105;;7746:11;:14;7758:1;7746:14;;;;;;;;;;;:24;;7722:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;7733:9;7722:21;;;;;;;;:::i;:::-;;;;;;;:48;;;;7665:105;7785:11;;;;;:::i;:::-;;;;7645:3;;;;;:::i;:::-;;;;7609:199;;;;7827:10;7820:17;;;;7360:485;;;:::o;1652:24::-;;;;:::o;12820:169::-;12867:15;12885:21;12867:39;;12918:9;12940:10;12932:24;;12964:7;12932:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12917:59;;;12856:133;;12820:169::o;1715:34::-;;;;:::o;2420:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5159:378::-;5254:7;5313:9;5325:1;5313:13;;5308:201;5332:9;;5328:1;:13;5308:201;;;5462:9;5446:27;;;;;;5401:10;:13;5412:1;5401:13;;;;;;;;;;;:22;;5385:40;;;;;;:::i;:::-;;;;;;;;:88;5363:134;;5496:1;5489:8;;;;;5363:134;5343:3;;;;;:::i;:::-;;;;5308:201;;;;5528:1;5521:8;;5159:378;;;;:::o;1859:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4339:308::-;4385:15;4442:26;4484:9;;4471:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4442:52;;4510:9;4505:105;4529:9;;4525:1;:13;4505:105;;;4576:10;:13;4587:1;4576:13;;;;;;;;;;;:22;;4560:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;4571:1;4560:13;;;;;;;;:::i;:::-;;;;;;;:38;;;;4540:3;;;;;:::i;:::-;;;;4505:105;;;;4629:10;4622:17;;;4339:308;:::o;9932:359::-;10033:7;10127:99;;;;;;;;10156:12;;10127:99;;;;10183:9;10127:99;;;;10207:8;10127:99;;;10098:12;:26;10111:12;;10098:26;;;;;;;;;;;:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;10237:12;;:14;;;;;;;;;:::i;:::-;;;;;;10271:12;;10264:19;;9932:359;;;;:::o;2699:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1358:42::-;;;;;;;;;;;;;;;;;:::o;13489:183::-;13544:33;237:42:9;13597:36:3;;;13642:4;13649:14;13597:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13590:74;;13489:183;:::o;2133:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1756:30::-;;;;:::o;9283:620::-;9401:15;9471:26;9513:15;;9500:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9471:58;;9540:17;9573:9;9585:1;9573:13;;9568:300;9592:15;;9588:1;:19;9568:300;;;9686:8;9651:20;:23;9672:1;9651:23;;;;;;;;;;;:31;;;:43;:109;;;;;9751:9;9715:20;:23;9736:1;9715:23;;;;;;;;;;;:32;;;:45;9651:109;9629:201;;;9800:20;:23;9821:1;9800:23;;;;;;;;;;;:30;;9776:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;9787:9;9776:21;;;;;;;;:::i;:::-;;;;;;;:54;;;;9629:201;9845:11;;;;;:::i;:::-;;;;9609:3;;;;;:::i;:::-;;;;9568:300;;;;9885:10;9878:17;;;;9283:620;;;;:::o;13281:200::-;13327:7;13348:13;13364:16;237:42:9;13386:27:3;;;13422:4;13429:14;13386:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13347:97;;;;13462:4;:11;;;13455:18;;;;13281:200;:::o;3716:153::-;3771:13;3835:9;:18;3845:7;3835:18;;;;;;;;;;;:26;;3828:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3716:153;;;:::o;10841:346::-;10944:7;11031:95;;;;;;;;11058:10;;11031:95;;;;11083:11;11031:95;;;;11109:6;11031:95;;;11005:11;:23;11017:10;;11005:23;;;;;;;;;;;:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;11137:10;;:12;;;;;;;;;:::i;:::-;;;;;;11169:10;;11162:17;;10841:346;;;;:::o;12995:101::-;13046:4;13067:21;13060:28;;12995:101;:::o;3890:281::-;3994:7;4077:35;;;;;;;;4093:7;4077:35;;;;4102:9;4077:35;;;4053:10;:21;4064:9;;4053:21;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4123:9;;:11;;;;;;;;;:::i;:::-;;;;;;4154:9;;4147:16;;3890:281;;;;:::o;1622:23::-;;;;:::o;12072:742::-;12134:13;12166:22;:20;:22::i;:::-;12244:24;252:42:7;12271:46:3;;;12326:4;12333:14;12271:77;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12244:104;;12382:10;12393:1;12382:13;;;;;;;;:::i;:::-;;;;;;;;:20;;;12359:18;;:43;;;;;;;:::i;:::-;;;;;;;;12466:15;12484:7;:17;12492:8;12484:17;;;;;;;;;;;;12466:35;;237:42:9;12512:27:3;;;12548:4;12555:14;12571:7;12512:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12590:23;12626:10;12637:1;12626:13;;;;;;;;:::i;:::-;;;;;;;;:20;;;12616:7;:30;;;;:::i;:::-;12590:56;;12658:9;12680:10;12672:24;;12704:15;12672:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12657:67;;;12760:1;12740:7;:17;12748:8;12740:17;;;;;;;;;;;:21;;;;12772:34;;;;;;;;;;;;;;;;;;;;;;;12072:742;;;:::o;2003:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10304:531::-;10378:16;10455:36;10508:12;;10494:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10455:66;;10532:15;10563:9;10575:1;10563:13;;10558:231;10582:12;;10578:1;:16;10558:231;;;10648:8;10620:12;:15;10633:1;10620:15;;;;;;;;;;;:24;;;:36;10616:162;;10708:12;:15;10721:1;10708:15;;;;;;;;;;;:26;;;10677:19;10697:7;10677:28;;;;;;;;:::i;:::-;;;;;;;:57;;;;;10753:9;;;;;:::i;:::-;;;;10616:162;10596:3;;;;;:::i;:::-;;;;10558:231;;;;10808:19;10801:26;;;;10304:531;;;:::o;11195:540::-;11273:16;11350:37;11404:10;;11390:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11350:65;;11426:17;11459:9;11471:1;11459:13;;11454:234;11478:10;;11474:1;:14;11454:234;;;11543:10;11514:11;:14;11526:1;11514:14;;;;;;;;;;;:25;;;:39;11510:167;;11608:11;:14;11620:1;11608:14;;;;;;;;;;;:23;;;11574:20;11595:9;11574:31;;;;;;;;:::i;:::-;;;;;;;:57;;;;;11650:11;;;;;:::i;:::-;;;;11510:167;11490:3;;;;;:::i;:::-;;;;11454:234;;;;11707:20;11700:27;;;;11195:540;;;:::o;8849:426::-;8991:7;9101:103;;;;;;;;9139:8;9101:103;;;;9162:9;9101:103;;;;9186:7;9101:103;;;9061:20;:37;9082:15;;9061:37;;;;;;;;;;;:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;9215:15;;:17;;;;;;;;;:::i;:::-;;;;;;9252:15;;9245:22;;8849:426;;;;;:::o;3125:273::-;3331:11;3299:9;:18;3309:7;3299:18;;;;;;;;;;;:29;;:43;;;;;;:::i;:::-;;3382:8;3353:9;:18;3363:7;3353:18;;;;;;;;;;;:26;;:37;;;;;;:::i;:::-;;3125:273;;;:::o;8663:165::-;8722:13;8788:11;:22;8800:9;8788:22;;;;;;;;;;;:32;;8781:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8663:165;;;:::o;1793:27::-;;;;:::o;7040:312::-;7086:15;7143:26;7185:10;;7172:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7143:53;;7212:9;7207:108;7231:10;;7227:1;:14;7207:108;;;7279:11;:14;7291:1;7279:14;;;;;;;;;;;:24;;7263:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;7274:1;7263:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;7243:3;;;;;:::i;:::-;;;;7207:108;;;;7334:10;7327:17;;;7040:312;:::o;7853:386::-;7951:7;8011:9;8023:1;8011:13;;8006:205;8030:10;;8026:1;:14;8006:205;;;8163:10;8147:28;;;;;;8100:11;:14;8112:1;8100:14;;;;;;;;;;;:24;;8084:42;;;;;;:::i;:::-;;;;;;;;:91;8062:137;;8198:1;8191:8;;;;;8062:137;8042:3;;;;;:::i;:::-;;;;8006:205;;;;8230:1;8223:8;;7853:386;;;;:::o;6877:155::-;7015:9;6980:11;:22;6992:9;6980:22;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;6877:155;;:::o;11939:125::-;237:42:9;11989:25:3;;;12023:4;12030:14;12046:7;11989:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11939:125;:::o;1827:25::-;;;;:::o;8247:408::-;8346:7;8406:9;8418:1;8406:13;;8401:226;8425:10;;8421:1;:14;8401:226;;;8558:10;8542:28;;;;;;8495:11;:14;8507:1;8495:14;;;;;;;;;;;:24;;8479:42;;;;;;:::i;:::-;;;;;;;;:91;8457:158;;8593:11;:14;8605:1;8593:14;;;;;;;;;;;:22;;;8586:29;;;;;8457:158;8437:3;;;;;:::i;:::-;;;;8401:226;;;;8646:1;8639:8;;8247:408;;;;:::o;13108:165::-;13159:16;252:42:7;13195:39:3;;;13243:4;13250:14;13195:70;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13188:77;;13108:165;:::o;13682:728::-;13726:9;13721:58;13745:8;;13741:1;:12;13721:58;;;13767:9;:12;13777:1;13767:12;;;;;;;;;;;;13760:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;13755:3;;;;;:::i;:::-;;;;13721:58;;;;13795:9;13790:60;13814:9;;13810:1;:13;13790:60;;;13837:10;:13;13848:1;13837:13;;;;;;;;;;;;13830:20;;;;;;;;;;;;;;:::i;:::-;;;13825:3;;;;;:::i;:::-;;;;13790:60;;;;13866:9;13861:62;13885:10;;13881:1;:14;13861:62;;;13909:11;:14;13921:1;13909:14;;;;;;;;;;;;13902:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;13897:3;;;;;:::i;:::-;;;;13861:62;;;;13939:9;13934:71;13958:9;;13954:1;:13;13934:71;;;13981:21;:24;14003:1;13981:24;;;;;;;;;;;;13974:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;13969:3;;;;;:::i;:::-;;;;13934:71;;;;14021:9;14016:65;14040:12;;14036:1;:16;14016:65;;;14066:12;:15;14079:1;14066:15;;;;;;;;;;;;14059:22;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14054:3;;;;;:::i;:::-;;;;14016:65;;;;14097:9;14092:62;14116:10;;14112:1;:14;14092:62;;;14140:11;:14;14152:1;14140:14;;;;;;;;;;;;14133:21;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14128:3;;;;;:::i;:::-;;;;14092:62;;;;14170:9;14165:75;14189:15;;14185:1;:19;14165:75;;;14217:20;:23;14238:1;14217:23;;;;;;;;;;;;14210:30;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14206:3;;;;;:::i;:::-;;;;14165:75;;;;14262:1;14251:8;:12;;;;14286:1;14274:9;:13;;;;14311:1;14298:10;:14;;;;14338:1;14323:12;:16;;;;14363:1;14350:10;:14;;;;14401:1;14383:15;:19;;;;13682:728::o;14491:357::-;14541:15;237:42:9;14559:24:3;;;14584:9;14597:17;14616:14;14559:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14541:90;;14650:10;14642:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;14698:16;252:42:7;14717:29:3;;;14747:9;14758:19;14717:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14698:80;;14797:11;14789:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;14530:318;;14491:357::o;2580:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6709:160::-;6851:10;6816:11;:22;6828:9;6816:22;;;;;;;;;;;:32;;:45;;;;;;:::i;:::-;;6709:160;;:::o;3406:302::-;3451:15;3507:26;3549:8;;3536:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3507:51;;3574:9;3569:102;3593:8;;3589:1;:12;3569:102;;;3639:9;:12;3649:1;3639:12;;;;;;;;;;;:20;;3623:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;3634:1;3623:13;;;;;;;;:::i;:::-;;;;;;;:36;;;;3603:3;;;;;:::i;:::-;;;;3569:102;;;;3690:10;3683:17;;;3406:302;:::o;4179:152::-;4314:9;4282:10;:20;4293:8;4282:20;;;;;;;;;;;:29;;:41;;;;;;:::i;:::-;;4179:152;;:::o;2823:294::-;2935:7;3014:46;;;;;;;;3029:11;3014:46;;;;3042:8;3014:46;;;;;;;;;;;;;;;;;;;;;;;;2992:9;:19;3002:8;;2992:19;;;;;;;;;;;:68;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;3071:8;;:10;;;;;;;;;:::i;:::-;;;;;;3101:8;;3094:15;;2823:294;;;;:::o;1683:25::-;;;;:::o;5725:615::-;5875:7;5962:41;;;;;;;;5979:8;5962:41;;;;5989:10;5962:41;;;;6001:1;5962:41;;;5936:11;:23;5948:10;;5936:23;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6014:10;;:12;;;;;;;;;:::i;:::-;;;;;;6044:9;6039:264;6063:16;:23;6059:1;:27;6039:264;;;6108:147;6154:10;;6183:19;;6221:16;6238:1;6221:19;;;;;;;;:::i;:::-;;;;;;;;6108:27;:147::i;:::-;6270:19;;:21;;;;;;;;;:::i;:::-;;;;;;6088:3;;;;;:::i;:::-;;;;6039:264;;;;6322:10;;6315:17;;5725:615;;;;;:::o;5545:159::-;5602:13;5667:10;:20;5678:8;5667:20;;;;;;;;;;;:29;;5660:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5545:159;;;:::o;2267:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6348:353::-;6560:123;;;;;;;;6600:9;6560:123;;;;6624:18;6560:123;;;;6657:15;6560:123;;;6516:21;:41;6538:18;6516:41;;;;;;;;;;;:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6348:353;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:329::-;1229:6;1278:2;1266:9;1257:7;1253:23;1249:32;1246:119;;;1284:79;;:::i;:::-;1246:119;1404:1;1429:53;1474:7;1465:6;1454:9;1450:22;1429:53;:::i;:::-;1419:63;;1375:117;1170:329;;;;:::o;1505:124::-;1582:6;1616:5;1610:12;1600:22;;1505:124;;;:::o;1635:194::-;1744:11;1778:6;1773:3;1766:19;1818:4;1813:3;1809:14;1794:29;;1635:194;;;;:::o;1835:142::-;1912:4;1935:3;1927:11;;1965:4;1960:3;1956:14;1948:22;;1835:142;;;:::o;1983:99::-;2035:6;2069:5;2063:12;2053:22;;1983:99;;;:::o;2088:159::-;2162:11;2196:6;2191:3;2184:19;2236:4;2231:3;2227:14;2212:29;;2088:159;;;;:::o;2253:246::-;2334:1;2344:113;2358:6;2355:1;2352:13;2344:113;;;2443:1;2438:3;2434:11;2428:18;2424:1;2419:3;2415:11;2408:39;2380:2;2377:1;2373:10;2368:15;;2344:113;;;2491:1;2482:6;2477:3;2473:16;2466:27;2315:184;2253:246;;;:::o;2505:102::-;2546:6;2597:2;2593:7;2588:2;2581:5;2577:14;2573:28;2563:38;;2505:102;;;:::o;2613:357::-;2691:3;2719:39;2752:5;2719:39;:::i;:::-;2774:61;2828:6;2823:3;2774:61;:::i;:::-;2767:68;;2844:65;2902:6;2897:3;2890:4;2883:5;2879:16;2844:65;:::i;:::-;2934:29;2956:6;2934:29;:::i;:::-;2929:3;2925:39;2918:46;;2695:275;2613:357;;;;:::o;2976:196::-;3065:10;3100:66;3162:3;3154:6;3100:66;:::i;:::-;3086:80;;2976:196;;;;:::o;3178:123::-;3258:4;3290;3285:3;3281:14;3273:22;;3178:123;;;:::o;3335:991::-;3474:3;3503:64;3561:5;3503:64;:::i;:::-;3583:96;3672:6;3667:3;3583:96;:::i;:::-;3576:103;;3705:3;3750:4;3742:6;3738:17;3733:3;3729:27;3780:66;3840:5;3780:66;:::i;:::-;3869:7;3900:1;3885:396;3910:6;3907:1;3904:13;3885:396;;;3981:9;3975:4;3971:20;3966:3;3959:33;4032:6;4026:13;4060:84;4139:4;4124:13;4060:84;:::i;:::-;4052:92;;4167:70;4230:6;4167:70;:::i;:::-;4157:80;;4266:4;4261:3;4257:14;4250:21;;3945:336;3932:1;3929;3925:9;3920:14;;3885:396;;;3889:14;4297:4;4290:11;;4317:3;4310:10;;3479:847;;;;;3335:991;;;;:::o;4332:413::-;4495:4;4533:2;4522:9;4518:18;4510:26;;4582:9;4576:4;4572:20;4568:1;4557:9;4553:17;4546:47;4610:128;4733:4;4724:6;4610:128;:::i;:::-;4602:136;;4332:413;;;;:::o;4751:118::-;4838:24;4856:5;4838:24;:::i;:::-;4833:3;4826:37;4751:118;;:::o;4875:222::-;4968:4;5006:2;4995:9;4991:18;4983:26;;5019:71;5087:1;5076:9;5072:17;5063:6;5019:71;:::i;:::-;4875:222;;;;:::o;5103:169::-;5187:11;5221:6;5216:3;5209:19;5261:4;5256:3;5252:14;5237:29;;5103:169;;;;:::o;5278:377::-;5366:3;5394:39;5427:5;5394:39;:::i;:::-;5449:71;5513:6;5508:3;5449:71;:::i;:::-;5442:78;;5529:65;5587:6;5582:3;5575:4;5568:5;5564:16;5529:65;:::i;:::-;5619:29;5641:6;5619:29;:::i;:::-;5614:3;5610:39;5603:46;;5370:285;5278:377;;;;:::o;5661:533::-;5830:4;5868:2;5857:9;5853:18;5845:26;;5881:71;5949:1;5938:9;5934:17;5925:6;5881:71;:::i;:::-;5962:72;6030:2;6019:9;6015:18;6006:6;5962:72;:::i;:::-;6081:9;6075:4;6071:20;6066:2;6055:9;6051:18;6044:48;6109:78;6182:4;6173:6;6109:78;:::i;:::-;6101:86;;5661:533;;;;;;:::o;6200:117::-;6309:1;6306;6299:12;6323:117;6432:1;6429;6422:12;6446:180;6494:77;6491:1;6484:88;6591:4;6588:1;6581:15;6615:4;6612:1;6605:15;6632:281;6715:27;6737:4;6715:27;:::i;:::-;6707:6;6703:40;6845:6;6833:10;6830:22;6809:18;6797:10;6794:34;6791:62;6788:88;;;6856:18;;:::i;:::-;6788:88;6896:10;6892:2;6885:22;6675:238;6632:281;;:::o;6919:129::-;6953:6;6980:20;;:::i;:::-;6970:30;;7009:33;7037:4;7029:6;7009:33;:::i;:::-;6919:129;;;:::o;7054:308::-;7116:4;7206:18;7198:6;7195:30;7192:56;;;7228:18;;:::i;:::-;7192:56;7266:29;7288:6;7266:29;:::i;:::-;7258:37;;7350:4;7344;7340:15;7332:23;;7054:308;;;:::o;7368:146::-;7465:6;7460:3;7455;7442:30;7506:1;7497:6;7492:3;7488:16;7481:27;7368:146;;;:::o;7520:425::-;7598:5;7623:66;7639:49;7681:6;7639:49;:::i;:::-;7623:66;:::i;:::-;7614:75;;7712:6;7705:5;7698:21;7750:4;7743:5;7739:16;7788:3;7779:6;7774:3;7770:16;7767:25;7764:112;;;7795:79;;:::i;:::-;7764:112;7885:54;7932:6;7927:3;7922;7885:54;:::i;:::-;7604:341;7520:425;;;;;:::o;7965:340::-;8021:5;8070:3;8063:4;8055:6;8051:17;8047:27;8037:122;;8078:79;;:::i;:::-;8037:122;8195:6;8182:20;8220:79;8295:3;8287:6;8280:4;8272:6;8268:17;8220:79;:::i;:::-;8211:88;;8027:278;7965:340;;;;:::o;8311:509::-;8380:6;8429:2;8417:9;8408:7;8404:23;8400:32;8397:119;;;8435:79;;:::i;:::-;8397:119;8583:1;8572:9;8568:17;8555:31;8613:18;8605:6;8602:30;8599:117;;;8635:79;;:::i;:::-;8599:117;8740:63;8795:7;8786:6;8775:9;8771:22;8740:63;:::i;:::-;8730:73;;8526:287;8311:509;;;;:::o;8826:715::-;9035:4;9073:2;9062:9;9058:18;9050:26;;9122:9;9116:4;9112:20;9108:1;9097:9;9093:17;9086:47;9150:78;9223:4;9214:6;9150:78;:::i;:::-;9142:86;;9275:9;9269:4;9265:20;9260:2;9249:9;9245:18;9238:48;9303:78;9376:4;9367:6;9303:78;:::i;:::-;9295:86;;9428:9;9422:4;9418:20;9413:2;9402:9;9398:18;9391:48;9456:78;9529:4;9520:6;9456:78;:::i;:::-;9448:86;;8826:715;;;;;;:::o;9547:654::-;9625:6;9633;9682:2;9670:9;9661:7;9657:23;9653:32;9650:119;;;9688:79;;:::i;:::-;9650:119;9808:1;9833:53;9878:7;9869:6;9858:9;9854:22;9833:53;:::i;:::-;9823:63;;9779:117;9963:2;9952:9;9948:18;9935:32;9994:18;9986:6;9983:30;9980:117;;;10016:79;;:::i;:::-;9980:117;10121:63;10176:7;10167:6;10156:9;10152:22;10121:63;:::i;:::-;10111:73;;9906:288;9547:654;;;;;:::o;10207:156::-;10316:6;10350:5;10344:12;10334:22;;10207:156;;;:::o;10369:226::-;10510:11;10544:6;10539:3;10532:19;10584:4;10579:3;10575:14;10560:29;;10369:226;;;;:::o;10601:174::-;10710:4;10733:3;10725:11;;10763:4;10758:3;10754:14;10746:22;;10601:174;;;:::o;10781:90::-;10816:7;10859:5;10856:1;10845:20;10834:31;;10781:90;;;:::o;10877:102::-;10950:22;10966:5;10950:22;:::i;:::-;10945:3;10938:35;10877:102;;:::o;10985:108::-;11062:24;11080:5;11062:24;:::i;:::-;11057:3;11050:37;10985:108;;:::o;11173:904::-;11344:4;11339:3;11335:14;11441:4;11434:5;11430:16;11424:23;11460:59;11513:4;11508:3;11504:14;11490:12;11460:59;:::i;:::-;11359:170;11621:4;11614:5;11610:16;11604:23;11640:59;11693:4;11688:3;11684:14;11670:12;11640:59;:::i;:::-;11539:170;11801:4;11794:5;11790:16;11784:23;11820:63;11877:4;11872:3;11868:14;11854:12;11820:63;:::i;:::-;11719:174;11978:4;11971:5;11967:16;11961:23;11997:63;12054:4;12049:3;12045:14;12031:12;11997:63;:::i;:::-;11903:167;11313:764;11173:904;;:::o;12083:347::-;12236:10;12257:130;12383:3;12375:6;12257:130;:::i;:::-;12419:4;12414:3;12410:14;12396:28;;12083:347;;;;:::o;12436:155::-;12548:4;12580;12575:3;12571:14;12563:22;;12436:155;;;:::o;12675:1068::-;12878:3;12907:96;12997:5;12907:96;:::i;:::-;13019:128;13140:6;13135:3;13019:128;:::i;:::-;13012:135;;13171:98;13263:5;13171:98;:::i;:::-;13292:7;13323:1;13308:410;13333:6;13330:1;13327:13;13308:410;;;13409:6;13403:13;13436:147;13579:3;13564:13;13436:147;:::i;:::-;13429:154;;13606:102;13701:6;13606:102;:::i;:::-;13596:112;;13368:350;13355:1;13352;13348:9;13343:14;;13308:410;;;13312:14;13734:3;13727:10;;12883:860;;;12675:1068;;;;:::o;13749:541::-;13976:4;14014:2;14003:9;13999:18;13991:26;;14063:9;14057:4;14053:20;14049:1;14038:9;14034:17;14027:47;14091:192;14278:4;14269:6;14091:192;:::i;:::-;14083:200;;13749:541;;;;:::o;14296:533::-;14465:4;14503:2;14492:9;14488:18;14480:26;;14516:71;14584:1;14573:9;14569:17;14560:6;14516:71;:::i;:::-;14634:9;14628:4;14624:20;14619:2;14608:9;14604:18;14597:48;14662:78;14735:4;14726:6;14662:78;:::i;:::-;14654:86;;14750:72;14818:2;14807:9;14803:18;14794:6;14750:72;:::i;:::-;14296:533;;;;;;:::o;14835:313::-;14948:4;14986:2;14975:9;14971:18;14963:26;;15035:9;15029:4;15025:20;15021:1;15010:9;15006:17;14999:47;15063:78;15136:4;15127:6;15063:78;:::i;:::-;15055:86;;14835:313;;;;:::o;15154:654::-;15232:6;15240;15289:2;15277:9;15268:7;15264:23;15260:32;15257:119;;;15295:79;;:::i;:::-;15257:119;15443:1;15432:9;15428:17;15415:31;15473:18;15465:6;15462:30;15459:117;;;15495:79;;:::i;:::-;15459:117;15600:63;15655:7;15646:6;15635:9;15631:22;15600:63;:::i;:::-;15590:73;;15386:287;15712:2;15738:53;15783:7;15774:6;15763:9;15759:22;15738:53;:::i;:::-;15728:63;;15683:118;15154:654;;;;;:::o;15814:423::-;15955:4;15993:2;15982:9;15978:18;15970:26;;16006:71;16074:1;16063:9;16059:17;16050:6;16006:71;:::i;:::-;16124:9;16118:4;16114:20;16109:2;16098:9;16094:18;16087:48;16152:78;16225:4;16216:6;16152:78;:::i;:::-;16144:86;;15814:423;;;;;:::o;16243:114::-;16310:6;16344:5;16338:12;16328:22;;16243:114;;;:::o;16363:184::-;16462:11;16496:6;16491:3;16484:19;16536:4;16531:3;16527:14;16512:29;;16363:184;;;;:::o;16553:132::-;16620:4;16643:3;16635:11;;16673:4;16668:3;16664:14;16656:22;;16553:132;;;:::o;16691:179::-;16760:10;16781:46;16823:3;16815:6;16781:46;:::i;:::-;16859:4;16854:3;16850:14;16836:28;;16691:179;;;;:::o;16876:113::-;16946:4;16978;16973:3;16969:14;16961:22;;16876:113;;;:::o;17025:732::-;17144:3;17173:54;17221:5;17173:54;:::i;:::-;17243:86;17322:6;17317:3;17243:86;:::i;:::-;17236:93;;17353:56;17403:5;17353:56;:::i;:::-;17432:7;17463:1;17448:284;17473:6;17470:1;17467:13;17448:284;;;17549:6;17543:13;17576:63;17635:3;17620:13;17576:63;:::i;:::-;17569:70;;17662:60;17715:6;17662:60;:::i;:::-;17652:70;;17508:224;17495:1;17492;17488:9;17483:14;;17448:284;;;17452:14;17748:3;17741:10;;17149:608;;;17025:732;;;;:::o;17763:373::-;17906:4;17944:2;17933:9;17929:18;17921:26;;17993:9;17987:4;17983:20;17979:1;17968:9;17964:17;17957:47;18021:108;18124:4;18115:6;18021:108;:::i;:::-;18013:116;;17763:373;;;;:::o;18142:799::-;18229:6;18237;18245;18294:2;18282:9;18273:7;18269:23;18265:32;18262:119;;;18300:79;;:::i;:::-;18262:119;18420:1;18445:53;18490:7;18481:6;18470:9;18466:22;18445:53;:::i;:::-;18435:63;;18391:117;18547:2;18573:53;18618:7;18609:6;18598:9;18594:22;18573:53;:::i;:::-;18563:63;;18518:118;18703:2;18692:9;18688:18;18675:32;18734:18;18726:6;18723:30;18720:117;;;18756:79;;:::i;:::-;18720:117;18861:63;18916:7;18907:6;18896:9;18892:22;18861:63;:::i;:::-;18851:73;;18646:288;18142:799;;;;;:::o;18947:979::-;19044:6;19052;19060;19109:2;19097:9;19088:7;19084:23;19080:32;19077:119;;;19115:79;;:::i;:::-;19077:119;19235:1;19260:53;19305:7;19296:6;19285:9;19281:22;19260:53;:::i;:::-;19250:63;;19206:117;19390:2;19379:9;19375:18;19362:32;19421:18;19413:6;19410:30;19407:117;;;19443:79;;:::i;:::-;19407:117;19548:63;19603:7;19594:6;19583:9;19579:22;19548:63;:::i;:::-;19538:73;;19333:288;19688:2;19677:9;19673:18;19660:32;19719:18;19711:6;19708:30;19705:117;;;19741:79;;:::i;:::-;19705:117;19846:63;19901:7;19892:6;19881:9;19877:22;19846:63;:::i;:::-;19836:73;;19631:288;18947:979;;;;;:::o;19932:139::-;20024:6;20058:5;20052:12;20042:22;;19932:139;;;:::o;20077:209::-;20201:11;20235:6;20230:3;20223:19;20275:4;20270:3;20266:14;20251:29;;20077:209;;;;:::o;20292:157::-;20384:4;20407:3;20399:11;;20437:4;20432:3;20428:14;20420:22;;20292:157;;;:::o;20455:86::-;20490:7;20530:4;20523:5;20519:16;20508:27;;20455:86;;;:::o;20547:102::-;20620:22;20636:5;20620:22;:::i;:::-;20615:3;20608:35;20547:102;;:::o;20695:774::-;20804:3;20840:4;20835:3;20831:14;20928:4;20921:5;20917:16;20911:23;20981:3;20975:4;20971:14;20964:4;20959:3;20955:14;20948:38;21007:73;21075:4;21061:12;21007:73;:::i;:::-;20999:81;;20855:236;21175:4;21168:5;21164:16;21158:23;21194:63;21251:4;21246:3;21242:14;21228:12;21194:63;:::i;:::-;21101:166;21354:4;21347:5;21343:16;21337:23;21373:59;21426:4;21421:3;21417:14;21403:12;21373:59;:::i;:::-;21277:165;21459:4;21452:11;;20809:660;20695:774;;;;:::o;21475:256::-;21594:10;21629:96;21721:3;21713:6;21629:96;:::i;:::-;21615:110;;21475:256;;;;:::o;21737:138::-;21832:4;21864;21859:3;21855:14;21847:22;;21737:138;;;:::o;21925:1111::-;22094:3;22123:79;22196:5;22123:79;:::i;:::-;22218:111;22322:6;22317:3;22218:111;:::i;:::-;22211:118;;22355:3;22400:4;22392:6;22388:17;22383:3;22379:27;22430:81;22505:5;22430:81;:::i;:::-;22534:7;22565:1;22550:441;22575:6;22572:1;22569:13;22550:441;;;22646:9;22640:4;22636:20;22631:3;22624:33;22697:6;22691:13;22725:114;22834:4;22819:13;22725:114;:::i;:::-;22717:122;;22862:85;22940:6;22862:85;:::i;:::-;22852:95;;22976:4;22971:3;22967:14;22960:21;;22610:381;22597:1;22594;22590:9;22585:14;;22550:441;;;22554:14;23007:4;23000:11;;23027:3;23020:10;;22099:937;;;;;21925:1111;;;;:::o;23042:473::-;23235:4;23273:2;23262:9;23258:18;23250:26;;23322:9;23316:4;23312:20;23308:1;23297:9;23293:17;23286:47;23350:158;23503:4;23494:6;23350:158;:::i;:::-;23342:166;;23042:473;;;;:::o;23521:834::-;23609:6;23617;23666:2;23654:9;23645:7;23641:23;23637:32;23634:119;;;23672:79;;:::i;:::-;23634:119;23820:1;23809:9;23805:17;23792:31;23850:18;23842:6;23839:30;23836:117;;;23872:79;;:::i;:::-;23836:117;23977:63;24032:7;24023:6;24012:9;24008:22;23977:63;:::i;:::-;23967:73;;23763:287;24117:2;24106:9;24102:18;24089:32;24148:18;24140:6;24137:30;24134:117;;;24170:79;;:::i;:::-;24134:117;24275:63;24330:7;24321:6;24310:9;24306:22;24275:63;:::i;:::-;24265:73;;24060:288;23521:834;;;;;:::o;24361:321::-;24448:4;24538:18;24530:6;24527:30;24524:56;;;24560:18;;:::i;:::-;24524:56;24610:4;24602:6;24598:17;24590:25;;24670:4;24664;24660:15;24652:23;;24361:321;;;:::o;24688:117::-;24797:1;24794;24787:12;24827:945;24933:5;24958:91;24974:74;25041:6;24974:74;:::i;:::-;24958:91;:::i;:::-;24949:100;;25069:5;25098:6;25091:5;25084:21;25132:4;25125:5;25121:16;25114:23;;25185:4;25177:6;25173:17;25165:6;25161:30;25214:3;25206:6;25203:15;25200:122;;;25233:79;;:::i;:::-;25200:122;25348:6;25331:435;25365:6;25360:3;25357:15;25331:435;;;25454:3;25441:17;25490:18;25477:11;25474:35;25471:122;;;25512:79;;:::i;:::-;25471:122;25636:11;25628:6;25624:24;25674:47;25717:3;25705:10;25674:47;:::i;:::-;25669:3;25662:60;25751:4;25746:3;25742:14;25735:21;;25407:359;;25391:4;25386:3;25382:14;25375:21;;25331:435;;;25335:21;24939:833;;24827:945;;;;;:::o;25794:390::-;25875:5;25924:3;25917:4;25909:6;25905:17;25901:27;25891:122;;25932:79;;:::i;:::-;25891:122;26049:6;26036:20;26074:104;26174:3;26166:6;26159:4;26151:6;26147:17;26074:104;:::i;:::-;26065:113;;25881:303;25794:390;;;;:::o;26190:1029::-;26312:6;26320;26328;26377:2;26365:9;26356:7;26352:23;26348:32;26345:119;;;26383:79;;:::i;:::-;26345:119;26531:1;26520:9;26516:17;26503:31;26561:18;26553:6;26550:30;26547:117;;;26583:79;;:::i;:::-;26547:117;26688:63;26743:7;26734:6;26723:9;26719:22;26688:63;:::i;:::-;26678:73;;26474:287;26800:2;26826:53;26871:7;26862:6;26851:9;26847:22;26826:53;:::i;:::-;26816:63;;26771:118;26956:2;26945:9;26941:18;26928:32;26987:18;26979:6;26976:30;26973:117;;;27009:79;;:::i;:::-;26973:117;27114:88;27194:7;27185:6;27174:9;27170:22;27114:88;:::i;:::-;27104:98;;26899:313;26190:1029;;;;;:::o;27225:180::-;27273:77;27270:1;27263:88;27370:4;27367:1;27360:15;27394:4;27391:1;27384:15;27411:191;27451:3;27470:20;27488:1;27470:20;:::i;:::-;27465:25;;27504:20;27522:1;27504:20;:::i;:::-;27499:25;;27547:1;27544;27540:9;27533:16;;27568:3;27565:1;27562:10;27559:36;;;27575:18;;:::i;:::-;27559:36;27411:191;;;;:::o;27608:180::-;27656:77;27653:1;27646:88;27753:4;27750:1;27743:15;27777:4;27774:1;27767:15;27794:320;27838:6;27875:1;27869:4;27865:12;27855:22;;27922:1;27916:4;27912:12;27943:18;27933:81;;27999:4;27991:6;27987:17;27977:27;;27933:81;28061:2;28053:6;28050:14;28030:18;28027:38;28024:84;;28080:18;;:::i;:::-;28024:84;27845:269;27794:320;;;:::o;28120:180::-;28168:77;28165:1;28158:88;28265:4;28262:1;28255:15;28289:4;28286:1;28279:15;28306:233;28345:3;28368:24;28386:5;28368:24;:::i;:::-;28359:33;;28414:66;28407:5;28404:77;28401:103;;28484:18;;:::i;:::-;28401:103;28531:1;28524:5;28520:13;28513:20;;28306:233;;;:::o;28545:147::-;28646:11;28683:3;28668:18;;28545:147;;;;:::o;28698:114::-;;:::o;28818:398::-;28977:3;28998:83;29079:1;29074:3;28998:83;:::i;:::-;28991:90;;29090:93;29179:3;29090:93;:::i;:::-;29208:1;29203:3;29199:11;29192:18;;28818:398;;;:::o;29222:379::-;29406:3;29428:147;29571:3;29428:147;:::i;:::-;29421:154;;29592:3;29585:10;;29222:379;;;:::o;29607:144::-;29659:4;29682:3;29674:11;;29705:3;29702:1;29695:14;29739:4;29736:1;29726:18;29718:26;;29607:144;;;:::o;29779:878::-;29884:3;29921:5;29915:12;29950:36;29976:9;29950:36;:::i;:::-;30002:88;30083:6;30078:3;30002:88;:::i;:::-;29995:95;;30121:1;30110:9;30106:17;30137:1;30132:166;;;;30312:1;30307:344;;;;30099:552;;30132:166;30216:4;30212:9;30201;30197:25;30192:3;30185:38;30278:6;30271:14;30264:22;30256:6;30252:35;30247:3;30243:45;30236:52;;30132:166;;30307:344;30374:41;30409:5;30374:41;:::i;:::-;30437:1;30451:154;30465:6;30462:1;30459:13;30451:154;;;30539:7;30533:14;30529:1;30524:3;30520:11;30513:35;30589:1;30580:7;30576:15;30565:26;;30487:4;30484:1;30480:12;30475:17;;30451:154;;;30634:6;30629:3;30625:16;30618:23;;30314:337;;30099:552;;29888:769;;29779:878;;;;:::o;30663:273::-;30794:3;30816:94;30906:3;30897:6;30816:94;:::i;:::-;30809:101;;30927:3;30920:10;;30663:273;;;;:::o;30942:141::-;30991:4;31014:3;31006:11;;31037:3;31034:1;31027:14;31071:4;31068:1;31058:18;31050:26;;30942:141;;;:::o;31089:93::-;31126:6;31173:2;31168;31161:5;31157:14;31153:23;31143:33;;31089:93;;;:::o;31188:107::-;31232:8;31282:5;31276:4;31272:16;31251:37;;31188:107;;;;:::o;31301:393::-;31370:6;31420:1;31408:10;31404:18;31443:97;31473:66;31462:9;31443:97;:::i;:::-;31561:39;31591:8;31580:9;31561:39;:::i;:::-;31549:51;;31633:4;31629:9;31622:5;31618:21;31609:30;;31682:4;31672:8;31668:19;31661:5;31658:30;31648:40;;31377:317;;31301:393;;;;;:::o;31700:60::-;31728:3;31749:5;31742:12;;31700:60;;;:::o;31766:142::-;31816:9;31849:53;31867:34;31876:24;31894:5;31876:24;:::i;:::-;31867:34;:::i;:::-;31849:53;:::i;:::-;31836:66;;31766:142;;;:::o;31914:75::-;31957:3;31978:5;31971:12;;31914:75;;;:::o;31995:269::-;32105:39;32136:7;32105:39;:::i;:::-;32166:91;32215:41;32239:16;32215:41;:::i;:::-;32207:6;32200:4;32194:11;32166:91;:::i;:::-;32160:4;32153:105;32071:193;31995:269;;;:::o;32270:73::-;32315:3;32270:73;:::o;32349:189::-;32426:32;;:::i;:::-;32467:65;32525:6;32517;32511:4;32467:65;:::i;:::-;32402:136;32349:189;;:::o;32544:186::-;32604:120;32621:3;32614:5;32611:14;32604:120;;;32675:39;32712:1;32705:5;32675:39;:::i;:::-;32648:1;32641:5;32637:13;32628:22;;32604:120;;;32544:186;;:::o;32736:543::-;32837:2;32832:3;32829:11;32826:446;;;32871:38;32903:5;32871:38;:::i;:::-;32955:29;32973:10;32955:29;:::i;:::-;32945:8;32941:44;33138:2;33126:10;33123:18;33120:49;;;33159:8;33144:23;;33120:49;33182:80;33238:22;33256:3;33238:22;:::i;:::-;33228:8;33224:37;33211:11;33182:80;:::i;:::-;32841:431;;32826:446;32736:543;;;:::o;33285:117::-;33339:8;33389:5;33383:4;33379:16;33358:37;;33285:117;;;;:::o;33408:169::-;33452:6;33485:51;33533:1;33529:6;33521:5;33518:1;33514:13;33485:51;:::i;:::-;33481:56;33566:4;33560;33556:15;33546:25;;33459:118;33408:169;;;;:::o;33582:295::-;33658:4;33804:29;33829:3;33823:4;33804:29;:::i;:::-;33796:37;;33866:3;33863:1;33859:11;33853:4;33850:21;33842:29;;33582:295;;;;:::o;33882:1395::-;33999:37;34032:3;33999:37;:::i;:::-;34101:18;34093:6;34090:30;34087:56;;;34123:18;;:::i;:::-;34087:56;34167:38;34199:4;34193:11;34167:38;:::i;:::-;34252:67;34312:6;34304;34298:4;34252:67;:::i;:::-;34346:1;34370:4;34357:17;;34402:2;34394:6;34391:14;34419:1;34414:618;;;;35076:1;35093:6;35090:77;;;35142:9;35137:3;35133:19;35127:26;35118:35;;35090:77;35193:67;35253:6;35246:5;35193:67;:::i;:::-;35187:4;35180:81;35049:222;34384:887;;34414:618;34466:4;34462:9;34454:6;34450:22;34500:37;34532:4;34500:37;:::i;:::-;34559:1;34573:208;34587:7;34584:1;34581:14;34573:208;;;34666:9;34661:3;34657:19;34651:26;34643:6;34636:42;34717:1;34709:6;34705:14;34695:24;;34764:2;34753:9;34749:18;34736:31;;34610:4;34607:1;34603:12;34598:17;;34573:208;;;34809:6;34800:7;34797:19;34794:179;;;34867:9;34862:3;34858:19;34852:26;34910:48;34952:4;34944:6;34940:17;34929:9;34910:48;:::i;:::-;34902:6;34895:64;34817:156;34794:179;35019:1;35015;35007:6;35003:14;34999:22;34993:4;34986:36;34421:611;;;34384:887;;33974:1303;;;33882:1395;;:::o;35283:126::-;35320:7;35360:42;35353:5;35349:54;35338:65;;35283:126;;;:::o;35415:96::-;35452:7;35481:24;35499:5;35481:24;:::i;:::-;35470:35;;35415:96;;;:::o;35517:118::-;35604:24;35622:5;35604:24;:::i;:::-;35599:3;35592:37;35517:118;;:::o;35665:831::-;35750:3;35787:5;35781:12;35816:36;35842:9;35816:36;:::i;:::-;35868:71;35932:6;35927:3;35868:71;:::i;:::-;35861:78;;35970:1;35959:9;35955:17;35986:1;35981:164;;;;36159:1;36154:336;;;;35948:542;;35981:164;36065:4;36061:9;36050;36046:25;36041:3;36034:38;36125:6;36118:14;36111:22;36105:4;36101:33;36096:3;36092:43;36085:50;;35981:164;;36154:336;36221:38;36253:5;36221:38;:::i;:::-;36281:1;36295:154;36309:6;36306:1;36303:13;36295:154;;;36383:7;36377:14;36373:1;36368:3;36364:11;36357:35;36433:1;36424:7;36420:15;36409:26;;36331:4;36328:1;36324:12;36319:17;;36295:154;;;36478:1;36473:3;36469:11;36462:18;;36161:329;;35948:542;;35754:742;;35665:831;;;;:::o;36502:417::-;36640:4;36678:2;36667:9;36663:18;36655:26;;36691:71;36759:1;36748:9;36744:17;36735:6;36691:71;:::i;:::-;36809:9;36803:4;36799:20;36794:2;36783:9;36779:18;36772:48;36837:75;36907:4;36898:6;36837:75;:::i;:::-;36829:83;;36502:417;;;;;:::o;36925:353::-;37044:4;37134:18;37126:6;37123:30;37120:56;;;37156:18;;:::i;:::-;37120:56;37206:4;37198:6;37194:17;37186:25;;37266:4;37260;37256:15;37248:23;;36925:353;;;:::o;37284:117::-;37393:1;37390;37383:12;37407:117;37516:1;37513;37506:12;37530:118;37601:22;37617:5;37601:22;:::i;:::-;37594:5;37591:33;37581:61;;37638:1;37635;37628:12;37581:61;37530:118;:::o;37654:139::-;37709:5;37740:6;37734:13;37725:22;;37756:31;37781:5;37756:31;:::i;:::-;37654:139;;;;:::o;37799:143::-;37856:5;37887:6;37881:13;37872:22;;37903:33;37930:5;37903:33;:::i;:::-;37799:143;;;;:::o;37987:997::-;38089:5;38133:4;38121:9;38116:3;38112:19;38108:30;38105:117;;;38141:79;;:::i;:::-;38105:117;38240:21;38256:4;38240:21;:::i;:::-;38231:30;;38330:1;38370:58;38424:3;38415:6;38404:9;38400:22;38370:58;:::i;:::-;38363:4;38356:5;38352:16;38345:84;38271:169;38509:2;38550:58;38604:3;38595:6;38584:9;38580:22;38550:58;:::i;:::-;38543:4;38536:5;38532:16;38525:84;38450:170;38689:2;38730:60;38786:3;38777:6;38766:9;38762:22;38730:60;:::i;:::-;38723:4;38716:5;38712:16;38705:86;38630:172;38864:2;38905:60;38961:3;38952:6;38941:9;38937:22;38905:60;:::i;:::-;38898:4;38891:5;38887:16;38880:86;38812:165;37987:997;;;;:::o;39031:858::-;39180:5;39205:123;39221:106;39320:6;39221:106;:::i;:::-;39205:123;:::i;:::-;39196:132;;39348:5;39377:6;39370:5;39363:21;39411:4;39404:5;39400:16;39393:23;;39464:4;39456:6;39452:17;39444:6;39440:30;39493:3;39485:6;39482:15;39479:122;;;39512:79;;:::i;:::-;39479:122;39627:6;39610:273;39644:6;39639:3;39636:15;39610:273;;;39719:3;39748:90;39834:3;39822:10;39748:90;:::i;:::-;39743:3;39736:103;39868:4;39863:3;39859:14;39852:21;;39686:197;39670:4;39665:3;39661:14;39654:21;;39610:273;;;39614:21;39186:703;;39031:858;;;;;:::o;39936:469::-;40060:5;40109:3;40102:4;40094:6;40090:17;40086:27;40076:122;;40117:79;;:::i;:::-;40076:122;40227:6;40221:13;40252:147;40395:3;40387:6;40380:4;40372:6;40368:17;40252:147;:::i;:::-;40243:156;;40066:339;39936:469;;;;:::o;40411:638::-;40548:6;40597:2;40585:9;40576:7;40572:23;40568:32;40565:119;;;40603:79;;:::i;:::-;40565:119;40744:1;40733:9;40729:17;40723:24;40774:18;40766:6;40763:30;40760:117;;;40796:79;;:::i;:::-;40760:117;40901:131;41024:7;41015:6;41004:9;41000:22;40901:131;:::i;:::-;40891:141;;40694:348;40411:638;;;;:::o;41055:434::-;41144:5;41169:66;41185:49;41227:6;41185:49;:::i;:::-;41169:66;:::i;:::-;41160:75;;41258:6;41251:5;41244:21;41296:4;41289:5;41285:16;41334:3;41325:6;41320:3;41316:16;41313:25;41310:112;;;41341:79;;:::i;:::-;41310:112;41431:52;41476:6;41471:3;41466;41431:52;:::i;:::-;41150:339;41055:434;;;;;:::o;41509:355::-;41576:5;41625:3;41618:4;41610:6;41606:17;41602:27;41592:122;;41633:79;;:::i;:::-;41592:122;41743:6;41737:13;41768:90;41854:3;41846:6;41839:4;41831:6;41827:17;41768:90;:::i;:::-;41759:99;;41582:282;41509:355;;;;:::o;41889:770::-;41971:5;42015:4;42003:9;41998:3;41994:19;41990:30;41987:117;;;42023:79;;:::i;:::-;41987:117;42122:21;42138:4;42122:21;:::i;:::-;42113:30;;42224:1;42213:9;42209:17;42203:24;42254:18;42246:6;42243:30;42240:117;;;42276:79;;:::i;:::-;42240:117;42396:70;42462:3;42453:6;42442:9;42438:22;42396:70;:::i;:::-;42389:4;42382:5;42378:16;42371:96;42153:325;42539:2;42580:60;42636:3;42627:6;42616:9;42612:22;42580:60;:::i;:::-;42573:4;42566:5;42562:16;42555:86;42488:164;41889:770;;;;:::o;42665:704::-;42766:6;42774;42823:2;42811:9;42802:7;42798:23;42794:32;42791:119;;;42829:79;;:::i;:::-;42791:119;42949:1;42974:64;43030:7;43021:6;43010:9;43006:22;42974:64;:::i;:::-;42964:74;;42920:128;43108:2;43097:9;43093:18;43087:25;43139:18;43131:6;43128:30;43125:117;;;43161:79;;:::i;:::-;43125:117;43266:86;43344:7;43335:6;43324:9;43320:22;43266:86;:::i;:::-;43256:96;;43058:304;42665:704;;;;;:::o;43375:333::-;43474:4;43564:18;43556:6;43553:30;43550:56;;;43586:18;;:::i;:::-;43550:56;43636:4;43628:6;43624:17;43616:25;;43696:4;43690;43686:15;43678:23;;43375:333;;;:::o;43735:996::-;43864:5;43889:103;43905:86;43984:6;43905:86;:::i;:::-;43889:103;:::i;:::-;43880:112;;44012:5;44041:6;44034:5;44027:21;44075:4;44068:5;44064:16;44057:23;;44128:4;44120:6;44116:17;44108:6;44104:30;44157:3;44149:6;44146:15;44143:122;;;44176:79;;:::i;:::-;44143:122;44291:6;44274:451;44308:6;44303:3;44300:15;44274:451;;;44390:3;44384:10;44426:18;44413:11;44410:35;44407:122;;;44448:79;;:::i;:::-;44407:122;44572:11;44564:6;44560:24;44610:70;44676:3;44664:10;44610:70;:::i;:::-;44605:3;44598:83;44710:4;44705:3;44701:14;44694:21;;44350:375;;44334:4;44329:3;44325:14;44318:21;;44274:451;;;44278:21;43870:861;;43735:996;;;;;:::o;44758:429::-;44862:5;44911:3;44904:4;44896:6;44892:17;44888:27;44878:122;;44919:79;;:::i;:::-;44878:122;45029:6;45023:13;45054:127;45177:3;45169:6;45162:4;45154:6;45150:17;45054:127;:::i;:::-;45045:136;;44868:319;44758:429;;;;:::o;45193:598::-;45310:6;45359:2;45347:9;45338:7;45334:23;45330:32;45327:119;;;45365:79;;:::i;:::-;45327:119;45506:1;45495:9;45491:17;45485:24;45536:18;45528:6;45525:30;45522:117;;;45558:79;;:::i;:::-;45522:117;45663:111;45766:7;45757:6;45746:9;45742:22;45663:111;:::i;:::-;45653:121;;45456:328;45193:598;;;;:::o;45797:527::-;45963:4;46001:2;45990:9;45986:18;45978:26;;46014:71;46082:1;46071:9;46067:17;46058:6;46014:71;:::i;:::-;46132:9;46126:4;46122:20;46117:2;46106:9;46102:18;46095:48;46160:75;46230:4;46221:6;46160:75;:::i;:::-;46152:83;;46245:72;46313:2;46302:9;46298:18;46289:6;46245:72;:::i;:::-;45797:527;;;;;;:::o;46330:347::-;46398:6;46447:2;46435:9;46426:7;46422:23;46418:32;46415:119;;;46453:79;;:::i;:::-;46415:119;46573:1;46598:62;46652:7;46643:6;46632:9;46628:22;46598:62;:::i;:::-;46588:72;;46544:126;46330:347;;;;:::o;46683:336::-;46785:4;46875:18;46867:6;46864:30;46861:56;;;46897:18;;:::i;:::-;46861:56;46947:4;46939:6;46935:17;46927:25;;47007:4;47001;46997:15;46989:23;;46683:336;;;:::o;47025:118::-;47096:22;47112:5;47096:22;:::i;:::-;47089:5;47086:33;47076:61;;47133:1;47130;47123:12;47076:61;47025:118;:::o;47149:139::-;47204:5;47235:6;47229:13;47220:22;;47251:31;47276:5;47251:31;:::i;:::-;47149:139;;;;:::o;47316:948::-;47401:5;47445:4;47433:9;47428:3;47424:19;47420:30;47417:117;;;47453:79;;:::i;:::-;47417:117;47552:21;47568:4;47552:21;:::i;:::-;47543:30;;47654:1;47643:9;47639:17;47633:24;47684:18;47676:6;47673:30;47670:117;;;47706:79;;:::i;:::-;47670:117;47826:70;47892:3;47883:6;47872:9;47868:22;47826:70;:::i;:::-;47819:4;47812:5;47808:16;47801:96;47583:325;47969:2;48010:60;48066:3;48057:6;48046:9;48042:22;48010:60;:::i;:::-;48003:4;47996:5;47992:16;47985:86;47918:164;48146:2;48187:58;48241:3;48232:6;48221:9;48217:22;48187:58;:::i;:::-;48180:4;48173:5;48169:16;48162:84;48092:165;47316:948;;;;:::o;48294:1005::-;48426:5;48451:106;48467:89;48549:6;48467:89;:::i;:::-;48451:106;:::i;:::-;48442:115;;48577:5;48606:6;48599:5;48592:21;48640:4;48633:5;48629:16;48622:23;;48693:4;48685:6;48681:17;48673:6;48669:30;48722:3;48714:6;48711:15;48708:122;;;48741:79;;:::i;:::-;48708:122;48856:6;48839:454;48873:6;48868:3;48865:15;48839:454;;;48955:3;48949:10;48991:18;48978:11;48975:35;48972:122;;;49013:79;;:::i;:::-;48972:122;49137:11;49129:6;49125:24;49175:73;49244:3;49232:10;49175:73;:::i;:::-;49170:3;49163:86;49278:4;49273:3;49269:14;49262:21;;48915:378;;48899:4;48894:3;48890:14;48883:21;;48839:454;;;48843:21;48432:867;;48294:1005;;;;;:::o;49329:435::-;49436:5;49485:3;49478:4;49470:6;49466:17;49462:27;49452:122;;49493:79;;:::i;:::-;49452:122;49603:6;49597:13;49628:130;49754:3;49746:6;49739:4;49731:6;49727:17;49628:130;:::i;:::-;49619:139;;49442:322;49329:435;;;;:::o;49770:604::-;49890:6;49939:2;49927:9;49918:7;49914:23;49910:32;49907:119;;;49945:79;;:::i;:::-;49907:119;50086:1;50075:9;50071:17;50065:24;50116:18;50108:6;50105:30;50102:117;;;50138:79;;:::i;:::-;50102:117;50243:114;50349:7;50340:6;50329:9;50325:22;50243:114;:::i;:::-;50233:124;;50036:331;49770:604;;;;:::o;50380:118::-;50451:6;50485:5;50479:12;50469:22;;50380:118;;;:::o;50504:163::-;50575:4;50598:3;50590:11;;50621:3;50618:1;50611:14;50655:4;50652:1;50642:18;50634:26;;50504:163;;;:::o;50697:811::-;50772:3;50809:5;50803:12;50838:36;50864:9;50838:36;:::i;:::-;50890:61;50944:6;50939:3;50890:61;:::i;:::-;50883:68;;50982:1;50971:9;50967:17;50998:1;50993:164;;;;51171:1;51166:336;;;;50960:542;;50993:164;51077:4;51073:9;51062;51058:25;51053:3;51046:38;51137:6;51130:14;51123:22;51117:4;51113:33;51108:3;51104:43;51097:50;;50993:164;;51166:336;51233:38;51265:5;51233:38;:::i;:::-;51293:1;51307:154;51321:6;51318:1;51315:13;51307:154;;;51395:7;51389:14;51385:1;51380:3;51376:11;51369:35;51445:1;51436:7;51432:15;51421:26;;51343:4;51340:1;51336:12;51331:17;;51307:154;;;51490:1;51485:3;51481:11;51474:18;;51173:329;;50960:542;;50776:732;;50697:811;;;;:::o;51514:190::-;51600:10;51635:63;51694:3;51686:6;51635:63;:::i;:::-;51621:77;;51514:190;;;;:::o;51710:117::-;51784:4;51816;51811:3;51807:14;51799:22;;51710:117;;;:::o;51861:957::-;51994:3;52023:58;52075:5;52023:58;:::i;:::-;52097:96;52186:6;52181:3;52097:96;:::i;:::-;52090:103;;52219:3;52264:4;52256:6;52252:17;52247:3;52243:27;52294:60;52348:5;52294:60;:::i;:::-;52377:7;52408:1;52393:380;52418:6;52415:1;52412:13;52393:380;;;52489:9;52483:4;52479:20;52474:3;52467:33;52534:6;52561:81;52637:4;52622:13;52561:81;:::i;:::-;52553:89;;52665:64;52722:6;52665:64;:::i;:::-;52655:74;;52758:4;52753:3;52749:14;52742:21;;52453:320;52440:1;52437;52433:9;52428:14;;52393:380;;;52397:14;52789:4;52782:11;;52809:3;52802:10;;51999:819;;;;;51861:957;;;;:::o;52824:621::-;53037:4;53075:2;53064:9;53060:18;53052:26;;53088:71;53156:1;53145:9;53141:17;53132:6;53088:71;:::i;:::-;53169:72;53237:2;53226:9;53222:18;53213:6;53169:72;:::i;:::-;53288:9;53282:4;53278:20;53273:2;53262:9;53258:18;53251:48;53316:122;53433:4;53424:6;53316:122;:::i;:::-;53308:130;;52824:621;;;;;;:::o;53451:90::-;53485:7;53528:5;53521:13;53514:21;53503:32;;53451:90;;;:::o;53547:116::-;53617:21;53632:5;53617:21;:::i;:::-;53610:5;53607:32;53597:60;;53653:1;53650;53643:12;53597:60;53547:116;:::o;53669:137::-;53723:5;53754:6;53748:13;53739:22;;53770:30;53794:5;53770:30;:::i;:::-;53669:137;;;;:::o;53812:345::-;53879:6;53928:2;53916:9;53907:7;53903:23;53899:32;53896:119;;;53934:79;;:::i;:::-;53896:119;54054:1;54079:61;54132:7;54123:6;54112:9;54108:22;54079:61;:::i;:::-;54069:71;;54025:125;53812:345;;;;:::o;54163:172::-;54303:24;54299:1;54291:6;54287:14;54280:48;54163:172;:::o;54341:366::-;54483:3;54504:67;54568:2;54563:3;54504:67;:::i;:::-;54497:74;;54580:93;54669:3;54580:93;:::i;:::-;54698:2;54693:3;54689:12;54682:19;;54341:366;;;:::o;54713:419::-;54879:4;54917:2;54906:9;54902:18;54894:26;;54966:9;54960:4;54956:20;54952:1;54941:9;54937:17;54930:47;54994:131;55120:4;54994:131;:::i;:::-;54986:139;;54713:419;;;:::o;55138:511::-;55323:4;55361:2;55350:9;55346:18;55338:26;;55374:71;55442:1;55431:9;55427:17;55418:6;55374:71;:::i;:::-;55492:9;55486:4;55482:20;55477:2;55466:9;55462:18;55455:48;55520:122;55637:4;55628:6;55520:122;:::i;:::-;55512:130;;55138:511;;;;;:::o;55655:177::-;55795:29;55791:1;55783:6;55779:14;55772:53;55655:177;:::o;55838:366::-;55980:3;56001:67;56065:2;56060:3;56001:67;:::i;:::-;55994:74;;56077:93;56166:3;56077:93;:::i;:::-;56195:2;56190:3;56186:12;56179:19;;55838:366;;;:::o;56210:419::-;56376:4;56414:2;56403:9;56399:18;56391:26;;56463:9;56457:4;56453:20;56449:1;56438:9;56434:17;56427:47;56491:131;56617:4;56491:131;:::i;:::-;56483:139;;56210:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3797400","executionCost":"infinite","totalCost":"infinite"},"external":{"_approveRequiredMsgs()":"infinite","_dao_ids()":"2562","_dao_uris(uint256)":"infinite","_goal_ids()":"2542","_goal_uris(uint256)":"infinite","_ideas_ids()":"2495","_ideas_uris(uint256)":"infinite","_ideas_vote_ids()":"2541","_message_ids()":"2474","_reply_ids()":"2584","_smart_contract_ids()":"2586","_smart_contracts_uris(uint256)":"infinite","add_donation(uint256,uint256)":"infinite","all_goal_ideas_votes(uint256)":"infinite","all_messages(uint256)":"infinite","all_replies(uint256)":"infinite","create_dao(string,string)":"infinite","create_goal(string,uint256)":"infinite","create_goal_ideas_vote(uint256,uint256,string)":"infinite","create_ideas(string,uint256,string[])":"infinite","dao_uri(uint256)":"infinite","donate(uint256,uint256)":"infinite","donated(uint256)":"infinite","getContractBalance()":"428","getContractRewards()":"infinite","getDelegation()":"infinite","getMsgIDs(uint256)":"infinite","getReplyIDs(uint256)":"infinite","getUnbondingDelegation()":"infinite","get_all_daos()":"infinite","get_all_goals()":"infinite","get_all_goals_by_dao_id(uint256)":"infinite","get_all_ideas()":"infinite","get_all_ideas_by_goal_id(uint256)":"infinite","get_goal_id_by_goal_uri(string)":"infinite","get_goal_id_from_ideas_uri(string)":"infinite","get_ideas_id_by_ideas_uri(string)":"infinite","get_ideas_votes_from_goal(uint256,uint256)":"infinite","goal_uri(uint256)":"infinite","ideas_uri(uint256)":"infinite","redeemDonatedMoney(uint256)":"infinite","reset_all()":"infinite","sendMsg(uint256,string)":"infinite","sendReply(uint256,string)":"infinite","set_dao(uint256,string,string)":"infinite","set_goal(uint256,string)":"infinite","set_ideas(uint256,string)":"infinite","stake(uint256)":"infinite","withdrawAllMoney()":"infinite"},"internal":{"create_ideas_smart_contract(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{"_approveRequiredMsgs()":"b2947c71","_dao_ids()":"7bbd582d","_dao_uris(uint256)":"27a568b9","_goal_ids()":"13bf4cea","_goal_uris(uint256)":"7f2035d4","_ideas_ids()":"d3791b20","_ideas_uris(uint256)":"468d0c80","_ideas_vote_ids()":"4a797bd7","_message_ids()":"9077007d","_reply_ids()":"aa2bf5d3","_smart_contract_ids()":"1b592aeb","_smart_contracts_uris(uint256)":"ff4a37ef","add_donation(uint256,uint256)":"a2cdb3a9","all_goal_ideas_votes(uint256)":"1ba44c4c","all_messages(uint256)":"b527d45e","all_replies(uint256)":"3f87a2f4","create_dao(string,string)":"c4c2e364","create_goal(string,uint256)":"71085cab","create_goal_ideas_vote(uint256,uint256,string)":"82fcc732","create_ideas(string,uint256,string[])":"e3280c96","dao_uri(uint256)":"5d907da1","donate(uint256,uint256)":"0cdd53f6","donated(uint256)":"414d9a2b","getContractBalance()":"6f9fb98a","getContractRewards()":"ae429e47","getDelegation()":"53f68802","getMsgIDs(uint256)":"803f5b9f","getReplyIDs(uint256)":"812fae1f","getUnbondingDelegation()":"42c7652a","get_all_daos()":"c04fe978","get_all_goals()":"29b56f60","get_all_goals_by_dao_id(uint256)":"109ac970","get_all_ideas()":"97ee7606","get_all_ideas_by_goal_id(uint256)":"131d44f2","get_goal_id_by_goal_uri(string)":"1e9ac9f5","get_goal_id_from_ideas_uri(string)":"aa4cdf2a","get_ideas_id_by_ideas_uri(string)":"a1ca9178","get_ideas_votes_from_goal(uint256,uint256)":"4be7adb5","goal_uri(uint256)":"e32acc1a","ideas_uri(uint256)":"8d3d2595","redeemDonatedMoney(uint256)":"7e22cd11","reset_all()":"b16060a6","sendMsg(uint256,string)":"2d5bf5b0","sendReply(uint256,string)":"6af3304e","set_dao(uint256,string,string)":"881de858","set_goal(uint256,string)":"c29595c5","set_ideas(uint256,string)":"c04e7430","stake(uint256)":"a694fc3a","withdrawAllMoney()":"1b52b9de"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_approveRequiredMsgs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_dao_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_dao_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"finished\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_goal_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_goal_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"goal_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ideas_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_vote_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_reply_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_smart_contract_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_smart_contracts_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"smart_contract_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"smart_contract_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_doantion\",\"type\":\"uint256\"}],\"name\":\"add_donation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_goal_ideas_votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_replies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reply_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"create_dao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"create_goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"}],\"name\":\"create_goal_ideas_vote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_smart_contracts\",\"type\":\"string[]\"}],\"name\":\"create_ideas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"dao_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idea_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"donated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDelegation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"}],\"name\":\"getMsgIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"}],\"name\":\"getReplyIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnbondingDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct UnbondingDelegationEntry[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_daos\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_goals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"get_all_goals_by_dao_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_ideas\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"get_all_ideas_by_goal_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_by_goal_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_from_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_ideas_id_by_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"get_ideas_votes_from_goal\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"goal_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idea_id\",\"type\":\"uint256\"}],\"name\":\"redeemDonatedMoney\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset_all\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"sendMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reply\",\"type\":\"string\"}],\"name\":\"sendReply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"set_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"set_goal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"set_ideas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_approveRequiredMsgs()\":{\"details\":\"approves the staking and distribution contracts for donating\"}},\"stateVariables\":{\"donated\":{\"details\":\"map to keep track of user deposits to the contract.\"},\"stakingMethods\":{\"details\":\"the required authorizations for Staking and Distribution\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GreenDAO.sol\":\"GreenDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/GreenDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\r\\nimport \\\"./precompiles/stateful/Staking.sol\\\";\\r\\nimport \\\"./precompiles/stateful/Distribution.sol\\\";\\r\\ncontract GreenDAO  {\\r\\n    struct dao_uri_struct {\\r\\n        string dao_wallet;\\r\\n        string dao_uri;\\r\\n        string finished;\\r\\n    }\\r\\n    struct goal_uri_struct {\\r\\n        uint256 dao_id;\\r\\n        string goal_uri;\\r\\n    }\\r\\n\\r\\n    struct ideas_uri_struct {\\r\\n        uint256 goal_id;\\r\\n        string ideas_uri;\\r\\n        uint256 donation;\\r\\n    }\\r\\n    struct smart_contract_uri_struct {\\r\\n        uint256 smart_contract_id;\\r\\n        uint256 ideas_id;\\r\\n        string smart_contract_uri;\\r\\n    }\\r\\n    struct goal_ideas_votes_struct {\\r\\n        uint256 goal_id;\\r\\n        uint256 ideas_id;\\r\\n        string wallet;\\r\\n    }\\r\\n    struct message_struct {\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string message;\\r\\n    }\\r\\n    struct reply_struct {\\r\\n        uint256 reply_id;\\r\\n        uint256 message_id;\\r\\n        string message;\\r\\n    }\\r\\n    /// @dev the required authorizations for Staking and Distribution\\r\\n    string[] private stakingMethods = [MSG_DELEGATE, MSG_UNDELEGATE, MSG_REDELEGATE];\\r\\n    string[] private distributionMethods = [MSG_WITHDRAW_DELEGATOR_REWARD];\\r\\n    /// @dev map to keep track of user deposits to the contract.\\r\\n    mapping(uint256 => uint256) public donated;                                // _ideas_ids       => (Ideas) donated amount\\r\\n    uint256 private _total_delegations;\\r\\n    string private _validatorAddr  = \\\"evmosvaloper158wwas4v6fgcu2x3plg70s6u0fm0lle237kltr\\\";\\r\\n\\r\\n\\r\\n    uint256 public _dao_ids;\\r\\n    uint256 public _goal_ids;\\r\\n    uint256 public _ideas_ids;\\r\\n    uint256 public _smart_contract_ids;\\r\\n    uint256 public _ideas_vote_ids;\\r\\n    uint256 public _message_ids;\\r\\n    uint256 public _reply_ids;\\r\\n    mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\\r\\n    mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\\r\\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\\r\\n    mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\\r\\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + Wallet\\r\\n\\r\\n    mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\\r\\n\\r\\n    mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\\r\\n\\r\\n    //Daos\\r\\n    function create_dao(\\r\\n        string memory _dao_wallet,\\r\\n        string memory _dao_uri\\r\\n    ) public returns (uint256) {\\r\\n        //Create Dao into _dao_uris\\r\\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, \\\"False\\\");\\r\\n        _dao_ids++;\\r\\n\\r\\n        return _dao_ids;\\r\\n    }\\r\\n\\r\\n    function set_dao(\\r\\n        uint256 _dao_id,\\r\\n        string memory _dao_wallet,\\r\\n        string memory _dao_uri\\r\\n    ) public {\\r\\n        //Set Dao of wallet and uri\\r\\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\\r\\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_daos() public view returns (string[] memory) {\\r\\n        //Getting all doas\\r\\n        string[] memory _StoreInfo = new string[](_dao_ids);\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) {\\r\\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\\r\\n        //Getting one dao URI\\r\\n        return _dao_uris[_dao_id].dao_uri;\\r\\n    }\\r\\n\\r\\n    //Goals\\r\\n    function create_goal(\\r\\n        string memory _goal_uri,\\r\\n        uint256 _dao_id\\r\\n    ) public returns (uint256) {\\r\\n        //Create goal into _goal_uris\\r\\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\\r\\n        _goal_ids++;\\r\\n\\r\\n        return _goal_ids;\\r\\n    }\\r\\n\\r\\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\\r\\n        //Set goal uri\\r\\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_goals() public view returns (string[] memory) {\\r\\n        //Getting all goals\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_goals_by_dao_id(\\r\\n        uint256 _dao_id\\r\\n    ) public view returns (string[] memory) {\\r\\n        //Getting all goals by dao id\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (_goal_uris[i].dao_id == _dao_id) {\\r\\n                _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\\r\\n                _store_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_by_goal_uri(\\r\\n        string memory _goal_uri\\r\\n    ) public view returns (uint256) {\\r\\n        //Getting goal id by uri\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(_goal_uris[i].goal_uri)) ==\\r\\n                keccak256(bytes(_goal_uri))\\r\\n            ) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\\r\\n        //Getting one goal URI\\r\\n        return _goal_uris[_goal_id].goal_uri;\\r\\n    }\\r\\n\\r\\n    //Ideas\\r\\n    function create_ideas(\\r\\n        string memory _ideas_uri,\\r\\n        uint256 _goal_id,\\r\\n        string[] memory _smart_contracts\\r\\n    ) public returns (uint256) {\\r\\n        //Create ideas into _ideas_uris\\r\\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\\r\\n        _ideas_ids++;\\r\\n\\r\\n        for (uint256 i = 0; i < _smart_contracts.length; i++) {\\r\\n            create_ideas_smart_contract(\\r\\n                _ideas_ids,\\r\\n                _smart_contract_ids,\\r\\n                _smart_contracts[i]\\r\\n            );\\r\\n            _smart_contract_ids++;\\r\\n        }\\r\\n\\r\\n        return _ideas_ids;\\r\\n    }\\r\\n\\r\\n    function create_ideas_smart_contract(\\r\\n        uint256 _ideas_id,\\r\\n        uint256 _smart_contract_id,\\r\\n        string memory _smart_contract\\r\\n    ) private {\\r\\n        _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(\\r\\n            _ideas_id,\\r\\n            _smart_contract_id,\\r\\n            _smart_contract\\r\\n        );\\r\\n        \\r\\n    }\\r\\n\\r\\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\\r\\n        //Set ideas uri\\r\\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\\r\\n    }\\r\\n\\r\\n    function add_donation(uint256 _ideas_id, uint256 _doantion) public {\\r\\n        //Set ideas uri\\r\\n        _ideas_uris[_ideas_id].donation += _doantion;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas() public view returns (string[] memory) {\\r\\n        //Getting all ideas\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas_by_goal_id(\\r\\n        uint256 _goal_id\\r\\n    ) public view returns (string[] memory) {\\r\\n        //Getting all ideas by goal id\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (_ideas_uris[i].goal_id == _goal_id)\\r\\n                _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\\r\\n            _store_id++;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_ideas_id_by_ideas_uri(\\r\\n        string memory _ideas_uri\\r\\n    ) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(_ideas_uris[i].ideas_uri)) ==\\r\\n                keccak256(bytes(_ideas_uri))\\r\\n            ) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_from_ideas_uri(\\r\\n        string memory _ideas_uri\\r\\n    ) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(_ideas_uris[i].ideas_uri)) ==\\r\\n                keccak256(bytes(_ideas_uri))\\r\\n            ) return _ideas_uris[i].goal_id;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\\r\\n        //Getting one ideas URI\\r\\n        return _ideas_uris[_ideas_id].ideas_uri;\\r\\n    }\\r\\n\\r\\n    //Votes\\r\\n    function create_goal_ideas_vote(\\r\\n        uint256 _goal_id,\\r\\n        uint256 _ideas_id,\\r\\n        string memory _wallet\\r\\n    ) public returns (uint256) {\\r\\n        //Create votes into all_goal_ideas_votes\\r\\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(\\r\\n            _goal_id,\\r\\n            _ideas_id,\\r\\n            _wallet\\r\\n        );\\r\\n        _ideas_vote_ids++;\\r\\n\\r\\n        return _ideas_vote_ids;\\r\\n    }\\r\\n\\r\\n    function get_ideas_votes_from_goal(\\r\\n        uint256 _goal_id,\\r\\n        uint256 _ideas_id\\r\\n    ) public view returns (string[] memory) {\\r\\n        //gets all ideas votes from goal\\r\\n        string[] memory _StoreInfo = new string[](_ideas_vote_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\\r\\n            if (\\r\\n                all_goal_ideas_votes[i].goal_id == _goal_id &&\\r\\n                all_goal_ideas_votes[i].ideas_id == _ideas_id\\r\\n            ) _StoreInfo[_store_id] = all_goal_ideas_votes[i].wallet;\\r\\n            _store_id++;\\r\\n        }\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n    \\r\\n    //Messages\\r\\n     function sendMsg(\\r\\n        uint256 _ideas_id,\\r\\n        string memory _message\\r\\n    ) public returns (uint256) {\\r\\n        //Create messsage into all_messages\\r\\n        all_messages[_message_ids] = message_struct(\\r\\n            _message_ids,\\r\\n            _ideas_id,\\r\\n            _message\\r\\n        );\\r\\n        _message_ids++;\\r\\n\\r\\n        return _message_ids;\\r\\n    }\\r\\n   \\r\\n\\r\\n    function getMsgIDs(\\r\\n        uint256 ideas_id\\r\\n    ) public view returns (uint256[] memory ) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\\r\\n        uint256 _msg_id;\\r\\n        for (uint256 i = 0; i < _message_ids; i++) {\\r\\n            if (all_messages[i].ideas_id == ideas_id) {\\r\\n                _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\\r\\n                _msg_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Ideas_Messages;\\r\\n    }\\r\\n    function sendReply(\\r\\n        uint256 _message_id,\\r\\n        string memory _reply\\r\\n    ) public returns (uint256) {\\r\\n        //Create reply into all_replies\\r\\n        all_replies[_reply_ids] = reply_struct(\\r\\n            _reply_ids,\\r\\n            _message_id,\\r\\n            _reply\\r\\n        );\\r\\n        _reply_ids++;\\r\\n\\r\\n        return _reply_ids;\\r\\n    }\\r\\n\\r\\n    function getReplyIDs(\\r\\n        uint256 message_id\\r\\n    ) public view returns (uint256[] memory ) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\\r\\n        uint256 _reply_id;\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) {\\r\\n            if (all_replies[i].message_id == message_id) {\\r\\n                _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\\r\\n                _reply_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Messages_Replys;\\r\\n    }\\r\\n\\r\\n\\r\\n    // Doante with a validator Address\\r\\n    function donate(uint256 _idea_id,uint256 _amount) public payable  {\\r\\n        _approveRequiredMsgs();\\r\\n        donated[_idea_id] += _amount;\\r\\n    }\\r\\n\\r\\n    function stake(uint256 _amount) public {\\r\\n        STAKING_CONTRACT.delegate(address(this), _validatorAddr, _amount);\\r\\n\\r\\n    }\\r\\n\\r\\n    function redeemDonatedMoney(uint256 _idea_id) public returns (string memory) {      \\r\\n        _approveRequiredMsgs();\\r\\n        //Sotring Rewards to smart contract\\r\\n        Coin[] memory newRewards = DISTRIBUTION_CONTRACT.withdrawDelegatorRewards(address(this), _validatorAddr);\\r\\n        _total_delegations +=  newRewards[0].amount;\\r\\n\\r\\n        //Withdrawing donated amount with rewards\\r\\n        uint256 _amount = donated[_idea_id];\\r\\n        STAKING_CONTRACT.undelegate(address(this), _validatorAddr, _amount);\\r\\n        uint256 _donated_amount = _amount + newRewards[0].amount;\\r\\n        (bool sent,) = payable(msg.sender).call{value: _donated_amount}(\\\"\\\");     \\r\\n        donated[_idea_id] = 0;\\r\\n        return  \\\"Sent Money to idea owner\\\";\\r\\n    }\\r\\n    function withdrawAllMoney() public  {\\r\\n        uint256 _amount = address(this).balance;\\r\\n        (bool sent,) = payable(msg.sender).call{value: _amount}(\\\"\\\");     \\r\\n    }\\r\\n    function getContractBalance() public view returns (uint) {\\r\\n     return address(this).balance;\\r\\n    }\\r\\n    \\r\\n    function getContractRewards() public view returns (DecCoin[] memory) {\\r\\n        return DISTRIBUTION_CONTRACT.delegationRewards(address(this), _validatorAddr);\\r\\n    }\\r\\n\\r\\n    function getDelegation() public view returns (uint256) {\\r\\n        (uint256 denom , Coin memory coin ) =  STAKING_CONTRACT.delegation(address(this), _validatorAddr);\\r\\n        return coin.amount;\\r\\n    }\\r\\n\\r\\n    function getUnbondingDelegation() public view returns (UnbondingDelegationEntry[] memory) {\\r\\n        return STAKING_CONTRACT.unbondingDelegation(address(this), _validatorAddr);\\r\\n    }\\r\\n\\r\\n\\r\\n    function reset_all() public {\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\\r\\n        for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++)delete all_goal_ideas_votes[i];\\r\\n        _dao_ids = 0;\\r\\n        _goal_ids = 0;\\r\\n        _ideas_ids = 0;\\r\\n        _message_ids = 0;\\r\\n        _reply_ids = 0;        \\r\\n        _ideas_vote_ids = 0;\\r\\n    }\\r\\n    /// @dev approves the staking and distribution contracts for donating\\r\\n    function _approveRequiredMsgs() public {\\r\\n        bool successStk = STAKING_CONTRACT.approve(tx.origin,   type(uint256).max, stakingMethods);\\r\\n        require(successStk, \\\"Staking Approve failed\\\");\\r\\n        bool successDist = DISTRIBUTION_CONTRACT.approve(tx.origin, distributionMethods);\\r\\n        require(successDist, \\\"Distribution Approve failed\\\");\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd0126f5b6da3bcb5146d4648abe11948dd7dee744ef9926d7383fafce3597b9b\",\"license\":\"MIT\"},\"contracts/precompiles/common/Authorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface AuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function increaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n\\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend\\n    /// on behalf of the owner through IBC transfer methods or staking. This is zero by default.\\n    /// @param owner The address of the account owning tokens.\\n    /// @param spender The address of the account able to transfer the tokens.\\n    /// @param method The message type URL of the methods for which the approval should be queried.\\n    /// @return remaining The remaining number of tokens available to be spent.\\n    function allowance(\\n        address owner,\\n        address spender,\\n        string calldata method\\n    ) external view returns (uint256 remaining);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param value The amount of tokens approved to be spent.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256 value\\n    );\\n\\n    /// @dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\\n    /// allowance method. The values field specifies the new allowances and the methods field holds the\\n    /// information for which methods the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param values The amounts of tokens approved to be spent.\\n    event AllowanceChange(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256[] values\\n    );\\n}\\n\",\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/common/GenericAuthorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface GenericAuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Revokes a list of Cosmos transactions.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to revoke.\\n    /// @return revoked Boolean value to indicate if the revocation was successful.\\n    function revoke(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool revoked);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n\\n    /// @dev This event is emitted when an owner revokes a spender's allowance.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Revocation(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n}\\n\",\"keccak256\":\"0x5560defd75b84c2d333dc68120a9d425423ff7cd0c443fcd50209f9d0e0dff88\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/common/Types.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nstruct Dec {\\n    uint256 value;\\n    uint8 precision;\\n}\\n\\n/// @dev Coin is a struct that represents a token with a denomination and an amount.\\nstruct Coin {\\n    string denom;\\n    uint256 amount;\\n}\\n\\n/// @dev DecCoin is a struct that represents a token with a denomination, an amount and a precision.\\nstruct DecCoin {\\n    string denom;\\n    uint256 amount;\\n    uint8 precision;\\n}\\n\\n/// @dev PageResponse is a struct that represents a page response.\\nstruct PageResponse {\\n    bytes nextKey;\\n    uint64 total;\\n}\\n\",\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/stateful/Distribution.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nimport \\\"../common/GenericAuthorization.sol\\\" as genericAuth;\\nimport \\\"../common/Types.sol\\\";\\n\\n/// @dev The DistributionI contract's address.\\naddress constant DISTRIBUTION_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000801;\\n\\n/// @dev Define all the available distribution methods.\\nstring constant MSG_SET_WITHDRAWER_ADDRESS = \\\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\\\";\\nstring constant MSG_WITHDRAW_DELEGATOR_REWARD = \\\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\\\";\\nstring constant MSG_WITHDRAW_VALIDATOR_COMMISSION = \\\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\\\";\\n\\n/// @dev The DistributionI contract's instance.\\nDistributionI constant DISTRIBUTION_CONTRACT = DistributionI(DISTRIBUTION_PRECOMPILE_ADDRESS);\\n\\nstruct ValidatorSlashEvent {\\n    uint64 validatorPeriod;\\n    Dec fraction;\\n}\\n\\nstruct ValidatorDistributionInfo {\\n    string operatorAddress;\\n    DecCoin[] selfBondRewards;\\n    DecCoin[] commission;\\n}\\n\\nstruct DelegationDelegatorReward {\\n    string validatorAddress;\\n    DecCoin[] reward;\\n}\\n\\n/// @author Evmos Team\\n/// @title Distribution Precompile Contract\\n/// @dev The interface through which solidity contracts will interact with Distribution\\n/// @custom:address 0x0000000000000000000000000000000000000801\\ninterface DistributionI is genericAuth.GenericAuthorizationI {\\n    /// TRANSACTIONS\\n    /// @dev Change the address, that can withdraw the rewards of a delegator.\\n    /// Note that this address cannot be a module account.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param withdrawerAddress The address that will be capable of withdrawing rewards for\\n    /// the given delegator address\\n    function setWithdrawAddress(\\n        address delegatorAddress,\\n        string memory withdrawerAddress\\n    ) external returns (bool success);\\n\\n    /// @dev Withdraw the rewards of a delegator from a validator\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @return amount The amount of Coin withdrawn\\n    function withdrawDelegatorRewards(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    )\\n    external\\n    returns (\\n        Coin[] calldata amount\\n    );\\n\\n    /// @dev Withdraws the rewards commission of a validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return amount The amount of Coin withdrawn\\n    function withdrawValidatorCommission(\\n        string memory validatorAddress\\n    )\\n    external\\n    returns (\\n        Coin[] calldata amount\\n    );\\n\\n    /// QUERIES\\n    /// @dev Queries validator commission and self-delegation rewards for validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return distributionInfo The validator's distribution info\\n    function validatorDistributionInfo(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        ValidatorDistributionInfo[] calldata distributionInfo // FIXME: remove unnecessary slice\\n    );\\n\\n    /// @dev Queries the outstanding rewards of a validator address.\\n    /// @param validatorAddress The address of the validator\\n    /// @return rewards The validator's outstanding rewards\\n    function validatorOutstandingRewards(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata rewards\\n    );\\n\\n    /// @dev Queries the accumulated commission for a validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return commission The validator's commission\\n    function validatorCommission(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata commission\\n    );\\n\\n    /// @dev Queries the slashing events for a validator in a given height interval\\n    /// defined by the starting and ending height.\\n    /// @param validatorAddress The address of the validator\\n    /// @param startingHeight The starting height\\n    /// @param endingHeight The ending height\\n    /// @return slashes The validator's slash events\\n    /// @return pageResponse The pagination response for the query\\n    function validatorSlashes(\\n        string memory validatorAddress,\\n        uint64 startingHeight,\\n        uint64 endingHeight\\n    )\\n    external\\n    view\\n    returns (\\n        ValidatorSlashEvent[] calldata slashes,\\n        PageResponse calldata pageResponse\\n    );\\n\\n    /// @dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @return rewards The total rewards accrued by a delegation.\\n    function delegationRewards(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata rewards\\n    );\\n\\n    /// @dev Queries the total rewards accrued by each validator, that a given\\n    /// address has delegated to.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return rewards The total rewards accrued by each validator for a delegator.\\n    /// @return total The total rewards accrued by a delegator.\\n    function delegationTotalRewards(\\n        address delegatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DelegationDelegatorReward[] calldata rewards,\\n        DecCoin[] calldata total\\n    );\\n\\n    /// @dev Queries all validators, that a given address has delegated to.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return validators The addresses of all validators, that were delegated to by the given address.\\n    function delegatorValidators(\\n        address delegatorAddress\\n    ) external view returns (string[] calldata validators);\\n\\n    /// @dev Queries the address capable of withdrawing rewards for a given delegator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return withdrawAddress The address capable of withdrawing rewards for the delegator.\\n    function delegatorWithdrawAddress(\\n        address delegatorAddress\\n    ) external view returns (string memory withdrawAddress);\\n\\n    /// @dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\\n    /// @param caller the caller of the transaction\\n    /// @param withdrawerAddress the newly set withdrawer address\\n    event SetWithdrawerAddress(\\n        address indexed caller,\\n        string withdrawerAddress\\n    );\\n\\n    /// @dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\\n    /// @param delegatorAddress the address of the delegator\\n    /// @param validatorAddress the address of the validator\\n    /// @param amount the amount being withdrawn from the delegation\\n    event WithdrawDelegatorRewards(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount\\n    );\\n\\n    /// @dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\\n    /// @param validatorAddress is the address of the validator\\n    /// @param commission is the total commission earned by the validator\\n    event WithdrawValidatorCommission(\\n        string indexed validatorAddress,\\n        uint256 commission\\n    );\\n}\\n\",\"keccak256\":\"0x6815efb027a2ce3fc4d43073ac9e1dc117b156a74951c17b19f3f531483dc9e1\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/stateful/Staking.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nimport \\\"../common/Authorization.sol\\\" as authorization;\\nimport \\\"../common/Types.sol\\\";\\n\\n/// @dev The StakingI contract's address.\\naddress constant STAKING_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000800;\\n\\n/// @dev The StakingI contract's instance.\\nStakingI constant STAKING_CONTRACT = StakingI(STAKING_PRECOMPILE_ADDRESS);\\n\\n/// @dev Define all the available staking methods.\\nstring constant MSG_DELEGATE = \\\"/cosmos.staking.v1beta1.MsgDelegate\\\";\\nstring constant MSG_UNDELEGATE = \\\"/cosmos.staking.v1beta1.MsgUndelegate\\\";\\nstring constant MSG_REDELEGATE = \\\"/cosmos.staking.v1beta1.MsgBeginRedelegate\\\";\\nstring constant MSG_CANCEL_UNDELEGATION = \\\"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\\\";\\n\\n/// @dev Defines the initial commission rates to be used for creating\\n/// a validator.\\nstruct CommissionRates {\\n    uint256 rate;\\n    uint256 maxRate;\\n    uint256 maxChangeRate;\\n}\\n\\n/// @dev Defines commission parameters for a given validator.\\nstruct Commission {\\n    CommissionRates commissionRates;\\n    uint256 updateTime;\\n}\\n\\n\\n/// @dev Represents a validator in the staking module.\\nstruct Validator {\\n    string operatorAddress;\\n    string consensusPubkey;\\n    bool jailed;\\n    BondStatus status;\\n    uint256 tokens;\\n    uint256 delegatorShares;\\n    string description;\\n    int64 unbondingHeight;\\n    int64 unbondingTime;\\n    uint256 commission;\\n    uint256 minSelfDelegation;\\n}\\n\\nstruct RedelegationResponse {\\n    Redelegation redelegation;\\n    RedelegationEntryResponse[] entries;\\n}\\n\\nstruct Redelegation {\\n    RedelegationEntry[] entries;\\n}\\n\\nstruct RedelegationEntryResponse {\\n    RedelegationEntry redelegationEntry;\\n    uint256 balance;\\n}\\n\\nstruct RedelegationEntry {\\n    int64 creationHeight;\\n    int64 completionTime;\\n    uint256 initialBalance;\\n    uint256 sharesDst;\\n}\\n\\nstruct UnbondingDelegationEntry {\\n    int64 creationHeight;\\n    int64 completionTime;\\n    uint256 initialBalance;\\n    uint256 balance;\\n}\\n\\nstruct PageRequest {\\n    bytes key;\\n    uint64 offset;\\n    uint64 limit;\\n    bool countTotal;\\n    bool reverse;\\n}\\n\\n/// @dev The status of the validator.\\nenum BondStatus {\\n    Unspecified,\\n    Unbonded,\\n    Unbonding,\\n    Bonded\\n}\\n\\n/// @author Evmos Team\\n/// @title Staking Precompiled Contract\\n/// @dev The interface through which solidity contracts will interact with staking.\\n/// We follow this same interface including four-byte function selectors, in the precompile that\\n/// wraps the pallet.\\n/// @custom:address 0x0000000000000000000000000000000000000800\\ninterface StakingI is authorization.AuthorizationI {\\n    /// @dev Defines a method for performing a delegation of coins from a delegator to a validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of the Coin to be delegated to the validator\\n    function delegate(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Defines a method for performing an undelegation from a delegate and a validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount to be undelegated from the validator\\n    /// @return completionTime The time when the undelegation is completed\\n    function undelegate(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Defines a method for performing a redelegation\\n    /// of coins from a delegator and source validator to a destination validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorSrcAddress The validator from which the redelegation is initiated\\n    /// @param validatorDstAddress The validator to which the redelegation is destined\\n    /// @param amount The amount to be redelegated to the validator\\n    /// @return completionTime The time when the redelegation is completed\\n    function redelegate(\\n        address delegatorAddress,\\n        string memory validatorSrcAddress,\\n        string memory validatorDstAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Allows delegators to cancel the unbondingDelegation entry\\n    /// and to delegate back to a previous validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of the Coin\\n    /// @param creationHeight The height at which the unbonding took place\\n    /// @return completionTime The time when the cancellation of the unbonding delegation is completed\\n    function cancelUnbondingDelegation(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount,\\n        uint256 creationHeight\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Queries the given amount of the bond denomination to a validator.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return shares The amount of shares, that the delegator has received.\\n    /// @return balance The amount in Coin, that the delegator has delegated to the given validator.\\n    function delegation(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    ) external view returns (uint256 shares, Coin calldata balance);\\n\\n    /// @dev Returns the delegation shares and coins, that are currently\\n    /// unbonding for a given delegator and validator pair.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return entries The delegations that are currently unbonding.\\n    function unbondingDelegation(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    ) external view returns (UnbondingDelegationEntry[] calldata entries);\\n\\n    /// @dev Queries validator info for a given validator address.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return validators The validator info for the given validator address.\\n    function validator(\\n        string memory validatorAddress\\n    )\\n    external view returns (\\n        Validator[] calldata validators\\n    );\\n\\n    /// @dev Queries all validators that match the given status.\\n    /// @param status Enables to query for validators matching a given status.\\n    /// @param pageRequest Defines an optional pagination for the request.\\n    function validators(\\n        string memory status,\\n        PageRequest calldata pageRequest\\n    ) external view returns (\\n        Validator[] calldata validators,\\n        PageResponse calldata pageResponse\\n    );\\n\\n    /// @dev Queries all redelegations from a source to a destination validator for a given delegator.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\\n    /// @return entries The active redelegations for the given delegator, source and destination validator combination.\\n    function redelegation(\\n        address delegatorAddress,\\n        string memory srcValidatorAddress,\\n        string memory dstValidatorAddress\\n    ) external view returns (RedelegationEntry[] calldata entries);\\n\\n    /// @dev Queries all redelegations from a source to to a destination validator\\n    /// for a given delegator in a specified pagination manner.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\\n    /// @param pageRequest Defines an optional pagination for the request.\\n    /// @return response Holds the redelegations for the given delegator, source and destination validator combination.\\n    function redelegations(\\n        address delegatorAddress,\\n        string memory srcValidatorAddress,\\n        string memory dstValidatorAddress,\\n        PageRequest calldata pageRequest\\n    ) external view returns (RedelegationResponse calldata response);\\n\\n    /// @dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\\n    /// delegator address to the validator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin being delegated\\n    /// @param newShares The new delegation shares being held\\n    event Delegate(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 newShares\\n    );\\n\\n    /// @dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\\n    /// validator address to the delegator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin being unbonded\\n    /// @param completionTime The time at which the unbonding is completed\\n    event Unbond(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 completionTime\\n    );\\n\\n    /// @dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\\n    /// the source validator address to the destination validator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorSrcAddress The address of the validator from which the delegation is retracted\\n    /// @param validatorDstAddress The address of the validator to which the delegation is directed\\n    /// @param amount The amount of Coin being redelegated\\n    /// @param completionTime The time at which the redelegation is completed\\n    event Redelegate(\\n        address indexed delegatorAddress,\\n        string indexed validatorSrcAddress,\\n        string indexed validatorDstAddress,\\n        uint256 amount,\\n        uint256 completionTime\\n    );\\n\\n    /// @dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\\n    /// that are in the process of unbonding from the validator address are bonded again.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin that was in the unbonding process which is to be cancelled\\n    /// @param creationHeight The block height at which the unbonding of a delegation was initiated\\n    event CancelUnbondingDelegation(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 creationHeight\\n    );\\n}\\n\",\"keccak256\":\"0x774d4bf7a848893697fa75fa11a2ec288e6df6f010f9bdd8b3c6010ef007ac67\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1259,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"stakingMethods","offset":0,"slot":"0","type":"t_array(t_string_storage)dyn_storage"},{"astId":1264,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"distributionMethods","offset":0,"slot":"1","type":"t_array(t_string_storage)dyn_storage"},{"astId":1269,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"donated","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1271,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_total_delegations","offset":0,"slot":"3","type":"t_uint256"},{"astId":1274,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_validatorAddr","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1276,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_dao_ids","offset":0,"slot":"5","type":"t_uint256"},{"astId":1278,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_goal_ids","offset":0,"slot":"6","type":"t_uint256"},{"astId":1280,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_ideas_ids","offset":0,"slot":"7","type":"t_uint256"},{"astId":1282,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_smart_contract_ids","offset":0,"slot":"8","type":"t_uint256"},{"astId":1284,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_ideas_vote_ids","offset":0,"slot":"9","type":"t_uint256"},{"astId":1286,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_message_ids","offset":0,"slot":"10","type":"t_uint256"},{"astId":1288,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_reply_ids","offset":0,"slot":"11","type":"t_uint256"},{"astId":1293,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_dao_uris","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_struct(dao_uri_struct)1211_storage)"},{"astId":1298,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_goal_uris","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(goal_uri_struct)1216_storage)"},{"astId":1303,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_ideas_uris","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(ideas_uri_struct)1223_storage)"},{"astId":1308,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_smart_contracts_uris","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1230_storage)"},{"astId":1313,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"all_goal_ideas_votes","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1237_storage)"},{"astId":1318,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"all_messages","offset":0,"slot":"17","type":"t_mapping(t_uint256,t_struct(message_struct)1244_storage)"},{"astId":1323,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"all_replies","offset":0,"slot":"18","type":"t_mapping(t_uint256,t_struct(reply_struct)1251_storage)"}],"types":{"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_mapping(t_uint256,t_struct(dao_uri_struct)1211_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.dao_uri_struct)","numberOfBytes":"32","value":"t_struct(dao_uri_struct)1211_storage"},"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1237_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct)","numberOfBytes":"32","value":"t_struct(goal_ideas_votes_struct)1237_storage"},"t_mapping(t_uint256,t_struct(goal_uri_struct)1216_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.goal_uri_struct)","numberOfBytes":"32","value":"t_struct(goal_uri_struct)1216_storage"},"t_mapping(t_uint256,t_struct(ideas_uri_struct)1223_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.ideas_uri_struct)","numberOfBytes":"32","value":"t_struct(ideas_uri_struct)1223_storage"},"t_mapping(t_uint256,t_struct(message_struct)1244_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.message_struct)","numberOfBytes":"32","value":"t_struct(message_struct)1244_storage"},"t_mapping(t_uint256,t_struct(reply_struct)1251_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.reply_struct)","numberOfBytes":"32","value":"t_struct(reply_struct)1251_storage"},"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1230_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.smart_contract_uri_struct)","numberOfBytes":"32","value":"t_struct(smart_contract_uri_struct)1230_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(dao_uri_struct)1211_storage":{"encoding":"inplace","label":"struct GreenDAO.dao_uri_struct","members":[{"astId":1206,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"dao_wallet","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1208,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"dao_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1210,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"finished","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(goal_ideas_votes_struct)1237_storage":{"encoding":"inplace","label":"struct GreenDAO.goal_ideas_votes_struct","members":[{"astId":1232,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1234,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1236,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"wallet","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(goal_uri_struct)1216_storage":{"encoding":"inplace","label":"struct GreenDAO.goal_uri_struct","members":[{"astId":1213,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"dao_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1215,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"goal_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_struct(ideas_uri_struct)1223_storage":{"encoding":"inplace","label":"struct GreenDAO.ideas_uri_struct","members":[{"astId":1218,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1220,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"ideas_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1222,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(message_struct)1244_storage":{"encoding":"inplace","label":"struct GreenDAO.message_struct","members":[{"astId":1239,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1241,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1243,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"message","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(reply_struct)1251_storage":{"encoding":"inplace","label":"struct GreenDAO.reply_struct","members":[{"astId":1246,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"reply_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1248,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"message_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1250,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"message","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(smart_contract_uri_struct)1230_storage":{"encoding":"inplace","label":"struct GreenDAO.smart_contract_uri_struct","members":[{"astId":1225,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"smart_contract_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1227,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1229,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"smart_contract_uri","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/common/Authorization.sol":{"AuthorizationI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"AllowanceChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"string","name":"method","type":"string"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"approve","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Evmos Team","details":"The interface through which solidity contracts will interact with smart contract approvals.","events":{"AllowanceChange(address,address,string[],uint256[])":{"details":"This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.","params":{"methods":"The message type URLs of the methods for which the approval is set.","owner":"The owner of the tokens.","spender":"The address which will spend the funds.","values":"The amounts of tokens approved to be spent."}},"Approval(address,address,string[],uint256)":{"details":"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.","params":{"methods":"The message type URLs of the methods for which the approval is set.","owner":"The owner of the tokens.","spender":"The address which will spend the funds.","value":"The amount of tokens approved to be spent."}}},"kind":"dev","methods":{"allowance(address,address,string)":{"details":"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.","params":{"method":"The message type URL of the methods for which the approval should be queried.","owner":"The address of the account owning tokens.","spender":"The address of the account able to transfer the tokens."},"returns":{"remaining":"The remaining number of tokens available to be spent."}},"approve(address,uint256,string[])":{"details":"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"decreaseAllowance(address,uint256,string[])":{"details":"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"increaseAllowance(address,uint256,string[])":{"details":"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}}},"title":"Authorization Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address,string)":"fc08930c","approve(address,uint256,string[])":"b6039895","decreaseAllowance(address,uint256,string[])":"f007d286","increaseAllowance(address,uint256,string[])":"a386a63c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"AllowanceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"details\":\"The interface through which solidity contracts will interact with smart contract approvals.\",\"events\":{\"AllowanceChange(address,address,string[],uint256[])\":{\"details\":\"This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"values\":\"The amounts of tokens approved to be spent.\"}},\"Approval(address,address,string[],uint256)\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens approved to be spent.\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,string)\":{\"details\":\"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.\",\"params\":{\"method\":\"The message type URL of the methods for which the approval should be queried.\",\"owner\":\"The address of the account owning tokens.\",\"spender\":\"The address of the account able to transfer the tokens.\"},\"returns\":{\"remaining\":\"The remaining number of tokens available to be spent.\"}},\"approve(address,uint256,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"decreaseAllowance(address,uint256,string[])\":{\"details\":\"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"increaseAllowance(address,uint256,string[])\":{\"details\":\"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}}},\"title\":\"Authorization Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/common/Authorization.sol\":\"AuthorizationI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/common/Authorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface AuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function increaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n\\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend\\n    /// on behalf of the owner through IBC transfer methods or staking. This is zero by default.\\n    /// @param owner The address of the account owning tokens.\\n    /// @param spender The address of the account able to transfer the tokens.\\n    /// @param method The message type URL of the methods for which the approval should be queried.\\n    /// @return remaining The remaining number of tokens available to be spent.\\n    function allowance(\\n        address owner,\\n        address spender,\\n        string calldata method\\n    ) external view returns (uint256 remaining);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param value The amount of tokens approved to be spent.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256 value\\n    );\\n\\n    /// @dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\\n    /// allowance method. The values field specifies the new allowances and the methods field holds the\\n    /// information for which methods the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param values The amounts of tokens approved to be spent.\\n    event AllowanceChange(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256[] values\\n    );\\n}\\n\",\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/common/GenericAuthorization.sol":{"GenericAuthorizationI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"}],"name":"Revocation","type":"event"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"approve","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"revoke","outputs":[{"internalType":"bool","name":"revoked","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Evmos Team","details":"The interface through which solidity contracts will interact with smart contract approvals.","events":{"Approval(address,address,string[])":{"details":"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.","params":{"methods":"The message type URLs of the methods for which the approval is set.","owner":"The owner of the tokens.","spender":"The address which will spend the funds."}},"Revocation(address,address,string[])":{"details":"This event is emitted when an owner revokes a spender's allowance.","params":{"methods":"The message type URLs of the methods for which the approval is set.","owner":"The owner of the tokens.","spender":"The address which will spend the funds."}}},"kind":"dev","methods":{"approve(address,string[])":{"details":"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.","params":{"methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"revoke(address,string[])":{"details":"Revokes a list of Cosmos transactions.","params":{"methods":"The message type URLs of the methods to revoke.","spender":"The address which will spend the funds."},"returns":{"revoked":"Boolean value to indicate if the revocation was successful."}}},"title":"Authorization Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,string[])":"7a9841ed","revoke(address,string[])":"61dc5c3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Revocation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"details\":\"The interface through which solidity contracts will interact with smart contract approvals.\",\"events\":{\"Approval(address,address,string[])\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\"}},\"Revocation(address,address,string[])\":{\"details\":\"This event is emitted when an owner revokes a spender's allowance.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"revoke(address,string[])\":{\"details\":\"Revokes a list of Cosmos transactions.\",\"params\":{\"methods\":\"The message type URLs of the methods to revoke.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"revoked\":\"Boolean value to indicate if the revocation was successful.\"}}},\"title\":\"Authorization Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/common/GenericAuthorization.sol\":\"GenericAuthorizationI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/common/GenericAuthorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface GenericAuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Revokes a list of Cosmos transactions.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to revoke.\\n    /// @return revoked Boolean value to indicate if the revocation was successful.\\n    function revoke(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool revoked);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n\\n    /// @dev This event is emitted when an owner revokes a spender's allowance.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Revocation(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n}\\n\",\"keccak256\":\"0x5560defd75b84c2d333dc68120a9d425423ff7cd0c443fcd50209f9d0e0dff88\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/stateful/Distribution.sol":{"DistributionI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"}],"name":"Revocation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"string","name":"withdrawerAddress","type":"string"}],"name":"SetWithdrawerAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegatorAddress","type":"address"},{"indexed":true,"internalType":"string","name":"validatorAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WithdrawDelegatorRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"validatorAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"commission","type":"uint256"}],"name":"WithdrawValidatorCommission","type":"event"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"approve","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"delegationRewards","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"rewards","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"}],"name":"delegationTotalRewards","outputs":[{"components":[{"internalType":"string","name":"validatorAddress","type":"string"},{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"reward","type":"tuple[]"}],"internalType":"struct DelegationDelegatorReward[]","name":"rewards","type":"tuple[]"},{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"total","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"}],"name":"delegatorValidators","outputs":[{"internalType":"string[]","name":"validators","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"}],"name":"delegatorWithdrawAddress","outputs":[{"internalType":"string","name":"withdrawAddress","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"revoke","outputs":[{"internalType":"bool","name":"revoked","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"withdrawerAddress","type":"string"}],"name":"setWithdrawAddress","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"validatorCommission","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"commission","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"validatorDistributionInfo","outputs":[{"components":[{"internalType":"string","name":"operatorAddress","type":"string"},{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"selfBondRewards","type":"tuple[]"},{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"commission","type":"tuple[]"}],"internalType":"struct ValidatorDistributionInfo[]","name":"distributionInfo","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"validatorOutstandingRewards","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct DecCoin[]","name":"rewards","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"},{"internalType":"uint64","name":"startingHeight","type":"uint64"},{"internalType":"uint64","name":"endingHeight","type":"uint64"}],"name":"validatorSlashes","outputs":[{"components":[{"internalType":"uint64","name":"validatorPeriod","type":"uint64"},{"components":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint8","name":"precision","type":"uint8"}],"internalType":"struct Dec","name":"fraction","type":"tuple"}],"internalType":"struct ValidatorSlashEvent[]","name":"slashes","type":"tuple[]"},{"components":[{"internalType":"bytes","name":"nextKey","type":"bytes"},{"internalType":"uint64","name":"total","type":"uint64"}],"internalType":"struct PageResponse","name":"pageResponse","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"withdrawDelegatorRewards","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Coin[]","name":"amount","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"withdrawValidatorCommission","outputs":[{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Coin[]","name":"amount","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Evmos Team","custom:address":"0x0000000000000000000000000000000000000801","details":"The interface through which solidity contracts will interact with Distribution","events":{"SetWithdrawerAddress(address,string)":{"details":"SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set","params":{"caller":"the caller of the transaction","withdrawerAddress":"the newly set withdrawer address"}},"WithdrawDelegatorRewards(address,string,uint256)":{"details":"WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn","params":{"amount":"the amount being withdrawn from the delegation","delegatorAddress":"the address of the delegator","validatorAddress":"the address of the validator"}},"WithdrawValidatorCommission(string,uint256)":{"details":"WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn","params":{"commission":"is the total commission earned by the validator","validatorAddress":"is the address of the validator"}}},"kind":"dev","methods":{"approve(address,string[])":{"details":"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.","params":{"methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"delegationRewards(address,string)":{"details":"Queries the total rewards accrued by a delegation from a specific address to a given validator.","params":{"delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"},"returns":{"rewards":"The total rewards accrued by a delegation."}},"delegationTotalRewards(address)":{"details":"Queries the total rewards accrued by each validator, that a given address has delegated to.","params":{"delegatorAddress":"The address of the delegator"},"returns":{"rewards":"The total rewards accrued by each validator for a delegator.","total":"The total rewards accrued by a delegator."}},"delegatorValidators(address)":{"details":"Queries all validators, that a given address has delegated to.","params":{"delegatorAddress":"The address of the delegator"},"returns":{"validators":"The addresses of all validators, that were delegated to by the given address."}},"delegatorWithdrawAddress(address)":{"details":"Queries the address capable of withdrawing rewards for a given delegator.","params":{"delegatorAddress":"The address of the delegator"},"returns":{"withdrawAddress":"The address capable of withdrawing rewards for the delegator."}},"revoke(address,string[])":{"details":"Revokes a list of Cosmos transactions.","params":{"methods":"The message type URLs of the methods to revoke.","spender":"The address which will spend the funds."},"returns":{"revoked":"Boolean value to indicate if the revocation was successful."}},"setWithdrawAddress(address,string)":{"details":"Change the address, that can withdraw the rewards of a delegator. Note that this address cannot be a module account.","params":{"delegatorAddress":"The address of the delegator","withdrawerAddress":"The address that will be capable of withdrawing rewards for the given delegator address"}},"validatorCommission(string)":{"details":"Queries the accumulated commission for a validator.","params":{"validatorAddress":"The address of the validator"},"returns":{"commission":"The validator's commission"}},"validatorDistributionInfo(string)":{"details":"Queries validator commission and self-delegation rewards for validator.","params":{"validatorAddress":"The address of the validator"},"returns":{"distributionInfo":"The validator's distribution info"}},"validatorOutstandingRewards(string)":{"details":"Queries the outstanding rewards of a validator address.","params":{"validatorAddress":"The address of the validator"},"returns":{"rewards":"The validator's outstanding rewards"}},"validatorSlashes(string,uint64,uint64)":{"details":"Queries the slashing events for a validator in a given height interval defined by the starting and ending height.","params":{"endingHeight":"The ending height","startingHeight":"The starting height","validatorAddress":"The address of the validator"},"returns":{"pageResponse":"The pagination response for the query","slashes":"The validator's slash events"}},"withdrawDelegatorRewards(address,string)":{"details":"Withdraw the rewards of a delegator from a validator","params":{"delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"},"returns":{"amount":"The amount of Coin withdrawn"}},"withdrawValidatorCommission(string)":{"details":"Withdraws the rewards commission of a validator.","params":{"validatorAddress":"The address of the validator"},"returns":{"amount":"The amount of Coin withdrawn"}}},"title":"Distribution Precompile Contract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,string[])":"7a9841ed","delegationRewards(address,string)":"9ad563b4","delegationTotalRewards(address)":"54be1a28","delegatorValidators(address)":"a66cb605","delegatorWithdrawAddress(address)":"5431f450","revoke(address,string[])":"61dc5c3b","setWithdrawAddress(address,string)":"5a9d9a96","validatorCommission(string)":"3dd40f78","validatorDistributionInfo(string)":"54212a89","validatorOutstandingRewards(string)":"85b2d2da","validatorSlashes(string,uint64,uint64)":"a75395a5","withdrawDelegatorRewards(address,string)":"b46a8d61","withdrawValidatorCommission(string)":"3ce4e3be"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Revocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"withdrawerAddress\",\"type\":\"string\"}],\"name\":\"SetWithdrawerAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawDelegatorRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"}],\"name\":\"WithdrawValidatorCommission\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"delegationRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegationTotalRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"reward\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DelegationDelegatorReward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"total\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegatorValidators\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"validators\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegatorWithdrawAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"withdrawAddress\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"withdrawerAddress\",\"type\":\"string\"}],\"name\":\"setWithdrawAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorCommission\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"commission\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorDistributionInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"selfBondRewards\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"commission\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ValidatorDistributionInfo[]\",\"name\":\"distributionInfo\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorOutstandingRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"startingHeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endingHeight\",\"type\":\"uint64\"}],\"name\":\"validatorSlashes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"validatorPeriod\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct Dec\",\"name\":\"fraction\",\"type\":\"tuple\"}],\"internalType\":\"struct ValidatorSlashEvent[]\",\"name\":\"slashes\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nextKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"total\",\"type\":\"uint64\"}],\"internalType\":\"struct PageResponse\",\"name\":\"pageResponse\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"withdrawDelegatorRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin[]\",\"name\":\"amount\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"withdrawValidatorCommission\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin[]\",\"name\":\"amount\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"custom:address\":\"0x0000000000000000000000000000000000000801\",\"details\":\"The interface through which solidity contracts will interact with Distribution\",\"events\":{\"SetWithdrawerAddress(address,string)\":{\"details\":\"SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\",\"params\":{\"caller\":\"the caller of the transaction\",\"withdrawerAddress\":\"the newly set withdrawer address\"}},\"WithdrawDelegatorRewards(address,string,uint256)\":{\"details\":\"WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\",\"params\":{\"amount\":\"the amount being withdrawn from the delegation\",\"delegatorAddress\":\"the address of the delegator\",\"validatorAddress\":\"the address of the validator\"}},\"WithdrawValidatorCommission(string,uint256)\":{\"details\":\"WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\",\"params\":{\"commission\":\"is the total commission earned by the validator\",\"validatorAddress\":\"is the address of the validator\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"delegationRewards(address,string)\":{\"details\":\"Queries the total rewards accrued by a delegation from a specific address to a given validator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"rewards\":\"The total rewards accrued by a delegation.\"}},\"delegationTotalRewards(address)\":{\"details\":\"Queries the total rewards accrued by each validator, that a given address has delegated to.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"rewards\":\"The total rewards accrued by each validator for a delegator.\",\"total\":\"The total rewards accrued by a delegator.\"}},\"delegatorValidators(address)\":{\"details\":\"Queries all validators, that a given address has delegated to.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"validators\":\"The addresses of all validators, that were delegated to by the given address.\"}},\"delegatorWithdrawAddress(address)\":{\"details\":\"Queries the address capable of withdrawing rewards for a given delegator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"withdrawAddress\":\"The address capable of withdrawing rewards for the delegator.\"}},\"revoke(address,string[])\":{\"details\":\"Revokes a list of Cosmos transactions.\",\"params\":{\"methods\":\"The message type URLs of the methods to revoke.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"revoked\":\"Boolean value to indicate if the revocation was successful.\"}},\"setWithdrawAddress(address,string)\":{\"details\":\"Change the address, that can withdraw the rewards of a delegator. Note that this address cannot be a module account.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"withdrawerAddress\":\"The address that will be capable of withdrawing rewards for the given delegator address\"}},\"validatorCommission(string)\":{\"details\":\"Queries the accumulated commission for a validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"commission\":\"The validator's commission\"}},\"validatorDistributionInfo(string)\":{\"details\":\"Queries validator commission and self-delegation rewards for validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"distributionInfo\":\"The validator's distribution info\"}},\"validatorOutstandingRewards(string)\":{\"details\":\"Queries the outstanding rewards of a validator address.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"rewards\":\"The validator's outstanding rewards\"}},\"validatorSlashes(string,uint64,uint64)\":{\"details\":\"Queries the slashing events for a validator in a given height interval defined by the starting and ending height.\",\"params\":{\"endingHeight\":\"The ending height\",\"startingHeight\":\"The starting height\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"pageResponse\":\"The pagination response for the query\",\"slashes\":\"The validator's slash events\"}},\"withdrawDelegatorRewards(address,string)\":{\"details\":\"Withdraw the rewards of a delegator from a validator\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"amount\":\"The amount of Coin withdrawn\"}},\"withdrawValidatorCommission(string)\":{\"details\":\"Withdraws the rewards commission of a validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"amount\":\"The amount of Coin withdrawn\"}}},\"title\":\"Distribution Precompile Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setWithdrawAddress(address,string)\":{\"notice\":\"TRANSACTIONS\"},\"validatorDistributionInfo(string)\":{\"notice\":\"QUERIES\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/stateful/Distribution.sol\":\"DistributionI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/common/GenericAuthorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface GenericAuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Revokes a list of Cosmos transactions.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods to revoke.\\n    /// @return revoked Boolean value to indicate if the revocation was successful.\\n    function revoke(\\n        address spender,\\n        string[] calldata methods\\n    ) external returns (bool revoked);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n\\n    /// @dev This event is emitted when an owner revokes a spender's allowance.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    event Revocation(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods\\n    );\\n}\\n\",\"keccak256\":\"0x5560defd75b84c2d333dc68120a9d425423ff7cd0c443fcd50209f9d0e0dff88\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/common/Types.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nstruct Dec {\\n    uint256 value;\\n    uint8 precision;\\n}\\n\\n/// @dev Coin is a struct that represents a token with a denomination and an amount.\\nstruct Coin {\\n    string denom;\\n    uint256 amount;\\n}\\n\\n/// @dev DecCoin is a struct that represents a token with a denomination, an amount and a precision.\\nstruct DecCoin {\\n    string denom;\\n    uint256 amount;\\n    uint8 precision;\\n}\\n\\n/// @dev PageResponse is a struct that represents a page response.\\nstruct PageResponse {\\n    bytes nextKey;\\n    uint64 total;\\n}\\n\",\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/stateful/Distribution.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nimport \\\"../common/GenericAuthorization.sol\\\" as genericAuth;\\nimport \\\"../common/Types.sol\\\";\\n\\n/// @dev The DistributionI contract's address.\\naddress constant DISTRIBUTION_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000801;\\n\\n/// @dev Define all the available distribution methods.\\nstring constant MSG_SET_WITHDRAWER_ADDRESS = \\\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\\\";\\nstring constant MSG_WITHDRAW_DELEGATOR_REWARD = \\\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\\\";\\nstring constant MSG_WITHDRAW_VALIDATOR_COMMISSION = \\\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\\\";\\n\\n/// @dev The DistributionI contract's instance.\\nDistributionI constant DISTRIBUTION_CONTRACT = DistributionI(DISTRIBUTION_PRECOMPILE_ADDRESS);\\n\\nstruct ValidatorSlashEvent {\\n    uint64 validatorPeriod;\\n    Dec fraction;\\n}\\n\\nstruct ValidatorDistributionInfo {\\n    string operatorAddress;\\n    DecCoin[] selfBondRewards;\\n    DecCoin[] commission;\\n}\\n\\nstruct DelegationDelegatorReward {\\n    string validatorAddress;\\n    DecCoin[] reward;\\n}\\n\\n/// @author Evmos Team\\n/// @title Distribution Precompile Contract\\n/// @dev The interface through which solidity contracts will interact with Distribution\\n/// @custom:address 0x0000000000000000000000000000000000000801\\ninterface DistributionI is genericAuth.GenericAuthorizationI {\\n    /// TRANSACTIONS\\n    /// @dev Change the address, that can withdraw the rewards of a delegator.\\n    /// Note that this address cannot be a module account.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param withdrawerAddress The address that will be capable of withdrawing rewards for\\n    /// the given delegator address\\n    function setWithdrawAddress(\\n        address delegatorAddress,\\n        string memory withdrawerAddress\\n    ) external returns (bool success);\\n\\n    /// @dev Withdraw the rewards of a delegator from a validator\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @return amount The amount of Coin withdrawn\\n    function withdrawDelegatorRewards(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    )\\n    external\\n    returns (\\n        Coin[] calldata amount\\n    );\\n\\n    /// @dev Withdraws the rewards commission of a validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return amount The amount of Coin withdrawn\\n    function withdrawValidatorCommission(\\n        string memory validatorAddress\\n    )\\n    external\\n    returns (\\n        Coin[] calldata amount\\n    );\\n\\n    /// QUERIES\\n    /// @dev Queries validator commission and self-delegation rewards for validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return distributionInfo The validator's distribution info\\n    function validatorDistributionInfo(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        ValidatorDistributionInfo[] calldata distributionInfo // FIXME: remove unnecessary slice\\n    );\\n\\n    /// @dev Queries the outstanding rewards of a validator address.\\n    /// @param validatorAddress The address of the validator\\n    /// @return rewards The validator's outstanding rewards\\n    function validatorOutstandingRewards(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata rewards\\n    );\\n\\n    /// @dev Queries the accumulated commission for a validator.\\n    /// @param validatorAddress The address of the validator\\n    /// @return commission The validator's commission\\n    function validatorCommission(\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata commission\\n    );\\n\\n    /// @dev Queries the slashing events for a validator in a given height interval\\n    /// defined by the starting and ending height.\\n    /// @param validatorAddress The address of the validator\\n    /// @param startingHeight The starting height\\n    /// @param endingHeight The ending height\\n    /// @return slashes The validator's slash events\\n    /// @return pageResponse The pagination response for the query\\n    function validatorSlashes(\\n        string memory validatorAddress,\\n        uint64 startingHeight,\\n        uint64 endingHeight\\n    )\\n    external\\n    view\\n    returns (\\n        ValidatorSlashEvent[] calldata slashes,\\n        PageResponse calldata pageResponse\\n    );\\n\\n    /// @dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @return rewards The total rewards accrued by a delegation.\\n    function delegationRewards(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DecCoin[] calldata rewards\\n    );\\n\\n    /// @dev Queries the total rewards accrued by each validator, that a given\\n    /// address has delegated to.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return rewards The total rewards accrued by each validator for a delegator.\\n    /// @return total The total rewards accrued by a delegator.\\n    function delegationTotalRewards(\\n        address delegatorAddress\\n    )\\n    external\\n    view\\n    returns (\\n        DelegationDelegatorReward[] calldata rewards,\\n        DecCoin[] calldata total\\n    );\\n\\n    /// @dev Queries all validators, that a given address has delegated to.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return validators The addresses of all validators, that were delegated to by the given address.\\n    function delegatorValidators(\\n        address delegatorAddress\\n    ) external view returns (string[] calldata validators);\\n\\n    /// @dev Queries the address capable of withdrawing rewards for a given delegator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @return withdrawAddress The address capable of withdrawing rewards for the delegator.\\n    function delegatorWithdrawAddress(\\n        address delegatorAddress\\n    ) external view returns (string memory withdrawAddress);\\n\\n    /// @dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\\n    /// @param caller the caller of the transaction\\n    /// @param withdrawerAddress the newly set withdrawer address\\n    event SetWithdrawerAddress(\\n        address indexed caller,\\n        string withdrawerAddress\\n    );\\n\\n    /// @dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\\n    /// @param delegatorAddress the address of the delegator\\n    /// @param validatorAddress the address of the validator\\n    /// @param amount the amount being withdrawn from the delegation\\n    event WithdrawDelegatorRewards(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount\\n    );\\n\\n    /// @dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\\n    /// @param validatorAddress is the address of the validator\\n    /// @param commission is the total commission earned by the validator\\n    event WithdrawValidatorCommission(\\n        string indexed validatorAddress,\\n        uint256 commission\\n    );\\n}\\n\",\"keccak256\":\"0x6815efb027a2ce3fc4d43073ac9e1dc117b156a74951c17b19f3f531483dc9e1\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setWithdrawAddress(address,string)":{"notice":"TRANSACTIONS"},"validatorDistributionInfo(string)":{"notice":"QUERIES"}},"version":1}}},"contracts/precompiles/stateful/IBCTransfer.sol":{"IBCTransferI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"string","name":"denom","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"IBCTransfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"trace","type":"string"}],"name":"denomHash","outputs":[{"internalType":"string","name":"hash","type":"string"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"hash","type":"string"}],"name":"denomTrace","outputs":[{"components":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"baseDenom","type":"string"}],"internalType":"struct DenomTrace","name":"denomTrace","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"denomTraces","outputs":[{"components":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"baseDenom","type":"string"}],"internalType":"struct DenomTrace[]","name":"denomTraces","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"sourcePort","type":"string"},{"internalType":"string","name":"sourceChannel","type":"string"},{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"string","name":"receiver","type":"string"},{"components":[{"internalType":"uint64","name":"revisionNumber","type":"uint64"},{"internalType":"uint64","name":"revisionHeight","type":"uint64"}],"internalType":"struct Height","name":"timeoutHeight","type":"tuple"},{"internalType":"uint64","name":"timeoutTimestamp","type":"uint64"},{"internalType":"string","name":"memo","type":"string"}],"name":"transfer","outputs":[{"internalType":"uint64","name":"nextSequence","type":"uint64"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Evmos Team","custom:address":"0x0000000000000000000000000000000000000802","details":"The interface through which solidity contracts will interact with IBC Transfer (ICS20) FIXME: update address","events":{"Approval(address,address,uint256)":{"details":"Emitted when an approval is executed.","params":{"owner":"The address of the owner.","spender":"The address of the spender.","value":"The amount of tokens approved."}},"IBCTransfer(address,address,string,uint256)":{"details":"Emitted when a transfer is executed.","params":{"amount":"The amount of tokens transferred.","denom":"The denomination of the tokens transferred.","receiver":"The address of the receiver.","sender":"The address of the sender."}}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through IBC transfers. This is zero by default.","params":{"owner":"The address of the account owning tokens.","spender":"The address of the account able to transfer the tokens."}},"approve(address,uint256)":{"details":"Approves IBC transfer with a specific amount of tokens.","params":{"amount":"The amount of tokens to be spent.","spender":"spender The address which will spend the funds."}},"decreaseAllowance(address,uint256)":{"details":"Decreases the allowance of a given spender by a specific amount of tokens for for IBC transfer methods.","params":{"amount":"The amount of tokens to be spent.","spender":"The address which will spend the funds."}},"denomHash(string)":{"details":"DenomHash defines a method for returning a hash of the denomination trace info."},"denomTrace(string)":{"details":"DenomTrace defines a method for returning a denom trace."},"denomTraces()":{"details":"DenomTraces defines a method for returning all denom traces."},"increaseAllowance(address,uint256)":{"details":"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods.","params":{"amount":"The amount of tokens to be spent.","spender":"The address which will spend the funds."}},"transfer(string,string,string,uint256,address,string,(uint64,uint64),uint64,string)":{"details":"Transfer defines a method for performing an IBC transfer.","params":{"amount":"the amount of the Coin to be transferred to the receiver","denom":"the denomination of the Coin to be transferred to the receiver","memo":"the bech32 address of the receiver","receiver":"the bech32 address of the receiver","sender":"the hex address of the sender","sourceChannel":"the address of the validator","sourcePort":"the address of the validator","timeoutHeight":"the bech32 address of the receiver","timeoutTimestamp":"the bech32 address of the receiver"}}},"title":"ICS20 Transfer Precompiled Contract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","decreaseAllowance(address,uint256)":"a457c2d7","denomHash(string)":"b5cb6e7d","denomTrace(string)":"a815cdd9","denomTraces()":"65e7fff6","increaseAllowance(address,uint256)":"39509351","transfer(string,string,string,uint256,address,string,(uint64,uint64),uint64,string)":"632535b9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IBCTransfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"trace\",\"type\":\"string\"}],\"name\":\"denomHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"denomTrace\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseDenom\",\"type\":\"string\"}],\"internalType\":\"struct DenomTrace\",\"name\":\"denomTrace\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denomTraces\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseDenom\",\"type\":\"string\"}],\"internalType\":\"struct DenomTrace[]\",\"name\":\"denomTraces\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"sourcePort\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sourceChannel\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"receiver\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"revisionNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revisionHeight\",\"type\":\"uint64\"}],\"internalType\":\"struct Height\",\"name\":\"timeoutHeight\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"timeoutTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"memo\",\"type\":\"string\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nextSequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"custom:address\":\"0x0000000000000000000000000000000000000802\",\"details\":\"The interface through which solidity contracts will interact with IBC Transfer (ICS20) FIXME: update address\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when an approval is executed.\",\"params\":{\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\",\"value\":\"The amount of tokens approved.\"}},\"IBCTransfer(address,address,string,uint256)\":{\"details\":\"Emitted when a transfer is executed.\",\"params\":{\"amount\":\"The amount of tokens transferred.\",\"denom\":\"The denomination of the tokens transferred.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through IBC transfers. This is zero by default.\",\"params\":{\"owner\":\"The address of the account owning tokens.\",\"spender\":\"The address of the account able to transfer the tokens.\"}},\"approve(address,uint256)\":{\"details\":\"Approves IBC transfer with a specific amount of tokens.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"spender\":\"spender The address which will spend the funds.\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decreases the allowance of a given spender by a specific amount of tokens for for IBC transfer methods.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"spender\":\"The address which will spend the funds.\"}},\"denomHash(string)\":{\"details\":\"DenomHash defines a method for returning a hash of the denomination trace info.\"},\"denomTrace(string)\":{\"details\":\"DenomTrace defines a method for returning a denom trace.\"},\"denomTraces()\":{\"details\":\"DenomTraces defines a method for returning all denom traces.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"spender\":\"The address which will spend the funds.\"}},\"transfer(string,string,string,uint256,address,string,(uint64,uint64),uint64,string)\":{\"details\":\"Transfer defines a method for performing an IBC transfer.\",\"params\":{\"amount\":\"the amount of the Coin to be transferred to the receiver\",\"denom\":\"the denomination of the Coin to be transferred to the receiver\",\"memo\":\"the bech32 address of the receiver\",\"receiver\":\"the bech32 address of the receiver\",\"sender\":\"the hex address of the sender\",\"sourceChannel\":\"the address of the validator\",\"sourcePort\":\"the address of the validator\",\"timeoutHeight\":\"the bech32 address of the receiver\",\"timeoutTimestamp\":\"the bech32 address of the receiver\"}}},\"title\":\"ICS20 Transfer Precompiled Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/stateful/IBCTransfer.sol\":\"IBCTransferI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/stateful/IBCTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @dev The ICS20I contract's address.\\naddress constant IBC_TRANSFER_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000802;\\n\\n/// @dev The ICS20 contract's instance.\\nIBCTransferI constant IBC_TRANSFER_CONTRACT = IBCTransferI(IBC_TRANSFER_PRECOMPILE_ADDRESS);\\n\\n// Height is a monotonically increasing data type\\n// that can be compared against another Height for the purposes of updating and\\n// freezing clients\\n//\\n// Normally the RevisionHeight is incremented at each height while keeping\\n// RevisionNumber the same. However some consensus algorithms may choose to\\n// reset the height in certain conditions e.g. hard forks, state-machine\\n// breaking changes In these cases, the RevisionNumber is incremented so that\\n// height continues to be monotonically increasing even as the RevisionHeight\\n// gets reset\\nstruct Height {\\n  // the revision that the client is currently on\\n  uint64 revisionNumber;\\n  // the height within the given revision\\n  uint64 revisionHeight;\\n}\\n\\n// DenomTrace contains the base denomination for ICS20 fungible tokens and the\\n// source tracing information path.\\nstruct DenomTrace {\\n  // path defines the chain of port/channel identifiers used for tracing the\\n\\t// source of the fungible token.\\n  string path;\\n  // base denomination of the relayed fungible token.\\n  string baseDenom;\\n}\\n\\n/// @author Evmos Team\\n/// @title ICS20 Transfer Precompiled Contract\\n/// @dev The interface through which solidity contracts will interact with IBC Transfer (ICS20)\\n/// FIXME: update address\\n/// @custom:address 0x0000000000000000000000000000000000000802\\ninterface IBCTransferI {\\n    /// @dev Transfer defines a method for performing an IBC transfer.\\n    /// @param sourcePort the address of the validator\\n    /// @param sourceChannel the address of the validator\\n    /// @param denom the denomination of the Coin to be transferred to the receiver\\n    /// @param amount the amount of the Coin to be transferred to the receiver\\n    /// @param sender the hex address of the sender\\n    /// @param receiver the bech32 address of the receiver\\n    /// @param timeoutHeight the bech32 address of the receiver\\n    /// @param timeoutTimestamp the bech32 address of the receiver\\n    /// @param memo the bech32 address of the receiver\\n    function transfer(\\n      string memory sourcePort,\\n      string memory sourceChannel,\\n      string memory denom,\\n      uint256 amount,\\n      address sender,\\n      string memory receiver,\\n      Height memory timeoutHeight,\\n      uint64 timeoutTimestamp,\\n      string memory memo\\n    ) external returns (uint64 nextSequence);\\n\\n    /// @dev DenomTraces defines a method for returning all denom traces.\\n    function denomTraces(\\n    ) external returns (DenomTrace[] memory denomTraces);\\n\\n    /// @dev DenomTrace defines a method for returning a denom trace.\\n    function denomTrace(\\n      string memory hash\\n    ) external returns (DenomTrace memory denomTrace);\\n\\n    /// @dev DenomHash defines a method for returning a hash of the denomination trace info.\\n    function denomHash(\\n      string memory trace\\n    ) external returns (string memory hash);\\n\\n    /// @dev Approves IBC transfer with a specific amount of tokens.\\n    /// @param spender spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    function approve(\\n        address spender,\\n        uint256 amount\\n    ) external returns (bool approved);\\n\\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through\\n    /// IBC transfers. This is zero by default.\\n    /// @param owner The address of the account owning tokens.\\n    /// @param spender The address of the account able to transfer the tokens.\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256 remaining);\\n\\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    function increaseAllowance(\\n        address spender,\\n        uint256 amount\\n    ) external returns (bool approved);\\n\\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for for IBC transfer methods.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 amount\\n    ) external returns (bool approved);\\n\\n\\n    /// @dev Emitted when a transfer is executed.\\n    /// @param sender The address of the sender.\\n    /// @param receiver The address of the receiver.\\n    /// @param denom The denomination of the tokens transferred.\\n    /// @param amount The amount of tokens transferred.\\n    event IBCTransfer(\\n        address indexed sender,\\n        address indexed receiver,\\n        string denom,\\n        uint256 amount\\n    );\\n\\n    /// @dev Emitted when an approval is executed.\\n    /// @param owner The address of the owner.\\n    /// @param spender The address of the spender.\\n    /// @param value The amount of tokens approved.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0xb5bf5119d4e5451886ff3d9a8ec6587a5bb82c8b143d901379e84a88f1656123\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/stateful/Staking.sol":{"StakingI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"AllowanceChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"string[]","name":"methods","type":"string[]"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegatorAddress","type":"address"},{"indexed":true,"internalType":"string","name":"validatorAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"creationHeight","type":"uint256"}],"name":"CancelUnbondingDelegation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegatorAddress","type":"address"},{"indexed":true,"internalType":"string","name":"validatorAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newShares","type":"uint256"}],"name":"Delegate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegatorAddress","type":"address"},{"indexed":true,"internalType":"string","name":"validatorSrcAddress","type":"string"},{"indexed":true,"internalType":"string","name":"validatorDstAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"completionTime","type":"uint256"}],"name":"Redelegate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegatorAddress","type":"address"},{"indexed":true,"internalType":"string","name":"validatorAddress","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"completionTime","type":"uint256"}],"name":"Unbond","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"string","name":"method","type":"string"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"approve","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"creationHeight","type":"uint256"}],"name":"cancelUnbondingDelegation","outputs":[{"internalType":"int64","name":"completionTime","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"delegate","outputs":[{"internalType":"int64","name":"completionTime","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"delegation","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"components":[{"internalType":"string","name":"denom","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Coin","name":"balance","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string[]","name":"methods","type":"string[]"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorSrcAddress","type":"string"},{"internalType":"string","name":"validatorDstAddress","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"redelegate","outputs":[{"internalType":"int64","name":"completionTime","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"srcValidatorAddress","type":"string"},{"internalType":"string","name":"dstValidatorAddress","type":"string"}],"name":"redelegation","outputs":[{"components":[{"internalType":"int64","name":"creationHeight","type":"int64"},{"internalType":"int64","name":"completionTime","type":"int64"},{"internalType":"uint256","name":"initialBalance","type":"uint256"},{"internalType":"uint256","name":"sharesDst","type":"uint256"}],"internalType":"struct RedelegationEntry[]","name":"entries","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"srcValidatorAddress","type":"string"},{"internalType":"string","name":"dstValidatorAddress","type":"string"},{"components":[{"internalType":"bytes","name":"key","type":"bytes"},{"internalType":"uint64","name":"offset","type":"uint64"},{"internalType":"uint64","name":"limit","type":"uint64"},{"internalType":"bool","name":"countTotal","type":"bool"},{"internalType":"bool","name":"reverse","type":"bool"}],"internalType":"struct PageRequest","name":"pageRequest","type":"tuple"}],"name":"redelegations","outputs":[{"components":[{"components":[{"components":[{"internalType":"int64","name":"creationHeight","type":"int64"},{"internalType":"int64","name":"completionTime","type":"int64"},{"internalType":"uint256","name":"initialBalance","type":"uint256"},{"internalType":"uint256","name":"sharesDst","type":"uint256"}],"internalType":"struct RedelegationEntry[]","name":"entries","type":"tuple[]"}],"internalType":"struct Redelegation","name":"redelegation","type":"tuple"},{"components":[{"components":[{"internalType":"int64","name":"creationHeight","type":"int64"},{"internalType":"int64","name":"completionTime","type":"int64"},{"internalType":"uint256","name":"initialBalance","type":"uint256"},{"internalType":"uint256","name":"sharesDst","type":"uint256"}],"internalType":"struct RedelegationEntry","name":"redelegationEntry","type":"tuple"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct RedelegationEntryResponse[]","name":"entries","type":"tuple[]"}],"internalType":"struct RedelegationResponse","name":"response","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"unbondingDelegation","outputs":[{"components":[{"internalType":"int64","name":"creationHeight","type":"int64"},{"internalType":"int64","name":"completionTime","type":"int64"},{"internalType":"uint256","name":"initialBalance","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"}],"internalType":"struct UnbondingDelegationEntry[]","name":"entries","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatorAddress","type":"address"},{"internalType":"string","name":"validatorAddress","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"undelegate","outputs":[{"internalType":"int64","name":"completionTime","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"validatorAddress","type":"string"}],"name":"validator","outputs":[{"components":[{"internalType":"string","name":"operatorAddress","type":"string"},{"internalType":"string","name":"consensusPubkey","type":"string"},{"internalType":"bool","name":"jailed","type":"bool"},{"internalType":"enum BondStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"tokens","type":"uint256"},{"internalType":"uint256","name":"delegatorShares","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"int64","name":"unbondingHeight","type":"int64"},{"internalType":"int64","name":"unbondingTime","type":"int64"},{"internalType":"uint256","name":"commission","type":"uint256"},{"internalType":"uint256","name":"minSelfDelegation","type":"uint256"}],"internalType":"struct Validator[]","name":"validators","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"status","type":"string"},{"components":[{"internalType":"bytes","name":"key","type":"bytes"},{"internalType":"uint64","name":"offset","type":"uint64"},{"internalType":"uint64","name":"limit","type":"uint64"},{"internalType":"bool","name":"countTotal","type":"bool"},{"internalType":"bool","name":"reverse","type":"bool"}],"internalType":"struct PageRequest","name":"pageRequest","type":"tuple"}],"name":"validators","outputs":[{"components":[{"internalType":"string","name":"operatorAddress","type":"string"},{"internalType":"string","name":"consensusPubkey","type":"string"},{"internalType":"bool","name":"jailed","type":"bool"},{"internalType":"enum BondStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"tokens","type":"uint256"},{"internalType":"uint256","name":"delegatorShares","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"int64","name":"unbondingHeight","type":"int64"},{"internalType":"int64","name":"unbondingTime","type":"int64"},{"internalType":"uint256","name":"commission","type":"uint256"},{"internalType":"uint256","name":"minSelfDelegation","type":"uint256"}],"internalType":"struct Validator[]","name":"validators","type":"tuple[]"},{"components":[{"internalType":"bytes","name":"nextKey","type":"bytes"},{"internalType":"uint64","name":"total","type":"uint64"}],"internalType":"struct PageResponse","name":"pageResponse","type":"tuple"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Evmos Team","custom:address":"0x0000000000000000000000000000000000000800","details":"The interface through which solidity contracts will interact with staking. We follow this same interface including four-byte function selectors, in the precompile that wraps the pallet.","events":{"CancelUnbondingDelegation(address,string,uint256,uint256)":{"details":"CancelUnbondingDelegation defines an Event emitted when a given amount of tokens that are in the process of unbonding from the validator address are bonded again.","params":{"amount":"The amount of Coin that was in the unbonding process which is to be cancelled","creationHeight":"The block height at which the unbonding of a delegation was initiated","delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"}},"Delegate(address,string,uint256,uint256)":{"details":"Delegate defines an Event emitted when a given amount of tokens are delegated from the delegator address to the validator address.","params":{"amount":"The amount of Coin being delegated","delegatorAddress":"The address of the delegator","newShares":"The new delegation shares being held","validatorAddress":"The address of the validator"}},"Redelegate(address,string,string,uint256,uint256)":{"details":"Redelegate defines an Event emitted when a given amount of tokens are redelegated from the source validator address to the destination validator address.","params":{"amount":"The amount of Coin being redelegated","completionTime":"The time at which the redelegation is completed","delegatorAddress":"The address of the delegator","validatorDstAddress":"The address of the validator to which the delegation is directed","validatorSrcAddress":"The address of the validator from which the delegation is retracted"}},"Unbond(address,string,uint256,uint256)":{"details":"Unbond defines an Event emitted when a given amount of tokens are unbonded from the validator address to the delegator address.","params":{"amount":"The amount of Coin being unbonded","completionTime":"The time at which the unbonding is completed","delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"}}},"kind":"dev","methods":{"allowance(address,address,string)":{"details":"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.","params":{"method":"The message type URL of the methods for which the approval should be queried.","owner":"The address of the account owning tokens.","spender":"The address of the account able to transfer the tokens."},"returns":{"remaining":"The remaining number of tokens available to be spent."}},"approve(address,uint256,string[])":{"details":"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"cancelUnbondingDelegation(address,string,uint256,uint256)":{"details":"Allows delegators to cancel the unbondingDelegation entry and to delegate back to a previous validator.","params":{"amount":"The amount of the Coin","creationHeight":"The height at which the unbonding took place","delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"},"returns":{"completionTime":"The time when the cancellation of the unbonding delegation is completed"}},"decreaseAllowance(address,uint256,string[])":{"details":"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"delegate(address,string,uint256)":{"details":"Defines a method for performing a delegation of coins from a delegator to a validator.","params":{"amount":"The amount of the Coin to be delegated to the validator","delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"}},"delegation(address,string)":{"details":"Queries the given amount of the bond denomination to a validator.","params":{"delegatorAddress":"The address of the delegator.","validatorAddress":"The address of the validator."},"returns":{"balance":"The amount in Coin, that the delegator has delegated to the given validator.","shares":"The amount of shares, that the delegator has received."}},"increaseAllowance(address,uint256,string[])":{"details":"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.","params":{"amount":"The amount of tokens to be spent.","methods":"The message type URLs of the methods to approve.","spender":"The address which will spend the funds."},"returns":{"approved":"Boolean value to indicate if the approval was successful."}},"redelegate(address,string,string,uint256)":{"details":"Defines a method for performing a redelegation of coins from a delegator and source validator to a destination validator.","params":{"amount":"The amount to be redelegated to the validator","delegatorAddress":"The address of the delegator","validatorDstAddress":"The validator to which the redelegation is destined","validatorSrcAddress":"The validator from which the redelegation is initiated"},"returns":{"completionTime":"The time when the redelegation is completed"}},"redelegation(address,string,string)":{"details":"Queries all redelegations from a source to a destination validator for a given delegator.","params":{"delegatorAddress":"The address of the delegator.","dstValidatorAddress":"Defines the validator address to redelegate to.","srcValidatorAddress":"Defines the validator address to redelegate from."},"returns":{"entries":"The active redelegations for the given delegator, source and destination validator combination."}},"redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))":{"details":"Queries all redelegations from a source to to a destination validator for a given delegator in a specified pagination manner.","params":{"delegatorAddress":"The address of the delegator.","dstValidatorAddress":"Defines the validator address to redelegate to.","pageRequest":"Defines an optional pagination for the request.","srcValidatorAddress":"Defines the validator address to redelegate from."},"returns":{"response":"Holds the redelegations for the given delegator, source and destination validator combination."}},"unbondingDelegation(address,string)":{"details":"Returns the delegation shares and coins, that are currently unbonding for a given delegator and validator pair.","params":{"delegatorAddress":"The address of the delegator.","validatorAddress":"The address of the validator."},"returns":{"entries":"The delegations that are currently unbonding."}},"undelegate(address,string,uint256)":{"details":"Defines a method for performing an undelegation from a delegate and a validator.","params":{"amount":"The amount to be undelegated from the validator","delegatorAddress":"The address of the delegator","validatorAddress":"The address of the validator"},"returns":{"completionTime":"The time when the undelegation is completed"}},"validator(string)":{"details":"Queries validator info for a given validator address.","params":{"validatorAddress":"The address of the validator."},"returns":{"validators":"The validator info for the given validator address."}},"validators(string,(bytes,uint64,uint64,bool,bool))":{"details":"Queries all validators that match the given status.","params":{"pageRequest":"Defines an optional pagination for the request.","status":"Enables to query for validators matching a given status."}}},"title":"Staking Precompiled Contract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address,string)":"fc08930c","approve(address,uint256,string[])":"b6039895","cancelUnbondingDelegation(address,string,uint256,uint256)":"12d58dfe","decreaseAllowance(address,uint256,string[])":"f007d286","delegate(address,string,uint256)":"53266bbb","delegation(address,string)":"241774e6","increaseAllowance(address,uint256,string[])":"a386a63c","redelegate(address,string,string,uint256)":"54b826f5","redelegation(address,string,string)":"7d9f939c","redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))":"10a2851c","unbondingDelegation(address,string)":"a03ffee1","undelegate(address,string,uint256)":"3edab33c","validator(string)":"0bc82a17","validators(string,(bytes,uint64,uint64,bool,bool))":"186b2167"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"AllowanceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creationHeight\",\"type\":\"uint256\"}],\"name\":\"CancelUnbondingDelegation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"name\":\"Delegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorSrcAddress\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorDstAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"completionTime\",\"type\":\"uint256\"}],\"name\":\"Redelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"completionTime\",\"type\":\"uint256\"}],\"name\":\"Unbond\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationHeight\",\"type\":\"uint256\"}],\"name\":\"cancelUnbondingDelegation\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin\",\"name\":\"balance\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorSrcAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"validatorDstAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redelegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"srcValidatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstValidatorAddress\",\"type\":\"string\"}],\"name\":\"redelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"srcValidatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstValidatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"limit\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"countTotal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"internalType\":\"struct PageRequest\",\"name\":\"pageRequest\",\"type\":\"tuple\"}],\"name\":\"redelegations\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Redelegation\",\"name\":\"redelegation\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry\",\"name\":\"redelegationEntry\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntryResponse[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"internalType\":\"struct RedelegationResponse\",\"name\":\"response\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"unbondingDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct UnbondingDelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validator\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consensusPubkey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"jailed\",\"type\":\"bool\"},{\"internalType\":\"enum BondStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatorShares\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"unbondingHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"unbondingTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSelfDelegation\",\"type\":\"uint256\"}],\"internalType\":\"struct Validator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"limit\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"countTotal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"internalType\":\"struct PageRequest\",\"name\":\"pageRequest\",\"type\":\"tuple\"}],\"name\":\"validators\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consensusPubkey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"jailed\",\"type\":\"bool\"},{\"internalType\":\"enum BondStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatorShares\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"unbondingHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"unbondingTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSelfDelegation\",\"type\":\"uint256\"}],\"internalType\":\"struct Validator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nextKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"total\",\"type\":\"uint64\"}],\"internalType\":\"struct PageResponse\",\"name\":\"pageResponse\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"custom:address\":\"0x0000000000000000000000000000000000000800\",\"details\":\"The interface through which solidity contracts will interact with staking. We follow this same interface including four-byte function selectors, in the precompile that wraps the pallet.\",\"events\":{\"CancelUnbondingDelegation(address,string,uint256,uint256)\":{\"details\":\"CancelUnbondingDelegation defines an Event emitted when a given amount of tokens that are in the process of unbonding from the validator address are bonded again.\",\"params\":{\"amount\":\"The amount of Coin that was in the unbonding process which is to be cancelled\",\"creationHeight\":\"The block height at which the unbonding of a delegation was initiated\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}},\"Delegate(address,string,uint256,uint256)\":{\"details\":\"Delegate defines an Event emitted when a given amount of tokens are delegated from the delegator address to the validator address.\",\"params\":{\"amount\":\"The amount of Coin being delegated\",\"delegatorAddress\":\"The address of the delegator\",\"newShares\":\"The new delegation shares being held\",\"validatorAddress\":\"The address of the validator\"}},\"Redelegate(address,string,string,uint256,uint256)\":{\"details\":\"Redelegate defines an Event emitted when a given amount of tokens are redelegated from the source validator address to the destination validator address.\",\"params\":{\"amount\":\"The amount of Coin being redelegated\",\"completionTime\":\"The time at which the redelegation is completed\",\"delegatorAddress\":\"The address of the delegator\",\"validatorDstAddress\":\"The address of the validator to which the delegation is directed\",\"validatorSrcAddress\":\"The address of the validator from which the delegation is retracted\"}},\"Unbond(address,string,uint256,uint256)\":{\"details\":\"Unbond defines an Event emitted when a given amount of tokens are unbonded from the validator address to the delegator address.\",\"params\":{\"amount\":\"The amount of Coin being unbonded\",\"completionTime\":\"The time at which the unbonding is completed\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,string)\":{\"details\":\"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.\",\"params\":{\"method\":\"The message type URL of the methods for which the approval should be queried.\",\"owner\":\"The address of the account owning tokens.\",\"spender\":\"The address of the account able to transfer the tokens.\"},\"returns\":{\"remaining\":\"The remaining number of tokens available to be spent.\"}},\"approve(address,uint256,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"cancelUnbondingDelegation(address,string,uint256,uint256)\":{\"details\":\"Allows delegators to cancel the unbondingDelegation entry and to delegate back to a previous validator.\",\"params\":{\"amount\":\"The amount of the Coin\",\"creationHeight\":\"The height at which the unbonding took place\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"completionTime\":\"The time when the cancellation of the unbonding delegation is completed\"}},\"decreaseAllowance(address,uint256,string[])\":{\"details\":\"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"delegate(address,string,uint256)\":{\"details\":\"Defines a method for performing a delegation of coins from a delegator to a validator.\",\"params\":{\"amount\":\"The amount of the Coin to be delegated to the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}},\"delegation(address,string)\":{\"details\":\"Queries the given amount of the bond denomination to a validator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"balance\":\"The amount in Coin, that the delegator has delegated to the given validator.\",\"shares\":\"The amount of shares, that the delegator has received.\"}},\"increaseAllowance(address,uint256,string[])\":{\"details\":\"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"redelegate(address,string,string,uint256)\":{\"details\":\"Defines a method for performing a redelegation of coins from a delegator and source validator to a destination validator.\",\"params\":{\"amount\":\"The amount to be redelegated to the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorDstAddress\":\"The validator to which the redelegation is destined\",\"validatorSrcAddress\":\"The validator from which the redelegation is initiated\"},\"returns\":{\"completionTime\":\"The time when the redelegation is completed\"}},\"redelegation(address,string,string)\":{\"details\":\"Queries all redelegations from a source to a destination validator for a given delegator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"dstValidatorAddress\":\"Defines the validator address to redelegate to.\",\"srcValidatorAddress\":\"Defines the validator address to redelegate from.\"},\"returns\":{\"entries\":\"The active redelegations for the given delegator, source and destination validator combination.\"}},\"redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))\":{\"details\":\"Queries all redelegations from a source to to a destination validator for a given delegator in a specified pagination manner.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"dstValidatorAddress\":\"Defines the validator address to redelegate to.\",\"pageRequest\":\"Defines an optional pagination for the request.\",\"srcValidatorAddress\":\"Defines the validator address to redelegate from.\"},\"returns\":{\"response\":\"Holds the redelegations for the given delegator, source and destination validator combination.\"}},\"unbondingDelegation(address,string)\":{\"details\":\"Returns the delegation shares and coins, that are currently unbonding for a given delegator and validator pair.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"entries\":\"The delegations that are currently unbonding.\"}},\"undelegate(address,string,uint256)\":{\"details\":\"Defines a method for performing an undelegation from a delegate and a validator.\",\"params\":{\"amount\":\"The amount to be undelegated from the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"completionTime\":\"The time when the undelegation is completed\"}},\"validator(string)\":{\"details\":\"Queries validator info for a given validator address.\",\"params\":{\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"validators\":\"The validator info for the given validator address.\"}},\"validators(string,(bytes,uint64,uint64,bool,bool))\":{\"details\":\"Queries all validators that match the given status.\",\"params\":{\"pageRequest\":\"Defines an optional pagination for the request.\",\"status\":\"Enables to query for validators matching a given status.\"}}},\"title\":\"Staking Precompiled Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/stateful/Staking.sol\":\"StakingI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/common/Authorization.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @author Evmos Team\\n/// @title Authorization Interface\\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\\ninterface AuthorizationI {\\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function approve(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function increaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\\n    /// transfer methods or staking.\\n    /// @param spender The address which will spend the funds.\\n    /// @param amount The amount of tokens to be spent.\\n    /// @param methods The message type URLs of the methods to approve.\\n    /// @return approved Boolean value to indicate if the approval was successful.\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 amount,\\n        string[] calldata methods\\n    ) external returns (bool approved);\\n\\n\\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend\\n    /// on behalf of the owner through IBC transfer methods or staking. This is zero by default.\\n    /// @param owner The address of the account owning tokens.\\n    /// @param spender The address of the account able to transfer the tokens.\\n    /// @param method The message type URL of the methods for which the approval should be queried.\\n    /// @return remaining The remaining number of tokens available to be spent.\\n    function allowance(\\n        address owner,\\n        address spender,\\n        string calldata method\\n    ) external view returns (uint256 remaining);\\n\\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\\n    /// the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param value The amount of tokens approved to be spent.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256 value\\n    );\\n\\n    /// @dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\\n    /// allowance method. The values field specifies the new allowances and the methods field holds the\\n    /// information for which methods the approval was set.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The address which will spend the funds.\\n    /// @param methods The message type URLs of the methods for which the approval is set.\\n    /// @param values The amounts of tokens approved to be spent.\\n    event AllowanceChange(\\n        address indexed owner,\\n        address indexed spender,\\n        string[] methods,\\n        uint256[] values\\n    );\\n}\\n\",\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/common/Types.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nstruct Dec {\\n    uint256 value;\\n    uint8 precision;\\n}\\n\\n/// @dev Coin is a struct that represents a token with a denomination and an amount.\\nstruct Coin {\\n    string denom;\\n    uint256 amount;\\n}\\n\\n/// @dev DecCoin is a struct that represents a token with a denomination, an amount and a precision.\\nstruct DecCoin {\\n    string denom;\\n    uint256 amount;\\n    uint8 precision;\\n}\\n\\n/// @dev PageResponse is a struct that represents a page response.\\nstruct PageResponse {\\n    bytes nextKey;\\n    uint64 total;\\n}\\n\",\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\"},\"contracts/precompiles/stateful/Staking.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\nimport \\\"../common/Authorization.sol\\\" as authorization;\\nimport \\\"../common/Types.sol\\\";\\n\\n/// @dev The StakingI contract's address.\\naddress constant STAKING_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000800;\\n\\n/// @dev The StakingI contract's instance.\\nStakingI constant STAKING_CONTRACT = StakingI(STAKING_PRECOMPILE_ADDRESS);\\n\\n/// @dev Define all the available staking methods.\\nstring constant MSG_DELEGATE = \\\"/cosmos.staking.v1beta1.MsgDelegate\\\";\\nstring constant MSG_UNDELEGATE = \\\"/cosmos.staking.v1beta1.MsgUndelegate\\\";\\nstring constant MSG_REDELEGATE = \\\"/cosmos.staking.v1beta1.MsgBeginRedelegate\\\";\\nstring constant MSG_CANCEL_UNDELEGATION = \\\"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\\\";\\n\\n/// @dev Defines the initial commission rates to be used for creating\\n/// a validator.\\nstruct CommissionRates {\\n    uint256 rate;\\n    uint256 maxRate;\\n    uint256 maxChangeRate;\\n}\\n\\n/// @dev Defines commission parameters for a given validator.\\nstruct Commission {\\n    CommissionRates commissionRates;\\n    uint256 updateTime;\\n}\\n\\n\\n/// @dev Represents a validator in the staking module.\\nstruct Validator {\\n    string operatorAddress;\\n    string consensusPubkey;\\n    bool jailed;\\n    BondStatus status;\\n    uint256 tokens;\\n    uint256 delegatorShares;\\n    string description;\\n    int64 unbondingHeight;\\n    int64 unbondingTime;\\n    uint256 commission;\\n    uint256 minSelfDelegation;\\n}\\n\\nstruct RedelegationResponse {\\n    Redelegation redelegation;\\n    RedelegationEntryResponse[] entries;\\n}\\n\\nstruct Redelegation {\\n    RedelegationEntry[] entries;\\n}\\n\\nstruct RedelegationEntryResponse {\\n    RedelegationEntry redelegationEntry;\\n    uint256 balance;\\n}\\n\\nstruct RedelegationEntry {\\n    int64 creationHeight;\\n    int64 completionTime;\\n    uint256 initialBalance;\\n    uint256 sharesDst;\\n}\\n\\nstruct UnbondingDelegationEntry {\\n    int64 creationHeight;\\n    int64 completionTime;\\n    uint256 initialBalance;\\n    uint256 balance;\\n}\\n\\nstruct PageRequest {\\n    bytes key;\\n    uint64 offset;\\n    uint64 limit;\\n    bool countTotal;\\n    bool reverse;\\n}\\n\\n/// @dev The status of the validator.\\nenum BondStatus {\\n    Unspecified,\\n    Unbonded,\\n    Unbonding,\\n    Bonded\\n}\\n\\n/// @author Evmos Team\\n/// @title Staking Precompiled Contract\\n/// @dev The interface through which solidity contracts will interact with staking.\\n/// We follow this same interface including four-byte function selectors, in the precompile that\\n/// wraps the pallet.\\n/// @custom:address 0x0000000000000000000000000000000000000800\\ninterface StakingI is authorization.AuthorizationI {\\n    /// @dev Defines a method for performing a delegation of coins from a delegator to a validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of the Coin to be delegated to the validator\\n    function delegate(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Defines a method for performing an undelegation from a delegate and a validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount to be undelegated from the validator\\n    /// @return completionTime The time when the undelegation is completed\\n    function undelegate(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Defines a method for performing a redelegation\\n    /// of coins from a delegator and source validator to a destination validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorSrcAddress The validator from which the redelegation is initiated\\n    /// @param validatorDstAddress The validator to which the redelegation is destined\\n    /// @param amount The amount to be redelegated to the validator\\n    /// @return completionTime The time when the redelegation is completed\\n    function redelegate(\\n        address delegatorAddress,\\n        string memory validatorSrcAddress,\\n        string memory validatorDstAddress,\\n        uint256 amount\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Allows delegators to cancel the unbondingDelegation entry\\n    /// and to delegate back to a previous validator.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of the Coin\\n    /// @param creationHeight The height at which the unbonding took place\\n    /// @return completionTime The time when the cancellation of the unbonding delegation is completed\\n    function cancelUnbondingDelegation(\\n        address delegatorAddress,\\n        string memory validatorAddress,\\n        uint256 amount,\\n        uint256 creationHeight\\n    ) external returns (int64 completionTime);\\n\\n    /// @dev Queries the given amount of the bond denomination to a validator.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return shares The amount of shares, that the delegator has received.\\n    /// @return balance The amount in Coin, that the delegator has delegated to the given validator.\\n    function delegation(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    ) external view returns (uint256 shares, Coin calldata balance);\\n\\n    /// @dev Returns the delegation shares and coins, that are currently\\n    /// unbonding for a given delegator and validator pair.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return entries The delegations that are currently unbonding.\\n    function unbondingDelegation(\\n        address delegatorAddress,\\n        string memory validatorAddress\\n    ) external view returns (UnbondingDelegationEntry[] calldata entries);\\n\\n    /// @dev Queries validator info for a given validator address.\\n    /// @param validatorAddress The address of the validator.\\n    /// @return validators The validator info for the given validator address.\\n    function validator(\\n        string memory validatorAddress\\n    )\\n    external view returns (\\n        Validator[] calldata validators\\n    );\\n\\n    /// @dev Queries all validators that match the given status.\\n    /// @param status Enables to query for validators matching a given status.\\n    /// @param pageRequest Defines an optional pagination for the request.\\n    function validators(\\n        string memory status,\\n        PageRequest calldata pageRequest\\n    ) external view returns (\\n        Validator[] calldata validators,\\n        PageResponse calldata pageResponse\\n    );\\n\\n    /// @dev Queries all redelegations from a source to a destination validator for a given delegator.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\\n    /// @return entries The active redelegations for the given delegator, source and destination validator combination.\\n    function redelegation(\\n        address delegatorAddress,\\n        string memory srcValidatorAddress,\\n        string memory dstValidatorAddress\\n    ) external view returns (RedelegationEntry[] calldata entries);\\n\\n    /// @dev Queries all redelegations from a source to to a destination validator\\n    /// for a given delegator in a specified pagination manner.\\n    /// @param delegatorAddress The address of the delegator.\\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\\n    /// @param pageRequest Defines an optional pagination for the request.\\n    /// @return response Holds the redelegations for the given delegator, source and destination validator combination.\\n    function redelegations(\\n        address delegatorAddress,\\n        string memory srcValidatorAddress,\\n        string memory dstValidatorAddress,\\n        PageRequest calldata pageRequest\\n    ) external view returns (RedelegationResponse calldata response);\\n\\n    /// @dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\\n    /// delegator address to the validator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin being delegated\\n    /// @param newShares The new delegation shares being held\\n    event Delegate(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 newShares\\n    );\\n\\n    /// @dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\\n    /// validator address to the delegator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin being unbonded\\n    /// @param completionTime The time at which the unbonding is completed\\n    event Unbond(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 completionTime\\n    );\\n\\n    /// @dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\\n    /// the source validator address to the destination validator address.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorSrcAddress The address of the validator from which the delegation is retracted\\n    /// @param validatorDstAddress The address of the validator to which the delegation is directed\\n    /// @param amount The amount of Coin being redelegated\\n    /// @param completionTime The time at which the redelegation is completed\\n    event Redelegate(\\n        address indexed delegatorAddress,\\n        string indexed validatorSrcAddress,\\n        string indexed validatorDstAddress,\\n        uint256 amount,\\n        uint256 completionTime\\n    );\\n\\n    /// @dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\\n    /// that are in the process of unbonding from the validator address are bonded again.\\n    /// @param delegatorAddress The address of the delegator\\n    /// @param validatorAddress The address of the validator\\n    /// @param amount The amount of Coin that was in the unbonding process which is to be cancelled\\n    /// @param creationHeight The block height at which the unbonding of a delegation was initiated\\n    event CancelUnbondingDelegation(\\n        address indexed delegatorAddress,\\n        string indexed validatorAddress,\\n        uint256 amount,\\n        uint256 creationHeight\\n    );\\n}\\n\",\"keccak256\":\"0x774d4bf7a848893697fa75fa11a2ec288e6df6f010f9bdd8b3c6010ef007ac67\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/stateless/Bech32.sol":{"Bech32I":{"abi":[{"inputs":[{"internalType":"string","name":"bech32Address","type":"string"}],"name":"bech32ToHex","outputs":[{"internalType":"address","name":"addr","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"string","name":"prefix","type":"string"}],"name":"hexToBech32","outputs":[{"internalType":"string","name":"bech32Address","type":"string"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Evmos Team","custom:address":"0x0000000000000000000000000000000000000010","details":"The interface through which solidity contracts can convert addresses from hex to bech32 and vice versa.","kind":"dev","methods":{"bech32ToHex(string)":{"details":"Defines a method for converting a bech32 formatted address to hex.","params":{"bech32Address":"The bech32 address to be converted."},"returns":{"addr":"The address in hex format."}},"hexToBech32(address,string)":{"details":"Defines a method for converting a hex formatted address to bech32.","params":{"addr":"The hex address to be converted.","prefix":"The human readable prefix (HRP) of the bech32 address."},"returns":{"bech32Address":"The address in bech32 format."}}},"title":"Bech32 Precompiled Contract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"bech32ToHex(string)":"e6df461e","hexToBech32(address,string)":"f958a98c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bech32Address\",\"type\":\"string\"}],\"name\":\"bech32ToHex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"prefix\",\"type\":\"string\"}],\"name\":\"hexToBech32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"bech32Address\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"custom:address\":\"0x0000000000000000000000000000000000000010\",\"details\":\"The interface through which solidity contracts can convert addresses from hex to bech32 and vice versa.\",\"kind\":\"dev\",\"methods\":{\"bech32ToHex(string)\":{\"details\":\"Defines a method for converting a bech32 formatted address to hex.\",\"params\":{\"bech32Address\":\"The bech32 address to be converted.\"},\"returns\":{\"addr\":\"The address in hex format.\"}},\"hexToBech32(address,string)\":{\"details\":\"Defines a method for converting a hex formatted address to bech32.\",\"params\":{\"addr\":\"The hex address to be converted.\",\"prefix\":\"The human readable prefix (HRP) of the bech32 address.\"},\"returns\":{\"bech32Address\":\"The address in bech32 format.\"}}},\"title\":\"Bech32 Precompiled Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/stateless/Bech32.sol\":\"Bech32I\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/stateless/Bech32.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-v3\\npragma solidity >=0.8.17;\\n\\n/// @dev The Bech32I contract's address.\\naddress constant Bech32_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000400;\\n\\n/// @author Evmos Team\\n/// @title Bech32 Precompiled Contract\\n/// @dev The interface through which solidity contracts can convert addresses from\\n/// hex to bech32 and vice versa.\\n/// @custom:address 0x0000000000000000000000000000000000000010\\ninterface Bech32I {\\n    /// @dev Defines a method for converting a hex formatted address to bech32.\\n    /// @param addr The hex address to be converted.\\n    /// @param prefix The human readable prefix (HRP) of the bech32 address.\\n    /// @return bech32Address The address in bech32 format.\\n    function hexToBech32(\\n        address addr,\\n        string memory prefix\\n    ) external returns (string memory bech32Address);\\n\\n    /// @dev Defines a method for converting a bech32 formatted address to hex.\\n    /// @param bech32Address The bech32 address to be converted.\\n    /// @return addr The address in hex format.\\n    function bech32ToHex(\\n        string memory bech32Address\\n    ) external returns (address addr);\\n}\\n\",\"keccak256\":\"0xe29013956ff1387728761cd06f37b809316b4ec9af2fb1852031db52a85ce1f6\",\"license\":\"LGPL-v3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}